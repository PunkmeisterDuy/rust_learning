{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0","program":"C:\\Users\\Punkm\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","type_map","--edition=2018","C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=dbe22ab4d0ee774a","-C","extra-filename=-dbe22ab4d0ee774a","--out-dir","c:\\Users\\Punkm\\Projects\\Programming\\rust_learning\\amethyst\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Punkm\\Projects\\Programming\\rust_learning\\amethyst\\target\\rls\\debug\\deps","--extern","fxhash=c:\\Users\\Punkm\\Projects\\Programming\\rust_learning\\amethyst\\target\\rls\\debug\\deps\\libfxhash-01ae4ee3aa7e65be.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Punkm\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Punkm\\Projects\\Programming\\rust_learning\\amethyst\\target\\rls\\debug\\deps\\libtype_map-dbe22ab4d0ee774a.rmeta"},"prelude":{"crate_id":{"name":"type_map","disambiguator":[5880285285774460409,9395517084831530067]},"crate_root":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src","external_crates":[{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[9313216841108481316,924443797430308437]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[235204689529430899,11195511058902687991]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8443630644245237509,966744638502353748]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13900139468171161186,1531802306738104785]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5240442222101950495,1297279504790020208]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2443005202137729499,9185958358018941627]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15985227457147286552,10516973543605023258]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4222764532443259325,10183273613643052503]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1171194158452371475,10852610754819645916]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8741536135820378690,14206967751681147027]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[4062813797492812340,12507429432407858268]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[14499051738960611440,17566239002762474023]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","num":13,"id":{"name":"fxhash","disambiguator":[8477744473703808115,140803998916143929]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","num":14,"id":{"name":"byteorder","disambiguator":[9050969557830764679,4379660997585027650]}}],"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":0,"byte_end":11753,"line_start":1,"line_end":349,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":0,"byte_end":11753,"line_start":1,"line_end":349,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":192},{"krate":0,"index":110},{"krate":0,"index":115},{"krate":0,"index":9},{"krate":0,"index":119},{"krate":0,"index":124},{"krate":0,"index":19},{"krate":0,"index":128},{"krate":0,"index":137},{"krate":0,"index":23},{"krate":0,"index":141},{"krate":0,"index":145},{"krate":0,"index":143},{"krate":0,"index":29},{"krate":0,"index":56}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":195,"byte_end":208,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114}],"decl_id":null,"docs":" A view into an occupied entry in a `TypeMap`.\n","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `TypeMap`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":117,"byte_end":166,"line_start":8,"line_end":8,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":421,"byte_end":424,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":362,"byte_end":409,"line_start":16,"line_end":16,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":13},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":565,"byte_end":572,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":"Gets a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/Gets a mutable reference to the value in the entry.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":499,"byte_end":553,"line_start":21,"line_end":21,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":803,"byte_end":811,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Converts the `OccupiedEntry` into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"/ Converts the `OccupiedEntry` into a mutable reference to the value in the entry","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":659,"byte_end":742,"line_start":26,"line_end":26,"column_start":5,"column_end":88}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":747,"byte_end":791,"line_start":27,"line_end":27,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":976,"byte_end":982,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":897,"byte_end":964,"line_start":32,"line_end":32,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":1173,"byte_end":1179,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.    \n","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it.    ","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":1104,"byte_end":1161,"line_start":37,"line_end":37,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":1344,"byte_end":1355,"line_start":45,"line_end":45,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123}],"decl_id":null,"docs":" A view into a vacant entry in a `TypeMap`.\n","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `TypeMap`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":1269,"byte_end":1315,"line_start":43,"line_end":43,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":1622,"byte_end":1628,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, T) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the key of the `VacantEntry`, and returns a mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the key of the `VacantEntry`, and returns a mutable reference to it.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":1505,"byte_end":1610,"line_start":51,"line_end":51,"column_start":5,"column_end":110}}]},{"kind":"TupleVariant","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":1861,"byte_end":1869,"line_start":60,"line_end":60,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":128},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":1897,"byte_end":1903,"line_start":61,"line_end":61,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":128},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":1842,"byte_end":1847,"line_start":59,"line_end":59,"column_start":10,"column_end":15},"name":"Entry","qualname":"::Entry","value":"pub enum Entry<'a, T> { Occupied(OccupiedEntry), Vacant(VacantEntry), }","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":134}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.\n","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":1735,"byte_end":1815,"line_start":57,"line_end":57,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":2117,"byte_end":2126,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, T) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":1968,"byte_end":2050,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/ a mutable reference to the value in the entry.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":2055,"byte_end":2105,"line_start":66,"line_end":66,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":2489,"byte_end":2503,"line_start":76,"line_end":76,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F: FnOnce() -> T>(Self, F) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty, and returns\n a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default function if empty, and returns","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":2317,"byte_end":2422,"line_start":74,"line_end":74,"column_start":5,"column_end":110}},{"value":"/ a mutable reference to the value in the entry.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":2427,"byte_end":2477,"line_start":75,"line_end":75,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":2775,"byte_end":2782,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"TypeMap","qualname":"::TypeMap","value":"TypeMap {  }","parent":null,"children":[{"krate":0,"index":142}],"decl_id":null,"docs":" The typemap container\n","sig":null,"attributes":[{"value":"/ The typemap container","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":2738,"byte_end":2763,"line_start":85,"line_end":85,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":2913,"byte_end":2916,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"new","qualname":"<TypeMap>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `TypeMap`.\n","sig":null,"attributes":[{"value":"/ Create an empty `TypeMap`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":2857,"byte_end":2887,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":2892,"byte_end":2901,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":3095,"byte_end":3101,"line_start":100,"line_end":100,"column_start":12,"column_end":18},"name":"insert","qualname":"<TypeMap>::insert","value":"pub fn insert<T: 'static>(&mut Self, T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Insert a value into this `TypeMap`.","sig":null,"attributes":[{"value":"/ Insert a value into this `TypeMap`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":2967,"byte_end":3006,"line_start":97,"line_end":97,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":3011,"byte_end":3014,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ If a value of this type already exists, it will be returned.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":3019,"byte_end":3083,"line_start":99,"line_end":99,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":3418,"byte_end":3426,"line_start":108,"line_end":108,"column_start":12,"column_end":20},"name":"contains","qualname":"<TypeMap>::contains","value":"pub fn contains<T: 'static>(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if container contains value for type\n","sig":null,"attributes":[{"value":"/ Check if container contains value for type","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":3360,"byte_end":3406,"line_start":107,"line_end":107,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":3624,"byte_end":3627,"line_start":113,"line_end":113,"column_start":12,"column_end":15},"name":"get","qualname":"<TypeMap>::get","value":"pub fn get<T: 'static>(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a value previously inserted on this `TypeMap`.\n","sig":null,"attributes":[{"value":"/ Get a reference to a value previously inserted on this `TypeMap`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":3543,"byte_end":3612,"line_start":112,"line_end":112,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":3907,"byte_end":3914,"line_start":121,"line_end":121,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TypeMap>::get_mut","value":"pub fn get_mut<T: 'static>(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a value previously inserted on this `TypeMap`.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to a value previously inserted on this `TypeMap`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":3818,"byte_end":3895,"line_start":120,"line_end":120,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":4237,"byte_end":4243,"line_start":131,"line_end":131,"column_start":12,"column_end":18},"name":"remove","qualname":"<TypeMap>::remove","value":"pub fn remove<T: 'static>(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove a value from this `TypeMap`.","sig":null,"attributes":[{"value":"/ Remove a value from this `TypeMap`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":4117,"byte_end":4156,"line_start":128,"line_end":128,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":4161,"byte_end":4164,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If a value of this type exists, it will be returned.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":4169,"byte_end":4225,"line_start":130,"line_end":130,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":4534,"byte_end":4539,"line_start":140,"line_end":140,"column_start":12,"column_end":17},"name":"clear","qualname":"<TypeMap>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear the `TypeMap` of all inserted values.\n","sig":null,"attributes":[{"value":"/ Clear the `TypeMap` of all inserted values.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":4461,"byte_end":4508,"line_start":138,"line_end":138,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":4513,"byte_end":4522,"line_start":139,"line_end":139,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":4661,"byte_end":4666,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"entry","qualname":"<TypeMap>::entry","value":"pub fn entry<T: 'static>(&mut Self) -> Entry<, T>","parent":null,"children":[],"decl_id":null,"docs":" Get an entry in the `TypeMap` for in-place manipulation.\n","sig":null,"attributes":[{"value":"/ Get an entry in the `TypeMap` for in-place manipulation.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":4589,"byte_end":4649,"line_start":144,"line_end":144,"column_start":5,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":5184,"byte_end":5194,"line_start":158,"line_end":158,"column_start":9,"column_end":19},"name":"concurrent","qualname":"::concurrent","value":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":202},{"krate":0,"index":147},{"krate":0,"index":152},{"krate":0,"index":63},{"krate":0,"index":156},{"krate":0,"index":161},{"krate":0,"index":73},{"krate":0,"index":165},{"krate":0,"index":174},{"krate":0,"index":77},{"krate":0,"index":178},{"krate":0,"index":182},{"krate":0,"index":180},{"krate":0,"index":83}],"decl_id":null,"docs":" Provides the same `TypeMap` container, but with `Send` + `Sync` bounds on values\n","sig":null,"attributes":[{"value":"/ Provides the same `TypeMap` container, but with `Send` + `Sync` bounds on values","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":5091,"byte_end":5175,"line_start":157,"line_end":157,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":5421,"byte_end":5434,"line_start":169,"line_end":169,"column_start":16,"column_end":29},"name":"OccupiedEntry","qualname":"::concurrent::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151}],"decl_id":null,"docs":" A view into an occupied entry in a `TypeMap`.\n","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `TypeMap`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":5335,"byte_end":5384,"line_start":167,"line_end":167,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":5699,"byte_end":5702,"line_start":176,"line_end":176,"column_start":16,"column_end":19},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":5636,"byte_end":5683,"line_start":175,"line_end":175,"column_start":9,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":5859,"byte_end":5866,"line_start":181,"line_end":181,"column_start":16,"column_end":23},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":"Gets a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/Gets a mutable reference to the value in the entry.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":5789,"byte_end":5843,"line_start":180,"line_end":180,"column_start":9,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":6117,"byte_end":6125,"line_start":187,"line_end":187,"column_start":16,"column_end":24},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Converts the `OccupiedEntry` into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"/ Converts the `OccupiedEntry` into a mutable reference to the value in the entry","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":5965,"byte_end":6048,"line_start":185,"line_end":185,"column_start":9,"column_end":92}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":6057,"byte_end":6101,"line_start":186,"line_end":186,"column_start":9,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":6306,"byte_end":6312,"line_start":192,"line_end":192,"column_start":16,"column_end":22},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":6223,"byte_end":6290,"line_start":191,"line_end":191,"column_start":9,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":6588,"byte_end":6594,"line_start":200,"line_end":200,"column_start":16,"column_end":22},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.    \n","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it.    ","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":6515,"byte_end":6572,"line_start":199,"line_end":199,"column_start":9,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":6801,"byte_end":6812,"line_start":207,"line_end":207,"column_start":16,"column_end":27},"name":"VacantEntry","qualname":"::concurrent::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160}],"decl_id":null,"docs":" A view into a vacant entry in a `TypeMap`.\n","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `TypeMap`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":6718,"byte_end":6764,"line_start":205,"line_end":205,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":7131,"byte_end":7137,"line_start":214,"line_end":214,"column_start":16,"column_end":22},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, T) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the key of the `VacantEntry`, and returns a mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the key of the `VacantEntry`, and returns a mutable reference to it.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":7010,"byte_end":7115,"line_start":213,"line_end":213,"column_start":9,"column_end":114}}]},{"kind":"TupleVariant","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":7398,"byte_end":7406,"line_start":222,"line_end":222,"column_start":9,"column_end":17},"name":"Occupied","qualname":"::concurrent::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":7438,"byte_end":7444,"line_start":223,"line_end":223,"column_start":9,"column_end":15},"name":"Vacant","qualname":"::concurrent::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":7375,"byte_end":7380,"line_start":221,"line_end":221,"column_start":14,"column_end":19},"name":"Entry","qualname":"::concurrent::Entry","value":"pub enum Entry<'a, T> { Occupied(OccupiedEntry), Vacant(VacantEntry), }","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":171}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.\n","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":7260,"byte_end":7340,"line_start":219,"line_end":219,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":7692,"byte_end":7701,"line_start":229,"line_end":229,"column_start":16,"column_end":25},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, T) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":7535,"byte_end":7617,"line_start":227,"line_end":227,"column_start":9,"column_end":91}},{"value":"/ a mutable reference to the value in the entry.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":7626,"byte_end":7676,"line_start":228,"line_end":228,"column_start":9,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":8096,"byte_end":8110,"line_start":238,"line_end":238,"column_start":16,"column_end":30},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F: FnOnce() -> T>(Self, F) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty, and returns\n a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default function if empty, and returns","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":7916,"byte_end":8021,"line_start":236,"line_end":236,"column_start":9,"column_end":114}},{"value":"/ a mutable reference to the value in the entry.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":8030,"byte_end":8080,"line_start":237,"line_end":237,"column_start":9,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":8418,"byte_end":8425,"line_start":248,"line_end":248,"column_start":16,"column_end":23},"name":"TypeMap","qualname":"::concurrent::TypeMap","value":"TypeMap {  }","parent":null,"children":[{"krate":0,"index":179}],"decl_id":null,"docs":" The typemap container\n","sig":null,"attributes":[{"value":"/ The typemap container","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":8377,"byte_end":8402,"line_start":247,"line_end":247,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":8594,"byte_end":8597,"line_start":255,"line_end":255,"column_start":16,"column_end":19},"name":"new","qualname":"<TypeMap>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `TypeMap`.\n","sig":null,"attributes":[{"value":"/ Create an empty `TypeMap`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":8530,"byte_end":8560,"line_start":253,"line_end":253,"column_start":9,"column_end":39}},{"value":"inline","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":8569,"byte_end":8578,"line_start":254,"line_end":254,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":8800,"byte_end":8806,"line_start":262,"line_end":262,"column_start":16,"column_end":22},"name":"insert","qualname":"<TypeMap>::insert","value":"pub fn insert<T: Send + Sync + 'static>(&mut Self, T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Insert a value into this `TypeMap`.","sig":null,"attributes":[{"value":"/ Insert a value into this `TypeMap`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":8660,"byte_end":8699,"line_start":259,"line_end":259,"column_start":9,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":8708,"byte_end":8711,"line_start":260,"line_end":260,"column_start":9,"column_end":12}},{"value":"/ If a value of this type already exists, it will be returned.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":8720,"byte_end":8784,"line_start":261,"line_end":261,"column_start":9,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":9183,"byte_end":9191,"line_start":270,"line_end":270,"column_start":16,"column_end":24},"name":"contains","qualname":"<TypeMap>::contains","value":"pub fn contains<T: 'static>(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if container contains value for type\n","sig":null,"attributes":[{"value":"/ Check if container contains value for type","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":9121,"byte_end":9167,"line_start":269,"line_end":269,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":9405,"byte_end":9408,"line_start":275,"line_end":275,"column_start":16,"column_end":19},"name":"get","qualname":"<TypeMap>::get","value":"pub fn get<T: 'static>(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a value previously inserted on this `TypeMap`.\n","sig":null,"attributes":[{"value":"/ Get a reference to a value previously inserted on this `TypeMap`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":9320,"byte_end":9389,"line_start":274,"line_end":274,"column_start":9,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":9716,"byte_end":9723,"line_start":283,"line_end":283,"column_start":16,"column_end":23},"name":"get_mut","qualname":"<TypeMap>::get_mut","value":"pub fn get_mut<T: 'static>(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a value previously inserted on this `TypeMap`.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to a value previously inserted on this `TypeMap`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":9623,"byte_end":9700,"line_start":282,"line_end":282,"column_start":9,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":10082,"byte_end":10088,"line_start":293,"line_end":293,"column_start":16,"column_end":22},"name":"remove","qualname":"<TypeMap>::remove","value":"pub fn remove<T: 'static>(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove a value from this `TypeMap`.","sig":null,"attributes":[{"value":"/ Remove a value from this `TypeMap`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":9950,"byte_end":9989,"line_start":290,"line_end":290,"column_start":9,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":9998,"byte_end":10001,"line_start":291,"line_end":291,"column_start":9,"column_end":12}},{"value":"/ If a value of this type exists, it will be returned.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":10010,"byte_end":10066,"line_start":292,"line_end":292,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":10429,"byte_end":10434,"line_start":302,"line_end":302,"column_start":16,"column_end":21},"name":"clear","qualname":"<TypeMap>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear the `TypeMap` of all inserted values.\n","sig":null,"attributes":[{"value":"/ Clear the `TypeMap` of all inserted values.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":10348,"byte_end":10395,"line_start":300,"line_end":300,"column_start":9,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":10404,"byte_end":10413,"line_start":301,"line_end":301,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":10572,"byte_end":10577,"line_start":307,"line_end":307,"column_start":16,"column_end":21},"name":"entry","qualname":"<TypeMap>::entry","value":"pub fn entry<T: 'static + Send + Sync>(&mut Self) -> Entry<, T>","parent":null,"children":[],"decl_id":null,"docs":" Get an entry in the `TypeMap` for in-place manipulation.\n","sig":null,"attributes":[{"value":"/ Get an entry in the `TypeMap` for in-place manipulation.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":10496,"byte_end":10556,"line_start":306,"line_end":306,"column_start":9,"column_end":69}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":335,"byte_end":348,"line_start":15,"line_end":15,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":1480,"byte_end":1491,"line_start":50,"line_end":50,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":1949,"byte_end":1954,"line_start":64,"line_end":64,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":2843,"byte_end":2850,"line_start":90,"line_end":90,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":43},{"krate":0,"index":47},{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":5605,"byte_end":5618,"line_start":174,"line_end":174,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":6981,"byte_end":6992,"line_start":212,"line_end":212,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":7512,"byte_end":7517,"line_start":226,"line_end":226,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":8512,"byte_end":8519,"line_start":252,"line_end":252,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":97},{"krate":0,"index":101},{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":335,"byte_end":348,"line_start":15,"line_end":15,"column_start":22,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":1480,"byte_end":1491,"line_start":50,"line_end":50,"column_start":22,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":1949,"byte_end":1954,"line_start":64,"line_end":64,"column_start":22,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":2843,"byte_end":2850,"line_start":90,"line_end":90,"column_start":6,"column_end":13},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":141},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":5605,"byte_end":5618,"line_start":174,"line_end":174,"column_start":40,"column_end":53},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":6981,"byte_end":6992,"line_start":212,"line_end":212,"column_start":40,"column_end":51},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":156},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":7512,"byte_end":7517,"line_start":226,"line_end":226,"column_start":40,"column_end":45},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\type-map-0.3.0\\src\\lib.rs","byte_start":8512,"byte_end":8519,"line_start":252,"line_end":252,"column_start":10,"column_end":17},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":178},"to":{"krate":4294967295,"index":4294967295}}]}