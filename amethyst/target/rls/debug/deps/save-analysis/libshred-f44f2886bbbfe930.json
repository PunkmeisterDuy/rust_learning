{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2","program":"C:\\Users\\Punkm\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","shred","--edition=2018","C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"parallel\"","--cfg","feature=\"rayon\"","--cfg","feature=\"shred-derive\"","-C","metadata=f44f2886bbbfe930","-C","extra-filename=-f44f2886bbbfe930","--out-dir","c:\\Users\\Punkm\\Projects\\Programming\\rust_learning\\amethyst\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Punkm\\Projects\\Programming\\rust_learning\\amethyst\\target\\rls\\debug\\deps","--extern","arrayvec=c:\\Users\\Punkm\\Projects\\Programming\\rust_learning\\amethyst\\target\\rls\\debug\\deps\\libarrayvec-fa2eb0255e8fc525.rmeta","--extern","hashbrown=c:\\Users\\Punkm\\Projects\\Programming\\rust_learning\\amethyst\\target\\rls\\debug\\deps\\libhashbrown-ab95b7d977e439ae.rmeta","--extern","mopa=c:\\Users\\Punkm\\Projects\\Programming\\rust_learning\\amethyst\\target\\rls\\debug\\deps\\libmopa-fee330efa1ede0ab.rmeta","--extern","rayon=c:\\Users\\Punkm\\Projects\\Programming\\rust_learning\\amethyst\\target\\rls\\debug\\deps\\librayon-04ae4bbcc0e621e7.rmeta","--extern","shred_derive=c:\\Users\\Punkm\\Projects\\Programming\\rust_learning\\amethyst\\target\\rls\\debug\\deps\\shred_derive-f02ba017fcee3566.dll","--extern","smallvec=c:\\Users\\Punkm\\Projects\\Programming\\rust_learning\\amethyst\\target\\rls\\debug\\deps\\libsmallvec-4be62c66feebc162.rmeta","--extern","tynm=c:\\Users\\Punkm\\Projects\\Programming\\rust_learning\\amethyst\\target\\rls\\debug\\deps\\libtynm-a614748df7dfbd3b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Punkm\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Punkm\\Projects\\Programming\\rust_learning\\amethyst\\target\\rls\\debug\\deps\\libshred-f44f2886bbbfe930.rmeta"},"prelude":{"crate_id":{"name":"shred","disambiguator":[1468823964445957135,18207027097987944625]},"crate_root":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src","external_crates":[{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[9313216841108481316,924443797430308437]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[235204689529430899,11195511058902687991]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8443630644245237509,966744638502353748]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13900139468171161186,1531802306738104785]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5240442222101950495,1297279504790020208]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2443005202137729499,9185958358018941627]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15985227457147286552,10516973543605023258]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4222764532443259325,10183273613643052503]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1171194158452371475,10852610754819645916]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8741536135820378690,14206967751681147027]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[4062813797492812340,12507429432407858268]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[14499051738960611440,17566239002762474023]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","num":13,"id":{"name":"hashbrown","disambiguator":[8925839936616154835,11901533038887117017]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","num":14,"id":{"name":"ahash","disambiguator":[4388994964134001360,2603823143727794752]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","num":15,"id":{"name":"rayon","disambiguator":[9797363475420962045,12878297757152873358]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","num":16,"id":{"name":"either","disambiguator":[5293962632195008676,7696778550288695999]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","num":17,"id":{"name":"rayon_core","disambiguator":[3814526446118434898,978622602774820331]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","num":18,"id":{"name":"crossbeam_channel","disambiguator":[11059282415400143388,11763990228959884701]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","num":19,"id":{"name":"cfg_if","disambiguator":[14061899304803280366,309176067849779292]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","num":20,"id":{"name":"crossbeam_utils","disambiguator":[14735623143861338352,3218984787699678671]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","num":21,"id":{"name":"lazy_static","disambiguator":[15015519582684158761,6705730272629463748]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","num":22,"id":{"name":"crossbeam_deque","disambiguator":[8976761490233285640,5219252692543003991]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","num":23,"id":{"name":"crossbeam_epoch","disambiguator":[364051253335529136,10477534208043744852]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","num":24,"id":{"name":"scopeguard","disambiguator":[1115943010664334019,12233889810090221184]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","num":25,"id":{"name":"memoffset","disambiguator":[14848587667171200712,2451861500400080279]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","num":26,"id":{"name":"num_cpus","disambiguator":[11824960041872934416,6724741952503365918]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","num":27,"id":{"name":"smallvec","disambiguator":[16311870731434365722,16467120939857223285]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","num":28,"id":{"name":"serde","disambiguator":[15070011232247584658,14464873363975297238]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","num":29,"id":{"name":"serde_derive","disambiguator":[18403159524308609117,17825619116599167581]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\stage.rs","num":30,"id":{"name":"arrayvec","disambiguator":[9275182944916240395,1646725250641751645]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","num":31,"id":{"name":"mopa","disambiguator":[7518234374765931037,2820171599277532427]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","num":32,"id":{"name":"shred_derive","disambiguator":[16792787388752220555,1714868308578644957]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\setup.rs","num":33,"id":{"name":"tynm","disambiguator":[10505009176383067347,18386644456231465852]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\setup.rs","num":34,"id":{"name":"nom","disambiguator":[12896184594585559002,13858899767415920756]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\setup.rs","num":35,"id":{"name":"memchr","disambiguator":[8228353501825294651,8750008474684030159]}}],"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":0,"byte_end":3517,"line_start":1,"line_end":122,"column_start":1,"column_end":28}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\mod.rs","byte_start":21187,"byte_end":21202,"line_start":2,"line_end":2,"column_start":33,"column_end":48},"alias_span":null,"name":"AsyncDispatcher","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":32,"index":23},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":2623,"byte_end":2633,"line_start":97,"line_end":97,"column_start":23,"column_end":33},"alias_span":null,"name":"SystemData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":2690,"byte_end":2705,"line_start":100,"line_end":100,"column_start":26,"column_end":41},"alias_span":null,"name":"AsyncDispatcher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":2762,"byte_end":2765,"line_start":102,"line_end":102,"column_start":27,"column_end":30},"alias_span":null,"name":"Par","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":339},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":2767,"byte_end":2773,"line_start":102,"line_end":102,"column_start":32,"column_end":38},"alias_span":null,"name":"ParSeq","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":2775,"byte_end":2786,"line_start":102,"line_end":102,"column_start":40,"column_end":51},"alias_span":null,"name":"RunWithPool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":2788,"byte_end":2791,"line_start":102,"line_end":102,"column_start":53,"column_end":56},"alias_span":null,"name":"Seq","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1021},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":2835,"byte_end":2848,"line_start":105,"line_end":105,"column_start":9,"column_end":22},"alias_span":null,"name":"BatchAccessor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":2850,"byte_end":2865,"line_start":105,"line_end":105,"column_start":24,"column_end":39},"alias_span":null,"name":"BatchController","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":2867,"byte_end":2886,"line_start":105,"line_end":105,"column_start":41,"column_end":60},"alias_span":null,"name":"BatchUncheckedWorld","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":2867,"byte_end":2886,"line_start":105,"line_end":105,"column_start":41,"column_end":60},"alias_span":null,"name":"BatchUncheckedWorld","value":"","parent":{"krate":0,"index":943}},{"kind":"Use","ref_id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":2888,"byte_end":2916,"line_start":105,"line_end":105,"column_start":62,"column_end":90},"alias_span":null,"name":"DefaultBatchControllerSystem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":2926,"byte_end":2936,"line_start":106,"line_end":106,"column_start":9,"column_end":19},"alias_span":null,"name":"Dispatcher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1026},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":2938,"byte_end":2955,"line_start":106,"line_end":106,"column_start":21,"column_end":38},"alias_span":null,"name":"DispatcherBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":498},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":2975,"byte_end":2983,"line_start":108,"line_end":108,"column_start":12,"column_end":20},"alias_span":null,"name":"CastFrom","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":502},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":2985,"byte_end":2993,"line_start":108,"line_end":108,"column_start":22,"column_end":30},"alias_span":null,"name":"MetaIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":527},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":2995,"byte_end":3006,"line_start":108,"line_end":108,"column_start":32,"column_end":43},"alias_span":null,"name":"MetaIterMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":543},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":3008,"byte_end":3017,"line_start":108,"line_end":108,"column_start":45,"column_end":54},"alias_span":null,"name":"MetaTable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":3042,"byte_end":3050,"line_start":110,"line_end":110,"column_start":9,"column_end":17},"alias_span":null,"name":"Accessor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":591},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":3052,"byte_end":3063,"line_start":110,"line_end":110,"column_start":19,"column_end":30},"alias_span":null,"name":"AccessorCow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":654},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":3065,"byte_end":3082,"line_start":110,"line_end":110,"column_start":32,"column_end":49},"alias_span":null,"name":"DynamicSystemData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":3084,"byte_end":3090,"line_start":110,"line_end":110,"column_start":51,"column_end":57},"alias_span":null,"name":"RunNow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1117},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":3092,"byte_end":3103,"line_start":110,"line_end":110,"column_start":59,"column_end":70},"alias_span":null,"name":"RunningTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1138},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":3105,"byte_end":3119,"line_start":110,"line_end":110,"column_start":72,"column_end":86},"alias_span":null,"name":"StaticAccessor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":3121,"byte_end":3127,"line_start":110,"line_end":110,"column_start":88,"column_end":94},"alias_span":null,"name":"System","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":630},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":3137,"byte_end":3147,"line_start":111,"line_end":111,"column_start":9,"column_end":19},"alias_span":null,"name":"SystemData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":824},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":3177,"byte_end":3192,"line_start":114,"line_end":114,"column_start":9,"column_end":24},"alias_span":null,"name":"DefaultProvider","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":825},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":3177,"byte_end":3192,"line_start":114,"line_end":114,"column_start":9,"column_end":24},"alias_span":null,"name":"DefaultProvider","value":"","parent":{"krate":0,"index":962}},{"kind":"Use","ref_id":{"krate":0,"index":803},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":3194,"byte_end":3199,"line_start":114,"line_end":114,"column_start":26,"column_end":31},"alias_span":null,"name":"Entry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":837},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":3201,"byte_end":3206,"line_start":114,"line_end":114,"column_start":33,"column_end":38},"alias_span":null,"name":"Fetch","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":851},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":3208,"byte_end":3216,"line_start":114,"line_end":114,"column_start":40,"column_end":48},"alias_span":null,"name":"FetchMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":832},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":3218,"byte_end":3230,"line_start":114,"line_end":114,"column_start":50,"column_end":62},"alias_span":null,"name":"PanicHandler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":833},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":3218,"byte_end":3230,"line_start":114,"line_end":114,"column_start":50,"column_end":62},"alias_span":null,"name":"PanicHandler","value":"","parent":{"krate":0,"index":966}},{"kind":"Use","ref_id":{"krate":0,"index":712},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":3232,"byte_end":3236,"line_start":114,"line_end":114,"column_start":64,"column_end":68},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":783},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":3238,"byte_end":3248,"line_start":114,"line_end":114,"column_start":70,"column_end":80},"alias_span":null,"name":"ReadExpect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":865},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":3250,"byte_end":3258,"line_start":114,"line_end":114,"column_start":82,"column_end":90},"alias_span":null,"name":"Resource","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1667},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":3268,"byte_end":3278,"line_start":115,"line_end":115,"column_start":9,"column_end":19},"alias_span":null,"name":"ResourceId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":829},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":3280,"byte_end":3292,"line_start":115,"line_end":115,"column_start":21,"column_end":33},"alias_span":null,"name":"SetupHandler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1696},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":3294,"byte_end":3299,"line_start":115,"line_end":115,"column_start":35,"column_end":40},"alias_span":null,"name":"World","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":737},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":3301,"byte_end":3306,"line_start":115,"line_end":115,"column_start":42,"column_end":47},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":786},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":3308,"byte_end":3319,"line_start":115,"line_end":115,"column_start":49,"column_end":60},"alias_span":null,"name":"WriteExpect","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":0,"byte_end":3517,"line_start":1,"line_end":122,"column_start":1,"column_end":28},"name":"","qualname":"::","value":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":79},{"krate":0,"index":480},{"krate":0,"index":571},{"krate":0,"index":669},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":1994},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":2026},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":2034},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975}],"decl_id":null,"docs":" **Sh**ared **re**source **d**ispatcher","sig":null,"attributes":[{"value":"/ **Sh**ared **re**source **d**ispatcher","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":0,"byte_end":42,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":43,"byte_end":46,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This library allows to dispatch","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":47,"byte_end":82,"line_start":3,"line_end":3,"column_start":1,"column_end":36}},{"value":"/ systems, which can have interdependencies,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":83,"byte_end":129,"line_start":4,"line_end":4,"column_start":1,"column_end":47}},{"value":"/ shared and exclusive resource access, in parallel.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":130,"byte_end":184,"line_start":5,"line_end":5,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":185,"byte_end":188,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":189,"byte_end":203,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":204,"byte_end":207,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":208,"byte_end":219,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/ extern crate shred;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":220,"byte_end":243,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":244,"byte_end":247,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ use shred::{DispatcherBuilder, Read, Resource, ResourceId, System, SystemData, World, Write};","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":248,"byte_end":345,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":346,"byte_end":349,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Default)]","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":350,"byte_end":379,"line_start":14,"line_end":14,"column_start":1,"column_end":30}},{"value":"/ struct ResA;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":380,"byte_end":396,"line_start":15,"line_end":15,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":397,"byte_end":400,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Default)]","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":401,"byte_end":430,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/ struct ResB;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":431,"byte_end":447,"line_start":18,"line_end":18,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":448,"byte_end":451,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(feature = \"shred-derive\")]","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":452,"byte_end":490,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"/ #[derive(SystemData)] // Provided with `shred-derive` feature","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":491,"byte_end":556,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/ struct Data<'a> {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":557,"byte_end":578,"line_start":22,"line_end":22,"column_start":1,"column_end":22}},{"value":"/     a: Read<'a, ResA>,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":579,"byte_end":605,"line_start":23,"line_end":23,"column_start":1,"column_end":27}},{"value":"/     b: Write<'a, ResB>,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":606,"byte_end":633,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":634,"byte_end":639,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":640,"byte_end":643,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ struct EmptySystem;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":644,"byte_end":667,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":668,"byte_end":671,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ impl<'a> System<'a> for EmptySystem {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":672,"byte_end":713,"line_start":29,"line_end":29,"column_start":1,"column_end":42}},{"value":"/     type SystemData = Data<'a>;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":714,"byte_end":749,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":750,"byte_end":753,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     fn run(&mut self, bundle: Data<'a>) {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":754,"byte_end":799,"line_start":32,"line_end":32,"column_start":1,"column_end":46}},{"value":"/         println!(\"{:?}\", &*bundle.a);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":800,"byte_end":841,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/         println!(\"{:?}\", &*bundle.b);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":842,"byte_end":883,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":884,"byte_end":893,"line_start":35,"line_end":35,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":894,"byte_end":899,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":900,"byte_end":903,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut world = World::empty();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":904,"byte_end":939,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ let mut dispatcher = DispatcherBuilder::new()","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":940,"byte_end":989,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/     .with(EmptySystem, \"empty\", &[])","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":990,"byte_end":1030,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1031,"byte_end":1048,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/ world.insert(ResA);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1049,"byte_end":1072,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/ world.insert(ResB);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1073,"byte_end":1096,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1097,"byte_end":1100,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ dispatcher.dispatch(&mut world);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1101,"byte_end":1137,"line_start":45,"line_end":45,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1138,"byte_end":1143,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ # // The following is required for the snippet to compile without the `shred-derive` feature.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1144,"byte_end":1241,"line_start":47,"line_end":47,"column_start":1,"column_end":98}},{"value":"/ #","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1242,"byte_end":1247,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # #[cfg(not(feature = \"shred-derive\"))]","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1248,"byte_end":1291,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/ # struct Data<'a> {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1292,"byte_end":1315,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"/ #     a: Read<'a, ResA>,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1316,"byte_end":1344,"line_start":51,"line_end":51,"column_start":1,"column_end":29}},{"value":"/ #     b: Write<'a, ResB>,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1345,"byte_end":1374,"line_start":52,"line_end":52,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1375,"byte_end":1382,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1383,"byte_end":1388,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ # #[cfg(not(feature = \"shred-derive\"))]","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1389,"byte_end":1432,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/ # impl<'a> SystemData<'a> for Data<'a> {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1433,"byte_end":1477,"line_start":56,"line_end":56,"column_start":1,"column_end":45}},{"value":"/ #     fn setup(world: &mut World) {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1478,"byte_end":1517,"line_start":57,"line_end":57,"column_start":1,"column_end":40}},{"value":"/ #         Read::<'_, ResA>::setup(world);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1518,"byte_end":1563,"line_start":58,"line_end":58,"column_start":1,"column_end":46}},{"value":"/ #         Write::<'_, ResB>::setup(world);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1564,"byte_end":1610,"line_start":59,"line_end":59,"column_start":1,"column_end":47}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1611,"byte_end":1622,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1623,"byte_end":1628,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"/ #     fn fetch(world: &'a World) -> Self {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1629,"byte_end":1675,"line_start":62,"line_end":62,"column_start":1,"column_end":47}},{"value":"/ #         Self {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1676,"byte_end":1696,"line_start":63,"line_end":63,"column_start":1,"column_end":21}},{"value":"/ #             a: Read::<'_, ResA>::fetch(world),","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1697,"byte_end":1749,"line_start":64,"line_end":64,"column_start":1,"column_end":53}},{"value":"/ #             b: Write::<'_, ResB>::fetch(world),","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1750,"byte_end":1803,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ #         }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1804,"byte_end":1819,"line_start":66,"line_end":66,"column_start":1,"column_end":16}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1820,"byte_end":1831,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1832,"byte_end":1837,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ #     fn reads() -> Vec<ResourceId> {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1838,"byte_end":1879,"line_start":69,"line_end":69,"column_start":1,"column_end":42}},{"value":"/ #         Read::<'_, ResA>::reads()","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1880,"byte_end":1919,"line_start":70,"line_end":70,"column_start":1,"column_end":40}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1920,"byte_end":1931,"line_start":71,"line_end":71,"column_start":1,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1932,"byte_end":1937,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ #     fn writes() -> Vec<ResourceId> {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1938,"byte_end":1980,"line_start":73,"line_end":73,"column_start":1,"column_end":43}},{"value":"/ #         Write::<'_, ResB>::writes()","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":1981,"byte_end":2022,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":2023,"byte_end":2034,"line_start":75,"line_end":75,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":2035,"byte_end":2042,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":2043,"byte_end":2050,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":2051,"byte_end":2054,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Once you are more familiar with how system data and parallelization works,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":2055,"byte_end":2133,"line_start":79,"line_end":79,"column_start":1,"column_end":79}},{"value":"/ you can take look at a more flexible and performant way to dispatch:","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":2134,"byte_end":2206,"line_start":80,"line_end":80,"column_start":1,"column_end":73}},{"value":"/ `ParSeq`. Using it is bit trickier, but it allows dispatching without any","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":2207,"byte_end":2284,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/ virtual function calls.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":2285,"byte_end":2312,"line_start":82,"line_end":82,"column_start":1,"column_end":28}},{"value":"deny(unused_must_use)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":2314,"byte_end":2339,"line_start":84,"line_end":84,"column_start":1,"column_end":26}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":2340,"byte_end":2362,"line_start":85,"line_end":85,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cell","qualname":"::cell","value":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":1706},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":976},{"krate":0,"index":994},{"krate":0,"index":993},{"krate":0,"index":991},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":983},{"krate":0,"index":981},{"krate":0,"index":978},{"krate":0,"index":19},{"krate":0,"index":21},{"krate":0,"index":996},{"krate":0,"index":1001},{"krate":0,"index":23},{"krate":0,"index":29},{"krate":0,"index":34},{"krate":0,"index":38},{"krate":0,"index":1005},{"krate":0,"index":1010},{"krate":0,"index":42},{"krate":0,"index":48},{"krate":0,"index":53},{"krate":0,"index":57},{"krate":0,"index":1014},{"krate":0,"index":1018},{"krate":0,"index":61},{"krate":0,"index":74},{"krate":0,"index":76}],"decl_id":null,"docs":" Helper module for some internals, most users don't need to interact with it.\n","sig":null,"attributes":[{"value":"/ Helper module for some internals, most users don't need to interact with it.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":3519,"byte_end":3599,"line_start":1,"line_end":1,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":976},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":4139,"byte_end":4152,"line_start":24,"line_end":24,"column_start":12,"column_end":25},"name":"InvalidBorrow","qualname":"::cell::InvalidBorrow","value":"","parent":null,"children":[],"decl_id":null,"docs":" Marker struct for an invalid borrow error\n","sig":null,"attributes":[{"value":"/ Marker struct for an invalid borrow error","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":4014,"byte_end":4059,"line_start":22,"line_end":22,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":996},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":4706,"byte_end":4709,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"Ref","qualname":"::cell::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":999},{"krate":0,"index":1000}],"decl_id":null,"docs":" An immutable reference to data in a `TrustCell`.","sig":null,"attributes":[{"value":"/ An immutable reference to data in a `TrustCell`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":4564,"byte_end":4616,"line_start":39,"line_end":39,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":4617,"byte_end":4620,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Access the value via `std::ops::Deref` (e.g. `*val`)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":4621,"byte_end":4677,"line_start":41,"line_end":41,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":6507,"byte_end":6510,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"map","qualname":"<Ref>::map","value":"pub fn map<U: ?Sized, F>(Self, F) -> Ref where F: FnOnce(&T) -> &U, U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Ref` for a component of the borrowed data which preserves\n the existing borrow.","sig":null,"attributes":[{"value":"/ Makes a new `Ref` for a component of the borrowed data which preserves","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":4817,"byte_end":4891,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ the existing borrow.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":4896,"byte_end":4920,"line_start":50,"line_end":50,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":4925,"byte_end":4928,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ The `TrustCell` is already immutably borrowed, so this cannot fail.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":4933,"byte_end":5004,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":5009,"byte_end":5012,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as `Ref::map(...)`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":5017,"byte_end":5093,"line_start":54,"line_end":54,"column_start":5,"column_end":81}},{"value":"/ A method would interfere with methods of the same name on the contents","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":5098,"byte_end":5172,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ of a `Ref` used through `Deref`. Further this preserves the borrow of","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":5177,"byte_end":5250,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ the value and hence does the proper cleanup when it's dropped.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":5255,"byte_end":5321,"line_start":57,"line_end":57,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":5326,"byte_end":5329,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":5334,"byte_end":5348,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":5353,"byte_end":5356,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ This can be used to avoid pointer indirection when a boxed item is","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":5361,"byte_end":5431,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ stored in the `TrustCell`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":5436,"byte_end":5466,"line_start":62,"line_end":62,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":5471,"byte_end":5474,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":5479,"byte_end":5486,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/ use shred::cell::{Ref, TrustCell};","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":5491,"byte_end":5529,"line_start":65,"line_end":65,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":5534,"byte_end":5537,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ let cb = TrustCell::new(Box::new(5));","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":5542,"byte_end":5583,"line_start":67,"line_end":67,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":5588,"byte_end":5591,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ // Borrowing the cell causes the `Ref` to store a reference to the `Box`, which is a","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":5596,"byte_end":5684,"line_start":69,"line_end":69,"column_start":5,"column_end":93}},{"value":"/ // pointer to the value on the heap, not the actual value.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":5689,"byte_end":5751,"line_start":70,"line_end":70,"column_start":5,"column_end":67}},{"value":"/ let boxed_ref: Ref<'_, Box<usize>> = cb.borrow();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":5756,"byte_end":5809,"line_start":71,"line_end":71,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(**boxed_ref, 5); // Notice the double deref to get the actual value.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":5814,"byte_end":5897,"line_start":72,"line_end":72,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":5902,"byte_end":5905,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ // By using `map` we can let `Ref` store a reference directly to the value on the heap.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":5910,"byte_end":6001,"line_start":74,"line_end":74,"column_start":5,"column_end":96}},{"value":"/ let pure_ref: Ref<'_, usize> = Ref::map(boxed_ref, Box::as_ref);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":6006,"byte_end":6074,"line_start":75,"line_end":75,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":6079,"byte_end":6082,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*pure_ref, 5);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":6087,"byte_end":6116,"line_start":77,"line_end":77,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":6121,"byte_end":6128,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":6133,"byte_end":6136,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ We can also use `map` to get a reference to a sub-part of the borrowed","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":6141,"byte_end":6215,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ value.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":6220,"byte_end":6230,"line_start":81,"line_end":81,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":6235,"byte_end":6238,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":6243,"byte_end":6254,"line_start":83,"line_end":83,"column_start":5,"column_end":16}},{"value":"/ # use shred::cell::{TrustCell, Ref};","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":6259,"byte_end":6299,"line_start":84,"line_end":84,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":6304,"byte_end":6307,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ let c = TrustCell::new((5, 'b'));","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":6312,"byte_end":6349,"line_start":86,"line_end":86,"column_start":5,"column_end":42}},{"value":"/ let b1: Ref<'_, (u32, char)> = c.borrow();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":6354,"byte_end":6400,"line_start":87,"line_end":87,"column_start":5,"column_end":51}},{"value":"/ let b2: Ref<'_, u32> = Ref::map(b1, |t| &t.0);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":6405,"byte_end":6455,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(*b2, 5);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":6460,"byte_end":6483,"line_start":89,"line_end":89,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":6488,"byte_end":6495,"line_start":90,"line_end":90,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1005},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":7924,"byte_end":7930,"line_start":143,"line_end":143,"column_start":12,"column_end":18},"name":"RefMut","qualname":"::cell::RefMut","value":"RefMut {  }","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009}],"decl_id":null,"docs":" A mutable reference to data in a `TrustCell`.","sig":null,"attributes":[{"value":"/ A mutable reference to data in a `TrustCell`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":7782,"byte_end":7831,"line_start":139,"line_end":139,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":7832,"byte_end":7835,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ Access the value via `std::ops::DerefMut` (e.g. `*val`)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":7836,"byte_end":7895,"line_start":141,"line_end":141,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":9829,"byte_end":9832,"line_start":193,"line_end":193,"column_start":12,"column_end":15},"name":"map","qualname":"<RefMut>::map","value":"pub fn map<U: ?Sized, F>(Self, F) -> RefMut where F: FnOnce(&mut T) -> &mut U,\nU","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `RefMut` for a component of the borrowed data which\n preserves the existing borrow.","sig":null,"attributes":[{"value":"/ Makes a new `RefMut` for a component of the borrowed data which","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":8045,"byte_end":8112,"line_start":149,"line_end":149,"column_start":5,"column_end":72}},{"value":"/ preserves the existing borrow.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":8117,"byte_end":8151,"line_start":150,"line_end":150,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":8156,"byte_end":8159,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ The `TrustCell` is already mutably borrowed, so this cannot fail.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":8164,"byte_end":8233,"line_start":152,"line_end":152,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":8238,"byte_end":8241,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":8246,"byte_end":8305,"line_start":154,"line_end":154,"column_start":5,"column_end":64}},{"value":"/ `RefMut::map(...)`. A method would interfere with methods of the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":8310,"byte_end":8378,"line_start":155,"line_end":155,"column_start":5,"column_end":73}},{"value":"/ same name on the contents of a `RefMut` used through `DerefMut`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":8383,"byte_end":8451,"line_start":156,"line_end":156,"column_start":5,"column_end":73}},{"value":"/ Further this preserves the borrow of the value and hence does the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":8456,"byte_end":8525,"line_start":157,"line_end":157,"column_start":5,"column_end":74}},{"value":"/ proper cleanup when it's dropped.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":8530,"byte_end":8567,"line_start":158,"line_end":158,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":8572,"byte_end":8575,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":8580,"byte_end":8594,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":8599,"byte_end":8602,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ This can also be used to avoid pointer indirection when a boxed item is","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":8607,"byte_end":8682,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ stored in the `TrustCell`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":8687,"byte_end":8717,"line_start":163,"line_end":163,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":8722,"byte_end":8725,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":8730,"byte_end":8737,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ use shred::cell::{RefMut, TrustCell};","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":8742,"byte_end":8783,"line_start":166,"line_end":166,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":8788,"byte_end":8791,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let cb = TrustCell::new(Box::new(5));","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":8796,"byte_end":8837,"line_start":168,"line_end":168,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":8842,"byte_end":8845,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ // Borrowing the cell causes the `RefMut` to store a reference to the `Box`, which is a","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":8850,"byte_end":8941,"line_start":170,"line_end":170,"column_start":5,"column_end":96}},{"value":"/ // pointer to the value on the heap, and not a reference directly to the value.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":8946,"byte_end":9029,"line_start":171,"line_end":171,"column_start":5,"column_end":88}},{"value":"/ let boxed_ref: RefMut<'_, Box<usize>> = cb.borrow_mut();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":9034,"byte_end":9094,"line_start":172,"line_end":172,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(**boxed_ref, 5); // Notice the double deref to get the actual value.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":9099,"byte_end":9182,"line_start":173,"line_end":173,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":9187,"byte_end":9190,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ // By using `map` we can let `RefMut` store a reference directly to the value on the heap.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":9195,"byte_end":9289,"line_start":175,"line_end":175,"column_start":5,"column_end":99}},{"value":"/ let pure_ref: RefMut<'_, usize> = RefMut::map(boxed_ref, Box::as_mut);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":9294,"byte_end":9368,"line_start":176,"line_end":176,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":9373,"byte_end":9376,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*pure_ref, 5);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":9381,"byte_end":9410,"line_start":178,"line_end":178,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":9415,"byte_end":9422,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":9427,"byte_end":9430,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ We can also use `map` to get a reference to a sub-part of the borrowed","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":9435,"byte_end":9509,"line_start":181,"line_end":181,"column_start":5,"column_end":79}},{"value":"/ value.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":9514,"byte_end":9524,"line_start":182,"line_end":182,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":9529,"byte_end":9532,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":9537,"byte_end":9548,"line_start":184,"line_end":184,"column_start":5,"column_end":16}},{"value":"/ # use shred::cell::{TrustCell, RefMut};","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":9553,"byte_end":9596,"line_start":185,"line_end":185,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":9601,"byte_end":9604,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ let c = TrustCell::new((5, 'b'));","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":9609,"byte_end":9646,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":9651,"byte_end":9654,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ let b1: RefMut<'_, (u32, char)> = c.borrow_mut();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":9659,"byte_end":9712,"line_start":189,"line_end":189,"column_start":5,"column_end":58}},{"value":"/ let b2: RefMut<'_, u32> = RefMut::map(b1, |t| &mut t.0);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":9717,"byte_end":9777,"line_start":190,"line_end":190,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(*b2, 5);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":9782,"byte_end":9805,"line_start":191,"line_end":191,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":9810,"byte_end":9817,"line_start":192,"line_end":192,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":11129,"byte_end":11138,"line_start":239,"line_end":239,"column_start":12,"column_end":21},"name":"TrustCell","qualname":"::cell::TrustCell","value":"TrustCell {  }","parent":null,"children":[{"krate":0,"index":1016},{"krate":0,"index":1017}],"decl_id":null,"docs":" A custom cell container that is a `RefCell` with thread-safety.\n","sig":null,"attributes":[{"value":"/ A custom cell container that is a `RefCell` with thread-safety.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":11033,"byte_end":11100,"line_start":237,"line_end":237,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":11283,"byte_end":11286,"line_start":246,"line_end":246,"column_start":12,"column_end":15},"name":"new","qualname":"<TrustCell<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new cell, similar to `RefCell::new`\n","sig":null,"attributes":[{"value":"/ Create a new cell, similar to `RefCell::new`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":11223,"byte_end":11271,"line_start":245,"line_end":245,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":11490,"byte_end":11500,"line_start":254,"line_end":254,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TrustCell<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cell and returns ownership of `T`.\n","sig":null,"attributes":[{"value":"/ Consumes this cell and returns ownership of `T`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":11426,"byte_end":11478,"line_start":253,"line_end":253,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":11818,"byte_end":11824,"line_start":266,"line_end":266,"column_start":12,"column_end":18},"name":"borrow","qualname":"<TrustCell<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Get an immutable reference to the inner data.","sig":null,"attributes":[{"value":"/ Get an immutable reference to the inner data.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":11557,"byte_end":11606,"line_start":258,"line_end":258,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":11611,"byte_end":11614,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ Absence of write accesses is checked at run-time.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":11619,"byte_end":11672,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":11677,"byte_end":11680,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":11685,"byte_end":11697,"line_start":262,"line_end":262,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":11702,"byte_end":11705,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ This function will panic if there is a mutable reference to the data","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":11710,"byte_end":11782,"line_start":264,"line_end":264,"column_start":5,"column_end":77}},{"value":"/ already in use.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":11787,"byte_end":11806,"line_start":265,"line_end":265,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":12235,"byte_end":12245,"line_start":280,"line_end":280,"column_start":12,"column_end":22},"name":"try_borrow","qualname":"<TrustCell<T>>::try_borrow","value":"pub fn try_borrow(&Self) -> Result<Ref<, T>, InvalidBorrow>","parent":null,"children":[],"decl_id":null,"docs":" Get an immutable reference to the inner data.","sig":null,"attributes":[{"value":"/ Get an immutable reference to the inner data.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":12051,"byte_end":12100,"line_start":276,"line_end":276,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":12105,"byte_end":12108,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Absence of write accesses is checked at run-time. If access is not","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":12113,"byte_end":12183,"line_start":278,"line_end":278,"column_start":5,"column_end":75}},{"value":"/ possible, an error is returned.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":12188,"byte_end":12223,"line_start":279,"line_end":279,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":12686,"byte_end":12696,"line_start":297,"line_end":297,"column_start":12,"column_end":22},"name":"borrow_mut","qualname":"<TrustCell<T>>::borrow_mut","value":"pub fn borrow_mut(&Self) -> RefMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner data.","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner data.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":12441,"byte_end":12487,"line_start":289,"line_end":289,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":12492,"byte_end":12495,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ Exclusive access is checked at run-time.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":12500,"byte_end":12544,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":12549,"byte_end":12552,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":12557,"byte_end":12569,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":12574,"byte_end":12577,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This function will panic if there are any references to the data already","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":12582,"byte_end":12658,"line_start":295,"line_end":295,"column_start":5,"column_end":81}},{"value":"/ in use.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":12663,"byte_end":12674,"line_start":296,"line_end":296,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":13098,"byte_end":13112,"line_start":311,"line_end":311,"column_start":12,"column_end":26},"name":"try_borrow_mut","qualname":"<TrustCell<T>>::try_borrow_mut","value":"pub fn try_borrow_mut(&Self) -> Result<RefMut<, T>, InvalidBorrow>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner data.","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner data.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":12926,"byte_end":12972,"line_start":307,"line_end":307,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":12977,"byte_end":12980,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ Exclusive access is checked at run-time. If access is not possible, an","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":12985,"byte_end":13059,"line_start":309,"line_end":309,"column_start":5,"column_end":79}},{"value":"/ error is returned.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":13064,"byte_end":13086,"line_start":310,"line_end":310,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":13457,"byte_end":13464,"line_start":323,"line_end":323,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TrustCell<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets exclusive access to the inner value, bypassing the Cell.","sig":null,"attributes":[{"value":"/ Gets exclusive access to the inner value, bypassing the Cell.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":13319,"byte_end":13384,"line_start":320,"line_end":320,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":13389,"byte_end":13392,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Exclusive access is checked at compile time.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":13397,"byte_end":13445,"line_start":322,"line_end":322,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":22220,"byte_end":22235,"line_start":29,"line_end":29,"column_start":12,"column_end":27},"name":"AsyncDispatcher","qualname":"::dispatch::async_dispatcher::AsyncDispatcher","value":"AsyncDispatcher {  }","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117}],"decl_id":null,"docs":" Like, `Dispatcher` but works asynchronously.\n","sig":null,"attributes":[{"value":"/ Like, `Dispatcher` but works asynchronously.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":22160,"byte_end":22208,"line_start":28,"line_end":28,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":22566,"byte_end":22571,"line_start":41,"line_end":41,"column_start":12,"column_end":17},"name":"setup","qualname":"<AsyncDispatcher>::setup","value":"pub fn setup(&mut Self) where R: BorrowMut<World>","parent":null,"children":[],"decl_id":null,"docs":" Sets up all the systems which means they are gonna add default values\n for the resources they need.\n","sig":null,"attributes":[{"value":"/ Sets up all the systems which means they are gonna add default values","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":22444,"byte_end":22517,"line_start":39,"line_end":39,"column_start":5,"column_end":78}},{"value":"/ for the resources they need.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":22522,"byte_end":22554,"line_start":40,"line_end":40,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":23109,"byte_end":23117,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"dispatch","qualname":"<AsyncDispatcher>::dispatch","value":"pub fn dispatch(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Dispatches the systems asynchronously.\n Does not execute thread local systems.","sig":null,"attributes":[{"value":"/ Dispatches the systems asynchronously.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":22922,"byte_end":22964,"line_start":58,"line_end":58,"column_start":5,"column_end":47}},{"value":"/ Does not execute thread local systems.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":22969,"byte_end":23011,"line_start":59,"line_end":59,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":23016,"byte_end":23019,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ If you want to wait for the systems to finish,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":23024,"byte_end":23074,"line_start":61,"line_end":61,"column_start":5,"column_end":55}},{"value":"/ call `wait()`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":23079,"byte_end":23097,"line_start":62,"line_end":62,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":23699,"byte_end":23703,"line_start":84,"line_end":84,"column_start":12,"column_end":16},"name":"wait","qualname":"<AsyncDispatcher>::wait","value":"pub fn wait(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Waits for all the asynchronously dispatched systems to finish\n and executes thread local systems (if there are any).\n","sig":null,"attributes":[{"value":"/ Waits for all the asynchronously dispatched systems to finish","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":23560,"byte_end":23625,"line_start":82,"line_end":82,"column_start":5,"column_end":70}},{"value":"/ and executes thread local systems (if there are any).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":23630,"byte_end":23687,"line_start":83,"line_end":83,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":24057,"byte_end":24072,"line_start":96,"line_end":96,"column_start":12,"column_end":27},"name":"wait_without_tl","qualname":"<AsyncDispatcher>::wait_without_tl","value":"pub fn wait_without_tl(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Waits for all the asynchronously dispatched systems to finish\n without executing thread local systems.","sig":null,"attributes":[{"value":"/ Waits for all the asynchronously dispatched systems to finish","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":23869,"byte_end":23934,"line_start":92,"line_end":92,"column_start":5,"column_end":70}},{"value":"/ without executing thread local systems.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":23939,"byte_end":23982,"line_start":93,"line_end":93,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":23987,"byte_end":23990,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ See `wait` for executing thread local systems.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":23995,"byte_end":24045,"line_start":95,"line_end":95,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":24207,"byte_end":24214,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"running","qualname":"<AsyncDispatcher>::running","value":"pub fn running(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if any of the asynchronously dispatched systems are running.\n","sig":null,"attributes":[{"value":"/ Checks if any of the asynchronously dispatched systems are running.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":24124,"byte_end":24195,"line_start":100,"line_end":100,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":24505,"byte_end":24508,"line_start":111,"line_end":111,"column_start":12,"column_end":15},"name":"res","qualname":"<AsyncDispatcher>::res","value":"pub fn res(&mut Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Returns the `World`.","sig":null,"attributes":[{"value":"/ Returns the `World`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":24291,"byte_end":24315,"line_start":105,"line_end":105,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":24320,"byte_end":24323,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This will wait for the asynchronous systems to finish.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":24328,"byte_end":24386,"line_start":107,"line_end":107,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":24391,"byte_end":24394,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Renamed to `self.world()`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":24399,"byte_end":24429,"line_start":109,"line_end":109,"column_start":5,"column_end":35}},{"value":"deprecated(since = \"0.8.0\", note = \"renamed to `world`\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":24434,"byte_end":24493,"line_start":110,"line_end":110,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":24668,"byte_end":24673,"line_start":118,"line_end":118,"column_start":12,"column_end":17},"name":"world","qualname":"<AsyncDispatcher>::world","value":"pub fn world(&mut Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Returns the `World`.","sig":null,"attributes":[{"value":"/ Returns the `World`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":24561,"byte_end":24585,"line_start":115,"line_end":115,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":24590,"byte_end":24593,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ This will wait for the asynchronous systems to finish.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":24598,"byte_end":24656,"line_start":117,"line_end":117,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":24967,"byte_end":24974,"line_start":128,"line_end":128,"column_start":12,"column_end":19},"name":"mut_res","qualname":"<AsyncDispatcher>::mut_res","value":"pub fn mut_res(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Borrows the `World` mutably.","sig":null,"attributes":[{"value":"/ Borrows the `World` mutably.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":24737,"byte_end":24769,"line_start":122,"line_end":122,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":24774,"byte_end":24777,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This will wait for the asynchronous systems to finish.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":24782,"byte_end":24840,"line_start":124,"line_end":124,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":24845,"byte_end":24848,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Renamed to `self.world_mut()`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":24853,"byte_end":24887,"line_start":126,"line_end":126,"column_start":5,"column_end":39}},{"value":"deprecated(since = \"0.8.0\", note = \"renamed to `world_mut`\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":24892,"byte_end":24955,"line_start":127,"line_end":127,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":25161,"byte_end":25170,"line_start":135,"line_end":135,"column_start":12,"column_end":21},"name":"world_mut","qualname":"<AsyncDispatcher>::world_mut","value":"pub fn world_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Borrows the `World` mutably.","sig":null,"attributes":[{"value":"/ Borrows the `World` mutably.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":25046,"byte_end":25078,"line_start":132,"line_end":132,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":25083,"byte_end":25086,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This will wait for the asynchronous systems to finish.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":25091,"byte_end":25149,"line_start":134,"line_end":134,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1021},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":27296,"byte_end":27309,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"BatchAccessor","qualname":"::dispatch::batch::BatchAccessor","value":"BatchAccessor {  }","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1023}],"decl_id":null,"docs":" The `BatchAccessor` is used to notify the main dispatcher of the read and\n write resources of the `System`s contained in the batch (\"sub systems\").\n","sig":null,"attributes":[{"value":"/ The `BatchAccessor` is used to notify the main dispatcher of the read and","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":27113,"byte_end":27190,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ write resources of the `System`s contained in the batch (\"sub systems\").","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":27191,"byte_end":27267,"line_start":7,"line_end":7,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":27438,"byte_end":27441,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<BatchAccessor>::new","value":"pub fn new(Vec<ResourceId>, Vec<ResourceId>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BatchAccessor`\n","sig":null,"attributes":[{"value":"/ Creates a `BatchAccessor`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":27397,"byte_end":27426,"line_start":15,"line_end":15,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":27958,"byte_end":27977,"line_start":37,"line_end":37,"column_start":12,"column_end":31},"name":"BatchUncheckedWorld","qualname":"::dispatch::batch::BatchUncheckedWorld","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `BatchUncheckedWorld` wraps an instance of the world.\n You have to specify this as `SystemData` for a `System` implementing `BatchController`.\n","sig":null,"attributes":[{"value":"/ The `BatchUncheckedWorld` wraps an instance of the world.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":27793,"byte_end":27854,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/ You have to specify this as `SystemData` for a `System` implementing `BatchController`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":27855,"byte_end":27946,"line_start":36,"line_end":36,"column_start":1,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":27982,"byte_end":27995,"line_start":37,"line_end":37,"column_start":36,"column_end":49},"name":"0","qualname":"::dispatch::batch::BatchUncheckedWorld::0","value":"&'a world::World","parent":{"krate":0,"index":168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":28740,"byte_end":28755,"line_start":57,"line_end":57,"column_start":11,"column_end":26},"name":"BatchController","qualname":"::dispatch::batch::BatchController","value":"BatchController<'a, 'b>","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181}],"decl_id":null,"docs":" The `BatchController` is the additional trait that a normal System must\n implement in order to be used as a system controlling the execution of a batch.","sig":null,"attributes":[{"value":"/ The `BatchController` is the additional trait that a normal System must","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":28272,"byte_end":28347,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ implement in order to be used as a system controlling the execution of a batch.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":28348,"byte_end":28431,"line_start":50,"line_end":50,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":28432,"byte_end":28435,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Note that the `System` must also implement `Send` because the `Dispatcher`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":28436,"byte_end":28514,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"/ is by default un-send.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":28515,"byte_end":28541,"line_start":53,"line_end":53,"column_start":1,"column_end":27}},{"value":"/ The safety of implementing `Send` is ensured by `BatchAccessor` which keeps","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":28542,"byte_end":28621,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"/ tracks of all used resources and thus the `System` can be safely executed in","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":28622,"byte_end":28702,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ with multiple threads.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":28703,"byte_end":28729,"line_start":56,"line_end":56,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":29755,"byte_end":29770,"line_start":77,"line_end":77,"column_start":10,"column_end":25},"name":"BatchSystemData","qualname":"::dispatch::batch::BatchController::BatchSystemData","value":"type BatchSystemData: SystemData<'a>;","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" This associated type has to contain all resources batch controller uses directly.","sig":null,"attributes":[{"value":"/ This associated type has to contain all resources batch controller uses directly.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":28770,"byte_end":28855,"line_start":58,"line_end":58,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":28860,"byte_end":28863,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ These have to be specified here, instead of `SystemData` (as","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":28868,"byte_end":28932,"line_start":60,"line_end":60,"column_start":5,"column_end":69}},{"value":"/ a normal `System` does) because the sub `System`s can use the same `Resource`s","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":28937,"byte_end":29019,"line_start":61,"line_end":61,"column_start":5,"column_end":87}},{"value":"/ of the `BatchController`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":29024,"byte_end":29053,"line_start":62,"line_end":62,"column_start":5,"column_end":34}},{"value":"/ This make necessary to drop the references to the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":29058,"byte_end":29111,"line_start":63,"line_end":63,"column_start":5,"column_end":58}},{"value":"/ fetched `Resource`s in the batch controller before dispatching","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":29116,"byte_end":29182,"line_start":64,"line_end":64,"column_start":5,"column_end":71}},{"value":"/ the sub `System`s.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":29187,"byte_end":29209,"line_start":65,"line_end":65,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":29214,"byte_end":29217,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Now is easy to understand that specify the `BatchController`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":29222,"byte_end":29286,"line_start":67,"line_end":67,"column_start":5,"column_end":69}},{"value":"/ `Resource` in the `SystemData` doesn't allow to drop the reference","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":29291,"byte_end":29361,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ before the sub dispatching; resulting in `Panic`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":29366,"byte_end":29419,"line_start":69,"line_end":69,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":29424,"byte_end":29427,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ So this mechanism allows you to fetch safely the specified `Resource`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":29432,"byte_end":29505,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ in the `BatchController`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":29510,"byte_end":29539,"line_start":72,"line_end":72,"column_start":5,"column_end":34}},{"value":"/ The example \"examples/batch_dispatching.rs\" show how to use it.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":29544,"byte_end":29611,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":29616,"byte_end":29619,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that it's not required to specify the sub systems resources here","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":29624,"byte_end":29697,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ because they are handled automatically.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":29702,"byte_end":29745,"line_start":76,"line_end":76,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":30540,"byte_end":30546,"line_start":93,"line_end":93,"column_start":15,"column_end":21},"name":"create","qualname":"::dispatch::batch::BatchController::create","value":"pub unsafe fn create(BatchAccessor, Dispatcher) -> Self","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Creates an instance of the `BatchControllerSystem`.","sig":null,"attributes":[{"value":"/ Creates an instance of the `BatchControllerSystem`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":29793,"byte_end":29848,"line_start":79,"line_end":79,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":29853,"byte_end":29856,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Usually this function is called internally by the `DispatcherBuilder`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":29861,"byte_end":29934,"line_start":81,"line_end":81,"column_start":5,"column_end":78}},{"value":"/ which creates the `BatchAccessor` correctly.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":29939,"byte_end":29987,"line_start":82,"line_end":82,"column_start":5,"column_end":53}},{"value":"/ The `Dispatcher` is constructed by the user elsewhere and passed to the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":29992,"byte_end":30067,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ `DispatcherBuilder` through the functions `with_batch` or `add_batch` and","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":30072,"byte_end":30149,"line_start":84,"line_end":84,"column_start":5,"column_end":82}},{"value":"/ passed as argument to this function.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":30154,"byte_end":30194,"line_start":85,"line_end":85,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":30199,"byte_end":30202,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":30207,"byte_end":30219,"line_start":87,"line_end":87,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":30224,"byte_end":30227,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because an implementor of `BatchController` is expected","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":30232,"byte_end":30315,"line_start":89,"line_end":89,"column_start":5,"column_end":88}},{"value":"/ to uphold quarantees of `Send` only when it's created with","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":30320,"byte_end":30382,"line_start":90,"line_end":90,"column_start":5,"column_end":67}},{"value":"/ correctly constructed `BatchAccessor`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":30387,"byte_end":30429,"line_start":91,"line_end":91,"column_start":5,"column_end":47}},{"value":"/ `BatchAccessor` is meant for tracking which resourced are being used by the controller.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":30434,"byte_end":30525,"line_start":92,"line_end":92,"column_start":5,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":30984,"byte_end":31012,"line_start":104,"line_end":104,"column_start":12,"column_end":40},"name":"DefaultBatchControllerSystem","qualname":"::dispatch::batch::DefaultBatchControllerSystem","value":"DefaultBatchControllerSystem {  }","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186}],"decl_id":null,"docs":" The `DefaultBatchControllerSystem` is a simple implementation that will\n dispatch the inner dispatcher one time.","sig":null,"attributes":[{"value":"/ The `DefaultBatchControllerSystem` is a simple implementation that will","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":30616,"byte_end":30691,"line_start":96,"line_end":96,"column_start":1,"column_end":76}},{"value":"/ dispatch the inner dispatcher one time.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":30692,"byte_end":30735,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":30736,"byte_end":30739,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ Usually you want to create your own `Dispatcher`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":30740,"byte_end":30793,"line_start":99,"line_end":99,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":30794,"byte_end":30797,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ Is safe to implement `Send` and `Sync` because the `BatchAccessor` keep","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":30798,"byte_end":30873,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"/ tracks of all used resources and thus the `System` can be safely executed in","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":30874,"byte_end":30954,"line_start":102,"line_end":102,"column_start":1,"column_end":81}},{"value":"/ multi thread.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":30955,"byte_end":30972,"line_start":103,"line_end":103,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1026},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":45024,"byte_end":45041,"line_start":95,"line_end":95,"column_start":12,"column_end":29},"name":"DispatcherBuilder","qualname":"::dispatch::builder::DispatcherBuilder","value":"DispatcherBuilder {  }","parent":null,"children":[{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033}],"decl_id":null,"docs":" Builder for the [`Dispatcher`].","sig":null,"attributes":[{"value":"/ Builder for the [`Dispatcher`].","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":42774,"byte_end":42809,"line_start":16,"line_end":16,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":42810,"byte_end":42813,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`Dispatcher`]: struct.Dispatcher.html","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":42814,"byte_end":42856,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":42857,"byte_end":42860,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ## Barriers","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":42861,"byte_end":42876,"line_start":20,"line_end":20,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":42877,"byte_end":42880,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Barriers are a way of sequentializing parts of","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":42881,"byte_end":42931,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ the system execution. See `add_barrier()`/`with_barrier()`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":42932,"byte_end":42995,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":42996,"byte_end":42999,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43000,"byte_end":43015,"line_start":25,"line_end":25,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43016,"byte_end":43019,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This is how you create a dispatcher with","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43020,"byte_end":43064,"line_start":27,"line_end":27,"column_start":1,"column_end":45}},{"value":"/ a shared thread pool:","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43065,"byte_end":43090,"line_start":28,"line_end":28,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43091,"byte_end":43094,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43095,"byte_end":43106,"line_start":30,"line_end":30,"column_start":1,"column_end":12}},{"value":"/ # #![allow(unused)]","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43107,"byte_end":43130,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/ #","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43131,"byte_end":43136,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # extern crate shred;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43137,"byte_end":43162,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/ # #[macro_use]","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43163,"byte_end":43181,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/ # extern crate shred_derive;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43182,"byte_end":43214,"line_start":35,"line_end":35,"column_start":1,"column_end":33}},{"value":"/ # use shred::{Dispatcher, DispatcherBuilder, Read, ResourceId, World, System, SystemData};","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43215,"byte_end":43309,"line_start":36,"line_end":36,"column_start":1,"column_end":95}},{"value":"/ # #[derive(Debug, Default)] struct Res;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43310,"byte_end":43353,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"/ # #[derive(SystemData)] #[allow(unused)] struct Data<'a> { a: Read<'a, Res> }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43354,"byte_end":43435,"line_start":38,"line_end":38,"column_start":1,"column_end":82}},{"value":"/ # struct Dummy;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43436,"byte_end":43455,"line_start":39,"line_end":39,"column_start":1,"column_end":20}},{"value":"/ # impl<'a> System<'a> for Dummy {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43456,"byte_end":43493,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/ #   type SystemData = Data<'a>;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43494,"byte_end":43529,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/ #","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43530,"byte_end":43535,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ #   fn run(&mut self, _: Data<'a>) {}","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43536,"byte_end":43577,"line_start":43,"line_end":43,"column_start":1,"column_end":42}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43578,"byte_end":43585,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43586,"byte_end":43591,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43592,"byte_end":43609,"line_start":46,"line_end":46,"column_start":1,"column_end":18}},{"value":"/ # let system_a = Dummy;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43610,"byte_end":43637,"line_start":47,"line_end":47,"column_start":1,"column_end":28}},{"value":"/ # let system_b = Dummy;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43638,"byte_end":43665,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/ # let system_c = Dummy;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43666,"byte_end":43693,"line_start":49,"line_end":49,"column_start":1,"column_end":28}},{"value":"/ # let system_d = Dummy;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43694,"byte_end":43721,"line_start":50,"line_end":50,"column_start":1,"column_end":28}},{"value":"/ # let system_e = Dummy;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43722,"byte_end":43749,"line_start":51,"line_end":51,"column_start":1,"column_end":28}},{"value":"/ let dispatcher: Dispatcher = DispatcherBuilder::new()","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43750,"byte_end":43807,"line_start":52,"line_end":52,"column_start":1,"column_end":58}},{"value":"/     .with(system_a, \"a\", &[])","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43808,"byte_end":43841,"line_start":53,"line_end":53,"column_start":1,"column_end":34}},{"value":"/     .with(system_b, \"b\", &[\"a\"]) // b depends on a","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43842,"byte_end":43896,"line_start":54,"line_end":54,"column_start":1,"column_end":55}},{"value":"/     .with(system_c, \"c\", &[\"a\"]) // c also depends on a","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43897,"byte_end":43956,"line_start":55,"line_end":55,"column_start":1,"column_end":60}},{"value":"/     .with(system_d, \"d\", &[])","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43957,"byte_end":43990,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"/     .with(system_e, \"e\", &[\"c\", \"d\"]) // e executes after c and d are finished","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":43991,"byte_end":44073,"line_start":57,"line_end":57,"column_start":1,"column_end":83}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44074,"byte_end":44091,"line_start":58,"line_end":58,"column_start":1,"column_end":18}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44092,"byte_end":44099,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44100,"byte_end":44107,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44108,"byte_end":44111,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ Systems can be conditionally added by using the `add_` functions:","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44112,"byte_end":44181,"line_start":62,"line_end":62,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44182,"byte_end":44185,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44186,"byte_end":44197,"line_start":64,"line_end":64,"column_start":1,"column_end":12}},{"value":"/ # #![allow(unused)]","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44198,"byte_end":44221,"line_start":65,"line_end":65,"column_start":1,"column_end":24}},{"value":"/ #","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44222,"byte_end":44227,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/ # extern crate shred;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44228,"byte_end":44253,"line_start":67,"line_end":67,"column_start":1,"column_end":26}},{"value":"/ # #[macro_use]","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44254,"byte_end":44272,"line_start":68,"line_end":68,"column_start":1,"column_end":19}},{"value":"/ # extern crate shred_derive;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44273,"byte_end":44305,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/ # use shred::{Dispatcher, DispatcherBuilder, Read, ResourceId, World, System, SystemData};","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44306,"byte_end":44400,"line_start":70,"line_end":70,"column_start":1,"column_end":95}},{"value":"/ # #[derive(Debug, Default)] struct Res;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44401,"byte_end":44444,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/ # #[derive(SystemData)] #[allow(unused)] struct Data<'a> { a: Read<'a, Res> }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44445,"byte_end":44526,"line_start":72,"line_end":72,"column_start":1,"column_end":82}},{"value":"/ # struct Dummy;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44527,"byte_end":44546,"line_start":73,"line_end":73,"column_start":1,"column_end":20}},{"value":"/ # impl<'a> System<'a> for Dummy {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44547,"byte_end":44584,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/ #   type SystemData = Data<'a>;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44585,"byte_end":44620,"line_start":75,"line_end":75,"column_start":1,"column_end":36}},{"value":"/ #","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44621,"byte_end":44626,"line_start":76,"line_end":76,"column_start":1,"column_end":6}},{"value":"/ #   fn run(&mut self, _: Data<'a>) {}","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44627,"byte_end":44668,"line_start":77,"line_end":77,"column_start":1,"column_end":42}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44669,"byte_end":44676,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44677,"byte_end":44682,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44683,"byte_end":44700,"line_start":80,"line_end":80,"column_start":1,"column_end":18}},{"value":"/ # let b_enabled = true;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44701,"byte_end":44728,"line_start":81,"line_end":81,"column_start":1,"column_end":28}},{"value":"/ # let system_a = Dummy;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44729,"byte_end":44756,"line_start":82,"line_end":82,"column_start":1,"column_end":28}},{"value":"/ # let system_b = Dummy;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44757,"byte_end":44784,"line_start":83,"line_end":83,"column_start":1,"column_end":28}},{"value":"/ let mut builder = DispatcherBuilder::new()","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44785,"byte_end":44831,"line_start":84,"line_end":84,"column_start":1,"column_end":47}},{"value":"/     .with(system_a, \"a\", &[]);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44832,"byte_end":44866,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44867,"byte_end":44870,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ if b_enabled {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44871,"byte_end":44889,"line_start":87,"line_end":87,"column_start":1,"column_end":19}},{"value":"/    builder.add(system_b, \"b\", &[]);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44890,"byte_end":44929,"line_start":88,"line_end":88,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44930,"byte_end":44935,"line_start":89,"line_end":89,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44936,"byte_end":44939,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ let dispatcher = builder.build();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44940,"byte_end":44977,"line_start":91,"line_end":91,"column_start":1,"column_end":38}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44978,"byte_end":44985,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":44986,"byte_end":44993,"line_start":93,"line_end":93,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":45662,"byte_end":45665,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"new","qualname":"<DispatcherBuilder>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `DispatcherBuilder` by using the `Default` implementation.","sig":null,"attributes":[{"value":"/ Creates a new `DispatcherBuilder` by using the `Default` implementation.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":45352,"byte_end":45428,"line_start":105,"line_end":105,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":45433,"byte_end":45436,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The default behaviour is to create a thread pool on `finish`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":45441,"byte_end":45506,"line_start":107,"line_end":107,"column_start":5,"column_end":70}},{"value":"/ If you already have a rayon `ThreadPool`, it's highly recommended to","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":45511,"byte_end":45583,"line_start":108,"line_end":108,"column_start":5,"column_end":77}},{"value":"/ configure this builder to use it with `with_pool` instead.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":45588,"byte_end":45650,"line_start":109,"line_end":109,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":46372,"byte_end":46376,"line_start":129,"line_end":129,"column_start":12,"column_end":16},"name":"with","qualname":"<DispatcherBuilder>::with","value":"pub fn with<T>(Self, T, &str, &[&str]) -> Self where T: for<'c> System +\nSend + 'a","parent":null,"children":[],"decl_id":null,"docs":" Adds a new system with a given name and a list of dependencies.\n Please note that the dependency should be added before\n you add the depending system.","sig":null,"attributes":[{"value":"/ Adds a new system with a given name and a list of dependencies.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":45716,"byte_end":45783,"line_start":114,"line_end":114,"column_start":5,"column_end":72}},{"value":"/ Please note that the dependency should be added before","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":45788,"byte_end":45846,"line_start":115,"line_end":115,"column_start":5,"column_end":63}},{"value":"/ you add the depending system.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":45851,"byte_end":45884,"line_start":116,"line_end":116,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":45889,"byte_end":45892,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ If you want to register systems which can not be specified as","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":45897,"byte_end":45962,"line_start":118,"line_end":118,"column_start":5,"column_end":70}},{"value":"/ dependencies, you can use `\"\"` as their name, which will not panic","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":45967,"byte_end":46037,"line_start":119,"line_end":119,"column_start":5,"column_end":75}},{"value":"/ (using another name twice will).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":46042,"byte_end":46078,"line_start":120,"line_end":120,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":46083,"byte_end":46086,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Same as [`add()`](struct.DispatcherBuilder.html#method.add), but","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":46091,"byte_end":46159,"line_start":122,"line_end":122,"column_start":5,"column_end":73}},{"value":"/ returns `self` to enable method chaining.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":46164,"byte_end":46209,"line_start":123,"line_end":123,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":46214,"byte_end":46217,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":46222,"byte_end":46234,"line_start":125,"line_end":125,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":46239,"byte_end":46242,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ * if the specified dependency does not exist","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":46247,"byte_end":46295,"line_start":127,"line_end":127,"column_start":5,"column_end":53}},{"value":"/ * if a system with the same name was already registered.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":46300,"byte_end":46360,"line_start":128,"line_end":128,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":47081,"byte_end":47084,"line_start":150,"line_end":150,"column_start":12,"column_end":15},"name":"add","qualname":"<DispatcherBuilder>::add","value":"pub fn add<T>(&mut Self, T, &str, &[&str]) where T: for<'c> System + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Adds a new system with a given name and a list of dependencies.\n Please note that the dependency should be added before\n you add the depending system.","sig":null,"attributes":[{"value":"/ Adds a new system with a given name and a list of dependencies.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":46556,"byte_end":46623,"line_start":138,"line_end":138,"column_start":5,"column_end":72}},{"value":"/ Please note that the dependency should be added before","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":46628,"byte_end":46686,"line_start":139,"line_end":139,"column_start":5,"column_end":63}},{"value":"/ you add the depending system.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":46691,"byte_end":46724,"line_start":140,"line_end":140,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":46729,"byte_end":46732,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ If you want to register systems which can not be specified as","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":46737,"byte_end":46802,"line_start":142,"line_end":142,"column_start":5,"column_end":70}},{"value":"/ dependencies, you can use `\"\"` as their name, which will not panic","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":46807,"byte_end":46877,"line_start":143,"line_end":143,"column_start":5,"column_end":75}},{"value":"/ (using another name twice will).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":46882,"byte_end":46918,"line_start":144,"line_end":144,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":46923,"byte_end":46926,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":46931,"byte_end":46943,"line_start":146,"line_end":146,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":46948,"byte_end":46951,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ * if the specified dependency does not exist","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":46956,"byte_end":47004,"line_start":148,"line_end":148,"column_start":5,"column_end":53}},{"value":"/ * if a system with the same name was already registered.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":47009,"byte_end":47069,"line_start":149,"line_end":149,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":48897,"byte_end":48907,"line_start":200,"line_end":200,"column_start":12,"column_end":22},"name":"with_batch","qualname":"<DispatcherBuilder>::with_batch","value":"pub fn with_batch<T>(Self, DispatcherBuilder, &str, &[&str]) -> Self where\nT: for<'c> System + BatchController + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" The `Batch` is a `System` which contains a `Dispatcher`.\n By wrapping a `Dispatcher` inside a system, we can control the execution\n of a whole group of system, without sacrificing parallelism or\n conciseness.","sig":null,"attributes":[{"value":"/ The `Batch` is a `System` which contains a `Dispatcher`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":47944,"byte_end":48004,"line_start":182,"line_end":182,"column_start":5,"column_end":65}},{"value":"/ By wrapping a `Dispatcher` inside a system, we can control the execution","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":48009,"byte_end":48085,"line_start":183,"line_end":183,"column_start":5,"column_end":81}},{"value":"/ of a whole group of system, without sacrificing parallelism or","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":48090,"byte_end":48156,"line_start":184,"line_end":184,"column_start":5,"column_end":71}},{"value":"/ conciseness.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":48161,"byte_end":48177,"line_start":185,"line_end":185,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":48182,"byte_end":48185,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This function accepts the `DispatcherBuilder` as parameter, and the type","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":48190,"byte_end":48266,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ of the `System` that will drive the execution of the internal","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":48271,"byte_end":48336,"line_start":188,"line_end":188,"column_start":5,"column_end":70}},{"value":"/ dispatcher.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":48341,"byte_end":48356,"line_start":189,"line_end":189,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":48361,"byte_end":48364,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Note that depending on the dependencies of the SubSystems the Batch","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":48369,"byte_end":48440,"line_start":191,"line_end":191,"column_start":5,"column_end":76}},{"value":"/ can run in parallel with other Systems.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":48445,"byte_end":48488,"line_start":192,"line_end":192,"column_start":5,"column_end":48}},{"value":"/ In addition the Sub Systems can run in parallel within the Batch.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":48493,"byte_end":48562,"line_start":193,"line_end":193,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":48567,"byte_end":48570,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ The `Dispatcher` created for this `Batch` is completelly separate,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":48575,"byte_end":48645,"line_start":195,"line_end":195,"column_start":5,"column_end":75}},{"value":"/ from the parent `Dispatcher`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":48650,"byte_end":48683,"line_start":196,"line_end":196,"column_start":5,"column_end":38}},{"value":"/ This mean that the dependencies, the `System` names, etc.. specified on","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":48688,"byte_end":48763,"line_start":197,"line_end":197,"column_start":5,"column_end":80}},{"value":"/ the `Batch` `Dispatcher` are not visible on the parent, and is not","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":48768,"byte_end":48838,"line_start":198,"line_end":198,"column_start":5,"column_end":75}},{"value":"/ allowed to specify cross dependencies.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":48843,"byte_end":48885,"line_start":199,"line_end":199,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":50164,"byte_end":50173,"line_start":232,"line_end":232,"column_start":12,"column_end":21},"name":"add_batch","qualname":"<DispatcherBuilder>::add_batch","value":"pub fn add_batch<T>(&mut Self, DispatcherBuilder, &str, &[&str]) where\nT: for<'c> System + BatchController + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" The `Batch` is a `System` which contains a `Dispatcher`.\n By wrapping a `Dispatcher` inside a system, we can control the execution\n of a whole group of system, without sacrificing parallelism or\n conciseness.","sig":null,"attributes":[{"value":"/ The `Batch` is a `System` which contains a `Dispatcher`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":49211,"byte_end":49271,"line_start":214,"line_end":214,"column_start":5,"column_end":65}},{"value":"/ By wrapping a `Dispatcher` inside a system, we can control the execution","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":49276,"byte_end":49352,"line_start":215,"line_end":215,"column_start":5,"column_end":81}},{"value":"/ of a whole group of system, without sacrificing parallelism or","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":49357,"byte_end":49423,"line_start":216,"line_end":216,"column_start":5,"column_end":71}},{"value":"/ conciseness.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":49428,"byte_end":49444,"line_start":217,"line_end":217,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":49449,"byte_end":49452,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ This function accepts the `DispatcherBuilder` as parameter, and the type","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":49457,"byte_end":49533,"line_start":219,"line_end":219,"column_start":5,"column_end":81}},{"value":"/ of the `System` that will drive the execution of the internal","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":49538,"byte_end":49603,"line_start":220,"line_end":220,"column_start":5,"column_end":70}},{"value":"/ dispatcher.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":49608,"byte_end":49623,"line_start":221,"line_end":221,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":49628,"byte_end":49631,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Note that depending on the dependencies of the SubSystems the Batch","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":49636,"byte_end":49707,"line_start":223,"line_end":223,"column_start":5,"column_end":76}},{"value":"/ can run in parallel with other Systems.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":49712,"byte_end":49755,"line_start":224,"line_end":224,"column_start":5,"column_end":48}},{"value":"/ In addition the Sub Systems can run in parallel within the Batch.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":49760,"byte_end":49829,"line_start":225,"line_end":225,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":49834,"byte_end":49837,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ The `Dispatcher` created for this `Batch` is completelly separate,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":49842,"byte_end":49912,"line_start":227,"line_end":227,"column_start":5,"column_end":75}},{"value":"/ from the parent `Dispatcher`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":49917,"byte_end":49950,"line_start":228,"line_end":228,"column_start":5,"column_end":38}},{"value":"/ This mean that the dependencies, the `System` names, etc.. specified on","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":49955,"byte_end":50030,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ the `Batch` `Dispatcher` are not visible on the parent, and is not","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":50035,"byte_end":50105,"line_start":230,"line_end":230,"column_start":5,"column_end":75}},{"value":"/ allowed to specify cross dependencies.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":50110,"byte_end":50152,"line_start":231,"line_end":231,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":51441,"byte_end":51458,"line_start":271,"line_end":271,"column_start":12,"column_end":29},"name":"with_thread_local","qualname":"<DispatcherBuilder>::with_thread_local","value":"pub fn with_thread_local<T>(Self, T) -> Self where T: for<'c> RunNow + 'b","parent":null,"children":[],"decl_id":null,"docs":" Adds a new thread local system.","sig":null,"attributes":[{"value":"/ Adds a new thread local system.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":51137,"byte_end":51172,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":51177,"byte_end":51180,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ Please only use this if your struct is not `Send` and `Sync`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":51185,"byte_end":51250,"line_start":265,"line_end":265,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":51255,"byte_end":51258,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ Thread-local systems are dispatched in-order.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":51263,"byte_end":51312,"line_start":267,"line_end":267,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":51317,"byte_end":51320,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ Same as [DispatcherBuilder::add_thread_local], but returns `self` to","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":51325,"byte_end":51397,"line_start":269,"line_end":269,"column_start":5,"column_end":77}},{"value":"/ enable method chaining.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":51402,"byte_end":51429,"line_start":270,"line_end":270,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":51794,"byte_end":51810,"line_start":285,"line_end":285,"column_start":12,"column_end":28},"name":"add_thread_local","qualname":"<DispatcherBuilder>::add_thread_local","value":"pub fn add_thread_local<T>(&mut Self, T) where T: for<'c> RunNow + 'b","parent":null,"children":[],"decl_id":null,"docs":" Adds a new thread local system.","sig":null,"attributes":[{"value":"/ Adds a new thread local system.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":51607,"byte_end":51642,"line_start":280,"line_end":280,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":51647,"byte_end":51650,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Please only use this if your struct is not `Send` and `Sync`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":51655,"byte_end":51720,"line_start":282,"line_end":282,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":51725,"byte_end":51728,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ Thread-local systems are dispatched in-order.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":51733,"byte_end":51782,"line_start":284,"line_end":284,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":52451,"byte_end":52463,"line_start":304,"line_end":304,"column_start":12,"column_end":24},"name":"with_barrier","qualname":"<DispatcherBuilder>::with_barrier","value":"pub fn with_barrier(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inserts a barrier which assures that all systems\n added before the barrier are executed before the ones\n after this barrier.","sig":null,"attributes":[{"value":"/ Inserts a barrier which assures that all systems","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":51949,"byte_end":52001,"line_start":292,"line_end":292,"column_start":5,"column_end":57}},{"value":"/ added before the barrier are executed before the ones","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":52006,"byte_end":52063,"line_start":293,"line_end":293,"column_start":5,"column_end":62}},{"value":"/ after this barrier.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":52068,"byte_end":52091,"line_start":294,"line_end":294,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":52096,"byte_end":52099,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ Does nothing if there were no systems added","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":52104,"byte_end":52151,"line_start":296,"line_end":296,"column_start":5,"column_end":52}},{"value":"/ since the last call to `add_barrier()`/`with_barrier()`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":52156,"byte_end":52216,"line_start":297,"line_end":297,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":52221,"byte_end":52224,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ Thread-local systems are not affected by barriers;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":52229,"byte_end":52283,"line_start":299,"line_end":299,"column_start":5,"column_end":59}},{"value":"/ they're always executed at the end.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":52288,"byte_end":52327,"line_start":300,"line_end":300,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":52332,"byte_end":52335,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ Same as [DispatcherBuilder::add_barrier], but returns `self` to enable","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":52340,"byte_end":52414,"line_start":302,"line_end":302,"column_start":5,"column_end":79}},{"value":"/ method chaining.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":52419,"byte_end":52439,"line_start":303,"line_end":303,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":52927,"byte_end":52938,"line_start":319,"line_end":319,"column_start":12,"column_end":23},"name":"add_barrier","qualname":"<DispatcherBuilder>::add_barrier","value":"pub fn add_barrier(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Inserts a barrier which assures that all systems\n added before the barrier are executed before the ones\n after this barrier.","sig":null,"attributes":[{"value":"/ Inserts a barrier which assures that all systems","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":52537,"byte_end":52589,"line_start":310,"line_end":310,"column_start":5,"column_end":57}},{"value":"/ added before the barrier are executed before the ones","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":52594,"byte_end":52651,"line_start":311,"line_end":311,"column_start":5,"column_end":62}},{"value":"/ after this barrier.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":52656,"byte_end":52679,"line_start":312,"line_end":312,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":52684,"byte_end":52687,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ Does nothing if there were no systems added","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":52692,"byte_end":52739,"line_start":314,"line_end":314,"column_start":5,"column_end":52}},{"value":"/ since the last call to `add_barrier()`/`with_barrier()`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":52744,"byte_end":52804,"line_start":315,"line_end":315,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":52809,"byte_end":52812,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ Thread-local systems are not affected by barriers;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":52817,"byte_end":52871,"line_start":317,"line_end":317,"column_start":5,"column_end":59}},{"value":"/ they're always executed at the end.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":52876,"byte_end":52915,"line_start":318,"line_end":318,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":53291,"byte_end":53300,"line_start":330,"line_end":330,"column_start":12,"column_end":21},"name":"with_pool","qualname":"<DispatcherBuilder>::with_pool","value":"pub fn with_pool(Self, ::std::sync::Arc<::rayon::ThreadPool>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Attach a rayon thread pool to the builder\n and use that instead of creating one.","sig":null,"attributes":[{"value":"/ Attach a rayon thread pool to the builder","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":53006,"byte_end":53051,"line_start":323,"line_end":323,"column_start":5,"column_end":50}},{"value":"/ and use that instead of creating one.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":53056,"byte_end":53097,"line_start":324,"line_end":324,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":53102,"byte_end":53105,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ Same as","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":53110,"byte_end":53121,"line_start":326,"line_end":326,"column_start":5,"column_end":16}},{"value":"/ [`add_pool()`](struct.DispatcherBuilder.html#method.add_pool),","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":53126,"byte_end":53192,"line_start":327,"line_end":327,"column_start":5,"column_end":71}},{"value":"/ but returns `self` to enable method chaining.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":53197,"byte_end":53246,"line_start":328,"line_end":328,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"parallel\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":53251,"byte_end":53279,"line_start":329,"line_end":329,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":53556,"byte_end":53564,"line_start":339,"line_end":339,"column_start":12,"column_end":20},"name":"add_pool","qualname":"<DispatcherBuilder>::add_pool","value":"pub fn add_pool(&mut Self, ::std::sync::Arc<::rayon::ThreadPool>)","parent":null,"children":[],"decl_id":null,"docs":" Attach a rayon thread pool to the builder\n and use that instead of creating one.\n","sig":null,"attributes":[{"value":"/ Attach a rayon thread pool to the builder","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":53420,"byte_end":53465,"line_start":336,"line_end":336,"column_start":5,"column_end":50}},{"value":"/ and use that instead of creating one.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":53470,"byte_end":53511,"line_start":337,"line_end":337,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"parallel\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":53516,"byte_end":53544,"line_start":338,"line_end":338,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":53879,"byte_end":53892,"line_start":346,"line_end":346,"column_start":12,"column_end":25},"name":"print_par_seq","qualname":"<DispatcherBuilder>::print_par_seq","value":"pub fn print_par_seq(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Prints the equivalent system graph\n that can be easily used to get the graph using the `seq!` and `par!`\n macros. This is only recommended for advanced users.\n","sig":null,"attributes":[{"value":"/ Prints the equivalent system graph","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":53691,"byte_end":53729,"line_start":343,"line_end":343,"column_start":5,"column_end":43}},{"value":"/ that can be easily used to get the graph using the `seq!` and `par!`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":53734,"byte_end":53806,"line_start":344,"line_end":344,"column_start":5,"column_end":77}},{"value":"/ macros. This is only recommended for advanced users.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":53811,"byte_end":53867,"line_start":345,"line_end":345,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":54114,"byte_end":54119,"line_start":355,"line_end":355,"column_start":12,"column_end":17},"name":"build","qualname":"<DispatcherBuilder>::build","value":"pub fn build(Self) -> Dispatcher","parent":null,"children":[],"decl_id":null,"docs":" Builds the `Dispatcher`.","sig":null,"attributes":[{"value":"/ Builds the `Dispatcher`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":53946,"byte_end":53974,"line_start":350,"line_end":350,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":53979,"byte_end":53982,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ In the future, this method will","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":53987,"byte_end":54022,"line_start":352,"line_end":352,"column_start":5,"column_end":40}},{"value":"/ precompute useful information in","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":54027,"byte_end":54063,"line_start":353,"line_end":353,"column_start":5,"column_end":41}},{"value":"/ order to speed up dispatching.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":54068,"byte_end":54102,"line_start":354,"line_end":354,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":55399,"byte_end":55410,"line_start":403,"line_end":403,"column_start":12,"column_end":23},"name":"build_async","qualname":"<DispatcherBuilder>::build_async","value":"pub fn build_async<R>(Self, R)\n-> crate::dispatch::async_dispatcher::AsyncDispatcher","parent":null,"children":[],"decl_id":null,"docs":" Builds an async dispatcher.","sig":null,"attributes":[{"value":"/ Builds an async dispatcher.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":55224,"byte_end":55255,"line_start":399,"line_end":399,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":55260,"byte_end":55263,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ It does not allow non-static types and accepts a `World` struct or a","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":55268,"byte_end":55340,"line_start":401,"line_end":401,"column_start":5,"column_end":77}},{"value":"/ value that can be borrowed as `World`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":55345,"byte_end":55387,"line_start":402,"line_end":402,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":56446,"byte_end":56456,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"Dispatcher","qualname":"::dispatch::dispatcher::Dispatcher","value":"Dispatcher {  }","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277}],"decl_id":null,"docs":" The dispatcher struct, allowing\n systems to be executed in parallel.\n","sig":null,"attributes":[{"value":"/ The dispatcher struct, allowing","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":56359,"byte_end":56394,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"/ systems to be executed in parallel.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":56395,"byte_end":56434,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":56801,"byte_end":56806,"line_start":22,"line_end":22,"column_start":12,"column_end":17},"name":"setup","qualname":"<Dispatcher>::setup","value":"pub fn setup(&mut Self, &mut World)","parent":null,"children":[],"decl_id":null,"docs":" Sets up all the systems which means they are gonna add default values\n for the resources they need.\n","sig":null,"attributes":[{"value":"/ Sets up all the systems which means they are gonna add default values","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":56679,"byte_end":56752,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ for the resources they need.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":56757,"byte_end":56789,"line_start":21,"line_end":21,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":57271,"byte_end":57278,"line_start":36,"line_end":36,"column_start":12,"column_end":19},"name":"dispose","qualname":"<Dispatcher>::dispose","value":"pub fn dispose(Self, &mut World)","parent":null,"children":[],"decl_id":null,"docs":" Calls the `dispose` method of all systems and allows them to release\n external resources. It is common this method removes components and\n / or resources from the `World` which are associated with external\n resources.\n","sig":null,"attributes":[{"value":"/ Calls the `dispose` method of all systems and allows them to release","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":57017,"byte_end":57089,"line_start":32,"line_end":32,"column_start":5,"column_end":77}},{"value":"/ external resources. It is common this method removes components and","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":57094,"byte_end":57165,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ / or resources from the `World` which are associated with external","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":57170,"byte_end":57240,"line_start":34,"line_end":34,"column_start":5,"column_end":75}},{"value":"/ resources.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":57245,"byte_end":57259,"line_start":35,"line_end":35,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":57960,"byte_end":57968,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"dispatch","qualname":"<Dispatcher>::dispatch","value":"pub fn dispatch(&mut Self, &World)","parent":null,"children":[],"decl_id":null,"docs":" Dispatch all the systems with given resources and context\n and then run thread local systems.","sig":null,"attributes":[{"value":"/ Dispatch all the systems with given resources and context","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":57478,"byte_end":57539,"line_start":46,"line_end":46,"column_start":5,"column_end":66}},{"value":"/ and then run thread local systems.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":57544,"byte_end":57582,"line_start":47,"line_end":47,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":57587,"byte_end":57590,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This function automatically redirects to","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":57595,"byte_end":57639,"line_start":49,"line_end":49,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":57644,"byte_end":57647,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ * [Dispatcher::dispatch_par] in case it is supported","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":57652,"byte_end":57708,"line_start":51,"line_end":51,"column_start":5,"column_end":61}},{"value":"/ * [Dispatcher::dispatch_seq] otherwise","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":57713,"byte_end":57755,"line_start":52,"line_end":52,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":57760,"byte_end":57763,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ and runs `dispatch_thread_local` afterwards.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":57768,"byte_end":57816,"line_start":54,"line_end":54,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":57821,"byte_end":57824,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Please note that this method assumes that no resource","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":57829,"byte_end":57886,"line_start":56,"line_end":56,"column_start":5,"column_end":62}},{"value":"/ is currently borrowed. If that's the case, it panics.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":57891,"byte_end":57948,"line_start":57,"line_end":57,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":58620,"byte_end":58632,"line_start":79,"line_end":79,"column_start":12,"column_end":24},"name":"dispatch_par","qualname":"<Dispatcher>::dispatch_par","value":"pub fn dispatch_par(&mut Self, &World)","parent":null,"children":[],"decl_id":null,"docs":" Dispatches the systems (except thread local systems)\n in parallel given the resources to operate on.","sig":null,"attributes":[{"value":"/ Dispatches the systems (except thread local systems)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":58200,"byte_end":58256,"line_start":68,"line_end":68,"column_start":5,"column_end":61}},{"value":"/ in parallel given the resources to operate on.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":58261,"byte_end":58311,"line_start":69,"line_end":69,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":58316,"byte_end":58319,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ This operation blocks the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":58324,"byte_end":58353,"line_start":71,"line_end":71,"column_start":5,"column_end":34}},{"value":"/ executing thread.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":58358,"byte_end":58379,"line_start":72,"line_end":72,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":58384,"byte_end":58387,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Only available with \"parallel\" feature enabled.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":58392,"byte_end":58443,"line_start":74,"line_end":74,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":58448,"byte_end":58451,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Please note that this method assumes that no resource","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":58456,"byte_end":58513,"line_start":76,"line_end":76,"column_start":5,"column_end":62}},{"value":"/ is currently borrowed. If that's the case, it panics.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":58518,"byte_end":58575,"line_start":77,"line_end":77,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"parallel\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":58580,"byte_end":58608,"line_start":78,"line_end":78,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":59302,"byte_end":59314,"line_start":101,"line_end":101,"column_start":12,"column_end":24},"name":"dispatch_seq","qualname":"<Dispatcher>::dispatch_seq","value":"pub fn dispatch_seq(&mut Self, &World)","parent":null,"children":[],"decl_id":null,"docs":" Dispatches the systems (except thread local systems) sequentially.","sig":null,"attributes":[{"value":"/ Dispatches the systems (except thread local systems) sequentially.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":58968,"byte_end":59038,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":59043,"byte_end":59046,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ This is useful if parallel overhead is","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":59051,"byte_end":59093,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/ too big or the platform does not support multithreading.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":59098,"byte_end":59158,"line_start":97,"line_end":97,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":59163,"byte_end":59166,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Please note that this method assumes that no resource","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":59171,"byte_end":59228,"line_start":99,"line_end":99,"column_start":5,"column_end":62}},{"value":"/ is currently borrowed. If that's the case, it panics.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":59233,"byte_end":59290,"line_start":100,"line_end":100,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":59638,"byte_end":59659,"line_start":111,"line_end":111,"column_start":12,"column_end":33},"name":"dispatch_thread_local","qualname":"<Dispatcher>::dispatch_thread_local","value":"pub fn dispatch_thread_local(&mut Self, &World)","parent":null,"children":[],"decl_id":null,"docs":" Dispatch only thread local systems sequentially.","sig":null,"attributes":[{"value":"/ Dispatch only thread local systems sequentially.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":59442,"byte_end":59494,"line_start":107,"line_end":107,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":59499,"byte_end":59502,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Please note that this method assumes that no resource","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":59507,"byte_end":59564,"line_start":109,"line_end":109,"column_start":5,"column_end":62}},{"value":"/ is currently borrowed. If that's the case, it panics.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":59569,"byte_end":59626,"line_start":110,"line_end":110,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":60040,"byte_end":60051,"line_start":121,"line_end":121,"column_start":12,"column_end":23},"name":"max_threads","qualname":"<Dispatcher>::max_threads","value":"pub fn max_threads(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" This method returns the largest amount of threads this dispatcher\n can make use of. This is mainly for debugging purposes so you can see\n how well your systems can make use of multi-threading.\n","sig":null,"attributes":[{"value":"/ This method returns the largest amount of threads this dispatcher","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":59785,"byte_end":59854,"line_start":117,"line_end":117,"column_start":5,"column_end":74}},{"value":"/ can make use of. This is mainly for debugging purposes so you can see","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":59859,"byte_end":59932,"line_start":118,"line_end":118,"column_start":5,"column_end":78}},{"value":"/ how well your systems can make use of multi-threading.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":59937,"byte_end":59995,"line_start":119,"line_end":119,"column_start":5,"column_end":63}},{"value":"cfg(feature = \"parallel\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":60000,"byte_end":60028,"line_start":120,"line_end":120,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":63282,"byte_end":63285,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"Nil","qualname":"::dispatch::par_seq::Nil","value":"","parent":null,"children":[],"decl_id":null,"docs":" The \"leave node\" for the `Par` / `Seq` list.\n","sig":null,"attributes":[{"value":"/ The \"leave node\" for the `Par` / `Seq` list.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":63222,"byte_end":63270,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":64773,"byte_end":64776,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"Par","qualname":"::dispatch::par_seq::Par","value":"Par {  }","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331}],"decl_id":null,"docs":" Runs two tasks in parallel.\n These two tasks are called `head` and `tail`\n in the following documentation.\n","sig":null,"attributes":[{"value":"/ Runs two tasks in parallel.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":64645,"byte_end":64676,"line_start":77,"line_end":77,"column_start":1,"column_end":32}},{"value":"/ These two tasks are called `head` and `tail`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":64677,"byte_end":64725,"line_start":78,"line_end":78,"column_start":1,"column_end":49}},{"value":"/ in the following documentation.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":64726,"byte_end":64761,"line_start":79,"line_end":79,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":64912,"byte_end":64915,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"new","qualname":"<Par<H, Nil>>::new","value":"pub fn new(H) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Par` struct, with the tail being a no-op.\n","sig":null,"attributes":[{"value":"/ Creates a new `Par` struct, with the tail being a no-op.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":64840,"byte_end":64900,"line_start":86,"line_end":86,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":65112,"byte_end":65116,"line_start":93,"line_end":93,"column_start":12,"column_end":16},"name":"with","qualname":"<Par<H, Nil>>::with","value":"pub fn with<T>(Self, T) -> Par<Par<H, T>, Nil> where H: for<'a> RunWithPool,\nT: for<'a> RunWithPool","parent":null,"children":[],"decl_id":null,"docs":" Adds `sys` as the second job and returns a new `Par` struct\n with the previous struct as head and a no-op tail.\n","sig":null,"attributes":[{"value":"/ Adds `sys` as the second job and returns a new `Par` struct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":64978,"byte_end":65041,"line_start":91,"line_end":91,"column_start":5,"column_end":68}},{"value":"/ with the previous struct as head and a no-op tail.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":65046,"byte_end":65100,"line_start":92,"line_end":92,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":339},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":68244,"byte_end":68250,"line_start":205,"line_end":205,"column_start":12,"column_end":18},"name":"ParSeq","qualname":"::dispatch::par_seq::ParSeq","value":"ParSeq {  }","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343}],"decl_id":null,"docs":" A dispatcher intended to be used with\n `Par` and `Seq`  structures.","sig":null,"attributes":[{"value":"/ A dispatcher intended to be used with","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":66214,"byte_end":66255,"line_start":130,"line_end":130,"column_start":1,"column_end":42}},{"value":"/ `Par` and `Seq`  structures.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":66256,"byte_end":66288,"line_start":131,"line_end":131,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":66289,"byte_end":66292,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ This is more flexible and performant than `Dispatcher`,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":66293,"byte_end":66352,"line_start":133,"line_end":133,"column_start":1,"column_end":60}},{"value":"/ however, you have to check conflicts yourself.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":66353,"byte_end":66403,"line_start":134,"line_end":134,"column_start":1,"column_end":51}},{"value":"/ That means you cannot run two systems in parallel","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":66404,"byte_end":66457,"line_start":135,"line_end":135,"column_start":1,"column_end":54}},{"value":"/ which write to the same resource; if you'd do that,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":66458,"byte_end":66513,"line_start":136,"line_end":136,"column_start":1,"column_end":56}},{"value":"/ one of the systems will panic while trying to fetch","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":66514,"byte_end":66569,"line_start":137,"line_end":137,"column_start":1,"column_end":56}},{"value":"/ the `SystemData`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":66570,"byte_end":66591,"line_start":138,"line_end":138,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":66592,"byte_end":66595,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ## Thread-local systems","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":66596,"byte_end":66623,"line_start":140,"line_end":140,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":66624,"byte_end":66627,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ This dispatcher also allows more freedom","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":66628,"byte_end":66672,"line_start":142,"line_end":142,"column_start":1,"column_end":45}},{"value":"/ for thread-local systems; you can execute wherever you want,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":66673,"byte_end":66737,"line_start":143,"line_end":143,"column_start":1,"column_end":65}},{"value":"/ just not in parallel with other systems (putting one inside","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":66738,"byte_end":66801,"line_start":144,"line_end":144,"column_start":1,"column_end":64}},{"value":"/ `par!` will give you a compile-time error saying the `Send` requirement","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":66802,"byte_end":66877,"line_start":145,"line_end":145,"column_start":1,"column_end":76}},{"value":"/ is unmet).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":66878,"byte_end":66892,"line_start":146,"line_end":146,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":66893,"byte_end":66896,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":66897,"byte_end":66912,"line_start":148,"line_end":148,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":66913,"byte_end":66916,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":66917,"byte_end":66924,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"/ # extern crate rayon;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":66925,"byte_end":66950,"line_start":151,"line_end":151,"column_start":1,"column_end":26}},{"value":"/ #[macro_use(par, seq)]","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":66951,"byte_end":66977,"line_start":152,"line_end":152,"column_start":1,"column_end":27}},{"value":"/ extern crate shred;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":66978,"byte_end":67001,"line_start":153,"line_end":153,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67002,"byte_end":67005,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ # use rayon::ThreadPoolBuilder;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67006,"byte_end":67041,"line_start":155,"line_end":155,"column_start":1,"column_end":36}},{"value":"/ #","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67042,"byte_end":67047,"line_start":156,"line_end":156,"column_start":1,"column_end":6}},{"value":"/ # use shred::{ParSeq, World, System};","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67048,"byte_end":67089,"line_start":157,"line_end":157,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67090,"byte_end":67095,"line_start":158,"line_end":158,"column_start":1,"column_end":6}},{"value":"/ # macro_rules! impl_sys {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67096,"byte_end":67125,"line_start":159,"line_end":159,"column_start":1,"column_end":30}},{"value":"/ #     ($( $id:ident )*) => {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67126,"byte_end":67158,"line_start":160,"line_end":160,"column_start":1,"column_end":33}},{"value":"/ #         $(","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67159,"byte_end":67175,"line_start":161,"line_end":161,"column_start":1,"column_end":17}},{"value":"/ #             impl<'a> ::shred::System<'a> for $id {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67176,"byte_end":67232,"line_start":162,"line_end":162,"column_start":1,"column_end":57}},{"value":"/ #                 type SystemData = ();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67233,"byte_end":67276,"line_start":163,"line_end":163,"column_start":1,"column_end":44}},{"value":"/ #                 fn run(&mut self, _: Self::SystemData) {}","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67277,"byte_end":67340,"line_start":164,"line_end":164,"column_start":1,"column_end":64}},{"value":"/ #             }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67341,"byte_end":67360,"line_start":165,"line_end":165,"column_start":1,"column_end":20}},{"value":"/ #         )*","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67361,"byte_end":67377,"line_start":166,"line_end":166,"column_start":1,"column_end":17}},{"value":"/ #     };","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67378,"byte_end":67390,"line_start":167,"line_end":167,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67391,"byte_end":67398,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67399,"byte_end":67404,"line_start":169,"line_end":169,"column_start":1,"column_end":6}},{"value":"/ # struct SysA;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67405,"byte_end":67423,"line_start":170,"line_end":170,"column_start":1,"column_end":19}},{"value":"/ # struct SysB;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67424,"byte_end":67442,"line_start":171,"line_end":171,"column_start":1,"column_end":19}},{"value":"/ # struct SysC;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67443,"byte_end":67461,"line_start":172,"line_end":172,"column_start":1,"column_end":19}},{"value":"/ # struct SysD;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67462,"byte_end":67480,"line_start":173,"line_end":173,"column_start":1,"column_end":19}},{"value":"/ # struct SysWithLifetime<'a>(&'a u8);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67481,"byte_end":67522,"line_start":174,"line_end":174,"column_start":1,"column_end":42}},{"value":"/ # struct SysLocal(*const u8);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67523,"byte_end":67556,"line_start":175,"line_end":175,"column_start":1,"column_end":34}},{"value":"/ #","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67557,"byte_end":67562,"line_start":176,"line_end":176,"column_start":1,"column_end":6}},{"value":"/ # impl_sys!(SysA SysB SysC SysD SysLocal);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67563,"byte_end":67609,"line_start":177,"line_end":177,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67610,"byte_end":67615,"line_start":178,"line_end":178,"column_start":1,"column_end":6}},{"value":"/ # impl<'a, 'b> System<'a> for SysWithLifetime<'b> {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67616,"byte_end":67671,"line_start":179,"line_end":179,"column_start":1,"column_end":56}},{"value":"/ #     type SystemData = ();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67672,"byte_end":67703,"line_start":180,"line_end":180,"column_start":1,"column_end":32}},{"value":"/ #","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67704,"byte_end":67709,"line_start":181,"line_end":181,"column_start":1,"column_end":6}},{"value":"/ #     fn run(&mut self, _: Self::SystemData) {}","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67710,"byte_end":67761,"line_start":182,"line_end":182,"column_start":1,"column_end":52}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67762,"byte_end":67769,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67770,"byte_end":67773,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67774,"byte_end":67791,"line_start":185,"line_end":185,"column_start":1,"column_end":18}},{"value":"/ # #![cfg_attr(rustfmt, rustfmt_skip)]","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67792,"byte_end":67833,"line_start":186,"line_end":186,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67834,"byte_end":67839,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"/ # let pool = ThreadPoolBuilder::default().build().unwrap();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67840,"byte_end":67903,"line_start":188,"line_end":188,"column_start":1,"column_end":64}},{"value":"/ #","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67904,"byte_end":67909,"line_start":189,"line_end":189,"column_start":1,"column_end":6}},{"value":"/ # let mut world = World::empty();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67910,"byte_end":67947,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/ let x = 5u8;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67948,"byte_end":67964,"line_start":191,"line_end":191,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67965,"byte_end":67968,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ let mut dispatcher = ParSeq::new(","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":67969,"byte_end":68006,"line_start":193,"line_end":193,"column_start":1,"column_end":38}},{"value":"/     seq![","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":68007,"byte_end":68020,"line_start":194,"line_end":194,"column_start":1,"column_end":14}},{"value":"/         par![SysA, SysWithLifetime(&x), seq![SysC, SysD,],],","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":68021,"byte_end":68085,"line_start":195,"line_end":195,"column_start":1,"column_end":65}},{"value":"/         SysB,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":68086,"byte_end":68103,"line_start":196,"line_end":196,"column_start":1,"column_end":18}},{"value":"/         SysLocal(&x as *const u8),","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":68104,"byte_end":68142,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"/     ],","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":68143,"byte_end":68153,"line_start":198,"line_end":198,"column_start":1,"column_end":11}},{"value":"/     &pool,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":68154,"byte_end":68168,"line_start":199,"line_end":199,"column_start":1,"column_end":15}},{"value":"/ );","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":68169,"byte_end":68175,"line_start":200,"line_end":200,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":68176,"byte_end":68179,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ dispatcher.dispatch(&mut world);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":68180,"byte_end":68216,"line_start":202,"line_end":202,"column_start":1,"column_end":37}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":68217,"byte_end":68224,"line_start":203,"line_end":203,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":68225,"byte_end":68232,"line_start":204,"line_end":204,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":68510,"byte_end":68513,"line_start":218,"line_end":218,"column_start":12,"column_end":15},"name":"new","qualname":"<ParSeq<P, T>>::new","value":"pub fn new(T, P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ParSeq` dispatcher.\n `run` is usually created by using the `par!` / `seq!`\n macros.\n","sig":null,"attributes":[{"value":"/ Creates a new `ParSeq` dispatcher.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":68382,"byte_end":68420,"line_start":215,"line_end":215,"column_start":5,"column_end":43}},{"value":"/ `run` is usually created by using the `par!` / `seq!`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":68425,"byte_end":68482,"line_start":216,"line_end":216,"column_start":5,"column_end":62}},{"value":"/ macros.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":68487,"byte_end":68498,"line_start":217,"line_end":217,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":68719,"byte_end":68724,"line_start":224,"line_end":224,"column_start":12,"column_end":17},"name":"setup","qualname":"<ParSeq<P, T>>::setup","value":"pub fn setup(&mut Self, &mut World)","parent":null,"children":[],"decl_id":null,"docs":" Sets up `world` for `dispatch`ing. This will add default values for\n required resources by calling `System::setup`.\n","sig":null,"attributes":[{"value":"/ Sets up `world` for `dispatch`ing. This will add default values for","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":68581,"byte_end":68652,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ required resources by calling `System::setup`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":68657,"byte_end":68707,"line_start":223,"line_end":223,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":69033,"byte_end":69041,"line_start":233,"line_end":233,"column_start":12,"column_end":20},"name":"dispatch","qualname":"<ParSeq<P, T>>::dispatch","value":"pub fn dispatch(&mut Self, &World)","parent":null,"children":[],"decl_id":null,"docs":" Dispatches the systems using `world`.\n This doesn't call any virtual functions.","sig":null,"attributes":[{"value":"/ Dispatches the systems using `world`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":68799,"byte_end":68840,"line_start":228,"line_end":228,"column_start":5,"column_end":46}},{"value":"/ This doesn't call any virtual functions.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":68845,"byte_end":68889,"line_start":229,"line_end":229,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":68894,"byte_end":68897,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ Please note that this method assumes that no resource","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":68902,"byte_end":68959,"line_start":231,"line_end":231,"column_start":5,"column_end":62}},{"value":"/ is currently borrowed. If that's the case, it panics.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":68964,"byte_end":69021,"line_start":232,"line_end":232,"column_start":5,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":69565,"byte_end":69576,"line_start":254,"line_end":254,"column_start":11,"column_end":22},"name":"RunWithPool","qualname":"::dispatch::par_seq::RunWithPool","value":"RunWithPool<'a>","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363}],"decl_id":null,"docs":" Similar to `RunNow` except additionally taking in a rayon::ThreadPool\n for parallelism.\n","sig":null,"attributes":[{"value":"/ Similar to `RunNow` except additionally taking in a rayon::ThreadPool","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":69460,"byte_end":69533,"line_start":252,"line_end":252,"column_start":1,"column_end":74}},{"value":"/ for parallelism.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":69534,"byte_end":69554,"line_start":253,"line_end":253,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":69641,"byte_end":69646,"line_start":256,"line_end":256,"column_start":8,"column_end":13},"name":"setup","qualname":"::dispatch::par_seq::RunWithPool::setup","value":"pub fn setup(&mut Self, &mut World)","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" Sets up `World` for a later call to `run`.\n","sig":null,"attributes":[{"value":"/ Sets up `World` for a later call to `run`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":69587,"byte_end":69633,"line_start":255,"line_end":255,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":70072,"byte_end":70075,"line_start":267,"line_end":267,"column_start":8,"column_end":11},"name":"run","qualname":"::dispatch::par_seq::RunWithPool::run","value":"pub fn run(&mut Self, &'a World, &ThreadPool)","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" Runs the system/group of systems. Possibly in parallel depending\n on how the structure is set up.","sig":null,"attributes":[{"value":"/ Runs the system/group of systems. Possibly in parallel depending","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":69683,"byte_end":69751,"line_start":258,"line_end":258,"column_start":5,"column_end":73}},{"value":"/ on how the structure is set up.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":69756,"byte_end":69791,"line_start":259,"line_end":259,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":69796,"byte_end":69799,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":69804,"byte_end":69816,"line_start":261,"line_end":261,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":69821,"byte_end":69824,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Panics if the system tries to fetch resources","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":69829,"byte_end":69878,"line_start":263,"line_end":263,"column_start":5,"column_end":54}},{"value":"/ which are borrowed in an incompatible way already","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":69883,"byte_end":69936,"line_start":264,"line_end":264,"column_start":5,"column_end":58}},{"value":"/ (tries to read from a resource which is already written to or","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":69941,"byte_end":70006,"line_start":265,"line_end":265,"column_start":5,"column_end":70}},{"value":"/ tries to write to a resource which is read from).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":70011,"byte_end":70064,"line_start":266,"line_end":266,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":70229,"byte_end":70234,"line_start":271,"line_end":271,"column_start":8,"column_end":13},"name":"reads","qualname":"::dispatch::par_seq::RunWithPool::reads","value":"pub fn reads(&Self, &mut Vec<ResourceId>)","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" Accumulates the necessary read/shared resources from the\n systems in this group.\n","sig":null,"attributes":[{"value":"/ Accumulates the necessary read/shared resources from the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":70130,"byte_end":70190,"line_start":269,"line_end":269,"column_start":5,"column_end":65}},{"value":"/ systems in this group.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":70195,"byte_end":70221,"line_start":270,"line_end":270,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":70380,"byte_end":70386,"line_start":275,"line_end":275,"column_start":8,"column_end":14},"name":"writes","qualname":"::dispatch::par_seq::RunWithPool::writes","value":"pub fn writes(&Self, &mut Vec<ResourceId>)","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" Accumulates the necessary write/exclusive resources from the\n systems in this group.\n","sig":null,"attributes":[{"value":"/ Accumulates the necessary write/exclusive resources from the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":70277,"byte_end":70341,"line_start":273,"line_end":273,"column_start":5,"column_end":69}},{"value":"/ systems in this group.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":70346,"byte_end":70372,"line_start":274,"line_end":274,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":71960,"byte_end":71963,"line_start":341,"line_end":341,"column_start":12,"column_end":15},"name":"Seq","qualname":"::dispatch::par_seq::Seq","value":"Seq {  }","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387}],"decl_id":null,"docs":" Runs two tasks sequentially.\n These two tasks are called `head` and `tail`\n in the following documentation.\n","sig":null,"attributes":[{"value":"/ Runs two tasks sequentially.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":71831,"byte_end":71863,"line_start":338,"line_end":338,"column_start":1,"column_end":33}},{"value":"/ These two tasks are called `head` and `tail`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":71864,"byte_end":71912,"line_start":339,"line_end":339,"column_start":1,"column_end":49}},{"value":"/ in the following documentation.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":71913,"byte_end":71948,"line_start":340,"line_end":340,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":72099,"byte_end":72102,"line_start":348,"line_end":348,"column_start":12,"column_end":15},"name":"new","qualname":"<Seq<H, Nil>>::new","value":"pub fn new(H) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Seq` struct, with the tail being a no-op.\n","sig":null,"attributes":[{"value":"/ Creates a new `Seq` struct, with the tail being a no-op.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":72027,"byte_end":72087,"line_start":347,"line_end":347,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":72299,"byte_end":72303,"line_start":354,"line_end":354,"column_start":12,"column_end":16},"name":"with","qualname":"<Seq<H, Nil>>::with","value":"pub fn with<T>(Self, T) -> Seq<Seq<H, T>, Nil>","parent":null,"children":[],"decl_id":null,"docs":" Adds `sys` as the second job and returns a new `Seq` struct\n with the previous struct as head and a no-op tail.\n","sig":null,"attributes":[{"value":"/ Adds `sys` as the second job and returns a new `Seq` struct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":72165,"byte_end":72228,"line_start":352,"line_end":352,"column_start":5,"column_end":68}},{"value":"/ with the previous struct as head and a no-op tail.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":72233,"byte_end":72287,"line_start":353,"line_end":353,"column_start":5,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":498},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92930,"byte_end":92938,"line_start":49,"line_end":49,"column_start":18,"column_end":26},"name":"CastFrom","qualname":"::meta::CastFrom","value":"CastFrom<T>","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501}],"decl_id":null,"docs":" Helper trait for the `MetaTable`.\n This trait is required to be implemented for a trait to be compatible with\n the meta table.","sig":null,"attributes":[{"value":"/ Helper trait for the `MetaTable`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92227,"byte_end":92264,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/ This trait is required to be implemented for a trait to be compatible with","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92265,"byte_end":92343,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ the meta table.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92344,"byte_end":92363,"line_start":19,"line_end":19,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92364,"byte_end":92367,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Memory safety","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92368,"byte_end":92387,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92388,"byte_end":92391,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Not casting `self` but e.g. a field to the trait object can result in severe","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92392,"byte_end":92472,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ memory safety issues.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92473,"byte_end":92498,"line_start":24,"line_end":24,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92499,"byte_end":92502,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92503,"byte_end":92517,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92518,"byte_end":92521,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92522,"byte_end":92529,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ use shred::CastFrom;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92530,"byte_end":92554,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92555,"byte_end":92558,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ trait Foo {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92559,"byte_end":92574,"line_start":31,"line_end":31,"column_start":1,"column_end":16}},{"value":"/     fn foo1(&self);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92575,"byte_end":92598,"line_start":32,"line_end":32,"column_start":1,"column_end":24}},{"value":"/     fn foo2(&mut self, x: i32) -> i32;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92599,"byte_end":92641,"line_start":33,"line_end":33,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92642,"byte_end":92647,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92648,"byte_end":92651,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ unsafe impl<T> CastFrom<T> for dyn Foo","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92652,"byte_end":92694,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/ where","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92695,"byte_end":92704,"line_start":37,"line_end":37,"column_start":1,"column_end":10}},{"value":"/     T: Foo + 'static,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92705,"byte_end":92730,"line_start":38,"line_end":38,"column_start":1,"column_end":26}},{"value":"/ {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92731,"byte_end":92736,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     fn cast(t: &T) -> &(dyn Foo + 'static) {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92737,"byte_end":92785,"line_start":40,"line_end":40,"column_start":1,"column_end":49}},{"value":"/         t","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92786,"byte_end":92799,"line_start":41,"line_end":41,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92800,"byte_end":92809,"line_start":42,"line_end":42,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92810,"byte_end":92813,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     fn cast_mut(t: &mut T) -> &mut (dyn Foo + 'static) {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92814,"byte_end":92874,"line_start":44,"line_end":44,"column_start":1,"column_end":61}},{"value":"/         t","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92875,"byte_end":92888,"line_start":45,"line_end":45,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92889,"byte_end":92898,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92899,"byte_end":92904,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92905,"byte_end":92912,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":93011,"byte_end":93015,"line_start":51,"line_end":51,"column_start":8,"column_end":12},"name":"cast","qualname":"::meta::CastFrom::cast","value":"pub fn cast(&T) -> &Self","parent":{"krate":0,"index":498},"children":[],"decl_id":null,"docs":" Casts an immutable `T` reference to a trait object.\n","sig":null,"attributes":[{"value":"/ Casts an immutable `T` reference to a trait object.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92948,"byte_end":93003,"line_start":50,"line_end":50,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":93098,"byte_end":93106,"line_start":54,"line_end":54,"column_start":8,"column_end":16},"name":"cast_mut","qualname":"::meta::CastFrom::cast_mut","value":"pub fn cast_mut(&mut T) -> &mut Self","parent":{"krate":0,"index":498},"children":[],"decl_id":null,"docs":" Casts a mutable `T` reference to a trait object.\n","sig":null,"attributes":[{"value":"/ Casts a mutable `T` reference to a trait object.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":93038,"byte_end":93090,"line_start":53,"line_end":53,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":502},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":93183,"byte_end":93191,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"MetaIter","qualname":"::meta::MetaIter","value":"MetaIter {  }","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509}],"decl_id":null,"docs":" An iterator for the `MetaTable`.\n","sig":null,"attributes":[{"value":"/ An iterator for the `MetaTable`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":93135,"byte_end":93171,"line_start":57,"line_end":57,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":527},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":95019,"byte_end":95030,"line_start":123,"line_end":123,"column_start":12,"column_end":23},"name":"MetaIterMut","qualname":"::meta::MetaIterMut","value":"MetaIterMut {  }","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534}],"decl_id":null,"docs":" A mutable iterator for the `MetaTable`.\n","sig":null,"attributes":[{"value":"/ A mutable iterator for the `MetaTable`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":94964,"byte_end":95007,"line_start":122,"line_end":122,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":543},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97867,"byte_end":97876,"line_start":232,"line_end":232,"column_start":12,"column_end":21},"name":"MetaTable","qualname":"::meta::MetaTable","value":"MetaTable {  }","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548}],"decl_id":null,"docs":" The `MetaTable` which allows to store object-safe trait implementations for\n resources.","sig":null,"attributes":[{"value":"/ The `MetaTable` which allows to store object-safe trait implementations for","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96145,"byte_end":96224,"line_start":161,"line_end":161,"column_start":1,"column_end":80}},{"value":"/ resources.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96225,"byte_end":96239,"line_start":162,"line_end":162,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96240,"byte_end":96243,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ For example, you have a trait `Foo` that is implemented by several","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96244,"byte_end":96314,"line_start":164,"line_end":164,"column_start":1,"column_end":71}},{"value":"/ resources. You can register all the implementors using","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96315,"byte_end":96373,"line_start":165,"line_end":165,"column_start":1,"column_end":59}},{"value":"/ `MetaTable::register`. Later on, you can iterate over all resources that","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96374,"byte_end":96450,"line_start":166,"line_end":166,"column_start":1,"column_end":77}},{"value":"/ implement `Foo` without knowing their specific type.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96451,"byte_end":96507,"line_start":167,"line_end":167,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96508,"byte_end":96511,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96512,"byte_end":96526,"line_start":169,"line_end":169,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96527,"byte_end":96530,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96531,"byte_end":96538,"line_start":171,"line_end":171,"column_start":1,"column_end":8}},{"value":"/ use shred::{CastFrom, MetaTable, World};","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96539,"byte_end":96583,"line_start":172,"line_end":172,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96584,"byte_end":96587,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ trait Object {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96588,"byte_end":96606,"line_start":174,"line_end":174,"column_start":1,"column_end":19}},{"value":"/     fn method1(&self) -> i32;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96607,"byte_end":96640,"line_start":175,"line_end":175,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96641,"byte_end":96644,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/     fn method2(&mut self, x: i32);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96645,"byte_end":96683,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"/ }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96684,"byte_end":96689,"line_start":178,"line_end":178,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96690,"byte_end":96693,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ unsafe impl<T> CastFrom<T> for dyn Object","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96694,"byte_end":96739,"line_start":180,"line_end":180,"column_start":1,"column_end":46}},{"value":"/ where","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96740,"byte_end":96749,"line_start":181,"line_end":181,"column_start":1,"column_end":10}},{"value":"/     T: Object + 'static,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96750,"byte_end":96778,"line_start":182,"line_end":182,"column_start":1,"column_end":29}},{"value":"/ {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96779,"byte_end":96784,"line_start":183,"line_end":183,"column_start":1,"column_end":6}},{"value":"/     fn cast(t: &T) -> &Self {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96785,"byte_end":96818,"line_start":184,"line_end":184,"column_start":1,"column_end":34}},{"value":"/         t","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96819,"byte_end":96832,"line_start":185,"line_end":185,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96833,"byte_end":96842,"line_start":186,"line_end":186,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96843,"byte_end":96846,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/     fn cast_mut(t: &mut T) -> &mut Self {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96847,"byte_end":96892,"line_start":188,"line_end":188,"column_start":1,"column_end":46}},{"value":"/         t","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96893,"byte_end":96906,"line_start":189,"line_end":189,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96907,"byte_end":96916,"line_start":190,"line_end":190,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96917,"byte_end":96922,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96923,"byte_end":96926,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ struct ImplementorA(i32);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96927,"byte_end":96956,"line_start":193,"line_end":193,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96957,"byte_end":96960,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ impl Object for ImplementorA {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96961,"byte_end":96995,"line_start":195,"line_end":195,"column_start":1,"column_end":35}},{"value":"/     fn method1(&self) -> i32 {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":96996,"byte_end":97030,"line_start":196,"line_end":196,"column_start":1,"column_end":35}},{"value":"/         self.0","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97031,"byte_end":97049,"line_start":197,"line_end":197,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97050,"byte_end":97059,"line_start":198,"line_end":198,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97060,"byte_end":97063,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/     fn method2(&mut self, x: i32) {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97064,"byte_end":97103,"line_start":200,"line_end":200,"column_start":1,"column_end":40}},{"value":"/         self.0 += x;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97104,"byte_end":97128,"line_start":201,"line_end":201,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97129,"byte_end":97138,"line_start":202,"line_end":202,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97139,"byte_end":97144,"line_start":203,"line_end":203,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97145,"byte_end":97148,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ struct ImplementorB(i32);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97149,"byte_end":97178,"line_start":205,"line_end":205,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97179,"byte_end":97182,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ impl Object for ImplementorB {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97183,"byte_end":97217,"line_start":207,"line_end":207,"column_start":1,"column_end":35}},{"value":"/     fn method1(&self) -> i32 {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97218,"byte_end":97252,"line_start":208,"line_end":208,"column_start":1,"column_end":35}},{"value":"/         self.0","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97253,"byte_end":97271,"line_start":209,"line_end":209,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97272,"byte_end":97281,"line_start":210,"line_end":210,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97282,"byte_end":97285,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/     fn method2(&mut self, x: i32) {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97286,"byte_end":97325,"line_start":212,"line_end":212,"column_start":1,"column_end":40}},{"value":"/         self.0 *= x;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97326,"byte_end":97350,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97351,"byte_end":97360,"line_start":214,"line_end":214,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97361,"byte_end":97366,"line_start":215,"line_end":215,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97367,"byte_end":97370,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ let mut world = World::empty();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97371,"byte_end":97406,"line_start":217,"line_end":217,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97407,"byte_end":97410,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ world.insert(ImplementorA(3));","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97411,"byte_end":97445,"line_start":219,"line_end":219,"column_start":1,"column_end":35}},{"value":"/ world.insert(ImplementorB(1));","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97446,"byte_end":97480,"line_start":220,"line_end":220,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97481,"byte_end":97484,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ let mut table = MetaTable::<dyn Object>::new();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97485,"byte_end":97536,"line_start":222,"line_end":222,"column_start":1,"column_end":52}},{"value":"/ table.register(&ImplementorA(31415)); // Can just be some instance of type `&ImplementorA`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97537,"byte_end":97632,"line_start":223,"line_end":223,"column_start":1,"column_end":96}},{"value":"/ table.register(&ImplementorB(27182));","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97633,"byte_end":97674,"line_start":224,"line_end":224,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97675,"byte_end":97678,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97679,"byte_end":97684,"line_start":226,"line_end":226,"column_start":1,"column_end":6}},{"value":"/     let mut iter = table.iter(&mut world);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97685,"byte_end":97731,"line_start":227,"line_end":227,"column_start":1,"column_end":47}},{"value":"/     assert_eq!(iter.next().unwrap().method1(), 3);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97732,"byte_end":97786,"line_start":228,"line_end":228,"column_start":1,"column_end":55}},{"value":"/     assert_eq!(iter.next().unwrap().method1(), 1);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97787,"byte_end":97841,"line_start":229,"line_end":229,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97842,"byte_end":97847,"line_start":230,"line_end":230,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":97848,"byte_end":97855,"line_start":231,"line_end":231,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":98128,"byte_end":98131,"line_start":242,"line_end":242,"column_start":12,"column_end":15},"name":"new","qualname":"<MetaTable<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `MetaTable`.\n","sig":null,"attributes":[{"value":"/ Creates a new `MetaTable`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":98086,"byte_end":98116,"line_start":241,"line_end":241,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":98438,"byte_end":98446,"line_start":251,"line_end":251,"column_start":12,"column_end":20},"name":"register","qualname":"<MetaTable<T>>::register","value":"pub fn register<R>(&mut Self, &R) where R: Resource, T: CastFrom<R> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Registers a resource `R` that implements the trait `T`.\n This just needs some instance of type `R` to retrieve the vtable.\n It doesn't have to be the same object you're calling `get` with later.\n","sig":null,"attributes":[{"value":"/ Registers a resource `R` that implements the trait `T`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":98214,"byte_end":98273,"line_start":248,"line_end":248,"column_start":5,"column_end":64}},{"value":"/ This just needs some instance of type `R` to retrieve the vtable.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":98278,"byte_end":98347,"line_start":249,"line_end":249,"column_start":5,"column_end":74}},{"value":"/ It doesn't have to be the same object you're calling `get` with later.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":98352,"byte_end":98426,"line_start":250,"line_end":250,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":99605,"byte_end":99608,"line_start":291,"line_end":291,"column_start":12,"column_end":15},"name":"get","qualname":"<MetaTable<T>>::get","value":"pub fn get<'a>(&Self, &'a Resource) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Tries to convert `world` to a trait object of type `&T`.\n If `world` doesn't have an implementation for `T` (or it wasn't\n registered), this will return `None`.\n","sig":null,"attributes":[{"value":"/ Tries to convert `world` to a trait object of type `&T`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":99415,"byte_end":99475,"line_start":288,"line_end":288,"column_start":5,"column_end":65}},{"value":"/ If `world` doesn't have an implementation for `T` (or it wasn't","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":99480,"byte_end":99547,"line_start":289,"line_end":289,"column_start":5,"column_end":72}},{"value":"/ registered), this will return `None`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":99552,"byte_end":99593,"line_start":290,"line_end":290,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":100055,"byte_end":100062,"line_start":302,"line_end":302,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MetaTable<T>>::get_mut","value":"pub fn get_mut<'a>(&Self, &'a Resource) -> Option<&'a mut T>","parent":null,"children":[],"decl_id":null,"docs":" Tries to convert `world` to a trait object of type `&mut T`.\n If `world` doesn't have an implementation for `T` (or it wasn't\n registered), this will return `None`.\n","sig":null,"attributes":[{"value":"/ Tries to convert `world` to a trait object of type `&mut T`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":99861,"byte_end":99925,"line_start":299,"line_end":299,"column_start":5,"column_end":69}},{"value":"/ If `world` doesn't have an implementation for `T` (or it wasn't","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":99930,"byte_end":99997,"line_start":300,"line_end":300,"column_start":5,"column_end":72}},{"value":"/ registered), this will return `None`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":100002,"byte_end":100043,"line_start":301,"line_end":301,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":100416,"byte_end":100420,"line_start":311,"line_end":311,"column_start":12,"column_end":16},"name":"iter","qualname":"<MetaTable<T>>::iter","value":"pub fn iter<'a>(&'a Self, &'a World) -> MetaIter","parent":null,"children":[],"decl_id":null,"docs":" Iterates all resources that implement `T` and were registered.\n","sig":null,"attributes":[{"value":"/ Iterates all resources that implement `T` and were registered.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":100338,"byte_end":100404,"line_start":310,"line_end":310,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":100733,"byte_end":100741,"line_start":322,"line_end":322,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<MetaTable<T>>::iter_mut","value":"pub fn iter_mut<'a>(&'a Self, &'a World) -> MetaIterMut","parent":null,"children":[],"decl_id":null,"docs":" Iterates all resources that implement `T` and were registered mutably.\n","sig":null,"attributes":[{"value":"/ Iterates all resources that implement `T` and were registered mutably.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":100647,"byte_end":100721,"line_start":321,"line_end":321,"column_start":5,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":105222,"byte_end":105230,"line_start":11,"line_end":11,"column_start":11,"column_end":19},"name":"Accessor","qualname":"::system::Accessor","value":"Accessor: Sized","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581}],"decl_id":null,"docs":" A trait for accessing read/write multiple resources from a system. This can\n be used to create dynamic systems that don't specify what they fetch at\n compile-time.","sig":null,"attributes":[{"value":"/ A trait for accessing read/write multiple resources from a system. This can","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":104943,"byte_end":105022,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ be used to create dynamic systems that don't specify what they fetch at","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":105023,"byte_end":105098,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ compile-time.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":105099,"byte_end":105116,"line_start":7,"line_end":7,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":105117,"byte_end":105120,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ For compile-time system data this will all be done for you using","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":105121,"byte_end":105189,"line_start":9,"line_end":9,"column_start":1,"column_end":69}},{"value":"/ `StaticAccessor`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":105190,"byte_end":105211,"line_start":10,"line_end":10,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":105427,"byte_end":105434,"line_start":15,"line_end":15,"column_start":8,"column_end":15},"name":"try_new","qualname":"::system::Accessor::try_new","value":"pub fn try_new() -> Option<Self>","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" Tries to create a new instance of this type. This one returns `Some` in\n case there is a default, otherwise the system needs to override\n `System::accessor`.\n","sig":null,"attributes":[{"value":"/ Tries to create a new instance of this type. This one returns `Some` in","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":105244,"byte_end":105319,"line_start":12,"line_end":12,"column_start":5,"column_end":80}},{"value":"/ case there is a default, otherwise the system needs to override","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":105324,"byte_end":105391,"line_start":13,"line_end":13,"column_start":5,"column_end":72}},{"value":"/ `System::accessor`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":105396,"byte_end":105419,"line_start":14,"line_end":14,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":105929,"byte_end":105934,"line_start":31,"line_end":31,"column_start":8,"column_end":13},"name":"reads","qualname":"::system::Accessor::reads","value":"pub fn reads(&Self) -> Vec<ResourceId>","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" A list of [`ResourceId`]s the bundle\n needs read access to in order to\n build the target resource bundle.","sig":null,"attributes":[{"value":"/ A list of [`ResourceId`]s the bundle","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":105459,"byte_end":105499,"line_start":17,"line_end":17,"column_start":5,"column_end":45}},{"value":"/ needs read access to in order to","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":105504,"byte_end":105540,"line_start":18,"line_end":18,"column_start":5,"column_end":41}},{"value":"/ build the target resource bundle.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":105545,"byte_end":105582,"line_start":19,"line_end":19,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":105587,"byte_end":105590,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ # Contract","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":105595,"byte_end":105609,"line_start":21,"line_end":21,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":105614,"byte_end":105617,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ Exactly return the dependencies you're going to `fetch`! Doing otherwise","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":105622,"byte_end":105698,"line_start":23,"line_end":23,"column_start":5,"column_end":81}},{"value":"/ *will* cause a panic.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":105703,"byte_end":105728,"line_start":24,"line_end":24,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":105733,"byte_end":105736,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This method is only executed once,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":105741,"byte_end":105779,"line_start":26,"line_end":26,"column_start":5,"column_end":43}},{"value":"/ thus the returned value may never change","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":105784,"byte_end":105828,"line_start":27,"line_end":27,"column_start":5,"column_end":49}},{"value":"/ (otherwise it has no effect).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":105833,"byte_end":105866,"line_start":28,"line_end":28,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":105871,"byte_end":105874,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ [`ResourceId`]: struct.ResourceId.html","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":105879,"byte_end":105921,"line_start":30,"line_end":30,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":106438,"byte_end":106444,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"writes","qualname":"::system::Accessor::writes","value":"pub fn writes(&Self) -> Vec<ResourceId>","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" A list of [`ResourceId`]s the bundle\n needs write access to in order to\n build the target resource bundle.","sig":null,"attributes":[{"value":"/ A list of [`ResourceId`]s the bundle","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":105967,"byte_end":106007,"line_start":33,"line_end":33,"column_start":5,"column_end":45}},{"value":"/ needs write access to in order to","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":106012,"byte_end":106049,"line_start":34,"line_end":34,"column_start":5,"column_end":42}},{"value":"/ build the target resource bundle.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":106054,"byte_end":106091,"line_start":35,"line_end":35,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":106096,"byte_end":106099,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Contract","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":106104,"byte_end":106118,"line_start":37,"line_end":37,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":106123,"byte_end":106126,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Exactly return the dependencies you're going to `fetch`! Doing otherwise","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":106131,"byte_end":106207,"line_start":39,"line_end":39,"column_start":5,"column_end":81}},{"value":"/ *will* cause a panic.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":106212,"byte_end":106237,"line_start":40,"line_end":40,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":106242,"byte_end":106245,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This method is only executed once,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":106250,"byte_end":106288,"line_start":42,"line_end":42,"column_start":5,"column_end":43}},{"value":"/ thus the returned value may never change","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":106293,"byte_end":106337,"line_start":43,"line_end":43,"column_start":5,"column_end":49}},{"value":"/ (otherwise it has no effect).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":106342,"byte_end":106375,"line_start":44,"line_end":44,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":106380,"byte_end":106383,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ [`ResourceId`]: struct.ResourceId.html","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":106388,"byte_end":106430,"line_start":46,"line_end":46,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":595},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":107140,"byte_end":107143,"line_start":86,"line_end":86,"column_start":5,"column_end":8},"name":"Ref","qualname":"::system::AccessorCow::Ref","value":"AccessorCow::Ref(&'b AccessorTy)","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" A reference to an accessor.\n","sig":null,"attributes":[{"value":"/ A reference to an accessor.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":107104,"byte_end":107135,"line_start":85,"line_end":85,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":107199,"byte_end":107204,"line_start":88,"line_end":88,"column_start":5,"column_end":10},"name":"Owned","qualname":"::system::AccessorCow::Owned","value":"AccessorCow::Owned(AccessorTy)","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" An owned accessor.\n","sig":null,"attributes":[{"value":"/ An owned accessor.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":107172,"byte_end":107194,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Enum","id":{"krate":0,"index":591},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":107002,"byte_end":107013,"line_start":79,"line_end":79,"column_start":10,"column_end":21},"name":"AccessorCow","qualname":"::system::AccessorCow","value":"pub enum AccessorCow<'a, 'b, T: ?Sized> where AccessorTy: 'b, T: System, 'a:'b\n         {\n\n    /// A reference to an accessor.\n    Ref(&'b AccessorTy),\n\n    /// An owned accessor.\n    Owned(AccessorTy),\n}","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":598}],"decl_id":null,"docs":" Either an `Accessor` of the system `T` or a reference to it.\n","sig":null,"attributes":[{"value":"/ Either an `Accessor` of the system `T` or a reference to it.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":106928,"byte_end":106992,"line_start":78,"line_end":78,"column_start":1,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":107760,"byte_end":107766,"line_start":111,"line_end":111,"column_start":11,"column_end":17},"name":"RunNow","qualname":"::system::RunNow","value":"RunNow<'a>","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614}],"decl_id":null,"docs":" Trait for fetching data and running systems. Automatically implemented for\n systems.\n","sig":null,"attributes":[{"value":"/ Trait for fetching data and running systems. Automatically implemented for","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":107658,"byte_end":107736,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/ systems.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":107737,"byte_end":107749,"line_start":110,"line_end":110,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":108082,"byte_end":108089,"line_start":120,"line_end":120,"column_start":8,"column_end":15},"name":"run_now","qualname":"::system::RunNow::run_now","value":"pub fn run_now(&mut Self, &'a World)","parent":{"krate":0,"index":610},"children":[],"decl_id":null,"docs":" Runs the system now.","sig":null,"attributes":[{"value":"/ Runs the system now.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":107777,"byte_end":107801,"line_start":112,"line_end":112,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":107806,"byte_end":107809,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":107814,"byte_end":107826,"line_start":114,"line_end":114,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":107831,"byte_end":107834,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Panics if the system tries to fetch resources","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":107839,"byte_end":107888,"line_start":116,"line_end":116,"column_start":5,"column_end":54}},{"value":"/ which are borrowed in an incompatible way already","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":107893,"byte_end":107946,"line_start":117,"line_end":117,"column_start":5,"column_end":58}},{"value":"/ (tries to read from a resource which is already written to or","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":107951,"byte_end":108016,"line_start":118,"line_end":118,"column_start":5,"column_end":70}},{"value":"/ tries to write to a resource which is read from).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":108021,"byte_end":108074,"line_start":119,"line_end":119,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":108183,"byte_end":108188,"line_start":123,"line_end":123,"column_start":8,"column_end":13},"name":"setup","qualname":"::system::RunNow::setup","value":"pub fn setup(&mut Self, &mut World)","parent":{"krate":0,"index":610},"children":[],"decl_id":null,"docs":" Sets up `World` for a later call to `run_now`.\n","sig":null,"attributes":[{"value":"/ Sets up `World` for a later call to `run_now`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":108125,"byte_end":108175,"line_start":122,"line_end":122,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":108428,"byte_end":108435,"line_start":129,"line_end":129,"column_start":8,"column_end":15},"name":"dispose","qualname":"::system::RunNow::dispose","value":"pub fn dispose(Box<Self>, &mut World)","parent":{"krate":0,"index":610},"children":[],"decl_id":null,"docs":" Performs clean up that requires resources from the `World`.\n This commonly removes components from `world` which depend on external\n resources.\n","sig":null,"attributes":[{"value":"/ Performs clean up that requires resources from the `World`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":108225,"byte_end":108288,"line_start":125,"line_end":125,"column_start":5,"column_end":68}},{"value":"/ This commonly removes components from `world` which depend on external","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":108293,"byte_end":108367,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"/ resources.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":108372,"byte_end":108386,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"allow(clippy :: boxed_local)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":108391,"byte_end":108420,"line_start":128,"line_end":128,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1118},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":108976,"byte_end":108985,"line_start":156,"line_end":156,"column_start":5,"column_end":14},"name":"VeryShort","qualname":"::system::RunningTime::VeryShort","value":"RunningTime::VeryShort","parent":{"krate":0,"index":1117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1121},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":108995,"byte_end":109000,"line_start":157,"line_end":157,"column_start":5,"column_end":10},"name":"Short","qualname":"::system::RunningTime::Short","value":"RunningTime::Short","parent":{"krate":0,"index":1117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1124},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":109010,"byte_end":109017,"line_start":158,"line_end":158,"column_start":5,"column_end":12},"name":"Average","qualname":"::system::RunningTime::Average","value":"RunningTime::Average","parent":{"krate":0,"index":1117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1127},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":109027,"byte_end":109031,"line_start":159,"line_end":159,"column_start":5,"column_end":9},"name":"Long","qualname":"::system::RunningTime::Long","value":"RunningTime::Long","parent":{"krate":0,"index":1117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1130},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":109041,"byte_end":109049,"line_start":160,"line_end":160,"column_start":5,"column_end":13},"name":"VeryLong","qualname":"::system::RunningTime::VeryLong","value":"RunningTime::VeryLong","parent":{"krate":0,"index":1117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1117},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":108958,"byte_end":108969,"line_start":155,"line_end":155,"column_start":10,"column_end":21},"name":"RunningTime","qualname":"::system::RunningTime","value":"pub enum RunningTime {\n    VeryShort = ,\n    Short = ,\n    Average = ,\n    Long = ,\n    VeryLong = ,\n}","parent":null,"children":[{"krate":0,"index":1118},{"krate":0,"index":1121},{"krate":0,"index":1124},{"krate":0,"index":1127},{"krate":0,"index":1130}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":108884,"byte_end":108895,"line_start":152,"line_end":152,"column_start":1,"column_end":12}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":108896,"byte_end":108918,"line_start":153,"line_end":153,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":109173,"byte_end":109179,"line_start":166,"line_end":166,"column_start":11,"column_end":17},"name":"System","qualname":"::system::System","value":"System<'a>","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":628},{"krate":0,"index":629}],"decl_id":null,"docs":" A `System`, executed with a set of required [`Resource`]s.","sig":null,"attributes":[{"value":"/ A `System`, executed with a set of required [`Resource`]s.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":109058,"byte_end":109120,"line_start":163,"line_end":163,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":109121,"byte_end":109124,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ [`Resource`]: trait.Resource.html","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":109125,"byte_end":109162,"line_start":165,"line_end":165,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":623},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":109524,"byte_end":109534,"line_start":174,"line_end":174,"column_start":10,"column_end":20},"name":"SystemData","qualname":"::system::System::SystemData","value":"type SystemData: DynamicSystemData<'a>;","parent":{"krate":0,"index":621},"children":[],"decl_id":null,"docs":" The resource bundle required to execute this system.","sig":null,"attributes":[{"value":"/ The resource bundle required to execute this system.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":109190,"byte_end":109246,"line_start":167,"line_end":167,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":109251,"byte_end":109254,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ You will mostly use a tuple of system data (which also implements","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":109259,"byte_end":109328,"line_start":169,"line_end":169,"column_start":5,"column_end":74}},{"value":"/ `SystemData`). You can also create such a resource bundle by simply","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":109333,"byte_end":109404,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ deriving `SystemData` for a struct.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":109409,"byte_end":109448,"line_start":171,"line_end":171,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":109453,"byte_end":109456,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Every `SystemData` is also a `DynamicSystemData`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":109461,"byte_end":109514,"line_start":173,"line_end":173,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":109634,"byte_end":109637,"line_start":178,"line_end":178,"column_start":8,"column_end":11},"name":"run","qualname":"::system::System::run","value":"pub fn run(&mut Self, Self::SystemData)","parent":{"krate":0,"index":621},"children":[],"decl_id":null,"docs":" Executes the system with the required system\n data.\n","sig":null,"attributes":[{"value":"/ Executes the system with the required system","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":109564,"byte_end":109612,"line_start":176,"line_end":176,"column_start":5,"column_end":53}},{"value":"/ data.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":109617,"byte_end":109626,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":109898,"byte_end":109910,"line_start":185,"line_end":185,"column_start":8,"column_end":20},"name":"running_time","qualname":"::system::System::running_time","value":"pub fn running_time(&Self) -> RunningTime","parent":{"krate":0,"index":621},"children":[],"decl_id":null,"docs":" Returns a hint how long the system needs for running.\n This is used to optimize the way they're executed (might\n allow more parallelization).","sig":null,"attributes":[{"value":"/ Returns a hint how long the system needs for running.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":109679,"byte_end":109736,"line_start":180,"line_end":180,"column_start":5,"column_end":62}},{"value":"/ This is used to optimize the way they're executed (might","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":109741,"byte_end":109801,"line_start":181,"line_end":181,"column_start":5,"column_end":65}},{"value":"/ allow more parallelization).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":109806,"byte_end":109838,"line_start":182,"line_end":182,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":109843,"byte_end":109846,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Defaults to `RunningTime::Average`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":109851,"byte_end":109890,"line_start":184,"line_end":184,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":110031,"byte_end":110039,"line_start":190,"line_end":190,"column_start":8,"column_end":16},"name":"accessor","qualname":"::system::System::accessor","value":"pub fn accessor<'b>(&'b Self) -> AccessorCow","parent":{"krate":0,"index":621},"children":[],"decl_id":null,"docs":" Return the accessor from the [`SystemData`].\n","sig":null,"attributes":[{"value":"/ Return the accessor from the [`SystemData`].","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":109975,"byte_end":110023,"line_start":189,"line_end":189,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":110293,"byte_end":110298,"line_start":197,"line_end":197,"column_start":8,"column_end":13},"name":"setup","qualname":"::system::System::setup","value":"pub fn setup(&mut Self, &mut World)","parent":{"krate":0,"index":621},"children":[],"decl_id":null,"docs":" Sets up the `World` using `Self::SystemData::setup`.\n","sig":null,"attributes":[{"value":"/ Sets up the `World` using `Self::SystemData::setup`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":110229,"byte_end":110285,"line_start":196,"line_end":196,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":110591,"byte_end":110598,"line_start":204,"line_end":204,"column_start":8,"column_end":15},"name":"dispose","qualname":"::system::System::dispose","value":"pub fn dispose(Self, &mut World) where Self: Sized","parent":{"krate":0,"index":621},"children":[],"decl_id":null,"docs":" Performs clean up that requires resources from the `World`.\n This commonly removes components from `world` which depend on external\n resources.\n","sig":null,"attributes":[{"value":"/ Performs clean up that requires resources from the `World`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":110422,"byte_end":110485,"line_start":201,"line_end":201,"column_start":5,"column_end":68}},{"value":"/ This commonly removes components from `world` which depend on external","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":110490,"byte_end":110564,"line_start":202,"line_end":202,"column_start":5,"column_end":79}},{"value":"/ resources.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":110569,"byte_end":110583,"line_start":203,"line_end":203,"column_start":5,"column_end":19}}]},{"kind":"Trait","id":{"krate":0,"index":630},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":112559,"byte_end":112569,"line_start":269,"line_end":269,"column_start":11,"column_end":21},"name":"SystemData","qualname":"::system::SystemData","value":"SystemData<'a>","parent":null,"children":[{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635}],"decl_id":null,"docs":" A static system data that can specify its dependencies at statically (at\n compile-time). Most system data is a `SystemData`, the `DynamicSystemData`\n type is only needed for very special setups.","sig":null,"attributes":[{"value":"/ A static system data that can specify its dependencies at statically (at","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":110693,"byte_end":110769,"line_start":212,"line_end":212,"column_start":1,"column_end":77}},{"value":"/ compile-time). Most system data is a `SystemData`, the `DynamicSystemData`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":110770,"byte_end":110848,"line_start":213,"line_end":213,"column_start":1,"column_end":79}},{"value":"/ type is only needed for very special setups.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":110849,"byte_end":110897,"line_start":214,"line_end":214,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":110898,"byte_end":110901,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ You can derive this using the `#[derive(SystemData)]` macro provided by","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":110902,"byte_end":110977,"line_start":216,"line_end":216,"column_start":1,"column_end":76}},{"value":"/ `shred-derive`. That is as simple as enabling the `shred-derive` feature.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":110978,"byte_end":111055,"line_start":217,"line_end":217,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111056,"byte_end":111059,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111060,"byte_end":111074,"line_start":219,"line_end":219,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111075,"byte_end":111078,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111079,"byte_end":111090,"line_start":221,"line_end":221,"column_start":1,"column_end":12}},{"value":"/ use shred::{Read, ResourceId, SystemData, World, Write};","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111091,"byte_end":111151,"line_start":222,"line_end":222,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111152,"byte_end":111155,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ #[derive(Default)]","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111156,"byte_end":111178,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/ pub struct Clock;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111179,"byte_end":111200,"line_start":225,"line_end":225,"column_start":1,"column_end":22}},{"value":"/ #[derive(Default)]","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111201,"byte_end":111223,"line_start":226,"line_end":226,"column_start":1,"column_end":23}},{"value":"/ pub struct Timer;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111224,"byte_end":111245,"line_start":227,"line_end":227,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111246,"byte_end":111249,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ // This will implement `SystemData` for `MySystemData`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111250,"byte_end":111309,"line_start":229,"line_end":229,"column_start":1,"column_end":60}},{"value":"/ // Please note that this will only work if `SystemData`, `World` and `ResourceId` are included.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111310,"byte_end":111409,"line_start":230,"line_end":230,"column_start":1,"column_end":100}},{"value":"/ # #[cfg(feature = \"shred-derive\")]","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111410,"byte_end":111448,"line_start":231,"line_end":231,"column_start":1,"column_end":39}},{"value":"/ #[derive(SystemData)]","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111449,"byte_end":111474,"line_start":232,"line_end":232,"column_start":1,"column_end":26}},{"value":"/ pub struct MySystemData<'a> {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111475,"byte_end":111508,"line_start":233,"line_end":233,"column_start":1,"column_end":34}},{"value":"/     pub clock: Read<'a, Clock>,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111509,"byte_end":111544,"line_start":234,"line_end":234,"column_start":1,"column_end":36}},{"value":"/     pub timer: Write<'a, Timer>,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111545,"byte_end":111581,"line_start":235,"line_end":235,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111582,"byte_end":111587,"line_start":236,"line_end":236,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111588,"byte_end":111593,"line_start":237,"line_end":237,"column_start":1,"column_end":6}},{"value":"/ # // The following is required for the snippet to compile without the `shred-derive` feature.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111594,"byte_end":111691,"line_start":238,"line_end":238,"column_start":1,"column_end":98}},{"value":"/ #","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111692,"byte_end":111697,"line_start":239,"line_end":239,"column_start":1,"column_end":6}},{"value":"/ # #[cfg(not(feature = \"shred-derive\"))]","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111698,"byte_end":111741,"line_start":240,"line_end":240,"column_start":1,"column_end":44}},{"value":"/ # struct MySystemData<'a> {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111742,"byte_end":111773,"line_start":241,"line_end":241,"column_start":1,"column_end":32}},{"value":"/ #     pub clock: Read<'a, Clock>,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111774,"byte_end":111811,"line_start":242,"line_end":242,"column_start":1,"column_end":38}},{"value":"/ #     pub timer: Write<'a, Timer>,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111812,"byte_end":111850,"line_start":243,"line_end":243,"column_start":1,"column_end":39}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111851,"byte_end":111858,"line_start":244,"line_end":244,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111859,"byte_end":111864,"line_start":245,"line_end":245,"column_start":1,"column_end":6}},{"value":"/ # #[cfg(not(feature = \"shred-derive\"))]","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111865,"byte_end":111908,"line_start":246,"line_end":246,"column_start":1,"column_end":44}},{"value":"/ # impl<'a> SystemData<'a> for MySystemData<'a> {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111909,"byte_end":111961,"line_start":247,"line_end":247,"column_start":1,"column_end":53}},{"value":"/ #     fn setup(world: &mut World) {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":111962,"byte_end":112001,"line_start":248,"line_end":248,"column_start":1,"column_end":40}},{"value":"/ #         Read::<'_, Clock>::setup(world);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":112002,"byte_end":112048,"line_start":249,"line_end":249,"column_start":1,"column_end":47}},{"value":"/ #         Write::<'_, Timer>::setup(world);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":112049,"byte_end":112096,"line_start":250,"line_end":250,"column_start":1,"column_end":48}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":112097,"byte_end":112108,"line_start":251,"line_end":251,"column_start":1,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":112109,"byte_end":112114,"line_start":252,"line_end":252,"column_start":1,"column_end":6}},{"value":"/ #     fn fetch(world: &'a World) -> Self {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":112115,"byte_end":112161,"line_start":253,"line_end":253,"column_start":1,"column_end":47}},{"value":"/ #         Self {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":112162,"byte_end":112182,"line_start":254,"line_end":254,"column_start":1,"column_end":21}},{"value":"/ #             clock: Read::<'_, Clock>::fetch(world),","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":112183,"byte_end":112240,"line_start":255,"line_end":255,"column_start":1,"column_end":58}},{"value":"/ #             timer: Write::<'_, Timer>::fetch(world),","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":112241,"byte_end":112299,"line_start":256,"line_end":256,"column_start":1,"column_end":59}},{"value":"/ #         }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":112300,"byte_end":112315,"line_start":257,"line_end":257,"column_start":1,"column_end":16}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":112316,"byte_end":112327,"line_start":258,"line_end":258,"column_start":1,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":112328,"byte_end":112333,"line_start":259,"line_end":259,"column_start":1,"column_end":6}},{"value":"/ #     fn reads() -> Vec<ResourceId> {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":112334,"byte_end":112375,"line_start":260,"line_end":260,"column_start":1,"column_end":42}},{"value":"/ #         Read::<'_, Clock>::reads()","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":112376,"byte_end":112416,"line_start":261,"line_end":261,"column_start":1,"column_end":41}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":112417,"byte_end":112428,"line_start":262,"line_end":262,"column_start":1,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":112429,"byte_end":112434,"line_start":263,"line_end":263,"column_start":1,"column_end":6}},{"value":"/ #     fn writes() -> Vec<ResourceId> {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":112435,"byte_end":112477,"line_start":264,"line_end":264,"column_start":1,"column_end":43}},{"value":"/ #         Write::<'_, Timer>::writes()","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":112478,"byte_end":112520,"line_start":265,"line_end":265,"column_start":1,"column_end":43}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":112521,"byte_end":112532,"line_start":266,"line_end":266,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":112533,"byte_end":112540,"line_start":267,"line_end":267,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":112541,"byte_end":112548,"line_start":268,"line_end":268,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":112649,"byte_end":112654,"line_start":271,"line_end":271,"column_start":8,"column_end":13},"name":"setup","qualname":"::system::SystemData::setup","value":"pub fn setup(&mut World)","parent":{"krate":0,"index":630},"children":[],"decl_id":null,"docs":" Sets up the system data for fetching it from the `World`.\n","sig":null,"attributes":[{"value":"/ Sets up the system data for fetching it from the `World`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":112580,"byte_end":112641,"line_start":270,"line_end":270,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":112884,"byte_end":112889,"line_start":276,"line_end":276,"column_start":8,"column_end":13},"name":"fetch","qualname":"::system::SystemData::fetch","value":"pub fn fetch(&'a World) -> Self","parent":{"krate":0,"index":630},"children":[],"decl_id":null,"docs":" Fetches the system data from `World`. Note that this is only specified\n for one concrete lifetime `'a`, you need to implement the\n `SystemData` trait for every possible lifetime.\n","sig":null,"attributes":[{"value":"/ Fetches the system data from `World`. Note that this is only specified","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":112680,"byte_end":112754,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ for one concrete lifetime `'a`, you need to implement the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":112759,"byte_end":112820,"line_start":274,"line_end":274,"column_start":5,"column_end":66}},{"value":"/ `SystemData` trait for every possible lifetime.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":112825,"byte_end":112876,"line_start":275,"line_end":275,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":113077,"byte_end":113082,"line_start":281,"line_end":281,"column_start":8,"column_end":13},"name":"reads","qualname":"::system::SystemData::reads","value":"pub fn reads() -> Vec<ResourceId>","parent":{"krate":0,"index":630},"children":[],"decl_id":null,"docs":" Returns all read dependencies as fetched from `Self::fetch`.","sig":null,"attributes":[{"value":"/ Returns all read dependencies as fetched from `Self::fetch`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":112922,"byte_end":112986,"line_start":278,"line_end":278,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":112991,"byte_end":112994,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Please note that returning wrong dependencies can lead to a panic.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":112999,"byte_end":113069,"line_start":280,"line_end":280,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":113266,"byte_end":113272,"line_start":286,"line_end":286,"column_start":8,"column_end":14},"name":"writes","qualname":"::system::SystemData::writes","value":"pub fn writes() -> Vec<ResourceId>","parent":{"krate":0,"index":630},"children":[],"decl_id":null,"docs":" Returns all write dependencies as fetched from `Self::fetch`.","sig":null,"attributes":[{"value":"/ Returns all write dependencies as fetched from `Self::fetch`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":113110,"byte_end":113175,"line_start":283,"line_end":283,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":113180,"byte_end":113183,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Please note that returning wrong dependencies can lead to a panic.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":113188,"byte_end":113258,"line_start":285,"line_end":285,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1138},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":113911,"byte_end":113925,"line_start":320,"line_end":320,"column_start":12,"column_end":26},"name":"StaticAccessor","qualname":"::system::StaticAccessor","value":"StaticAccessor {  }","parent":null,"children":[{"krate":0,"index":1140}],"decl_id":null,"docs":" The static accessor that is used for `SystemData`.\n","sig":null,"attributes":[{"value":"/ The static accessor that is used for `SystemData`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":113826,"byte_end":113880,"line_start":318,"line_end":318,"column_start":1,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":654},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":114501,"byte_end":114518,"line_start":347,"line_end":347,"column_start":11,"column_end":28},"name":"DynamicSystemData","qualname":"::system::DynamicSystemData","value":"DynamicSystemData<'a>","parent":null,"children":[{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658}],"decl_id":null,"docs":" A struct implementing system data indicates that it bundles some resources\n which are required for the execution.","sig":null,"attributes":[{"value":"/ A struct implementing system data indicates that it bundles some resources","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":114298,"byte_end":114376,"line_start":343,"line_end":343,"column_start":1,"column_end":79}},{"value":"/ which are required for the execution.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":114377,"byte_end":114418,"line_start":344,"line_end":344,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":114419,"byte_end":114422,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ This is the more flexible, but complex variant of `SystemData`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":114423,"byte_end":114490,"line_start":346,"line_end":346,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":656},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":114655,"byte_end":114663,"line_start":350,"line_end":350,"column_start":10,"column_end":18},"name":"Accessor","qualname":"::system::DynamicSystemData::Accessor","value":"type Accessor: Accessor;","parent":{"krate":0,"index":654},"children":[],"decl_id":null,"docs":" The accessor of the `SystemData`, which specifies the read and write\n dependencies and does the fetching.\n","sig":null,"attributes":[{"value":"/ The accessor of the `SystemData`, which specifies the read and write","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":114529,"byte_end":114601,"line_start":348,"line_end":348,"column_start":5,"column_end":77}},{"value":"/ dependencies and does the fetching.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":114606,"byte_end":114645,"line_start":349,"line_end":349,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":114738,"byte_end":114743,"line_start":353,"line_end":353,"column_start":8,"column_end":13},"name":"setup","qualname":"::system::DynamicSystemData::setup","value":"pub fn setup(&Self::Accessor, &mut World)","parent":{"krate":0,"index":654},"children":[],"decl_id":null,"docs":" Sets up `World` for fetching this system data.\n","sig":null,"attributes":[{"value":"/ Sets up `World` for fetching this system data.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":114680,"byte_end":114730,"line_start":352,"line_end":352,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":115339,"byte_end":115344,"line_start":371,"line_end":371,"column_start":8,"column_end":13},"name":"fetch","qualname":"::system::DynamicSystemData::fetch","value":"pub fn fetch(&Self::Accessor, &'a World) -> Self","parent":{"krate":0,"index":654},"children":[],"decl_id":null,"docs":" Creates a new resource bundle\n by fetching the required resources\n from the [`World`] struct.","sig":null,"attributes":[{"value":"/ Creates a new resource bundle","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":114796,"byte_end":114829,"line_start":355,"line_end":355,"column_start":5,"column_end":38}},{"value":"/ by fetching the required resources","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":114834,"byte_end":114872,"line_start":356,"line_end":356,"column_start":5,"column_end":43}},{"value":"/ from the [`World`] struct.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":114877,"byte_end":114907,"line_start":357,"line_end":357,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":114912,"byte_end":114915,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Contract","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":114920,"byte_end":114934,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":114939,"byte_end":114942,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Only fetch the resources you returned from `reads` / `writes`!","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":114947,"byte_end":115013,"line_start":361,"line_end":361,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":115018,"byte_end":115021,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":115026,"byte_end":115038,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":115043,"byte_end":115046,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ This function may panic if the above contract is violated.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":115051,"byte_end":115113,"line_start":365,"line_end":365,"column_start":5,"column_end":67}},{"value":"/ This function may panic if the resource doesn't exist. This is only the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":115118,"byte_end":115193,"line_start":366,"line_end":366,"column_start":5,"column_end":80}},{"value":"/ case if either `setup` was not called or it didn't insert any","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":115198,"byte_end":115263,"line_start":367,"line_end":367,"column_start":5,"column_end":70}},{"value":"/ fallback value.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":115268,"byte_end":115287,"line_start":368,"line_end":368,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":115292,"byte_end":115295,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ [`World`]: trait.World.html","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":115300,"byte_end":115331,"line_start":370,"line_end":370,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":712},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":141472,"byte_end":141476,"line_start":19,"line_end":19,"column_start":12,"column_end":16},"name":"Read","qualname":"::world::data::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":717}],"decl_id":null,"docs":" Allows to fetch a resource in a system immutably.","sig":null,"attributes":[{"value":"/ Allows to fetch a resource in a system immutably.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":141200,"byte_end":141253,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":141254,"byte_end":141257,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ If the resource isn't strictly required, you should use `Option<Read<T>>`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":141258,"byte_end":141336,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":141337,"byte_end":141340,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Type parameters","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":141341,"byte_end":141362,"line_start":15,"line_end":15,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":141363,"byte_end":141366,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * `T`: The type of the resource","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":141367,"byte_end":141402,"line_start":17,"line_end":17,"column_start":1,"column_end":36}},{"value":"/ * `F`: The setup handler (default: `DefaultProvider`)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":141403,"byte_end":141460,"line_start":18,"line_end":18,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":737},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":142555,"byte_end":142560,"line_start":74,"line_end":74,"column_start":12,"column_end":17},"name":"Write","qualname":"::world::data::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":742}],"decl_id":null,"docs":" Allows to fetch a resource in a system mutably.","sig":null,"attributes":[{"value":"/ Allows to fetch a resource in a system mutably.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":142284,"byte_end":142335,"line_start":66,"line_end":66,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":142336,"byte_end":142339,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ If the resource isn't strictly required, you should use `Option<Write<T>>`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":142340,"byte_end":142419,"line_start":68,"line_end":68,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":142420,"byte_end":142423,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Type parameters","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":142424,"byte_end":142445,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":142446,"byte_end":142449,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ * `T`: The type of the resource","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":142450,"byte_end":142485,"line_start":72,"line_end":72,"column_start":1,"column_end":36}},{"value":"/ * `F`: The setup handler (default: `DefaultProvider`)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":142486,"byte_end":142543,"line_start":73,"line_end":73,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":783},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":144429,"byte_end":144439,"line_start":173,"line_end":173,"column_start":10,"column_end":20},"name":"ReadExpect","qualname":"::world::data::ReadExpect","value":"Read","parent":null,"children":[],"decl_id":null,"docs":" Allows to fetch a resource in a system immutably.\n **This will panic if the resource does not exist.**\n Usage of `Read` or `Option<Read>` is therefore recommended.\n","sig":null,"attributes":[{"value":"/ Allows to fetch a resource in a system immutably.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":144246,"byte_end":144299,"line_start":170,"line_end":170,"column_start":1,"column_end":54}},{"value":"/ **This will panic if the resource does not exist.**","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":144300,"byte_end":144355,"line_start":171,"line_end":171,"column_start":1,"column_end":56}},{"value":"/ Usage of `Read` or `Option<Read>` is therefore recommended.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":144356,"byte_end":144419,"line_start":172,"line_end":172,"column_start":1,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":786},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":144660,"byte_end":144671,"line_start":178,"line_end":178,"column_start":10,"column_end":21},"name":"WriteExpect","qualname":"::world::data::WriteExpect","value":"Write","parent":null,"children":[],"decl_id":null,"docs":" Allows to fetch a resource in a system mutably.\n **This will panic if the resource does not exist.**\n Usage of `Write` or `Option<Write>` is therefore recommended.\n","sig":null,"attributes":[{"value":"/ Allows to fetch a resource in a system mutably.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":144477,"byte_end":144528,"line_start":175,"line_end":175,"column_start":1,"column_end":52}},{"value":"/ **This will panic if the resource does not exist.**","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":144529,"byte_end":144584,"line_start":176,"line_end":176,"column_start":1,"column_end":56}},{"value":"/ Usage of `Write` or `Option<Write>` is therefore recommended.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":144585,"byte_end":144650,"line_start":177,"line_end":177,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":803},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\entry.rs","byte_start":145309,"byte_end":145314,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"name":"Entry","qualname":"::world::entry::Entry","value":"Entry {  }","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":807}],"decl_id":null,"docs":" An entry to a resource of the `World` struct.\n This is similar to the Entry API found in the standard library.","sig":null,"attributes":[{"value":"/ An entry to a resource of the `World` struct.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\entry.rs","byte_start":144944,"byte_end":144993,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/ This is similar to the Entry API found in the standard library.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\entry.rs","byte_start":144994,"byte_end":145061,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\entry.rs","byte_start":145062,"byte_end":145065,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\entry.rs","byte_start":145066,"byte_end":145081,"line_start":14,"line_end":14,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\entry.rs","byte_start":145082,"byte_end":145085,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\entry.rs","byte_start":145086,"byte_end":145093,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ use shred::World;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\entry.rs","byte_start":145094,"byte_end":145115,"line_start":17,"line_end":17,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\entry.rs","byte_start":145116,"byte_end":145119,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug)]","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\entry.rs","byte_start":145120,"byte_end":145140,"line_start":19,"line_end":19,"column_start":1,"column_end":21}},{"value":"/ struct Res(i32);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\entry.rs","byte_start":145141,"byte_end":145161,"line_start":20,"line_end":20,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\entry.rs","byte_start":145162,"byte_end":145165,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let mut world = World::empty();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\entry.rs","byte_start":145166,"byte_end":145201,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\entry.rs","byte_start":145202,"byte_end":145205,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let value = world.entry().or_insert(Res(4));","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\entry.rs","byte_start":145206,"byte_end":145254,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/ println!(\"{:?}\", value.0 * 2);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\entry.rs","byte_start":145255,"byte_end":145289,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\entry.rs","byte_start":145290,"byte_end":145297,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\entry.rs","byte_start":145684,"byte_end":145693,"line_start":40,"line_end":40,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, T) -> FetchMut","parent":null,"children":[],"decl_id":null,"docs":" Returns this entry's value, inserts and returns `v` otherwise.","sig":null,"attributes":[{"value":"/ Returns this entry's value, inserts and returns `v` otherwise.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\entry.rs","byte_start":145485,"byte_end":145551,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\entry.rs","byte_start":145556,"byte_end":145559,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Please note that you should use `or_insert_with` in case the creation of","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\entry.rs","byte_start":145564,"byte_end":145640,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ the value is expensive.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\entry.rs","byte_start":145645,"byte_end":145672,"line_start":39,"line_end":39,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\entry.rs","byte_start":145883,"byte_end":145897,"line_start":46,"line_end":46,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F>(Self, F) -> FetchMut where F: FnOnce() -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns this entry's value, inserts and returns the return value of `f`\n otherwise.\n","sig":null,"attributes":[{"value":"/ Returns this entry's value, inserts and returns the return value of `f`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\entry.rs","byte_start":145777,"byte_end":145852,"line_start":44,"line_end":44,"column_start":5,"column_end":80}},{"value":"/ otherwise.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\entry.rs","byte_start":145857,"byte_end":145871,"line_start":45,"line_end":45,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":824},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\setup.rs","byte_start":147666,"byte_end":147681,"line_start":27,"line_end":27,"column_start":12,"column_end":27},"name":"DefaultProvider","qualname":"::world::setup::DefaultProvider","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `SetupHandler` that simply uses the default implementation.\n","sig":null,"attributes":[{"value":"/ A `SetupHandler` that simply uses the default implementation.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\setup.rs","byte_start":147589,"byte_end":147654,"line_start":26,"line_end":26,"column_start":1,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":829},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\setup.rs","byte_start":147918,"byte_end":147930,"line_start":39,"line_end":39,"column_start":11,"column_end":23},"name":"SetupHandler","qualname":"::world::setup::SetupHandler","value":"SetupHandler<T>: Sized","parent":null,"children":[{"krate":0,"index":831}],"decl_id":null,"docs":" A setup handler performing the fetching of `T`.\n","sig":null,"attributes":[{"value":"/ A setup handler performing the fetching of `T`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\setup.rs","byte_start":147856,"byte_end":147907,"line_start":38,"line_end":38,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\setup.rs","byte_start":147992,"byte_end":147997,"line_start":41,"line_end":41,"column_start":8,"column_end":13},"name":"setup","qualname":"::world::setup::SetupHandler::setup","value":"pub fn setup(&mut World)","parent":{"krate":0,"index":829},"children":[],"decl_id":null,"docs":" Sets up `World` for fetching `T`.\n","sig":null,"attributes":[{"value":"/ Sets up `World` for fetching `T`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\setup.rs","byte_start":147947,"byte_end":147984,"line_start":40,"line_end":40,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":832},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\setup.rs","byte_start":148217,"byte_end":148229,"line_start":49,"line_end":49,"column_start":12,"column_end":24},"name":"PanicHandler","qualname":"::world::setup::PanicHandler","value":"","parent":null,"children":[],"decl_id":null,"docs":" A setup handler that simply does nothing and thus will cause a panic on\n fetching.","sig":null,"attributes":[{"value":"/ A setup handler that simply does nothing and thus will cause a panic on","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\setup.rs","byte_start":148021,"byte_end":148096,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ fetching.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\setup.rs","byte_start":148097,"byte_end":148110,"line_start":45,"line_end":45,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\setup.rs","byte_start":148111,"byte_end":148114,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ A typedef called `ReadExpect` exists, so you usually don't use this type","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\setup.rs","byte_start":148115,"byte_end":148191,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ directly.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\setup.rs","byte_start":148192,"byte_end":148205,"line_start":48,"line_end":48,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":837},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":119194,"byte_end":119199,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"Fetch","qualname":"::world::Fetch","value":"Fetch {  }","parent":null,"children":[{"krate":0,"index":840},{"krate":0,"index":841}],"decl_id":null,"docs":" Allows to fetch a resource in a system immutably.","sig":null,"attributes":[{"value":"/ Allows to fetch a resource in a system immutably.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":118979,"byte_end":119032,"line_start":30,"line_end":30,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":119033,"byte_end":119036,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ If the resource isn't strictly required, you should use `Option<Fetch<T>>`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":119037,"byte_end":119116,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":119117,"byte_end":119120,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Type parameters","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":119121,"byte_end":119142,"line_start":34,"line_end":34,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":119143,"byte_end":119146,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ * `T`: The type of the resource","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":119147,"byte_end":119182,"line_start":36,"line_end":36,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":851},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":119852,"byte_end":119860,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"FetchMut","qualname":"::world::FetchMut","value":"FetchMut {  }","parent":null,"children":[{"krate":0,"index":854},{"krate":0,"index":855}],"decl_id":null,"docs":" Allows to fetch a resource in a system mutably.","sig":null,"attributes":[{"value":"/ Allows to fetch a resource in a system mutably.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":119632,"byte_end":119683,"line_start":62,"line_end":62,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":119684,"byte_end":119687,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ If the resource isn't strictly required, you should use","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":119688,"byte_end":119747,"line_start":64,"line_end":64,"column_start":1,"column_end":60}},{"value":"/ `Option<FetchMut<T>>`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":119748,"byte_end":119774,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":119775,"byte_end":119778,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Type parameters","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":119779,"byte_end":119800,"line_start":67,"line_end":67,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":119801,"byte_end":119804,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ * `T`: The type of the resource","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":119805,"byte_end":119840,"line_start":69,"line_end":69,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":865},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":120502,"byte_end":120510,"line_start":99,"line_end":99,"column_start":11,"column_end":19},"name":"Resource","qualname":"::world::Resource","value":"Resource: Any + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" A resource is a data slot which lives in the `World` can only be accessed\n according to Rust's typical borrowing model (one writer xor multiple\n readers).\n","sig":null,"attributes":[{"value":"/ A resource is a data slot which lives in the `World` can only be accessed","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":120298,"byte_end":120375,"line_start":95,"line_end":95,"column_start":1,"column_end":78}},{"value":"/ according to Rust's typical borrowing model (one writer xor multiple","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":120376,"byte_end":120448,"line_start":96,"line_end":96,"column_start":1,"column_end":73}},{"value":"/ readers).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":120449,"byte_end":120462,"line_start":97,"line_end":97,"column_start":1,"column_end":14}},{"value":"cfg(feature = \"parallel\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":120463,"byte_end":120491,"line_start":98,"line_end":98,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1667},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":121636,"byte_end":121646,"line_start":131,"line_end":131,"column_start":12,"column_end":22},"name":"ResourceId","qualname":"::world::ResourceId","value":"ResourceId {  }","parent":null,"children":[{"krate":0,"index":1668},{"krate":0,"index":1669}],"decl_id":null,"docs":" The id of a [`Resource`], which simply wraps a type id and a \"dynamic ID\".\n The \"dynamic ID\" is usually just left `0`, and, unless such documentation\n says otherwise, other libraries will assume that it is always `0`; non-zero\n IDs are only used for special resource types that are specifically defined\n in a more dynamic way, such that resource types can essentially be created\n at run time, without having different static types.","sig":null,"attributes":[{"value":"/ The id of a [`Resource`], which simply wraps a type id and a \"dynamic ID\".","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":121070,"byte_end":121148,"line_start":122,"line_end":122,"column_start":1,"column_end":79}},{"value":"/ The \"dynamic ID\" is usually just left `0`, and, unless such documentation","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":121149,"byte_end":121226,"line_start":123,"line_end":123,"column_start":1,"column_end":78}},{"value":"/ says otherwise, other libraries will assume that it is always `0`; non-zero","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":121227,"byte_end":121306,"line_start":124,"line_end":124,"column_start":1,"column_end":80}},{"value":"/ IDs are only used for special resource types that are specifically defined","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":121307,"byte_end":121385,"line_start":125,"line_end":125,"column_start":1,"column_end":79}},{"value":"/ in a more dynamic way, such that resource types can essentially be created","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":121386,"byte_end":121464,"line_start":126,"line_end":126,"column_start":1,"column_end":79}},{"value":"/ at run time, without having different static types.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":121465,"byte_end":121520,"line_start":127,"line_end":127,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":121521,"byte_end":121524,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ [`Resource`]: trait.Resource.html","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":121525,"byte_end":121562,"line_start":129,"line_end":129,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":121790,"byte_end":121793,"line_start":139,"line_end":139,"column_start":12,"column_end":15},"name":"new","qualname":"<ResourceId>::new","value":"pub fn new<T: Resource>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new resource id from a given type.\n","sig":null,"attributes":[{"value":"/ Creates a new resource id from a given type.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":121716,"byte_end":121764,"line_start":137,"line_end":137,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":121769,"byte_end":121778,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":121952,"byte_end":121964,"line_start":145,"line_end":145,"column_start":12,"column_end":24},"name":"from_type_id","qualname":"<ResourceId>::from_type_id","value":"pub fn from_type_id(TypeId) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new resource id from a raw type ID.\n","sig":null,"attributes":[{"value":"/ Create a new resource id from a raw type ID.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":121878,"byte_end":121926,"line_start":143,"line_end":143,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":121931,"byte_end":121940,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":122587,"byte_end":122606,"line_start":159,"line_end":159,"column_start":12,"column_end":31},"name":"new_with_dynamic_id","qualname":"<ResourceId>::new_with_dynamic_id","value":"pub fn new_with_dynamic_id<T: Resource>(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new resource id from a given type and a `dynamic_id`.","sig":null,"attributes":[{"value":"/ Creates a new resource id from a given type and a `dynamic_id`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":122063,"byte_end":122130,"line_start":149,"line_end":149,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":122135,"byte_end":122138,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ This is usually not what you want (unless you're implementing scripting","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":122143,"byte_end":122218,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/ with `shred` or some similar mechanism to define resources at run-time).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":122223,"byte_end":122299,"line_start":152,"line_end":152,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":122304,"byte_end":122307,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Creating resource IDs with a `dynamic_id` unequal to `0` is only","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":122312,"byte_end":122380,"line_start":154,"line_end":154,"column_start":5,"column_end":73}},{"value":"/ recommended for special types that are specifically defined for","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":122385,"byte_end":122452,"line_start":155,"line_end":155,"column_start":5,"column_end":72}},{"value":"/ scripting; most libraries will just assume that resources are","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":122457,"byte_end":122522,"line_start":156,"line_end":156,"column_start":5,"column_end":70}},{"value":"/ identified only by their type.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":122527,"byte_end":122561,"line_start":157,"line_end":157,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":122566,"byte_end":122575,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":122863,"byte_end":122890,"line_start":166,"line_end":166,"column_start":12,"column_end":39},"name":"from_type_id_and_dynamic_id","qualname":"<ResourceId>::from_type_id_and_dynamic_id","value":"pub fn from_type_id_and_dynamic_id(TypeId, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new resource id from a raw type ID and a \"dynamic ID\" (see type\n documentation).\n","sig":null,"attributes":[{"value":"/ Create a new resource id from a raw type ID and a \"dynamic ID\" (see type","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":122737,"byte_end":122813,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/ documentation).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":122818,"byte_end":122837,"line_start":164,"line_end":164,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":122842,"byte_end":122851,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1696},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":124124,"byte_end":124129,"line_start":205,"line_end":205,"column_start":12,"column_end":17},"name":"World","qualname":"::world::World","value":"World {  }","parent":null,"children":[{"krate":0,"index":1697}],"decl_id":null,"docs":" A [Resource] container, which provides methods to insert, access and manage\n the contained resources.","sig":null,"attributes":[{"value":"/ A [Resource] container, which provides methods to insert, access and manage","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":123253,"byte_end":123332,"line_start":182,"line_end":182,"column_start":1,"column_end":80}},{"value":"/ the contained resources.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":123333,"byte_end":123361,"line_start":183,"line_end":183,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":123362,"byte_end":123365,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ Many methods take `&self` which works because everything","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":123366,"byte_end":123426,"line_start":185,"line_end":185,"column_start":1,"column_end":61}},{"value":"/ is stored with **interior mutability**. In case you violate","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":123427,"byte_end":123490,"line_start":186,"line_end":186,"column_start":1,"column_end":64}},{"value":"/ the borrowing rules of Rust (multiple reads xor one write),","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":123491,"byte_end":123554,"line_start":187,"line_end":187,"column_start":1,"column_end":64}},{"value":"/ you will get a panic.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":123555,"byte_end":123580,"line_start":188,"line_end":188,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":123581,"byte_end":123584,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ # Use with Specs","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":123585,"byte_end":123605,"line_start":190,"line_end":190,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":123606,"byte_end":123609,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ If you're using this from the Specs ECS library, there are two things to be","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":123610,"byte_end":123689,"line_start":192,"line_end":192,"column_start":1,"column_end":80}},{"value":"/ aware of:","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":123690,"byte_end":123703,"line_start":193,"line_end":193,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":123704,"byte_end":123707,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ 1. There are many utility methods Specs provides. To use them, you need to","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":123708,"byte_end":123786,"line_start":195,"line_end":195,"column_start":1,"column_end":79}},{"value":"/ import `specs::WorldExt`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":123787,"byte_end":123816,"line_start":196,"line_end":196,"column_start":1,"column_end":30}},{"value":"/ 2. You should not use [World::empty], but rather `specs::WorldExt::new`. The","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":123817,"byte_end":123897,"line_start":197,"line_end":197,"column_start":1,"column_end":81}},{"value":"/ latter can simply be called using `World::new()`, as long as `WorldExt`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":123898,"byte_end":123973,"line_start":198,"line_end":198,"column_start":1,"column_end":76}},{"value":"/ is imported.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":123974,"byte_end":123990,"line_start":199,"line_end":199,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":123991,"byte_end":123994,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ # Resource Ids","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":123995,"byte_end":124013,"line_start":201,"line_end":201,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":124014,"byte_end":124017,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ Resources are identified by `ResourceId`s, which consist of a `TypeId`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":124018,"byte_end":124093,"line_start":203,"line_end":203,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":124363,"byte_end":124368,"line_start":213,"line_end":213,"column_start":12,"column_end":17},"name":"empty","qualname":"<World>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty resource container.","sig":null,"attributes":[{"value":"/ Creates a new, empty resource container.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":124218,"byte_end":124262,"line_start":210,"line_end":210,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":124267,"byte_end":124270,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ Note that if you're using Specs, you should use `WorldExt::new` instead.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":124275,"byte_end":124351,"line_start":212,"line_end":212,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":125022,"byte_end":125028,"line_start":239,"line_end":239,"column_start":12,"column_end":18},"name":"insert","qualname":"<World>::insert","value":"pub fn insert<R>(&mut Self, R) where R: Resource","parent":null,"children":[],"decl_id":null,"docs":" Inserts a resource into this container. If the resource existed before,\n it will be overwritten.","sig":null,"attributes":[{"value":"/ Inserts a resource into this container. If the resource existed before,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":124419,"byte_end":124494,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"/ it will be overwritten.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":124499,"byte_end":124526,"line_start":218,"line_end":218,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":124531,"byte_end":124534,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":124539,"byte_end":124553,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":124558,"byte_end":124561,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Every type satisfying `Any + Send + Sync` automatically","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":124566,"byte_end":124625,"line_start":222,"line_end":222,"column_start":5,"column_end":64}},{"value":"/ implements `Resource`, thus can be added:","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":124630,"byte_end":124675,"line_start":223,"line_end":223,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":124680,"byte_end":124683,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":124688,"byte_end":124699,"line_start":225,"line_end":225,"column_start":5,"column_end":16}},{"value":"/ # #![allow(dead_code)]","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":124704,"byte_end":124730,"line_start":226,"line_end":226,"column_start":5,"column_end":31}},{"value":"/ struct MyRes(i32);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":124735,"byte_end":124757,"line_start":227,"line_end":227,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":124762,"byte_end":124769,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":124774,"byte_end":124777,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ When you have a resource, simply insert it like this:","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":124782,"byte_end":124839,"line_start":230,"line_end":230,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":124844,"byte_end":124847,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":124852,"byte_end":124863,"line_start":232,"line_end":232,"column_start":5,"column_end":16}},{"value":"/ # struct MyRes(i32);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":124868,"byte_end":124892,"line_start":233,"line_end":233,"column_start":5,"column_end":29}},{"value":"/ use shred::World;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":124897,"byte_end":124918,"line_start":234,"line_end":234,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":124923,"byte_end":124926,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ let mut world = World::empty();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":124931,"byte_end":124966,"line_start":236,"line_end":236,"column_start":5,"column_end":40}},{"value":"/ world.insert(MyRes(5));","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":124971,"byte_end":124998,"line_start":237,"line_end":237,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":125003,"byte_end":125010,"line_start":238,"line_end":238,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":125617,"byte_end":125623,"line_start":254,"line_end":254,"column_start":12,"column_end":18},"name":"remove","qualname":"<World>::remove","value":"pub fn remove<R>(&mut Self) -> Option<R> where R: Resource","parent":null,"children":[],"decl_id":null,"docs":" Removes a resource of type `R` from the `World` and returns its\n ownership to the caller. In case there is no such resource in this\n `World`, `None` will be returned.","sig":null,"attributes":[{"value":"/ Removes a resource of type `R` from the `World` and returns its","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":125151,"byte_end":125218,"line_start":246,"line_end":246,"column_start":5,"column_end":72}},{"value":"/ ownership to the caller. In case there is no such resource in this","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":125223,"byte_end":125293,"line_start":247,"line_end":247,"column_start":5,"column_end":75}},{"value":"/ `World`, `None` will be returned.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":125298,"byte_end":125335,"line_start":248,"line_end":248,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":125340,"byte_end":125343,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Use this method with caution; other functions and systems might assume","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":125348,"byte_end":125422,"line_start":250,"line_end":250,"column_start":5,"column_end":79}},{"value":"/ this resource still exists. Thus, only use this if you're sure no","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":125427,"byte_end":125496,"line_start":251,"line_end":251,"column_start":5,"column_end":74}},{"value":"/ system will try to access this resource after you removed it (or else","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":125501,"byte_end":125574,"line_start":252,"line_end":252,"column_start":5,"column_end":78}},{"value":"/ you will get a panic).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":125579,"byte_end":125605,"line_start":253,"line_end":253,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":125830,"byte_end":125839,"line_start":262,"line_end":262,"column_start":12,"column_end":21},"name":"has_value","qualname":"<World>::has_value","value":"pub fn has_value<R>(&Self) -> bool where R: Resource","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the specified resource type `R` exists in `self`.\n","sig":null,"attributes":[{"value":"/ Returns true if the specified resource type `R` exists in `self`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":125749,"byte_end":125818,"line_start":261,"line_end":261,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":126034,"byte_end":126047,"line_start":270,"line_end":270,"column_start":12,"column_end":25},"name":"has_value_raw","qualname":"<World>::has_value_raw","value":"pub fn has_value_raw(&Self, ResourceId) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the specified resource type exists in `self`.\n","sig":null,"attributes":[{"value":"/ Returns true if the specified resource type exists in `self`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":125957,"byte_end":126022,"line_start":269,"line_end":269,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":126197,"byte_end":126202,"line_start":275,"line_end":275,"column_start":12,"column_end":17},"name":"entry","qualname":"<World>::entry","value":"pub fn entry<R>(&mut Self) -> Entry<, R> where R: Resource","parent":null,"children":[],"decl_id":null,"docs":" Returns an entry for the resource with type `R`.\n","sig":null,"attributes":[{"value":"/ Returns an entry for the resource with type `R`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":126133,"byte_end":126185,"line_start":274,"line_end":274,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":127121,"byte_end":127132,"line_start":304,"line_end":304,"column_start":12,"column_end":23},"name":"system_data","qualname":"<World>::system_data","value":"pub fn system_data<'a, T>(&'a Self) -> T where T: SystemData","parent":null,"children":[],"decl_id":null,"docs":" Gets `SystemData` `T` from the `World`. This can be used to retrieve\n data just like in [System](crate::System)s.","sig":null,"attributes":[{"value":"/ Gets `SystemData` `T` from the `World`. This can be used to retrieve","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":126344,"byte_end":126416,"line_start":282,"line_end":282,"column_start":5,"column_end":77}},{"value":"/ data just like in [System](crate::System)s.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":126421,"byte_end":126468,"line_start":283,"line_end":283,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":126473,"byte_end":126476,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ This will not setup the system data, i.e. resources fetched here must","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":126481,"byte_end":126554,"line_start":285,"line_end":285,"column_start":5,"column_end":78}},{"value":"/ exist already.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":126559,"byte_end":126577,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":126582,"byte_end":126585,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":126590,"byte_end":126604,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":126609,"byte_end":126612,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":126617,"byte_end":126624,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ # use shred::*;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":126629,"byte_end":126648,"line_start":291,"line_end":291,"column_start":5,"column_end":24}},{"value":"/ # #[derive(Default)] struct Timer; #[derive(Default)] struct AnotherResource;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":126653,"byte_end":126734,"line_start":292,"line_end":292,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":126739,"byte_end":126742,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ // NOTE: If you use Specs, use `World::new` instead.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":126747,"byte_end":126803,"line_start":294,"line_end":294,"column_start":5,"column_end":61}},{"value":"/ let mut world = World::empty();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":126808,"byte_end":126843,"line_start":295,"line_end":295,"column_start":5,"column_end":40}},{"value":"/ world.insert(Timer);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":126848,"byte_end":126872,"line_start":296,"line_end":296,"column_start":5,"column_end":29}},{"value":"/ world.insert(AnotherResource);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":126877,"byte_end":126911,"line_start":297,"line_end":297,"column_start":5,"column_end":39}},{"value":"/ let system_data: (Read<Timer>, Read<AnotherResource>) = world.system_data();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":126916,"byte_end":126996,"line_start":298,"line_end":298,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":127001,"byte_end":127008,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":127013,"byte_end":127016,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":127021,"byte_end":127033,"line_start":301,"line_end":301,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":127038,"byte_end":127041,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ * Panics if `T` is already borrowed in an incompatible way.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":127046,"byte_end":127109,"line_start":303,"line_end":303,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":128465,"byte_end":128470,"line_start":348,"line_end":348,"column_start":12,"column_end":17},"name":"setup","qualname":"<World>::setup","value":"pub fn setup<'a, T: SystemData>(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Sets up system data `T` for fetching afterwards.","sig":null,"attributes":[{"value":"/ Sets up system data `T` for fetching afterwards.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":127242,"byte_end":127294,"line_start":311,"line_end":311,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":127299,"byte_end":127302,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Most `SystemData` implementations will insert a sensible default value,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":127307,"byte_end":127382,"line_start":313,"line_end":313,"column_start":5,"column_end":80}},{"value":"/ by implementing [SystemData::setup]. However, it is not guaranteed to","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":127387,"byte_end":127460,"line_start":314,"line_end":314,"column_start":5,"column_end":78}},{"value":"/ do that; if there is no sensible default, `setup` might not do anything.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":127465,"byte_end":127541,"line_start":315,"line_end":315,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":127546,"byte_end":127549,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":127554,"byte_end":127568,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":127573,"byte_end":127576,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":127581,"byte_end":127588,"line_start":319,"line_end":319,"column_start":5,"column_end":12}},{"value":"/ use shred::{Read, World};","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":127593,"byte_end":127622,"line_start":320,"line_end":320,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":127627,"byte_end":127630,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ #[derive(Default)]","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":127635,"byte_end":127657,"line_start":322,"line_end":322,"column_start":5,"column_end":27}},{"value":"/ struct MyCounter(u32);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":127662,"byte_end":127688,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":127693,"byte_end":127696,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ // NOTE: If you use Specs, use `World::new` instead.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":127701,"byte_end":127757,"line_start":325,"line_end":325,"column_start":5,"column_end":61}},{"value":"/ let mut world = World::empty();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":127762,"byte_end":127797,"line_start":326,"line_end":326,"column_start":5,"column_end":40}},{"value":"/ assert!(!world.has_value::<MyCounter>());","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":127802,"byte_end":127847,"line_start":327,"line_end":327,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":127852,"byte_end":127855,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ // `Read<MyCounter>` requires a `Default` implementation, and uses","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":127860,"byte_end":127930,"line_start":329,"line_end":329,"column_start":5,"column_end":75}},{"value":"/ // that to initialize the resource","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":127935,"byte_end":127973,"line_start":330,"line_end":330,"column_start":5,"column_end":43}},{"value":"/ world.setup::<Read<MyCounter>>();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":127978,"byte_end":128015,"line_start":331,"line_end":331,"column_start":5,"column_end":42}},{"value":"/ assert!(world.has_value::<MyCounter>());","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":128020,"byte_end":128064,"line_start":332,"line_end":332,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":128069,"byte_end":128076,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":128081,"byte_end":128084,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Here's another example, showing the case where no resource gets","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":128089,"byte_end":128156,"line_start":335,"line_end":335,"column_start":5,"column_end":72}},{"value":"/ initialized:","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":128161,"byte_end":128177,"line_start":336,"line_end":336,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":128182,"byte_end":128185,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":128190,"byte_end":128197,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"/ use shred::{ReadExpect, World};","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":128202,"byte_end":128237,"line_start":339,"line_end":339,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":128242,"byte_end":128245,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ struct MyCounter(u32);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":128250,"byte_end":128276,"line_start":341,"line_end":341,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":128281,"byte_end":128284,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ // NOTE: If you use Specs, use `World::new` instead.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":128289,"byte_end":128345,"line_start":343,"line_end":343,"column_start":5,"column_end":61}},{"value":"/ let mut world = World::empty();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":128350,"byte_end":128385,"line_start":344,"line_end":344,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":128390,"byte_end":128393,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ world.setup::<ReadExpect<MyCounter>>();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":128398,"byte_end":128441,"line_start":346,"line_end":346,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":128446,"byte_end":128453,"line_start":347,"line_end":347,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":130268,"byte_end":130272,"line_start":402,"line_end":402,"column_start":12,"column_end":16},"name":"exec","qualname":"<World>::exec","value":"pub fn exec<'a, F, R, T>(&'a mut Self, F) -> R where F: FnOnce(T) -> R,\nT: SystemData","parent":null,"children":[],"decl_id":null,"docs":" Executes `f` once, right now and with the specified system data.","sig":null,"attributes":[{"value":"/ Executes `f` once, right now and with the specified system data.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":128542,"byte_end":128610,"line_start":352,"line_end":352,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":128615,"byte_end":128618,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ This sets up the system data `f` expects, fetches it and then","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":128623,"byte_end":128688,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ executes `f`. This is essentially like a one-time","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":128693,"byte_end":128746,"line_start":355,"line_end":355,"column_start":5,"column_end":58}},{"value":"/ [System](crate::System).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":128751,"byte_end":128779,"line_start":356,"line_end":356,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":128784,"byte_end":128787,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This is especially useful if you either need a lot of system data or,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":128792,"byte_end":128865,"line_start":358,"line_end":358,"column_start":5,"column_end":78}},{"value":"/ with Specs, if you want to build an entity and for that you need to","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":128870,"byte_end":128941,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ access resources first - just fetching the resources and building","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":128946,"byte_end":129015,"line_start":360,"line_end":360,"column_start":5,"column_end":74}},{"value":"/ the entity would cause a double borrow.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129020,"byte_end":129063,"line_start":361,"line_end":361,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129068,"byte_end":129071,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ **Calling this method is equivalent to:**","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129076,"byte_end":129121,"line_start":363,"line_end":363,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129126,"byte_end":129129,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129134,"byte_end":129141,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ # use shred::*;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129146,"byte_end":129165,"line_start":366,"line_end":366,"column_start":5,"column_end":24}},{"value":"/ # struct MySystemData; impl MySystemData { fn do_something(&self) {} }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129170,"byte_end":129244,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/ # impl<'a> SystemData<'a> for MySystemData {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129249,"byte_end":129297,"line_start":368,"line_end":368,"column_start":5,"column_end":53}},{"value":"/ #     fn fetch(res: &World) -> Self { MySystemData }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129302,"byte_end":129358,"line_start":369,"line_end":369,"column_start":5,"column_end":61}},{"value":"/ #     fn reads() -> Vec<ResourceId> { vec![] }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129363,"byte_end":129413,"line_start":370,"line_end":370,"column_start":5,"column_end":55}},{"value":"/ #     fn writes() -> Vec<ResourceId> { vec![] }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129418,"byte_end":129469,"line_start":371,"line_end":371,"column_start":5,"column_end":56}},{"value":"/ #     fn setup(res: &mut World) {}","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129474,"byte_end":129512,"line_start":372,"line_end":372,"column_start":5,"column_end":43}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129517,"byte_end":129524,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"/ # let mut world = World::empty();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129529,"byte_end":129566,"line_start":374,"line_end":374,"column_start":5,"column_end":42}},{"value":"/ {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129571,"byte_end":129576,"line_start":375,"line_end":375,"column_start":5,"column_end":10}},{"value":"/     // note the extra scope","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129581,"byte_end":129612,"line_start":376,"line_end":376,"column_start":5,"column_end":36}},{"value":"/     world.setup::<MySystemData>();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129617,"byte_end":129655,"line_start":377,"line_end":377,"column_start":5,"column_end":43}},{"value":"/     let my_data: MySystemData = world.system_data();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129660,"byte_end":129716,"line_start":378,"line_end":378,"column_start":5,"column_end":61}},{"value":"/     my_data.do_something();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129721,"byte_end":129752,"line_start":379,"line_end":379,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129757,"byte_end":129762,"line_start":380,"line_end":380,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129767,"byte_end":129774,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129779,"byte_end":129782,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129787,"byte_end":129801,"line_start":383,"line_end":383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129806,"byte_end":129809,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129814,"byte_end":129821,"line_start":385,"line_end":385,"column_start":5,"column_end":12}},{"value":"/ # use shred::*;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129826,"byte_end":129845,"line_start":386,"line_end":386,"column_start":5,"column_end":24}},{"value":"/ // NOTE: If you use Specs, use `World::new` instead.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129850,"byte_end":129906,"line_start":387,"line_end":387,"column_start":5,"column_end":61}},{"value":"/ let mut world = World::empty();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129911,"byte_end":129946,"line_start":388,"line_end":388,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129951,"byte_end":129954,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ #[derive(Default)]","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129959,"byte_end":129981,"line_start":390,"line_end":390,"column_start":5,"column_end":27}},{"value":"/ struct MyRes {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":129986,"byte_end":130004,"line_start":391,"line_end":391,"column_start":5,"column_end":23}},{"value":"/     field: i32,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":130009,"byte_end":130028,"line_start":392,"line_end":392,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":130033,"byte_end":130038,"line_start":393,"line_end":393,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":130043,"byte_end":130046,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ world.exec(|(mut my_res,): (Write<MyRes>,)| {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":130051,"byte_end":130100,"line_start":395,"line_end":395,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(my_res.field, 0);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":130105,"byte_end":130141,"line_start":396,"line_end":396,"column_start":5,"column_end":41}},{"value":"/     my_res.field = 5;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":130146,"byte_end":130171,"line_start":397,"line_end":397,"column_start":5,"column_end":30}},{"value":"/ });","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":130176,"byte_end":130183,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":130188,"byte_end":130191,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(world.fetch::<MyRes>().field, 5);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":130196,"byte_end":130244,"line_start":400,"line_end":400,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":130249,"byte_end":130256,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":130689,"byte_end":130694,"line_start":418,"line_end":418,"column_start":12,"column_end":17},"name":"fetch","qualname":"<World>::fetch","value":"pub fn fetch<T>(&Self) -> Fetch<, T> where T: Resource","parent":null,"children":[],"decl_id":null,"docs":" Fetches the resource with the specified type `T` or panics if it doesn't\n exist.","sig":null,"attributes":[{"value":"/ Fetches the resource with the specified type `T` or panics if it doesn't","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":130449,"byte_end":130525,"line_start":411,"line_end":411,"column_start":5,"column_end":81}},{"value":"/ exist.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":130530,"byte_end":130540,"line_start":412,"line_end":412,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":130545,"byte_end":130548,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":130553,"byte_end":130565,"line_start":414,"line_end":414,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":130570,"byte_end":130573,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ Panics if the resource doesn't exist.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":130578,"byte_end":130619,"line_start":416,"line_end":416,"column_start":5,"column_end":46}},{"value":"/ Panics if the resource is being accessed mutably.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":130624,"byte_end":130677,"line_start":417,"line_end":417,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":131267,"byte_end":131276,"line_start":436,"line_end":436,"column_start":12,"column_end":21},"name":"try_fetch","qualname":"<World>::try_fetch","value":"pub fn try_fetch<T>(&Self) -> Option<Fetch<, T>> where T: Resource","parent":null,"children":[],"decl_id":null,"docs":" Like `fetch`, but returns an `Option` instead of inserting a default\n value in case the resource does not exist.\n","sig":null,"attributes":[{"value":"/ Like `fetch`, but returns an `Option` instead of inserting a default","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":131132,"byte_end":131204,"line_start":434,"line_end":434,"column_start":5,"column_end":77}},{"value":"/ value in case the resource does not exist.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":131209,"byte_end":131255,"line_start":435,"line_end":435,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":131896,"byte_end":131911,"line_start":457,"line_end":457,"column_start":12,"column_end":27},"name":"try_fetch_by_id","qualname":"<World>::try_fetch_by_id","value":"pub fn try_fetch_by_id<T>(&Self, ResourceId) -> Option<Fetch<, T>> where\nT: Resource","parent":null,"children":[],"decl_id":null,"docs":" Like `try_fetch`, but fetches the resource by its `ResourceId` which\n allows using a dynamic ID.","sig":null,"attributes":[{"value":"/ Like `try_fetch`, but fetches the resource by its `ResourceId` which","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":131552,"byte_end":131624,"line_start":448,"line_end":448,"column_start":5,"column_end":77}},{"value":"/ allows using a dynamic ID.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":131629,"byte_end":131659,"line_start":449,"line_end":449,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":131664,"byte_end":131667,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ This is usually not what you need; please read the type-level","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":131672,"byte_end":131737,"line_start":451,"line_end":451,"column_start":5,"column_end":70}},{"value":"/ documentation of `ResourceId`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":131742,"byte_end":131776,"line_start":452,"line_end":452,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":131781,"byte_end":131784,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":131789,"byte_end":131801,"line_start":454,"line_end":454,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":131806,"byte_end":131809,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ This method panics if `id` refers to a different type ID than `T`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":131814,"byte_end":131884,"line_start":456,"line_end":456,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":132451,"byte_end":132460,"line_start":477,"line_end":477,"column_start":12,"column_end":21},"name":"fetch_mut","qualname":"<World>::fetch_mut","value":"pub fn fetch_mut<T>(&Self) -> FetchMut<, T> where T: Resource","parent":null,"children":[],"decl_id":null,"docs":" Fetches the resource with the specified type `T` mutably.","sig":null,"attributes":[{"value":"/ Fetches the resource with the specified type `T` mutably.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":132193,"byte_end":132254,"line_start":469,"line_end":469,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":132259,"byte_end":132262,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ Please see `fetch` for details.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":132267,"byte_end":132302,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":132307,"byte_end":132310,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":132315,"byte_end":132327,"line_start":473,"line_end":473,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":132332,"byte_end":132335,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ Panics if the resource doesn't exist.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":132340,"byte_end":132381,"line_start":475,"line_end":475,"column_start":5,"column_end":46}},{"value":"/ Panics if the resource is already being accessed.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":132386,"byte_end":132439,"line_start":476,"line_end":476,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":132736,"byte_end":132749,"line_start":486,"line_end":486,"column_start":12,"column_end":25},"name":"try_fetch_mut","qualname":"<World>::try_fetch_mut","value":"pub fn try_fetch_mut<T>(&Self) -> Option<FetchMut<, T>> where T: Resource","parent":null,"children":[],"decl_id":null,"docs":" Like `fetch_mut`, but returns an `Option` instead of inserting a default\n value in case the resource does not exist.\n","sig":null,"attributes":[{"value":"/ Like `fetch_mut`, but returns an `Option` instead of inserting a default","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":132597,"byte_end":132673,"line_start":484,"line_end":484,"column_start":5,"column_end":81}},{"value":"/ value in case the resource does not exist.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":132678,"byte_end":132724,"line_start":485,"line_end":485,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":133386,"byte_end":133405,"line_start":507,"line_end":507,"column_start":12,"column_end":31},"name":"try_fetch_mut_by_id","qualname":"<World>::try_fetch_mut_by_id","value":"pub fn try_fetch_mut_by_id<T>(&Self, ResourceId) -> Option<FetchMut<, T>>\nwhere T: Resource","parent":null,"children":[],"decl_id":null,"docs":" Like `try_fetch_mut`, but fetches the resource by its `ResourceId` which\n allows using a dynamic ID.","sig":null,"attributes":[{"value":"/ Like `try_fetch_mut`, but fetches the resource by its `ResourceId` which","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":133038,"byte_end":133114,"line_start":498,"line_end":498,"column_start":5,"column_end":81}},{"value":"/ allows using a dynamic ID.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":133119,"byte_end":133149,"line_start":499,"line_end":499,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":133154,"byte_end":133157,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ This is usually not what you need; please read the type-level","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":133162,"byte_end":133227,"line_start":501,"line_end":501,"column_start":5,"column_end":70}},{"value":"/ documentation of `ResourceId`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":133232,"byte_end":133266,"line_start":502,"line_end":502,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":133271,"byte_end":133274,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":133279,"byte_end":133291,"line_start":504,"line_end":504,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":133296,"byte_end":133299,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ This method panics if `id` refers to a different type ID than `T`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":133304,"byte_end":133374,"line_start":506,"line_end":506,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":134008,"byte_end":134020,"line_start":527,"line_end":527,"column_start":12,"column_end":24},"name":"insert_by_id","qualname":"<World>::insert_by_id","value":"pub fn insert_by_id<R>(&mut Self, ResourceId, R) where R: Resource","parent":null,"children":[],"decl_id":null,"docs":" Internal function for inserting resources, should only be used if you\n know what you're doing.","sig":null,"attributes":[{"value":"/ Internal function for inserting resources, should only be used if you","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":133700,"byte_end":133773,"line_start":519,"line_end":519,"column_start":5,"column_end":78}},{"value":"/ know what you're doing.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":133778,"byte_end":133805,"line_start":520,"line_end":520,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":133810,"byte_end":133813,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ This is useful for inserting resources with a custom `ResourceId`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":133818,"byte_end":133888,"line_start":522,"line_end":522,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":133893,"byte_end":133896,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":133901,"byte_end":133913,"line_start":524,"line_end":524,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":133918,"byte_end":133921,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ This method panics if `id` refers to a different type ID than `R`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":133926,"byte_end":133996,"line_start":526,"line_end":526,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":134515,"byte_end":134527,"line_start":544,"line_end":544,"column_start":12,"column_end":24},"name":"remove_by_id","qualname":"<World>::remove_by_id","value":"pub fn remove_by_id<R>(&mut Self, ResourceId) -> Option<R> where R: Resource","parent":null,"children":[],"decl_id":null,"docs":" Internal function for removing resources, should only be used if you\n know what you're doing.","sig":null,"attributes":[{"value":"/ Internal function for removing resources, should only be used if you","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":134209,"byte_end":134281,"line_start":536,"line_end":536,"column_start":5,"column_end":77}},{"value":"/ know what you're doing.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":134286,"byte_end":134313,"line_start":537,"line_end":537,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":134318,"byte_end":134321,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ This is useful for removing resources with a custom `ResourceId`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":134326,"byte_end":134395,"line_start":539,"line_end":539,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":134400,"byte_end":134403,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":134408,"byte_end":134420,"line_start":541,"line_end":541,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":134425,"byte_end":134428,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ This method panics if `id` refers to a different type ID than `R`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":134433,"byte_end":134503,"line_start":543,"line_end":543,"column_start":5,"column_end":75}},{"value":"allow(clippy :: redundant_closure)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":134642,"byte_end":134678,"line_start":549,"line_end":549,"column_start":9,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":135071,"byte_end":135089,"line_start":563,"line_end":563,"column_start":12,"column_end":30},"name":"try_fetch_internal","qualname":"<World>::try_fetch_internal","value":"pub fn try_fetch_internal(&Self, ResourceId)\n-> Option<&TrustCell<Box<Resource>>>","parent":null,"children":[],"decl_id":null,"docs":" Internal function for fetching resources, should only be used if you\n know what you're doing.\n","sig":null,"attributes":[{"value":"/ Internal function for fetching resources, should only be used if you","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":134955,"byte_end":135027,"line_start":561,"line_end":561,"column_start":5,"column_end":77}},{"value":"/ know what you're doing.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":135032,"byte_end":135059,"line_start":562,"line_end":562,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":135316,"byte_end":135323,"line_start":569,"line_end":569,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<World>::get_mut","value":"pub fn get_mut<T: Resource>(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a resource without fetching, which is cheaper, but only\n available with `&mut self`.\n","sig":null,"attributes":[{"value":"/ Retrieves a resource without fetching, which is cheaper, but only","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":135199,"byte_end":135268,"line_start":567,"line_end":567,"column_start":5,"column_end":74}},{"value":"/ available with `&mut self`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":135273,"byte_end":135304,"line_start":568,"line_end":568,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":135609,"byte_end":135620,"line_start":576,"line_end":576,"column_start":12,"column_end":23},"name":"get_mut_raw","qualname":"<World>::get_mut_raw","value":"pub fn get_mut_raw(&mut Self, ResourceId) -> Option<&mut Resource>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a resource without fetching, which is cheaper, but only\n available with `&mut self`.\n","sig":null,"attributes":[{"value":"/ Retrieves a resource without fetching, which is cheaper, but only","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":135492,"byte_end":135561,"line_start":574,"line_end":574,"column_start":5,"column_end":74}},{"value":"/ available with `&mut self`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":135566,"byte_end":135597,"line_start":575,"line_end":575,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":975},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":3499,"byte_end":3508,"line_start":122,"line_end":122,"column_start":10,"column_end":19},"name":"Resources","qualname":"::Resources","value":"World","parent":null,"children":[],"decl_id":null,"docs":" Alias for `World` for easier migration to the new version. Will be removed\n in the future.\n","sig":null,"attributes":[{"value":"/ Alias for `World` for easier migration to the new version. Will be removed","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":3332,"byte_end":3410,"line_start":119,"line_end":119,"column_start":1,"column_end":79}},{"value":"/ in the future.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":3411,"byte_end":3429,"line_start":120,"line_end":120,"column_start":1,"column_end":19}},{"value":"deprecated(since = \"0.8.0\", note = \"renamed to `World`\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":3430,"byte_end":3489,"line_start":121,"line_end":121,"column_start":1,"column_end":60}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":4172,"byte_end":4185,"line_start":26,"line_end":26,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":4335,"byte_end":4348,"line_start":32,"line_end":32,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":4800,"byte_end":4803,"line_start":48,"line_end":48,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":7347,"byte_end":7350,"line_start":115,"line_end":115,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":7467,"byte_end":7470,"line_start":123,"line_end":123,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":7595,"byte_end":7598,"line_start":129,"line_end":129,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":8025,"byte_end":8031,"line_start":148,"line_end":148,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":10697,"byte_end":10703,"line_start":217,"line_end":217,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":10824,"byte_end":10830,"line_start":225,"line_end":225,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":10937,"byte_end":10943,"line_start":231,"line_end":231,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":11204,"byte_end":11213,"line_start":244,"line_end":244,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":14658,"byte_end":14667,"line_start":358,"line_end":358,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":14709,"byte_end":14718,"line_start":360,"line_end":360,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":22363,"byte_end":22378,"line_start":35,"line_end":35,"column_start":13,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":25321,"byte_end":25325,"line_start":145,"line_end":145,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":27377,"byte_end":27390,"line_start":14,"line_end":14,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":27568,"byte_end":27581,"line_start":21,"line_end":21,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":28034,"byte_end":28053,"line_start":39,"line_end":39,"column_start":36,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":31132,"byte_end":31160,"line_start":109,"line_end":109,"column_start":42,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":31419,"byte_end":31447,"line_start":120,"line_end":120,"column_start":25,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":32089,"byte_end":32117,"line_start":143,"line_end":143,"column_start":30,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":45320,"byte_end":45337,"line_start":104,"line_end":104,"column_start":14,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":233},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":242},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":55187,"byte_end":55204,"line_start":398,"line_end":398,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":55890,"byte_end":55907,"line_start":423,"line_end":423,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":56654,"byte_end":56664,"line_start":19,"line_end":19,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":60233,"byte_end":60243,"line_start":130,"line_end":130,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":64563,"byte_end":64566,"line_start":71,"line_end":71,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":64822,"byte_end":64825,"line_start":85,"line_end":85,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":68298,"byte_end":68304,"line_start":210,"line_end":210,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":69158,"byte_end":69164,"line_start":238,"line_end":238,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":70460,"byte_end":70461,"line_start":278,"line_end":278,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":71000,"byte_end":71003,"line_start":303,"line_end":303,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":72009,"byte_end":72012,"line_start":346,"line_end":346,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":72536,"byte_end":72539,"line_start":365,"line_end":365,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\stage.rs","byte_start":76532,"byte_end":76540,"line_start":60,"line_end":60,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\stage.rs","byte_start":77071,"byte_end":77076,"line_start":84,"line_end":84,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\stage.rs","byte_start":78499,"byte_end":78512,"line_start":142,"line_end":142,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92137,"byte_end":92146,"line_start":13,"line_end":13,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92194,"byte_end":92203,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":93404,"byte_end":93412,"line_start":67,"line_end":67,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":94302,"byte_end":94305,"line_start":98,"line_end":98,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":95246,"byte_end":95257,"line_start":132,"line_end":132,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":98067,"byte_end":98076,"line_start":240,"line_end":240,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":555},{"krate":0,"index":558},{"krate":0,"index":561},{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":100992,"byte_end":101001,"line_start":333,"line_end":333,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":106719,"byte_end":106730,"line_start":64,"line_end":64,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":107254,"byte_end":107265,"line_start":91,"line_end":91,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":605},{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":108533,"byte_end":108534,"line_start":134,"line_end":134,"column_start":28,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":113336,"byte_end":113337,"line_start":289,"line_end":289,"column_start":39,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":113995,"byte_end":114009,"line_start":324,"line_end":324,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":115439,"byte_end":115450,"line_start":374,"line_end":374,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":141593,"byte_end":141597,"line_start":24,"line_end":24,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":722},{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":141751,"byte_end":141755,"line_start":35,"line_end":35,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":141932,"byte_end":141936,"line_start":44,"line_end":44,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":142680,"byte_end":142685,"line_start":79,"line_end":79,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":747},{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":142829,"byte_end":142834,"line_start":90,"line_end":90,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":142985,"byte_end":142990,"line_start":99,"line_end":99,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":143171,"byte_end":143176,"line_start":108,"line_end":108,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":143585,"byte_end":143591,"line_start":132,"line_end":132,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":143930,"byte_end":143936,"line_start":151,"line_end":151,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\entry.rs","byte_start":145438,"byte_end":145443,"line_start":32,"line_end":32,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\setup.rs","byte_start":147712,"byte_end":147727,"line_start":29,"line_end":29,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\setup.rs","byte_start":148260,"byte_end":148272,"line_start":51,"line_end":51,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":119305,"byte_end":119310,"line_start":42,"line_end":42,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":845},{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":119479,"byte_end":119484,"line_start":53,"line_end":53,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":119973,"byte_end":119981,"line_start":75,"line_end":75,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":120153,"byte_end":120161,"line_start":86,"line_end":86,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":120964,"byte_end":120965,"line_start":118,"line_end":118,"column_start":22,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":121699,"byte_end":121709,"line_start":136,"line_end":136,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":872},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":877},{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":124206,"byte_end":124211,"line_start":209,"line_end":209,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":884},{"krate":0,"index":886},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":891},{"krate":0,"index":894},{"krate":0,"index":897},{"krate":0,"index":902},{"krate":0,"index":905},{"krate":0,"index":908},{"krate":0,"index":911},{"krate":0,"index":914},{"krate":0,"index":917},{"krate":0,"index":920},{"krate":0,"index":922},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\lib.rs","byte_start":2372,"byte_end":2376,"line_start":87,"line_end":87,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":4172,"byte_end":4185,"line_start":26,"line_end":26,"column_start":18,"column_end":31},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":976},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":4335,"byte_end":4348,"line_start":32,"line_end":32,"column_start":16,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":976},"to":{"krate":1,"index":1724}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":4800,"byte_end":4803,"line_start":48,"line_end":48,"column_start":21,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":7347,"byte_end":7350,"line_start":115,"line_end":115,"column_start":31,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":996},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":7467,"byte_end":7470,"line_start":123,"line_end":123,"column_start":30,"column_end":33},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":996},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":7595,"byte_end":7598,"line_start":129,"line_end":129,"column_start":31,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":996},"to":{"krate":2,"index":1762}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":8025,"byte_end":8031,"line_start":148,"line_end":148,"column_start":21,"column_end":27},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1005},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":10697,"byte_end":10703,"line_start":217,"line_end":217,"column_start":31,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":10824,"byte_end":10830,"line_start":225,"line_end":225,"column_start":34,"column_end":40},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":2284}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":10937,"byte_end":10943,"line_start":231,"line_end":231,"column_start":30,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":11204,"byte_end":11213,"line_start":244,"line_end":244,"column_start":9,"column_end":18},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1014},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":14658,"byte_end":14667,"line_start":358,"line_end":358,"column_start":25,"column_end":34},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1014},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\cell.rs","byte_start":14709,"byte_end":14718,"line_start":360,"line_end":360,"column_start":21,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1014},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":22363,"byte_end":22378,"line_start":35,"line_end":35,"column_start":13,"column_end":28},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\async_dispatcher.rs","byte_start":25321,"byte_end":25325,"line_start":145,"line_end":145,"column_start":9,"column_end":13},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":27377,"byte_end":27390,"line_start":14,"line_end":14,"column_start":6,"column_end":19},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":27568,"byte_end":27581,"line_start":21,"line_end":21,"column_start":19,"column_end":32},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1021},"to":{"krate":0,"index":578}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":28034,"byte_end":28053,"line_start":39,"line_end":39,"column_start":36,"column_end":55},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":168},"to":{"krate":0,"index":654}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":31132,"byte_end":31160,"line_start":109,"line_end":109,"column_start":42,"column_end":70},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":182},"to":{"krate":0,"index":177}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":31419,"byte_end":31447,"line_start":120,"line_end":120,"column_start":25,"column_end":53},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":182},"to":{"krate":0,"index":621}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\batch.rs","byte_start":32089,"byte_end":32117,"line_start":143,"line_end":143,"column_start":30,"column_end":58},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":182},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":45320,"byte_end":45337,"line_start":104,"line_end":104,"column_start":14,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":55187,"byte_end":55204,"line_start":398,"line_end":398,"column_start":10,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\builder.rs","byte_start":55890,"byte_end":55907,"line_start":423,"line_end":423,"column_start":29,"column_end":46},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1026},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":56654,"byte_end":56664,"line_start":19,"line_end":19,"column_start":14,"column_end":24},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\dispatcher.rs","byte_start":60233,"byte_end":60243,"line_start":130,"line_end":130,"column_start":33,"column_end":43},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":272},"to":{"krate":0,"index":610}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":64563,"byte_end":64566,"line_start":71,"line_end":71,"column_start":25,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":319},"to":{"krate":0,"index":621}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":64822,"byte_end":64825,"line_start":85,"line_end":85,"column_start":9,"column_end":12},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":68298,"byte_end":68304,"line_start":210,"line_end":210,"column_start":12,"column_end":18},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":69158,"byte_end":69164,"line_start":238,"line_end":238,"column_start":31,"column_end":37},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":339},"to":{"krate":0,"index":610}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":70460,"byte_end":70461,"line_start":278,"line_end":278,"column_start":33,"column_end":34},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":366},"to":{"krate":0,"index":358}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":71000,"byte_end":71003,"line_start":303,"line_end":303,"column_start":36,"column_end":39},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":327},"to":{"krate":0,"index":358}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":72009,"byte_end":72012,"line_start":346,"line_end":346,"column_start":9,"column_end":12},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\par_seq.rs","byte_start":72536,"byte_end":72539,"line_start":365,"line_end":365,"column_start":36,"column_end":39},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":383},"to":{"krate":0,"index":358}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\stage.rs","byte_start":76532,"byte_end":76540,"line_start":60,"line_end":60,"column_start":6,"column_end":14},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1064},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\stage.rs","byte_start":77071,"byte_end":77076,"line_start":84,"line_end":84,"column_start":10,"column_end":15},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1096},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\dispatch\\stage.rs","byte_start":78499,"byte_end":78512,"line_start":142,"line_end":142,"column_start":10,"column_end":23},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92137,"byte_end":92146,"line_start":13,"line_end":13,"column_start":25,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":490},"to":{"krate":2,"index":2071}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":92194,"byte_end":92203,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":490},"to":{"krate":2,"index":2083}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":93404,"byte_end":93412,"line_start":67,"line_end":67,"column_start":26,"column_end":34},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":502},"to":{"krate":2,"index":5543}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":94302,"byte_end":94305,"line_start":98,"line_end":98,"column_start":6,"column_end":9},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":95246,"byte_end":95257,"line_start":132,"line_end":132,"column_start":26,"column_end":37},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":527},"to":{"krate":2,"index":5543}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":98067,"byte_end":98076,"line_start":240,"line_end":240,"column_start":17,"column_end":26},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":543},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\meta.rs","byte_start":100992,"byte_end":101001,"line_start":333,"line_end":333,"column_start":21,"column_end":30},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":543},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":105232,"byte_end":105237,"line_start":11,"line_end":11,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":578}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":106719,"byte_end":106730,"line_start":64,"line_end":64,"column_start":30,"column_end":41},"kind":{"Impl":{"id":44}},"from":{"krate":2,"index":2089},"to":{"krate":0,"index":578}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":107254,"byte_end":107265,"line_start":91,"line_end":91,"column_start":27,"column_end":38},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":591},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":108533,"byte_end":108534,"line_start":134,"line_end":134,"column_start":28,"column_end":29},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":617},"to":{"krate":0,"index":610}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":113336,"byte_end":113337,"line_start":289,"line_end":289,"column_start":39,"column_end":40},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":638},"to":{"krate":0,"index":654}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":113995,"byte_end":114009,"line_start":324,"line_end":324,"column_start":26,"column_end":40},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1138},"to":{"krate":0,"index":578}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\system.rs","byte_start":115439,"byte_end":115450,"line_start":374,"line_end":374,"column_start":40,"column_end":51},"kind":{"Impl":{"id":49}},"from":{"krate":2,"index":2089},"to":{"krate":0,"index":630}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":141593,"byte_end":141597,"line_start":24,"line_end":24,"column_start":26,"column_end":30},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":712},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":141751,"byte_end":141755,"line_start":35,"line_end":35,"column_start":39,"column_end":43},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":712},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":141932,"byte_end":141936,"line_start":44,"line_end":44,"column_start":35,"column_end":39},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":712},"to":{"krate":0,"index":630}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":142680,"byte_end":142685,"line_start":79,"line_end":79,"column_start":26,"column_end":31},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":737},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":142829,"byte_end":142834,"line_start":90,"line_end":90,"column_start":29,"column_end":34},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":737},"to":{"krate":2,"index":2284}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":142985,"byte_end":142990,"line_start":99,"line_end":99,"column_start":42,"column_end":47},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":737},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":143171,"byte_end":143176,"line_start":108,"line_end":108,"column_start":35,"column_end":40},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":737},"to":{"krate":0,"index":630}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":143585,"byte_end":143591,"line_start":132,"line_end":132,"column_start":35,"column_end":41},"kind":{"Impl":{"id":57}},"from":{"krate":2,"index":34373},"to":{"krate":0,"index":630}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\data.rs","byte_start":143930,"byte_end":143936,"line_start":151,"line_end":151,"column_start":35,"column_end":41},"kind":{"Impl":{"id":58}},"from":{"krate":2,"index":34373},"to":{"krate":0,"index":630}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\entry.rs","byte_start":145438,"byte_end":145443,"line_start":32,"line_end":32,"column_start":13,"column_end":18},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":803},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\setup.rs","byte_start":147712,"byte_end":147727,"line_start":29,"line_end":29,"column_start":29,"column_end":44},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":824},"to":{"krate":0,"index":829}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\setup.rs","byte_start":147935,"byte_end":147940,"line_start":39,"line_end":39,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":829}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\setup.rs","byte_start":148260,"byte_end":148272,"line_start":51,"line_end":51,"column_start":29,"column_end":41},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":832},"to":{"krate":0,"index":829}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":119305,"byte_end":119310,"line_start":42,"line_end":42,"column_start":23,"column_end":28},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":837},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":119479,"byte_end":119484,"line_start":53,"line_end":53,"column_start":23,"column_end":28},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":837},"to":{"krate":2,"index":1762}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":119973,"byte_end":119981,"line_start":75,"line_end":75,"column_start":23,"column_end":31},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":851},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":120153,"byte_end":120161,"line_start":86,"line_end":86,"column_start":26,"column_end":34},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":851},"to":{"krate":2,"index":2284}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":120512,"byte_end":120515,"line_start":99,"line_end":99,"column_start":21,"column_end":24},"kind":"SuperTrait","from":{"krate":31,"index":6},"to":{"krate":0,"index":865}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":120518,"byte_end":120522,"line_start":99,"line_end":99,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":865}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":120525,"byte_end":120529,"line_start":99,"line_end":99,"column_start":34,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":865}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":120964,"byte_end":120965,"line_start":118,"line_end":118,"column_start":22,"column_end":23},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":870},"to":{"krate":0,"index":865}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":121699,"byte_end":121709,"line_start":136,"line_end":136,"column_start":6,"column_end":16},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\shred-0.10.2\\src\\world\\mod.rs","byte_start":124206,"byte_end":124211,"line_start":209,"line_end":209,"column_start":6,"column_end":11},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1696},"to":{"krate":4294967295,"index":4294967295}}]}