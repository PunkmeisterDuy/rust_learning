{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1","program":"C:\\Users\\Punkm\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","gfx_hal","--edition=2018","C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"serde\"","-C","metadata=1447dd309403f53f","-C","extra-filename=-1447dd309403f53f","--out-dir","c:\\Users\\Punkm\\Projects\\Programming\\rust_learning\\amethyst\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Punkm\\Projects\\Programming\\rust_learning\\amethyst\\target\\rls\\debug\\deps","--extern","bitflags=c:\\Users\\Punkm\\Projects\\Programming\\rust_learning\\amethyst\\target\\rls\\debug\\deps\\libbitflags-141de167bfb0a626.rmeta","--extern","failure=c:\\Users\\Punkm\\Projects\\Programming\\rust_learning\\amethyst\\target\\rls\\debug\\deps\\libfailure-e3230a0a021e7921.rmeta","--extern","fxhash=c:\\Users\\Punkm\\Projects\\Programming\\rust_learning\\amethyst\\target\\rls\\debug\\deps\\libfxhash-01ae4ee3aa7e65be.rmeta","--extern","serde=c:\\Users\\Punkm\\Projects\\Programming\\rust_learning\\amethyst\\target\\rls\\debug\\deps\\libserde-3e94f95f97bcfc71.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Punkm\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Punkm\\Projects\\Programming\\rust_learning\\amethyst\\target\\rls\\debug\\deps\\libgfx_hal-1447dd309403f53f.rmeta"},"prelude":{"crate_id":{"name":"gfx_hal","disambiguator":[17240530669184102284,7013651306874257298]},"crate_root":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src","external_crates":[{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9313216841108481316,924443797430308437]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","num":2,"id":{"name":"core","disambiguator":[235204689529430899,11195511058902687991]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8443630644245237509,966744638502353748]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13900139468171161186,1531802306738104785]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5240442222101950495,1297279504790020208]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[2443005202137729499,9185958358018941627]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15985227457147286552,10516973543605023258]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4222764532443259325,10183273613643052503]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1171194158452371475,10852610754819645916]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8741536135820378690,14206967751681147027]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[4062813797492812340,12507429432407858268]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[14499051738960611440,17566239002762474023]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","num":13,"id":{"name":"bitflags","disambiguator":[11003259995434663072,14729015563756978277]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","num":14,"id":{"name":"failure","disambiguator":[11127224100435219835,2474397808512879166]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","num":15,"id":{"name":"failure_derive","disambiguator":[6337391823867431293,15988797589726750889]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","num":16,"id":{"name":"backtrace","disambiguator":[13617341069301916024,14264251693298244461]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","num":17,"id":{"name":"rustc_demangle","disambiguator":[7672820490736726122,6896623198711986929]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","num":18,"id":{"name":"cfg_if","disambiguator":[14061899304803280366,309176067849779292]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","num":19,"id":{"name":"serde","disambiguator":[15070011232247584658,14464873363975297238]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","num":20,"id":{"name":"serde_derive","disambiguator":[18403159524308609117,17825619116599167581]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\backend.rs","num":21,"id":{"name":"fxhash","disambiguator":[8477744473703808115,140803998916143929]}},{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\backend.rs","num":22,"id":{"name":"byteorder","disambiguator":[9050969557830764679,4379660997585027650]}}],"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":0,"byte_end":21699,"line_start":1,"line_end":561,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1800},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":545,"byte_end":552,"line_start":26,"line_end":26,"column_start":5,"column_end":12},"alias_span":null,"name":"Adapter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1731},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":558,"byte_end":569,"line_start":27,"line_end":27,"column_start":5,"column_end":16},"alias_span":null,"name":"AdapterInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1591},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":575,"byte_end":591,"line_start":28,"line_end":28,"column_start":5,"column_end":21},"alias_span":null,"name":"MemoryProperties","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1527},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":597,"byte_end":607,"line_start":29,"line_end":29,"column_start":5,"column_end":15},"alias_span":null,"name":"MemoryType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1476},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":613,"byte_end":625,"line_start":30,"line_end":30,"column_start":5,"column_end":17},"alias_span":null,"name":"MemoryTypeId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1477},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":613,"byte_end":625,"line_start":30,"line_end":30,"column_start":5,"column_end":17},"alias_span":null,"name":"MemoryTypeId","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":631,"byte_end":645,"line_start":31,"line_end":31,"column_start":5,"column_end":19},"alias_span":null,"name":"PhysicalDevice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":651,"byte_end":664,"line_start":32,"line_end":32,"column_start":5,"column_end":18},"alias_span":null,"name":"QueuePriority","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":653},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":691,"byte_end":697,"line_start":34,"line_end":34,"column_start":23,"column_end":29},"alias_span":null,"name":"Device","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":16466},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":719,"byte_end":730,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"alias_span":null,"name":"CommandPool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1156},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":752,"byte_end":762,"line_start":36,"line_end":36,"column_start":21,"column_end":31},"alias_span":null,"name":"read_spirv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1034},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":764,"byte_end":778,"line_start":36,"line_end":36,"column_start":33,"column_end":47},"alias_span":null,"name":"DescriptorPool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1168},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":808,"byte_end":818,"line_start":38,"line_end":38,"column_start":5,"column_end":15},"alias_span":null,"name":"Capability","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":21037},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":824,"byte_end":836,"line_start":39,"line_end":39,"column_start":5,"column_end":17},"alias_span":null,"name":"CommandQueue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":20888},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":842,"byte_end":849,"line_start":40,"line_end":40,"column_start":5,"column_end":12},"alias_span":null,"name":"Compute","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":20882},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":855,"byte_end":862,"line_start":41,"line_end":41,"column_start":5,"column_end":12},"alias_span":null,"name":"General","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":20885},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":868,"byte_end":876,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"alias_span":null,"name":"Graphics","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1232},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":882,"byte_end":893,"line_start":43,"line_end":43,"column_start":5,"column_end":16},"alias_span":null,"name":"QueueFamily","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":20940},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":899,"byte_end":909,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"alias_span":null,"name":"QueueGroup","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":20956},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":915,"byte_end":924,"line_start":45,"line_end":45,"column_start":5,"column_end":14},"alias_span":null,"name":"QueueType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":21025},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":930,"byte_end":940,"line_start":46,"line_end":46,"column_start":5,"column_end":15},"alias_span":null,"name":"Submission","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1178},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":946,"byte_end":954,"line_start":47,"line_end":47,"column_start":5,"column_end":13},"alias_span":null,"name":"Supports","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":20891},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":960,"byte_end":968,"line_start":48,"line_end":48,"column_start":5,"column_end":13},"alias_span":null,"name":"Transfer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":21410},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1001,"byte_end":1013,"line_start":51,"line_end":51,"column_start":5,"column_end":17},"alias_span":null,"name":"AcquireError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":21246},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1019,"byte_end":1033,"line_start":52,"line_end":52,"column_start":5,"column_end":19},"alias_span":null,"name":"CompositeAlpha","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":21219},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1039,"byte_end":1050,"line_start":53,"line_end":53,"column_start":5,"column_end":16},"alias_span":null,"name":"PresentMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1385},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1056,"byte_end":1063,"line_start":54,"line_end":54,"column_start":5,"column_end":12},"alias_span":null,"name":"Surface","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":21151},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1069,"byte_end":1088,"line_start":55,"line_end":55,"column_start":5,"column_end":24},"alias_span":null,"name":"SurfaceCapabilities","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1389},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1094,"byte_end":1108,"line_start":56,"line_end":56,"column_start":5,"column_end":19},"alias_span":null,"name":"SwapImageIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1395},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1114,"byte_end":1123,"line_start":57,"line_end":57,"column_start":5,"column_end":14},"alias_span":null,"name":"Swapchain","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":21394},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1129,"byte_end":1144,"line_start":58,"line_end":58,"column_start":5,"column_end":20},"alias_span":null,"name":"SwapchainConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":34209,"byte_end":34210,"line_start":28,"line_end":28,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"AttachmentClear, ImageBlit, ImageResolve, ClearValue","parent":{"krate":0,"index":92}},{"kind":"Use","ref_id":{"krate":0,"index":2730},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":34237,"byte_end":34250,"line_start":30,"line_end":30,"column_start":5,"column_end":18},"alias_span":null,"name":"ClearColorRaw","value":"","parent":{"krate":0,"index":92}},{"kind":"Use","ref_id":{"krate":0,"index":2742},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":34256,"byte_end":34276,"line_start":31,"line_end":31,"column_start":5,"column_end":25},"alias_span":null,"name":"ClearDepthStencilRaw","value":"","parent":{"krate":0,"index":92}},{"kind":"Use","ref_id":{"krate":0,"index":2750},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":34282,"byte_end":34295,"line_start":32,"line_end":32,"column_start":5,"column_end":18},"alias_span":null,"name":"ClearValueRaw","value":"","parent":{"krate":0,"index":92}},{"kind":"Use","ref_id":{"krate":0,"index":2758},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":34301,"byte_end":34319,"line_start":33,"line_end":33,"column_start":5,"column_end":23},"alias_span":null,"name":"CommandBufferFlags","value":"","parent":{"krate":0,"index":92}},{"kind":"Use","ref_id":{"krate":0,"index":2874},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":34325,"byte_end":34353,"line_start":34,"line_end":34,"column_start":5,"column_end":33},"alias_span":null,"name":"CommandBufferInheritanceInfo","value":"","parent":{"krate":0,"index":92}},{"kind":"Use","ref_id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":34359,"byte_end":34378,"line_start":35,"line_end":35,"column_start":5,"column_end":24},"alias_span":null,"name":"DescriptorSetOffset","value":"","parent":{"krate":0,"index":92}},{"kind":"Use","ref_id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":34384,"byte_end":34404,"line_start":36,"line_end":36,"column_start":5,"column_end":25},"alias_span":null,"name":"IntoRawCommandBuffer","value":"","parent":{"krate":0,"index":92}},{"kind":"Use","ref_id":{"krate":0,"index":2861},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":34410,"byte_end":34415,"line_start":37,"line_end":37,"column_start":5,"column_end":10},"alias_span":null,"name":"RawLevel","value":"","parent":{"krate":0,"index":92}},{"kind":"Use","ref_id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":34433,"byte_end":34449,"line_start":38,"line_end":38,"column_start":5,"column_end":21},"alias_span":null,"name":"RawCommandBuffer","value":"","parent":{"krate":0,"index":92}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":34481,"byte_end":34482,"line_start":40,"line_end":40,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"SubpassContents, RenderPassSecondaryEncoder, SubpassCommandBuffer, RenderPassInlineEncoder","parent":{"krate":0,"index":92}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":34508,"byte_end":34509,"line_start":41,"line_end":41,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"BufferCopy, BufferImageCopy, ImageCopy","parent":{"krate":0,"index":92}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":192027,"byte_end":192028,"line_start":14,"line_end":14,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"ComputePipelineDesc","parent":{"krate":0,"index":1002}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":192042,"byte_end":192043,"line_start":14,"line_end":14,"column_start":40,"column_end":41},"alias_span":null,"name":"*","value":"DescriptorPoolCreateFlags, DescriptorRangeDesc, DescriptorSetIndex, DescriptorSetWrite, DescriptorSetLayoutBinding, DescriptorPool, Descriptor, DescriptorSetCopy","parent":{"krate":0,"index":1002}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":192055,"byte_end":192056,"line_start":14,"line_end":14,"column_start":53,"column_end":54},"alias_span":null,"name":"*","value":"StencilValue, ClearRect, ColorValue, Viewport, DepthBias, GraphicsPipelineDesc, DepthValue, Rect","parent":{"krate":0,"index":1002}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":192075,"byte_end":192076,"line_start":14,"line_end":14,"column_start":73,"column_end":74},"alias_span":null,"name":"*","value":"BufferIndex","parent":{"krate":0,"index":1002}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":192093,"byte_end":192094,"line_start":14,"line_end":14,"column_start":91,"column_end":92},"alias_span":null,"name":"*","value":"Face, Comparison","parent":{"krate":0,"index":1002}},{"kind":"Use","ref_id":{"krate":0,"index":1168},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":245401,"byte_end":245411,"line_start":24,"line_end":24,"column_start":28,"column_end":38},"alias_span":null,"name":"Capability","value":"","parent":{"krate":0,"index":1165}},{"kind":"Use","ref_id":{"krate":0,"index":20888},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":245413,"byte_end":245420,"line_start":24,"line_end":24,"column_start":40,"column_end":47},"alias_span":null,"name":"Compute","value":"","parent":{"krate":0,"index":1165}},{"kind":"Use","ref_id":{"krate":0,"index":20882},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":245422,"byte_end":245429,"line_start":24,"line_end":24,"column_start":49,"column_end":56},"alias_span":null,"name":"General","value":"","parent":{"krate":0,"index":1165}},{"kind":"Use","ref_id":{"krate":0,"index":20885},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":245431,"byte_end":245439,"line_start":24,"line_end":24,"column_start":58,"column_end":66},"alias_span":null,"name":"Graphics","value":"","parent":{"krate":0,"index":1165}},{"kind":"Use","ref_id":{"krate":0,"index":1178},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":245441,"byte_end":245449,"line_start":24,"line_end":24,"column_start":68,"column_end":76},"alias_span":null,"name":"Supports","value":"","parent":{"krate":0,"index":1165}},{"kind":"Use","ref_id":{"krate":0,"index":20891},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":245451,"byte_end":245459,"line_start":24,"line_end":24,"column_start":78,"column_end":86},"alias_span":null,"name":"Transfer","value":"","parent":{"krate":0,"index":1165}},{"kind":"Use","ref_id":{"krate":0,"index":1232},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":245485,"byte_end":245496,"line_start":25,"line_end":25,"column_start":24,"column_end":35},"alias_span":null,"name":"QueueFamily","value":"","parent":{"krate":0,"index":1165}},{"kind":"Use","ref_id":{"krate":0,"index":20897},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":245498,"byte_end":245511,"line_start":25,"line_end":25,"column_start":37,"column_end":50},"alias_span":null,"name":"QueueFamilyId","value":"","parent":{"krate":0,"index":1165}},{"kind":"Use","ref_id":{"krate":0,"index":20898},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":245498,"byte_end":245511,"line_start":25,"line_end":25,"column_start":37,"column_end":50},"alias_span":null,"name":"QueueFamilyId","value":"","parent":{"krate":0,"index":1281}},{"kind":"Use","ref_id":{"krate":0,"index":20940},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":245513,"byte_end":245523,"line_start":25,"line_end":25,"column_start":52,"column_end":62},"alias_span":null,"name":"QueueGroup","value":"","parent":{"krate":0,"index":1165}},{"kind":"Use","ref_id":{"krate":0,"index":20949},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":245525,"byte_end":245531,"line_start":25,"line_end":25,"column_start":64,"column_end":70},"alias_span":null,"name":"Queues","value":"","parent":{"krate":0,"index":1165}},{"kind":"Use","ref_id":{"krate":0,"index":20950},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":245525,"byte_end":245531,"line_start":25,"line_end":25,"column_start":64,"column_end":70},"alias_span":null,"name":"Queues","value":"","parent":{"krate":0,"index":1283}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":0,"byte_end":21699,"line_start":1,"line_end":561,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":22448},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":22458},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":78},{"krate":0,"index":92},{"krate":0,"index":610},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":806},{"krate":0,"index":871},{"krate":0,"index":906},{"krate":0,"index":928},{"krate":0,"index":961},{"krate":0,"index":1002},{"krate":0,"index":1159},{"krate":0,"index":1165},{"krate":0,"index":1327},{"krate":0,"index":1357},{"krate":0,"index":1406},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":21507},{"krate":0,"index":21571},{"krate":0,"index":21530},{"krate":0,"index":21529},{"krate":0,"index":21525},{"krate":0,"index":21526},{"krate":0,"index":21522},{"krate":0,"index":21523},{"krate":0,"index":21520},{"krate":0,"index":21514},{"krate":0,"index":21512},{"krate":0,"index":21509},{"krate":0,"index":21577},{"krate":0,"index":21642},{"krate":0,"index":21644},{"krate":0,"index":21646},{"krate":0,"index":21648},{"krate":0,"index":21650},{"krate":0,"index":21717},{"krate":0,"index":21720},{"krate":0,"index":21722},{"krate":0,"index":21725},{"krate":0,"index":21727},{"krate":0,"index":21730},{"krate":0,"index":21732},{"krate":0,"index":21735},{"krate":0,"index":21737},{"krate":0,"index":21740},{"krate":0,"index":21743},{"krate":0,"index":21940},{"krate":0,"index":22207},{"krate":0,"index":22206},{"krate":0,"index":22204},{"krate":0,"index":22202},{"krate":0,"index":22198},{"krate":0,"index":22199},{"krate":0,"index":22192},{"krate":0,"index":22011},{"krate":0,"index":22211},{"krate":0,"index":22315},{"krate":0,"index":22314},{"krate":0,"index":22312},{"krate":0,"index":22309},{"krate":0,"index":22310},{"krate":0,"index":22306},{"krate":0,"index":22302},{"krate":0,"index":22303},{"krate":0,"index":22296},{"krate":0,"index":22294},{"krate":0,"index":22288},{"krate":0,"index":22233},{"krate":0,"index":22317},{"krate":0,"index":22383},{"krate":0,"index":22382},{"krate":0,"index":22380},{"krate":0,"index":22377},{"krate":0,"index":22378},{"krate":0,"index":22374},{"krate":0,"index":22372},{"krate":0,"index":22369},{"krate":0,"index":22370},{"krate":0,"index":22367},{"krate":0,"index":22361},{"krate":0,"index":22322},{"krate":0,"index":1438},{"krate":0,"index":1441},{"krate":0,"index":22385},{"krate":0,"index":22433},{"krate":0,"index":22431},{"krate":0,"index":22428},{"krate":0,"index":22429},{"krate":0,"index":22422},{"krate":0,"index":22386},{"krate":0,"index":1470},{"krate":0,"index":1472},{"krate":0,"index":1474},{"krate":0,"index":22435},{"krate":0,"index":22439}],"decl_id":null,"docs":" Low-level graphics abstraction for Rust. Mostly operates on data, not types.\n Designed for use by libraries and higher-level abstractions only.\n","sig":null,"attributes":[{"value":"deny(missing_debug_implementations, missing_docs, unused)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":0,"byte_end":61,"line_start":1,"line_end":1,"column_start":1,"column_end":62}},{"value":"/ Low-level graphics abstraction for Rust. Mostly operates on data, not types.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":63,"byte_end":143,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ Designed for use by libraries and higher-level abstractions only.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":144,"byte_end":213,"line_start":4,"line_end":4,"column_start":1,"column_end":70}}]},{"kind":"Mod","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"adapter","qualname":"::adapter","value":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":1476},{"krate":0,"index":1526},{"krate":0,"index":1524},{"krate":0,"index":1522},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1509},{"krate":0,"index":1507},{"krate":0,"index":1504},{"krate":0,"index":1498},{"krate":0,"index":1479},{"krate":0,"index":60},{"krate":0,"index":1527},{"krate":0,"index":1590},{"krate":0,"index":1588},{"krate":0,"index":1586},{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1573},{"krate":0,"index":1530},{"krate":0,"index":1591},{"krate":0,"index":1652},{"krate":0,"index":1650},{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1637},{"krate":0,"index":1594},{"krate":0,"index":62},{"krate":0,"index":1654},{"krate":0,"index":1729},{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":1723},{"krate":0,"index":1724},{"krate":0,"index":1721},{"krate":0,"index":1715},{"krate":0,"index":1670},{"krate":0,"index":1731},{"krate":0,"index":1798},{"krate":0,"index":1796},{"krate":0,"index":1793},{"krate":0,"index":1794},{"krate":0,"index":1789},{"krate":0,"index":1790},{"krate":0,"index":1783},{"krate":0,"index":1736},{"krate":0,"index":1800},{"krate":0,"index":1805},{"krate":0,"index":71}],"decl_id":null,"docs":" Physical devices and adapters.","sig":null,"attributes":[{"value":"/ Physical devices and adapters.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":21701,"byte_end":21735,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":21736,"byte_end":21739,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The `PhysicalDevice` trait specifies the API a backend must provide for dealing with","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":21740,"byte_end":21828,"line_start":3,"line_end":3,"column_start":1,"column_end":89}},{"value":"/ and querying a physical device, such as a particular GPU.  An `Adapter` is a struct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":21829,"byte_end":21916,"line_start":4,"line_end":4,"column_start":1,"column_end":88}},{"value":"/ containing a `PhysicalDevice` and metadata for a particular GPU, generally created","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":21917,"byte_end":22003,"line_start":5,"line_end":5,"column_start":1,"column_end":87}},{"value":"/ from an `Instance` of that backend.  `adapter.open_with(...)` will return a `Device`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":22004,"byte_end":22092,"line_start":6,"line_end":6,"column_start":1,"column_end":89}},{"value":"/ that has the properties specified.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":22093,"byte_end":22131,"line_start":7,"line_end":7,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":22443,"byte_end":22456,"line_start":18,"line_end":18,"column_start":10,"column_end":23},"name":"QueuePriority","qualname":"::adapter::QueuePriority","value":"f32","parent":null,"children":[],"decl_id":null,"docs":" Scheduling hint for devices about the priority of a queue.  Values range from `0.0` (low) to\n `1.0` (high).\n","sig":null,"attributes":[{"value":"/ Scheduling hint for devices about the priority of a queue.  Values range from `0.0` (low) to","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":22319,"byte_end":22415,"line_start":16,"line_end":16,"column_start":1,"column_end":97}},{"value":"/ `1.0` (high).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":22416,"byte_end":22433,"line_start":17,"line_end":17,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1476},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":22664,"byte_end":22676,"line_start":23,"line_end":23,"column_start":12,"column_end":24},"name":"MemoryTypeId","qualname":"::adapter::MemoryTypeId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A strongly-typed index to a particular `MemoryType`.\n","sig":null,"attributes":[{"value":"/ A strongly-typed index to a particular `MemoryType`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":22465,"byte_end":22521,"line_start":20,"line_end":20,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":1478},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":22677,"byte_end":22686,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"name":"0","qualname":"::adapter::MemoryTypeId::0","value":"usize","parent":{"krate":0,"index":1476},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1527},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":22970,"byte_end":22980,"line_start":34,"line_end":34,"column_start":12,"column_end":22},"name":"MemoryType","qualname":"::adapter::MemoryType","value":"MemoryType { properties, heap_index }","parent":null,"children":[{"krate":0,"index":1528},{"krate":0,"index":1529}],"decl_id":null,"docs":" A description for a single chunk of memory in a heap.\n","sig":null,"attributes":[{"value":"/ A description for a single chunk of memory in a heap.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":22793,"byte_end":22850,"line_start":31,"line_end":31,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":1528},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":23114,"byte_end":23124,"line_start":37,"line_end":37,"column_start":9,"column_end":19},"name":"properties","qualname":"::adapter::MemoryType::properties","value":"memory::Properties","parent":{"krate":0,"index":1527},"children":[],"decl_id":null,"docs":" Properties of the associated memory, such as synchronization\n properties or whether it's on the CPU or GPU.\n","sig":null,"attributes":[{"value":"/ Properties of the associated memory, such as synchronization","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":22987,"byte_end":23051,"line_start":35,"line_end":35,"column_start":5,"column_end":69}},{"value":"/ properties or whether it's on the CPU or GPU.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":23056,"byte_end":23105,"line_start":36,"line_end":36,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1529},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":23221,"byte_end":23231,"line_start":39,"line_end":39,"column_start":9,"column_end":19},"name":"heap_index","qualname":"::adapter::MemoryType::heap_index","value":"usize","parent":{"krate":0,"index":1527},"children":[],"decl_id":null,"docs":" Index to the underlying memory heap in `Gpu::memory_heaps`\n","sig":null,"attributes":[{"value":"/ Index to the underlying memory heap in `Gpu::memory_heaps`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":23150,"byte_end":23212,"line_start":38,"line_end":38,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1591},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":23424,"byte_end":23440,"line_start":45,"line_end":45,"column_start":12,"column_end":28},"name":"MemoryProperties","qualname":"::adapter::MemoryProperties","value":"MemoryProperties { memory_types, memory_heaps }","parent":null,"children":[{"krate":0,"index":1592},{"krate":0,"index":1593}],"decl_id":null,"docs":" Types of memory supported by this adapter and available memory.\n","sig":null,"attributes":[{"value":"/ Types of memory supported by this adapter and available memory.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":23243,"byte_end":23310,"line_start":42,"line_end":42,"column_start":1,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":1592},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":23574,"byte_end":23586,"line_start":48,"line_end":48,"column_start":9,"column_end":21},"name":"memory_types","qualname":"::adapter::MemoryProperties::memory_types","value":"std::vec::Vec<adapter::MemoryType>","parent":{"krate":0,"index":1591},"children":[],"decl_id":null,"docs":" Each memory type is associated with one heap of `memory_heaps`.\n Multiple types can point to the same heap.\n","sig":null,"attributes":[{"value":"/ Each memory type is associated with one heap of `memory_heaps`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":23447,"byte_end":23514,"line_start":46,"line_end":46,"column_start":5,"column_end":72}},{"value":"/ Multiple types can point to the same heap.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":23519,"byte_end":23565,"line_start":47,"line_end":47,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1593},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":23660,"byte_end":23672,"line_start":50,"line_end":50,"column_start":9,"column_end":21},"name":"memory_heaps","qualname":"::adapter::MemoryProperties::memory_heaps","value":"std::vec::Vec<u64>","parent":{"krate":0,"index":1591},"children":[],"decl_id":null,"docs":" Memory heaps with their size in bytes.\n","sig":null,"attributes":[{"value":"/ Memory heaps with their size in bytes.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":23609,"byte_end":23651,"line_start":49,"line_end":49,"column_start":5,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":23787,"byte_end":23801,"line_start":54,"line_end":54,"column_start":11,"column_end":25},"name":"PhysicalDevice","qualname":"::adapter::PhysicalDevice","value":"PhysicalDevice<B: Backend>: fmt::Debug + Any + Send + Sync","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"decl_id":null,"docs":" Represents a physical device (such as a GPU) capable of supporting the given backend.\n","sig":null,"attributes":[{"value":"/ Represents a physical device (such as a GPU) capable of supporting the given backend.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":23687,"byte_end":23776,"line_start":53,"line_end":53,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":24723,"byte_end":24727,"line_start":77,"line_end":77,"column_start":15,"column_end":19},"name":"open","qualname":"::adapter::PhysicalDevice::open","value":"pub unsafe fn open(&Self, &[(&B::QueueFamily, &[QueuePriority])], Features)\n-> Result<Gpu<B>, DeviceCreationError>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Create a new logical device with the requested features. If `requested_features` is\n empty (e.g. through `Features::empty()`) then only the core features are supported.","sig":null,"attributes":[{"value":"/ Create a new logical device with the requested features. If `requested_features` is","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":23852,"byte_end":23939,"line_start":55,"line_end":55,"column_start":5,"column_end":92}},{"value":"/ empty (e.g. through `Features::empty()`) then only the core features are supported.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":23944,"byte_end":24031,"line_start":56,"line_end":56,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":24036,"byte_end":24039,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":24044,"byte_end":24056,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":24061,"byte_end":24064,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ - Returns `TooManyObjects` if the implementation can't create a new logical device.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":24069,"byte_end":24156,"line_start":60,"line_end":60,"column_start":5,"column_end":92}},{"value":"/ - Returns `MissingFeature` if the implementation does not support a requested feature.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":24161,"byte_end":24251,"line_start":61,"line_end":61,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":24256,"byte_end":24259,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":24264,"byte_end":24278,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":24283,"byte_end":24286,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":24291,"byte_end":24304,"line_start":65,"line_end":65,"column_start":5,"column_end":18}},{"value":"/ # extern crate gfx_backend_empty as empty;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":24309,"byte_end":24355,"line_start":66,"line_end":66,"column_start":5,"column_end":51}},{"value":"/ # extern crate gfx_hal;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":24360,"byte_end":24387,"line_start":67,"line_end":67,"column_start":5,"column_end":32}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":24392,"byte_end":24409,"line_start":68,"line_end":68,"column_start":5,"column_end":22}},{"value":"/ use gfx_hal::{PhysicalDevice, Features};","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":24414,"byte_end":24458,"line_start":69,"line_end":69,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":24463,"byte_end":24466,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # let physical_device: empty::PhysicalDevice = return;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":24471,"byte_end":24529,"line_start":71,"line_end":71,"column_start":5,"column_end":63}},{"value":"/ # let family: empty::QueueFamily = return;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":24534,"byte_end":24580,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/ # unsafe {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":24585,"byte_end":24599,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/ let gpu = physical_device.open(&[(&family, &[1.0; 1])], Features::empty());","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":24604,"byte_end":24683,"line_start":74,"line_end":74,"column_start":5,"column_end":84}},{"value":"/ # }}","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":24688,"byte_end":24696,"line_start":75,"line_end":75,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":24701,"byte_end":24708,"line_start":76,"line_end":76,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":24941,"byte_end":24958,"line_start":84,"line_end":84,"column_start":8,"column_end":25},"name":"format_properties","qualname":"::adapter::PhysicalDevice::format_properties","value":"pub fn format_properties(&Self, Option<format::Format>) -> format::Properties","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Fetch details for a particular format.\n","sig":null,"attributes":[{"value":"/ Fetch details for a particular format.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":24891,"byte_end":24933,"line_start":83,"line_end":83,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":25082,"byte_end":25105,"line_start":87,"line_end":87,"column_start":8,"column_end":31},"name":"image_format_properties","qualname":"::adapter::PhysicalDevice::image_format_properties","value":"pub fn image_format_properties(&Self, format::Format, u8, image::Tiling,\n                               image::Usage, image::ViewCapabilities)\n-> Option<image::FormatProperties>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Fetch details for a particular image format.\n","sig":null,"attributes":[{"value":"/ Fetch details for a particular image format.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":25026,"byte_end":25074,"line_start":86,"line_end":86,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":25401,"byte_end":25418,"line_start":97,"line_end":97,"column_start":8,"column_end":25},"name":"memory_properties","qualname":"::adapter::PhysicalDevice::memory_properties","value":"pub fn memory_properties(&Self) -> MemoryProperties","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Fetch details for the memory regions provided by the device.\n","sig":null,"attributes":[{"value":"/ Fetch details for the memory regions provided by the device.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":25329,"byte_end":25393,"line_start":96,"line_end":96,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":25563,"byte_end":25571,"line_start":101,"line_end":101,"column_start":8,"column_end":16},"name":"features","qualname":"::adapter::PhysicalDevice::features","value":"pub fn features(&Self) -> Features","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Returns the features of this `Device`. This usually depends on the graphics API being\n used.\n","sig":null,"attributes":[{"value":"/ Returns the features of this `Device`. This usually depends on the graphics API being","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":25452,"byte_end":25541,"line_start":99,"line_end":99,"column_start":5,"column_end":94}},{"value":"/ used.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":25546,"byte_end":25555,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":25654,"byte_end":25660,"line_start":104,"line_end":104,"column_start":8,"column_end":14},"name":"limits","qualname":"::adapter::PhysicalDevice::limits","value":"pub fn limits(&Self) -> Limits","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Returns the resource limits of this `Device`.\n","sig":null,"attributes":[{"value":"/ Returns the resource limits of this `Device`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":25597,"byte_end":25646,"line_start":103,"line_end":103,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":25740,"byte_end":25754,"line_start":107,"line_end":107,"column_start":8,"column_end":22},"name":"is_valid_cache","qualname":"::adapter::PhysicalDevice::is_valid_cache","value":"pub fn is_valid_cache(&Self, &[u8]) -> bool","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Check cache compatibility with the `Device`.\n","sig":null,"attributes":[{"value":"/ Check cache compatibility with the `Device`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":25684,"byte_end":25732,"line_start":106,"line_end":106,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1655},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":25988,"byte_end":25993,"line_start":117,"line_end":117,"column_start":5,"column_end":10},"name":"Other","qualname":"::adapter::DeviceType::Other","value":"DeviceType::Other","parent":{"krate":0,"index":1654},"children":[],"decl_id":null,"docs":" Other\n","sig":null,"attributes":[{"value":"/ Other","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":25974,"byte_end":25983,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1658},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":26022,"byte_end":26035,"line_start":119,"line_end":119,"column_start":5,"column_end":18},"name":"IntegratedGpu","qualname":"::adapter::DeviceType::IntegratedGpu","value":"DeviceType::IntegratedGpu","parent":{"krate":0,"index":1654},"children":[],"decl_id":null,"docs":" Integrated\n","sig":null,"attributes":[{"value":"/ Integrated","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":26003,"byte_end":26017,"line_start":118,"line_end":118,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1661},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":26062,"byte_end":26073,"line_start":121,"line_end":121,"column_start":5,"column_end":16},"name":"DiscreteGpu","qualname":"::adapter::DeviceType::DiscreteGpu","value":"DeviceType::DiscreteGpu","parent":{"krate":0,"index":1654},"children":[],"decl_id":null,"docs":" Discrete\n","sig":null,"attributes":[{"value":"/ Discrete","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":26045,"byte_end":26057,"line_start":120,"line_end":120,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1664},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":26108,"byte_end":26118,"line_start":123,"line_end":123,"column_start":5,"column_end":15},"name":"VirtualGpu","qualname":"::adapter::DeviceType::VirtualGpu","value":"DeviceType::VirtualGpu","parent":{"krate":0,"index":1654},"children":[],"decl_id":null,"docs":" Virtual / Hosted\n","sig":null,"attributes":[{"value":"/ Virtual / Hosted","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":26083,"byte_end":26103,"line_start":122,"line_end":122,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1667},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":26161,"byte_end":26164,"line_start":125,"line_end":125,"column_start":5,"column_end":8},"name":"Cpu","qualname":"::adapter::DeviceType::Cpu","value":"DeviceType::Cpu","parent":{"krate":0,"index":1654},"children":[],"decl_id":null,"docs":" Cpu / Software Rendering\n","sig":null,"attributes":[{"value":"/ Cpu / Software Rendering","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":26128,"byte_end":26156,"line_start":124,"line_end":124,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":1654},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":25957,"byte_end":25967,"line_start":115,"line_end":115,"column_start":10,"column_end":20},"name":"DeviceType","qualname":"::adapter::DeviceType","value":"pub enum DeviceType {\n\n    /// Other\n    Other = ,\n\n    /// Integrated\n    IntegratedGpu = ,\n\n    /// Discrete\n    DiscreteGpu = ,\n\n    /// Virtual / Hosted\n    VirtualGpu = ,\n\n    /// Cpu / Software Rendering\n    Cpu = ,\n}","parent":null,"children":[{"krate":0,"index":1655},{"krate":0,"index":1658},{"krate":0,"index":1661},{"krate":0,"index":1664},{"krate":0,"index":1667}],"decl_id":null,"docs":" Supported physical device types\n","sig":null,"attributes":[{"value":"/ Supported physical device types","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":25810,"byte_end":25845,"line_start":112,"line_end":112,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1731},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":26324,"byte_end":26335,"line_start":131,"line_end":131,"column_start":12,"column_end":23},"name":"AdapterInfo","qualname":"::adapter::AdapterInfo","value":"AdapterInfo { name, vendor, device, device_type }","parent":null,"children":[{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1735}],"decl_id":null,"docs":" Metadata about a backend adapter.\n","sig":null,"attributes":[{"value":"/ Metadata about a backend adapter.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":26173,"byte_end":26210,"line_start":128,"line_end":128,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1732},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":26367,"byte_end":26371,"line_start":133,"line_end":133,"column_start":9,"column_end":13},"name":"name","qualname":"::adapter::AdapterInfo::name","value":"std::string::String","parent":{"krate":0,"index":1731},"children":[],"decl_id":null,"docs":" Adapter name\n","sig":null,"attributes":[{"value":"/ Adapter name","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":26342,"byte_end":26358,"line_start":132,"line_end":132,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":1733},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":26426,"byte_end":26432,"line_start":135,"line_end":135,"column_start":9,"column_end":15},"name":"vendor","qualname":"::adapter::AdapterInfo::vendor","value":"usize","parent":{"krate":0,"index":1731},"children":[],"decl_id":null,"docs":" Vendor PCI id of the adapter\n","sig":null,"attributes":[{"value":"/ Vendor PCI id of the adapter","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":26385,"byte_end":26417,"line_start":134,"line_end":134,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1734},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":26479,"byte_end":26485,"line_start":137,"line_end":137,"column_start":9,"column_end":15},"name":"device","qualname":"::adapter::AdapterInfo::device","value":"usize","parent":{"krate":0,"index":1731},"children":[],"decl_id":null,"docs":" PCI id of the adapter\n","sig":null,"attributes":[{"value":"/ PCI id of the adapter","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":26445,"byte_end":26470,"line_start":136,"line_end":136,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1735},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":26525,"byte_end":26536,"line_start":139,"line_end":139,"column_start":9,"column_end":20},"name":"device_type","qualname":"::adapter::AdapterInfo::device_type","value":"adapter::DeviceType","parent":{"krate":0,"index":1731},"children":[],"decl_id":null,"docs":" Type of device\n","sig":null,"attributes":[{"value":"/ Type of device","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":26498,"byte_end":26516,"line_start":138,"line_end":138,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1800},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":26977,"byte_end":26984,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"Adapter","qualname":"::adapter::Adapter","value":"Adapter { info, physical_device, queue_families }","parent":null,"children":[{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1804}],"decl_id":null,"docs":" The list of `Adapter` instances is obtained by calling `Instance::enumerate_adapters()`.","sig":null,"attributes":[{"value":"/ The list of `Adapter` instances is obtained by calling `Instance::enumerate_adapters()`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":26553,"byte_end":26645,"line_start":142,"line_end":142,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":26646,"byte_end":26649,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ Given an `Adapter` a `Gpu` can be constructed by calling `PhysicalDevice::open()` on its","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":26650,"byte_end":26742,"line_start":144,"line_end":144,"column_start":1,"column_end":93}},{"value":"/ `physical_device` field. However, if only a single queue family is needed or if no","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":26743,"byte_end":26829,"line_start":145,"line_end":145,"column_start":1,"column_end":87}},{"value":"/ additional device features are required, then the `Adapter::open_with` convenience method","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":26830,"byte_end":26923,"line_start":146,"line_end":146,"column_start":1,"column_end":94}},{"value":"/ can be used instead.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":26924,"byte_end":26948,"line_start":147,"line_end":147,"column_start":1,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":1802},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":27055,"byte_end":27059,"line_start":151,"line_end":151,"column_start":9,"column_end":13},"name":"info","qualname":"::adapter::Adapter::info","value":"adapter::AdapterInfo","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" General information about this adapter.\n","sig":null,"attributes":[{"value":"/ General information about this adapter.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":27003,"byte_end":27046,"line_start":150,"line_end":150,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1803},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":27114,"byte_end":27129,"line_start":153,"line_end":153,"column_start":9,"column_end":24},"name":"physical_device","qualname":"::adapter::Adapter::physical_device","value":"<B as Backend>::PhysicalDevice","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Actual physical device.\n","sig":null,"attributes":[{"value":"/ Actual physical device.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":27078,"byte_end":27105,"line_start":152,"line_end":152,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1804},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":27208,"byte_end":27222,"line_start":155,"line_end":155,"column_start":9,"column_end":23},"name":"queue_families","qualname":"::adapter::Adapter::queue_families","value":"std::vec::Vec<<B as Backend>::QueueFamily>","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Queue families supported by this adapter.\n","sig":null,"attributes":[{"value":"/ Queue families supported by this adapter.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":27154,"byte_end":27199,"line_start":154,"line_end":154,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":28054,"byte_end":28063,"line_start":180,"line_end":180,"column_start":12,"column_end":21},"name":"open_with","qualname":"<Adapter<B>>::open_with","value":"pub fn open_with<F, C>(&Self, usize, F)\n-> Result<(B::Device, QueueGroup<B, C>), DeviceCreationError> where\nF: Fn(&B::QueueFamily) -> bool, C: Capability","parent":null,"children":[],"decl_id":null,"docs":" Open the physical device with `count` queues from some active queue family. The family is\n the first that both provides the capability `C`, supports at least `count` queues, and for\n which `selector` returns true.","sig":null,"attributes":[{"value":"/ Open the physical device with `count` queues from some active queue family. The family is","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":27282,"byte_end":27375,"line_start":159,"line_end":159,"column_start":5,"column_end":98}},{"value":"/ the first that both provides the capability `C`, supports at least `count` queues, and for","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":27380,"byte_end":27474,"line_start":160,"line_end":160,"column_start":5,"column_end":99}},{"value":"/ which `selector` returns true.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":27479,"byte_end":27513,"line_start":161,"line_end":161,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":27518,"byte_end":27521,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":27526,"byte_end":27540,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":27545,"byte_end":27548,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":27553,"byte_end":27566,"line_start":165,"line_end":165,"column_start":5,"column_end":18}},{"value":"/ # extern crate gfx_backend_empty as empty;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":27571,"byte_end":27617,"line_start":166,"line_end":166,"column_start":5,"column_end":51}},{"value":"/ # extern crate gfx_hal as hal;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":27622,"byte_end":27656,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/ use hal::General;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":27661,"byte_end":27682,"line_start":168,"line_end":168,"column_start":5,"column_end":26}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":27687,"byte_end":27704,"line_start":169,"line_end":169,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":27709,"byte_end":27712,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # let mut adapter: hal::Adapter<empty::Backend> = return;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":27717,"byte_end":27778,"line_start":171,"line_end":171,"column_start":5,"column_end":66}},{"value":"/ let (device, queues) = adapter.open_with::<_, General>(1, |_| true).unwrap();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":27783,"byte_end":27864,"line_start":172,"line_end":172,"column_start":5,"column_end":86}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":27869,"byte_end":27876,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":27881,"byte_end":27888,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":27893,"byte_end":27896,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":27901,"byte_end":27913,"line_start":176,"line_end":176,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":27918,"byte_end":27921,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Returns the same errors as `open` and `InitializationFailed` if no suitable","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":27926,"byte_end":28005,"line_start":178,"line_end":178,"column_start":5,"column_end":84}},{"value":"/ queue family could be found.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":28010,"byte_end":28042,"line_start":179,"line_end":179,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buffer","qualname":"::buffer","value":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":1808},{"krate":0,"index":1825},{"krate":0,"index":1830},{"krate":0,"index":1823},{"krate":0,"index":1821},{"krate":0,"index":1817},{"krate":0,"index":1818},{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":86},{"krate":0,"index":1833},{"krate":0,"index":1850},{"krate":0,"index":1855},{"krate":0,"index":1848},{"krate":0,"index":1846},{"krate":0,"index":1842},{"krate":0,"index":1843},{"krate":0,"index":1839},{"krate":0,"index":1840},{"krate":0,"index":88},{"krate":0,"index":1858},{"krate":0,"index":1922},{"krate":0,"index":1881},{"krate":0,"index":1880},{"krate":0,"index":1876},{"krate":0,"index":1877},{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":1871},{"krate":0,"index":1865},{"krate":0,"index":1863},{"krate":0,"index":1860},{"krate":0,"index":1928},{"krate":0,"index":1941},{"krate":0,"index":1943},{"krate":0,"index":1945},{"krate":0,"index":1947},{"krate":0,"index":1949},{"krate":0,"index":1964},{"krate":0,"index":1967},{"krate":0,"index":1969},{"krate":0,"index":1972},{"krate":0,"index":1974},{"krate":0,"index":1977},{"krate":0,"index":1979},{"krate":0,"index":1982},{"krate":0,"index":1984},{"krate":0,"index":1987},{"krate":0,"index":1990},{"krate":0,"index":90},{"krate":0,"index":2031},{"krate":0,"index":2095},{"krate":0,"index":2054},{"krate":0,"index":2053},{"krate":0,"index":2049},{"krate":0,"index":2050},{"krate":0,"index":2046},{"krate":0,"index":2047},{"krate":0,"index":2044},{"krate":0,"index":2038},{"krate":0,"index":2036},{"krate":0,"index":2033},{"krate":0,"index":2101},{"krate":0,"index":2117},{"krate":0,"index":2119},{"krate":0,"index":2121},{"krate":0,"index":2123},{"krate":0,"index":2125},{"krate":0,"index":2143},{"krate":0,"index":2146},{"krate":0,"index":2148},{"krate":0,"index":2151},{"krate":0,"index":2153},{"krate":0,"index":2156},{"krate":0,"index":2158},{"krate":0,"index":2161},{"krate":0,"index":2163},{"krate":0,"index":2166},{"krate":0,"index":2169},{"krate":0,"index":2219},{"krate":0,"index":2225}],"decl_id":null,"docs":" Memory buffers.","sig":null,"attributes":[{"value":"/ Memory buffers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":28941,"byte_end":28960,"line_start":1,"line_end":1,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":28961,"byte_end":28964,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Buffer","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":28965,"byte_end":28977,"line_start":3,"line_end":3,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":28978,"byte_end":28981,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Buffers interpret memory slices as linear contiguous data array.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":28982,"byte_end":29050,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/ They can be used as shader resources, vertex buffers, index buffers or for","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":29051,"byte_end":29129,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ specifying the action commands for indirect execution.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":29130,"byte_end":29188,"line_start":7,"line_end":7,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":29290,"byte_end":29296,"line_start":12,"line_end":12,"column_start":10,"column_end":16},"name":"Offset","qualname":"::buffer::Offset","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" An offset inside a buffer, in bytes.\n","sig":null,"attributes":[{"value":"/ An offset inside a buffer, in bytes.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":29240,"byte_end":29280,"line_start":11,"line_end":11,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":29332,"byte_end":29337,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"State","qualname":"::buffer::State","value":"Access","parent":null,"children":[],"decl_id":null,"docs":" Buffer state.\n","sig":null,"attributes":[{"value":"/ Buffer state.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":29305,"byte_end":29322,"line_start":14,"line_end":14,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1809},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":29529,"byte_end":29540,"line_start":22,"line_end":22,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::buffer::CreationError::OutOfMemory","value":"CreationError::OutOfMemory(device::OutOfMemory)","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":" Out of either host or device memory.\n","sig":null,"attributes":[{"value":"/ Out of either host or device memory.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":29452,"byte_end":29492,"line_start":20,"line_end":20,"column_start":5,"column_end":45}},{"value":"fail(display = \"{}\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":29497,"byte_end":29524,"line_start":21,"line_end":21,"column_start":5,"column_end":32}}]},{"kind":"StructVariant","id":{"krate":0,"index":1812},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":29771,"byte_end":29787,"line_start":28,"line_end":28,"column_start":5,"column_end":21},"name":"UnsupportedUsage","qualname":"::buffer::CreationError::UnsupportedUsage","value":"CreationError::UnsupportedUsage { usage }","parent":{"krate":0,"index":1808},"children":[],"decl_id":null,"docs":" Requested buffer usage is not supported.","sig":null,"attributes":[{"value":"/ Requested buffer usage is not supported.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":29568,"byte_end":29612,"line_start":24,"line_end":24,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":29617,"byte_end":29620,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ Older GL version don't support constant buffers or multiple usage flags.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":29625,"byte_end":29701,"line_start":26,"line_end":26,"column_start":5,"column_end":81}},{"value":"fail(display = \"Buffer usage unsupported ({:?}).\", usage)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":29706,"byte_end":29766,"line_start":27,"line_end":27,"column_start":5,"column_end":65}}]},{"kind":"Enum","id":{"krate":0,"index":1808},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":29432,"byte_end":29445,"line_start":19,"line_end":19,"column_start":10,"column_end":23},"name":"CreationError","qualname":"::buffer::CreationError","value":"pub enum CreationError {\n\n    /// Out of either host or device memory.\n    #[fail(display = \"{}\", _0)]\n    OutOfMemory(device::OutOfMemory),\n\n    /// Requested buffer usage is not supported.\n    ///\n    /// Older GL version don't support constant buffers or multiple usage flags.\n    #[fail(display = \"Buffer usage unsupported ({:?}).\", usage)]\n    UnsupportedUsage {\n        /// Unsupported usage passed on buffer creation.\n        usage: Usage,\n    },\n}","parent":null,"children":[{"krate":0,"index":1809},{"krate":0,"index":1812}],"decl_id":null,"docs":" Error creating a buffer.\n","sig":null,"attributes":[{"value":"/ Error creating a buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":29349,"byte_end":29377,"line_start":17,"line_end":17,"column_start":1,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1834},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":30220,"byte_end":30231,"line_start":45,"line_end":45,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::buffer::ViewCreationError::OutOfMemory","value":"ViewCreationError::OutOfMemory(device::OutOfMemory)","parent":{"krate":0,"index":1833},"children":[],"decl_id":null,"docs":" Out of either host or device memory.\n","sig":null,"attributes":[{"value":"/ Out of either host or device memory.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":30143,"byte_end":30183,"line_start":43,"line_end":43,"column_start":5,"column_end":45}},{"value":"fail(display = \"{}\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":30188,"byte_end":30215,"line_start":44,"line_end":44,"column_start":5,"column_end":32}}]},{"kind":"StructVariant","id":{"krate":0,"index":1837},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":30376,"byte_end":30393,"line_start":49,"line_end":49,"column_start":5,"column_end":22},"name":"UnsupportedFormat","qualname":"::buffer::ViewCreationError::UnsupportedFormat","value":"ViewCreationError::UnsupportedFormat { format }","parent":{"krate":0,"index":1833},"children":[],"decl_id":null,"docs":" Buffer view format is not supported.\n","sig":null,"attributes":[{"value":"/ Buffer view format is not supported.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":30259,"byte_end":30299,"line_start":47,"line_end":47,"column_start":5,"column_end":45}},{"value":"fail(display = \"Buffer view format unsupported ({:?}).\", format)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":30304,"byte_end":30371,"line_start":48,"line_end":48,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":1833},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":30119,"byte_end":30136,"line_start":42,"line_end":42,"column_start":10,"column_end":27},"name":"ViewCreationError","qualname":"::buffer::ViewCreationError","value":"pub enum ViewCreationError {\n\n    /// Out of either host or device memory.\n    #[fail(display = \"{}\", _0)]\n    OutOfMemory(device::OutOfMemory),\n\n    /// Buffer view format is not supported.\n    #[fail(display = \"Buffer view format unsupported ({:?}).\", format)]\n    UnsupportedFormat {\n        /// Unsupported format passed on view creation.\n        format: Option<format::Format>,\n    },\n}","parent":null,"children":[{"krate":0,"index":1834},{"krate":0,"index":1837}],"decl_id":null,"docs":" Error creating a buffer view.\n","sig":null,"attributes":[{"value":"/ Error creating a buffer view.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":30031,"byte_end":30064,"line_start":40,"line_end":40,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1858},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":30783,"byte_end":30788,"line_start":64,"line_end":64,"column_start":16,"column_end":21},"name":"Usage","qualname":"::buffer::Usage","value":"Usage {  }","parent":null,"children":[{"krate":0,"index":1859}],"decl_id":null,"docs":" Buffer usage flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1950},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":30822,"byte_end":30834,"line_start":66,"line_end":66,"column_start":15,"column_end":27},"name":"TRANSFER_SRC","qualname":"::buffer::Usage::TRANSFER_SRC","value":"Usage","parent":{"krate":0,"index":1949},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1951},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":30869,"byte_end":30881,"line_start":68,"line_end":68,"column_start":15,"column_end":27},"name":"TRANSFER_DST","qualname":"::buffer::Usage::TRANSFER_DST","value":"Usage","parent":{"krate":0,"index":1949},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1952},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":30915,"byte_end":30928,"line_start":70,"line_end":70,"column_start":15,"column_end":28},"name":"UNIFORM_TEXEL","qualname":"::buffer::Usage::UNIFORM_TEXEL","value":"Usage","parent":{"krate":0,"index":1949},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1953},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":30962,"byte_end":30975,"line_start":72,"line_end":72,"column_start":15,"column_end":28},"name":"STORAGE_TEXEL","qualname":"::buffer::Usage::STORAGE_TEXEL","value":"Usage","parent":{"krate":0,"index":1949},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1954},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":31009,"byte_end":31016,"line_start":74,"line_end":74,"column_start":15,"column_end":22},"name":"UNIFORM","qualname":"::buffer::Usage::UNIFORM","value":"Usage","parent":{"krate":0,"index":1949},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1955},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":31051,"byte_end":31058,"line_start":76,"line_end":76,"column_start":15,"column_end":22},"name":"STORAGE","qualname":"::buffer::Usage::STORAGE","value":"Usage","parent":{"krate":0,"index":1949},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1956},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":31093,"byte_end":31098,"line_start":78,"line_end":78,"column_start":15,"column_end":20},"name":"INDEX","qualname":"::buffer::Usage::INDEX","value":"Usage","parent":{"krate":0,"index":1949},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1957},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":31133,"byte_end":31139,"line_start":80,"line_end":80,"column_start":15,"column_end":21},"name":"VERTEX","qualname":"::buffer::Usage::VERTEX","value":"Usage","parent":{"krate":0,"index":1949},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1958},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":31174,"byte_end":31182,"line_start":82,"line_end":82,"column_start":15,"column_end":23},"name":"INDIRECT","qualname":"::buffer::Usage::INDIRECT","value":"Usage","parent":{"krate":0,"index":1949},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":31292,"byte_end":31304,"line_start":88,"line_end":88,"column_start":12,"column_end":24},"name":"can_transfer","qualname":"<Usage>::can_transfer","value":"pub fn can_transfer(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the buffer can be used in transfer operations.\n","sig":null,"attributes":[{"value":"/ Returns if the buffer can be used in transfer operations.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":31219,"byte_end":31280,"line_start":87,"line_end":87,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2031},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":31582,"byte_end":31588,"line_start":98,"line_end":98,"column_start":16,"column_end":22},"name":"Access","qualname":"::buffer::Access","value":"Access {  }","parent":null,"children":[{"krate":0,"index":2032}],"decl_id":null,"docs":" Buffer access flags.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2126},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":31672,"byte_end":31693,"line_start":100,"line_end":100,"column_start":15,"column_end":36},"name":"INDIRECT_COMMAND_READ","qualname":"::buffer::Access::INDIRECT_COMMAND_READ","value":"Access","parent":{"krate":0,"index":2125},"children":[],"decl_id":null,"docs":" Read commands instruction for indirect execution.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2127},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":31993,"byte_end":32010,"line_start":105,"line_end":105,"column_start":15,"column_end":32},"name":"INDEX_BUFFER_READ","qualname":"::buffer::Access::INDEX_BUFFER_READ","value":"Access","parent":{"krate":0,"index":2125},"children":[],"decl_id":null,"docs":" Read index values for indexed draw commands.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2128},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":32205,"byte_end":32223,"line_start":108,"line_end":108,"column_start":15,"column_end":33},"name":"VERTEX_BUFFER_READ","qualname":"::buffer::Access::VERTEX_BUFFER_READ","value":"Access","parent":{"krate":0,"index":2125},"children":[],"decl_id":null,"docs":" Read vertices from vertex buffer for draw commands in the [`VERTEX_INPUT`](\n ../pso/struct.PipelineStage.html#associatedconstant.VERTEX_INPUT) stage.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2129},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":32257,"byte_end":32277,"line_start":110,"line_end":110,"column_start":15,"column_end":35},"name":"CONSTANT_BUFFER_READ","qualname":"::buffer::Access::CONSTANT_BUFFER_READ","value":"Access","parent":{"krate":0,"index":2125},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2130},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":32311,"byte_end":32322,"line_start":112,"line_end":112,"column_start":15,"column_end":26},"name":"SHADER_READ","qualname":"::buffer::Access::SHADER_READ","value":"Access","parent":{"krate":0,"index":2125},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2131},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":32357,"byte_end":32369,"line_start":114,"line_end":114,"column_start":15,"column_end":27},"name":"SHADER_WRITE","qualname":"::buffer::Access::SHADER_WRITE","value":"Access","parent":{"krate":0,"index":2125},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2132},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":32404,"byte_end":32417,"line_start":116,"line_end":116,"column_start":15,"column_end":28},"name":"TRANSFER_READ","qualname":"::buffer::Access::TRANSFER_READ","value":"Access","parent":{"krate":0,"index":2125},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2133},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":32453,"byte_end":32467,"line_start":118,"line_end":118,"column_start":15,"column_end":29},"name":"TRANSFER_WRITE","qualname":"::buffer::Access::TRANSFER_WRITE","value":"Access","parent":{"krate":0,"index":2125},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2134},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":32504,"byte_end":32513,"line_start":120,"line_end":120,"column_start":15,"column_end":24},"name":"HOST_READ","qualname":"::buffer::Access::HOST_READ","value":"Access","parent":{"krate":0,"index":2125},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2135},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":32550,"byte_end":32560,"line_start":122,"line_end":122,"column_start":15,"column_end":25},"name":"HOST_WRITE","qualname":"::buffer::Access::HOST_WRITE","value":"Access","parent":{"krate":0,"index":2125},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2136},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":32597,"byte_end":32608,"line_start":124,"line_end":124,"column_start":15,"column_end":26},"name":"MEMORY_READ","qualname":"::buffer::Access::MEMORY_READ","value":"Access","parent":{"krate":0,"index":2125},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2137},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":32645,"byte_end":32657,"line_start":126,"line_end":126,"column_start":15,"column_end":27},"name":"MEMORY_WRITE","qualname":"::buffer::Access::MEMORY_WRITE","value":"Access","parent":{"krate":0,"index":2125},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2219},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":32903,"byte_end":32918,"line_start":135,"line_end":135,"column_start":12,"column_end":27},"name":"IndexBufferView","qualname":"::buffer::IndexBufferView","value":"IndexBufferView { buffer, offset, index_type }","parent":null,"children":[{"krate":0,"index":2222},{"krate":0,"index":2223},{"krate":0,"index":2224}],"decl_id":null,"docs":" Index buffer view for `bind_index_buffer`.","sig":null,"attributes":[{"value":"/ Index buffer view for `bind_index_buffer`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":32679,"byte_end":32725,"line_start":130,"line_end":130,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":32726,"byte_end":32729,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ Defines a buffer slice used for acquiring the indices on draw commands.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":32730,"byte_end":32805,"line_start":132,"line_end":132,"column_start":1,"column_end":76}},{"value":"/ Indices are used to lookup vertex indices in the vertex buffers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":32806,"byte_end":32874,"line_start":133,"line_end":133,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":2222},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":32973,"byte_end":32979,"line_start":137,"line_end":137,"column_start":9,"column_end":15},"name":"buffer","qualname":"::buffer::IndexBufferView::buffer","value":"&'a <B as Backend>::Buffer","parent":{"krate":0,"index":2219},"children":[],"decl_id":null,"docs":" The buffer to bind.\n","sig":null,"attributes":[{"value":"/ The buffer to bind.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":32941,"byte_end":32964,"line_start":136,"line_end":136,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2223},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":33052,"byte_end":33058,"line_start":139,"line_end":139,"column_start":9,"column_end":15},"name":"offset","qualname":"::buffer::IndexBufferView::offset","value":"u64","parent":{"krate":0,"index":2219},"children":[],"decl_id":null,"docs":" The offset into the buffer to start at.\n","sig":null,"attributes":[{"value":"/ The offset into the buffer to start at.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":33000,"byte_end":33043,"line_start":138,"line_end":138,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":2224},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":33130,"byte_end":33140,"line_start":141,"line_end":141,"column_start":9,"column_end":19},"name":"index_type","qualname":"::buffer::IndexBufferView::index_type","value":"IndexType","parent":{"krate":0,"index":2219},"children":[],"decl_id":null,"docs":" The type of the table elements (`u16` or `u32`).\n","sig":null,"attributes":[{"value":"/ The type of the table elements (`u16` or `u32`).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":33069,"byte_end":33121,"line_start":140,"line_end":140,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"command","qualname":"::command","value":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":22552},{"krate":0,"index":99},{"krate":0,"index":126},{"krate":0,"index":213},{"krate":0,"index":338},{"krate":0,"index":489},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":3125},{"krate":0,"index":3126},{"krate":0,"index":542},{"krate":0,"index":3128},{"krate":0,"index":3129},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":3131},{"krate":0,"index":3132},{"krate":0,"index":545},{"krate":0,"index":3134},{"krate":0,"index":3135},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":551},{"krate":0,"index":3137},{"krate":0,"index":3145},{"krate":0,"index":555},{"krate":0,"index":562},{"krate":0,"index":568},{"krate":0,"index":574},{"krate":0,"index":578},{"krate":0,"index":582},{"krate":0,"index":586},{"krate":0,"index":590},{"krate":0,"index":600}],"decl_id":null,"docs":" Command buffers.","sig":null,"attributes":[{"value":"/ Command buffers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":33156,"byte_end":33176,"line_start":1,"line_end":1,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":33177,"byte_end":33180,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A command buffer collects a list of commands to be submitted to the device.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":33181,"byte_end":33260,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ Each command buffer has specific capabilities for graphics, compute or transfer operations,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":33261,"byte_end":33356,"line_start":4,"line_end":4,"column_start":1,"column_end":96}},{"value":"/ and can be either a \"primary\" command buffer or a \"secondary\" command buffer.  Operations","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":33357,"byte_end":33450,"line_start":5,"line_end":5,"column_start":1,"column_end":94}},{"value":"/ always start from a primary command buffer, but a primary command buffer can contain calls","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":33451,"byte_end":33545,"line_start":6,"line_end":6,"column_start":1,"column_end":95}},{"value":"/ to secondary command buffers that contain snippets of commands that do specific things, similar","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":33546,"byte_end":33645,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ to function calls.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":33646,"byte_end":33668,"line_start":8,"line_end":8,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":33669,"byte_end":33672,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ All the possible commands are implemented in the `RawCommandBuffer` trait, and then the `CommandBuffer`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":33673,"byte_end":33780,"line_start":10,"line_end":10,"column_start":1,"column_end":108}},{"value":"/ and related types make a generic, strongly-typed wrapper around it that only expose the methods that","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":33781,"byte_end":33885,"line_start":11,"line_end":11,"column_start":1,"column_end":105}},{"value":"/ are valid for the capabilities it provides.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":33886,"byte_end":33933,"line_start":12,"line_end":12,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\compute.rs","byte_start":40756,"byte_end":40777,"line_start":12,"line_end":12,"column_start":19,"column_end":40},"name":"bind_compute_pipeline","qualname":"<CommandBuffer<B, C, S, L>>::bind_compute_pipeline","value":"pub unsafe fn bind_compute_pipeline(&mut Self, &B::ComputePipeline)","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\compute.rs","byte_start":40673,"byte_end":40737,"line_start":11,"line_end":11,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\compute.rs","byte_start":40965,"byte_end":40993,"line_start":17,"line_end":17,"column_start":19,"column_end":47},"name":"bind_compute_descriptor_sets","qualname":"<CommandBuffer<B, C, S, L>>::bind_compute_descriptor_sets","value":"pub unsafe fn bind_compute_descriptor_sets<I,\n                                           J>(&mut Self, &B::PipelineLayout,\n                                              usize, I, J) where\nI: IntoIterator, I::Item: Borrow<B::DescriptorSet>, J: IntoIterator,\nJ::Item: Borrow<DescriptorSetOffset>","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\compute.rs","byte_start":40882,"byte_end":40946,"line_start":16,"line_end":16,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\compute.rs","byte_start":41463,"byte_end":41471,"line_start":34,"line_end":34,"column_start":19,"column_end":27},"name":"dispatch","qualname":"<CommandBuffer<B, C, S, L>>::dispatch","value":"pub unsafe fn dispatch(&mut Self, WorkGroupCount)","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\compute.rs","byte_start":41380,"byte_end":41444,"line_start":33,"line_end":33,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\compute.rs","byte_start":41635,"byte_end":41652,"line_start":39,"line_end":39,"column_start":19,"column_end":36},"name":"dispatch_indirect","qualname":"<CommandBuffer<B, C, S, L>>::dispatch_indirect","value":"pub unsafe fn dispatch_indirect(&mut Self, &B::Buffer, Offset)","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\compute.rs","byte_start":41552,"byte_end":41616,"line_start":38,"line_end":38,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\compute.rs","byte_start":41847,"byte_end":41869,"line_start":44,"line_end":44,"column_start":19,"column_end":41},"name":"push_compute_constants","qualname":"<CommandBuffer<B, C, S, L>>::push_compute_constants","value":"pub unsafe fn push_compute_constants(&mut Self, &B::PipelineLayout, u32,\n                                     &[u32])","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\compute.rs","byte_start":41764,"byte_end":41828,"line_start":43,"line_end":43,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2230},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":42818,"byte_end":42824,"line_start":28,"line_end":28,"column_start":5,"column_end":11},"name":"Sfloat","qualname":"::command::graphics::ClearColor::Sfloat","value":"ClearColor::Sfloat(pso::ColorValue)","parent":{"krate":0,"index":2229},"children":[],"decl_id":null,"docs":" Standard floating-point `vec4` color\n","sig":null,"attributes":[{"value":"/ Standard floating-point `vec4` color","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":42773,"byte_end":42813,"line_start":27,"line_end":27,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2233},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":42896,"byte_end":42900,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Sint","qualname":"::command::graphics::ClearColor::Sint","value":"ClearColor::Sint([i32; ])","parent":{"krate":0,"index":2229},"children":[],"decl_id":null,"docs":" Integer vector to clear `ivec4` targets.\n","sig":null,"attributes":[{"value":"/ Integer vector to clear `ivec4` targets.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":42847,"byte_end":42891,"line_start":29,"line_end":29,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2237},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":42970,"byte_end":42974,"line_start":32,"line_end":32,"column_start":5,"column_end":9},"name":"Uint","qualname":"::command::graphics::ClearColor::Uint","value":"ClearColor::Uint([u32; ])","parent":{"krate":0,"index":2229},"children":[],"decl_id":null,"docs":" Unsigned int vector to clear `uvec4` targets.\n","sig":null,"attributes":[{"value":"/ Unsigned int vector to clear `uvec4` targets.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":42916,"byte_end":42965,"line_start":31,"line_end":31,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":2229},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":42756,"byte_end":42766,"line_start":26,"line_end":26,"column_start":10,"column_end":20},"name":"ClearColor","qualname":"::command::graphics::ClearColor","value":"pub enum ClearColor {\n\n    /// Standard floating-point `vec4` color\n    Sfloat(pso::ColorValue),\n\n    /// Integer vector to clear `ivec4` targets.\n    Sint([i32; ]),\n\n    /// Unsigned int vector to clear `uvec4` targets.\n    Uint([u32; ]),\n}","parent":null,"children":[{"krate":0,"index":2230},{"krate":0,"index":2233},{"krate":0,"index":2237}],"decl_id":null,"docs":" A universal clear color supporting integer formats\n as well as the standard floating-point.\n","sig":null,"attributes":[{"value":"/ A universal clear color supporting integer formats","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":42532,"byte_end":42586,"line_start":22,"line_end":22,"column_start":1,"column_end":55}},{"value":"/ as well as the standard floating-point.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":42587,"byte_end":42630,"line_start":23,"line_end":23,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":2343},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":44456,"byte_end":44473,"line_start":88,"line_end":88,"column_start":12,"column_end":29},"name":"ClearDepthStencil","qualname":"::command::graphics::ClearDepthStencil","value":"","parent":null,"children":[],"decl_id":null,"docs":" Depth-stencil target clear values.\n","sig":null,"attributes":[{"value":"/ Depth-stencil target clear values.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":44290,"byte_end":44328,"line_start":85,"line_end":85,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2345},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":44474,"byte_end":44493,"line_start":88,"line_end":88,"column_start":30,"column_end":49},"name":"0","qualname":"::command::graphics::ClearDepthStencil::0","value":"f32","parent":{"krate":0,"index":2343},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2346},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":44495,"byte_end":44516,"line_start":88,"line_end":88,"column_start":51,"column_end":72},"name":"1","qualname":"::command::graphics::ClearDepthStencil::1","value":"u32","parent":{"krate":0,"index":2343},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2390},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":44949,"byte_end":44954,"line_start":104,"line_end":104,"column_start":5,"column_end":10},"name":"Color","qualname":"::command::graphics::ClearValue::Color","value":"ClearValue::Color(ClearColor)","parent":{"krate":0,"index":2389},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":44941,"byte_end":44944,"line_start":103,"line_end":103,"column_start":5,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2393},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":44980,"byte_end":44992,"line_start":106,"line_end":106,"column_start":5,"column_end":17},"name":"DepthStencil","qualname":"::command::graphics::ClearValue::DepthStencil","value":"ClearValue::DepthStencil(ClearDepthStencil)","parent":{"krate":0,"index":2389},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":44972,"byte_end":44975,"line_start":105,"line_end":105,"column_start":5,"column_end":8}}]},{"kind":"Enum","id":{"krate":0,"index":2389},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":44924,"byte_end":44934,"line_start":102,"line_end":102,"column_start":10,"column_end":20},"name":"ClearValue","qualname":"::command::graphics::ClearValue","value":"pub enum ClearValue {\n\n    ///\n    Color(ClearColor),\n\n    ///\n    DepthStencil(ClearDepthStencil),\n}","parent":null,"children":[{"krate":0,"index":2390},{"krate":0,"index":2393}],"decl_id":null,"docs":" General clear values for attachments (color or depth-stencil).\n","sig":null,"attributes":[{"value":"/ General clear values for attachments (color or depth-stencil).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":44732,"byte_end":44798,"line_start":99,"line_end":99,"column_start":1,"column_end":67}}]},{"kind":"StructVariant","id":{"krate":0,"index":2457},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":45602,"byte_end":45607,"line_start":127,"line_end":127,"column_start":5,"column_end":10},"name":"Color","qualname":"::command::graphics::AttachmentClear::Color","value":"AttachmentClear::Color { index, value }","parent":{"krate":0,"index":2456},"children":[],"decl_id":null,"docs":" Clear color attachment.\n","sig":null,"attributes":[{"value":"/ Clear color attachment.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":45570,"byte_end":45597,"line_start":126,"line_end":126,"column_start":5,"column_end":32}}]},{"kind":"StructVariant","id":{"krate":0,"index":2460},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":45801,"byte_end":45813,"line_start":134,"line_end":134,"column_start":5,"column_end":17},"name":"DepthStencil","qualname":"::command::graphics::AttachmentClear::DepthStencil","value":"AttachmentClear::DepthStencil { depth, stencil }","parent":{"krate":0,"index":2456},"children":[],"decl_id":null,"docs":" Clear depth-stencil attachment.\n","sig":null,"attributes":[{"value":"/ Clear depth-stencil attachment.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":45761,"byte_end":45796,"line_start":133,"line_end":133,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":2456},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":45548,"byte_end":45563,"line_start":125,"line_end":125,"column_start":10,"column_end":25},"name":"AttachmentClear","qualname":"::command::graphics::AttachmentClear","value":"pub enum AttachmentClear {\n\n    /// Clear color attachment.\n    Color {\n        /// Index inside the `SubpassDesc::colors` array.\n        index: usize,\n        /// Value to clear with.\n        value: ClearColor,\n    },\n\n    /// Clear depth-stencil attachment.\n    DepthStencil {\n        /// Depth value to clear with.\n        depth: Option<pso::DepthValue>,\n        /// Stencil value to clear with.\n        stencil: Option<pso::StencilValue>,\n    },\n}","parent":null,"children":[{"krate":0,"index":2457},{"krate":0,"index":2460}],"decl_id":null,"docs":" Attachment clear description for the current subpass.\n","sig":null,"attributes":[{"value":"/ Attachment clear description for the current subpass.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":45365,"byte_end":45422,"line_start":122,"line_end":122,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":2603},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":46210,"byte_end":46222,"line_start":147,"line_end":147,"column_start":12,"column_end":24},"name":"ImageResolve","qualname":"::command::graphics::ImageResolve","value":"ImageResolve { src_subresource, src_offset, dst_subresource, dst_offset, extent }","parent":null,"children":[{"krate":0,"index":2604},{"krate":0,"index":2605},{"krate":0,"index":2606},{"krate":0,"index":2607},{"krate":0,"index":2608}],"decl_id":null,"docs":" Parameters for an image resolve operation,\n where a multi-sampled image is copied into a single-sampled\n image.\n","sig":null,"attributes":[{"value":"/ Parameters for an image resolve operation,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":45990,"byte_end":46036,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ where a multi-sampled image is copied into a single-sampled","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":46037,"byte_end":46100,"line_start":143,"line_end":143,"column_start":1,"column_end":64}},{"value":"/ image.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":46101,"byte_end":46111,"line_start":144,"line_end":144,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2604},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":46266,"byte_end":46281,"line_start":149,"line_end":149,"column_start":9,"column_end":24},"name":"src_subresource","qualname":"::command::graphics::ImageResolve::src_subresource","value":"image::SubresourceLayers","parent":{"krate":0,"index":2603},"children":[],"decl_id":null,"docs":" Source image and layers.\n","sig":null,"attributes":[{"value":"/ Source image and layers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":46229,"byte_end":46257,"line_start":148,"line_end":148,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2605},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":46346,"byte_end":46356,"line_start":151,"line_end":151,"column_start":9,"column_end":19},"name":"src_offset","qualname":"::command::graphics::ImageResolve::src_offset","value":"image::Offset","parent":{"krate":0,"index":2603},"children":[],"decl_id":null,"docs":" Source image offset.\n","sig":null,"attributes":[{"value":"/ Source image offset.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":46313,"byte_end":46337,"line_start":150,"line_end":150,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2606},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":46419,"byte_end":46434,"line_start":153,"line_end":153,"column_start":9,"column_end":24},"name":"dst_subresource","qualname":"::command::graphics::ImageResolve::dst_subresource","value":"image::SubresourceLayers","parent":{"krate":0,"index":2603},"children":[],"decl_id":null,"docs":" Destination image and layers.\n","sig":null,"attributes":[{"value":"/ Destination image and layers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":46377,"byte_end":46410,"line_start":152,"line_end":152,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":2607},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":46504,"byte_end":46514,"line_start":155,"line_end":155,"column_start":9,"column_end":19},"name":"dst_offset","qualname":"::command::graphics::ImageResolve::dst_offset","value":"image::Offset","parent":{"krate":0,"index":2603},"children":[],"decl_id":null,"docs":" Destination image offset.\n","sig":null,"attributes":[{"value":"/ Destination image offset.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":46466,"byte_end":46495,"line_start":154,"line_end":154,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":2608},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":46561,"byte_end":46567,"line_start":157,"line_end":157,"column_start":9,"column_end":15},"name":"extent","qualname":"::command::graphics::ImageResolve::extent","value":"image::Extent","parent":{"krate":0,"index":2603},"children":[],"decl_id":null,"docs":" Image extent.\n","sig":null,"attributes":[{"value":"/ Image extent.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":46535,"byte_end":46552,"line_start":156,"line_end":156,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2668},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":46823,"byte_end":46832,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"ImageBlit","qualname":"::command::graphics::ImageBlit","value":"ImageBlit { src_subresource, src_bounds, dst_subresource, dst_bounds }","parent":null,"children":[{"krate":0,"index":2669},{"krate":0,"index":2670},{"krate":0,"index":2671},{"krate":0,"index":2672}],"decl_id":null,"docs":" Parameters for an image blit operation, where a portion of one image\n is copied into another, possibly with scaling and filtering.\n","sig":null,"attributes":[{"value":"/ Parameters for an image blit operation, where a portion of one image","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":46587,"byte_end":46659,"line_start":160,"line_end":160,"column_start":1,"column_end":73}},{"value":"/ is copied into another, possibly with scaling and filtering.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":46660,"byte_end":46724,"line_start":161,"line_end":161,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":2669},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":46876,"byte_end":46891,"line_start":166,"line_end":166,"column_start":9,"column_end":24},"name":"src_subresource","qualname":"::command::graphics::ImageBlit::src_subresource","value":"image::SubresourceLayers","parent":{"krate":0,"index":2668},"children":[],"decl_id":null,"docs":" Source image and layers.\n","sig":null,"attributes":[{"value":"/ Source image and layers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":46839,"byte_end":46867,"line_start":165,"line_end":165,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2670},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":46956,"byte_end":46966,"line_start":168,"line_end":168,"column_start":9,"column_end":19},"name":"src_bounds","qualname":"::command::graphics::ImageBlit::src_bounds","value":"std::ops::Range<image::Offset>","parent":{"krate":0,"index":2668},"children":[],"decl_id":null,"docs":" Source image bounds.\n","sig":null,"attributes":[{"value":"/ Source image bounds.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":46923,"byte_end":46947,"line_start":167,"line_end":167,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2671},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":47036,"byte_end":47051,"line_start":170,"line_end":170,"column_start":9,"column_end":24},"name":"dst_subresource","qualname":"::command::graphics::ImageBlit::dst_subresource","value":"image::SubresourceLayers","parent":{"krate":0,"index":2668},"children":[],"decl_id":null,"docs":" Destination image and layers.\n","sig":null,"attributes":[{"value":"/ Destination image and layers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":46994,"byte_end":47027,"line_start":169,"line_end":169,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":2672},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":47121,"byte_end":47131,"line_start":172,"line_end":172,"column_start":9,"column_end":19},"name":"dst_bounds","qualname":"::command::graphics::ImageBlit::dst_bounds","value":"std::ops::Range<image::Offset>","parent":{"krate":0,"index":2668},"children":[],"decl_id":null,"docs":" Destination image bounds.\n","sig":null,"attributes":[{"value":"/ Destination image bounds.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":47083,"byte_end":47112,"line_start":171,"line_end":171,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":47332,"byte_end":47343,"line_start":177,"line_end":177,"column_start":19,"column_end":30},"name":"clear_image","qualname":"<CommandBuffer<B, C, S, L>>::clear_image","value":"pub unsafe fn clear_image<T>(&mut Self, &B::Image, image::Layout, ClearColor,\n                             ClearDepthStencil, T) where T: IntoIterator,\nT::Item: Borrow<image::SubresourceRange>","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":47249,"byte_end":47313,"line_start":176,"line_end":176,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":47882,"byte_end":47899,"line_start":198,"line_end":198,"column_start":19,"column_end":36},"name":"bind_index_buffer","qualname":"<CommandBuffer<B, C, S, L>>::bind_index_buffer","value":"pub unsafe fn bind_index_buffer(&mut Self, buffer::IndexBufferView<, B>)","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":47799,"byte_end":47863,"line_start":197,"line_end":197,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":48080,"byte_end":48099,"line_start":203,"line_end":203,"column_start":19,"column_end":38},"name":"bind_vertex_buffers","qualname":"<CommandBuffer<B, C, S, L>>::bind_vertex_buffers","value":"pub unsafe fn bind_vertex_buffers<I, T>(&mut Self, pso::BufferIndex, I) where\nI: IntoIterator<Item = (T, buffer::Offset)>, T: Borrow<B::Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":47997,"byte_end":48061,"line_start":202,"line_end":202,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":48416,"byte_end":48438,"line_start":212,"line_end":212,"column_start":19,"column_end":41},"name":"bind_graphics_pipeline","qualname":"<CommandBuffer<B, C, S, L>>::bind_graphics_pipeline","value":"pub unsafe fn bind_graphics_pipeline(&mut Self, &B::GraphicsPipeline)","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":48333,"byte_end":48397,"line_start":211,"line_end":211,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":48628,"byte_end":48657,"line_start":217,"line_end":217,"column_start":19,"column_end":48},"name":"bind_graphics_descriptor_sets","qualname":"<CommandBuffer<B, C, S, L>>::bind_graphics_descriptor_sets","value":"pub unsafe fn bind_graphics_descriptor_sets<I,\n                                            J>(&mut Self, &B::PipelineLayout,\n                                               usize, I, J) where\nI: IntoIterator, I::Item: Borrow<B::DescriptorSet>, J: IntoIterator,\nJ::Item: Borrow<DescriptorSetOffset>","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":48545,"byte_end":48609,"line_start":216,"line_end":216,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":49128,"byte_end":49141,"line_start":234,"line_end":234,"column_start":19,"column_end":32},"name":"set_viewports","qualname":"<CommandBuffer<B, C, S, L>>::set_viewports","value":"pub unsafe fn set_viewports<T>(&mut Self, u32, T) where T: IntoIterator,\nT::Item: Borrow<pso::Viewport>","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":49045,"byte_end":49109,"line_start":233,"line_end":233,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":49424,"byte_end":49436,"line_start":243,"line_end":243,"column_start":19,"column_end":31},"name":"set_scissors","qualname":"<CommandBuffer<B, C, S, L>>::set_scissors","value":"pub unsafe fn set_scissors<T>(&mut Self, u32, T) where T: IntoIterator,\nT::Item: Borrow<pso::Rect>","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":49341,"byte_end":49405,"line_start":242,"line_end":242,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":49710,"byte_end":49731,"line_start":252,"line_end":252,"column_start":19,"column_end":40},"name":"set_stencil_reference","qualname":"<CommandBuffer<B, C, S, L>>::set_stencil_reference","value":"pub unsafe fn set_stencil_reference(&mut Self, pso::Face, pso::StencilValue)","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":49627,"byte_end":49691,"line_start":251,"line_end":251,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":49937,"byte_end":49958,"line_start":257,"line_end":257,"column_start":19,"column_end":40},"name":"set_stencil_read_mask","qualname":"<CommandBuffer<B, C, S, L>>::set_stencil_read_mask","value":"pub unsafe fn set_stencil_read_mask(&mut Self, pso::Face, pso::StencilValue)","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":49854,"byte_end":49918,"line_start":256,"line_end":256,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":50164,"byte_end":50186,"line_start":262,"line_end":262,"column_start":19,"column_end":41},"name":"set_stencil_write_mask","qualname":"<CommandBuffer<B, C, S, L>>::set_stencil_write_mask","value":"pub unsafe fn set_stencil_write_mask(&mut Self, pso::Face, pso::StencilValue)","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":50081,"byte_end":50145,"line_start":261,"line_end":261,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":50393,"byte_end":50412,"line_start":267,"line_end":267,"column_start":19,"column_end":38},"name":"set_blend_constants","qualname":"<CommandBuffer<B, C, S, L>>::set_blend_constants","value":"pub unsafe fn set_blend_constants(&mut Self, pso::ColorValue)","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":50310,"byte_end":50374,"line_start":266,"line_end":266,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":50582,"byte_end":50598,"line_start":272,"line_end":272,"column_start":19,"column_end":35},"name":"set_depth_bounds","qualname":"<CommandBuffer<B, C, S, L>>::set_depth_bounds","value":"pub unsafe fn set_depth_bounds(&mut Self, Range<f32>)","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":50499,"byte_end":50563,"line_start":271,"line_end":271,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":50768,"byte_end":50782,"line_start":277,"line_end":277,"column_start":19,"column_end":33},"name":"set_line_width","qualname":"<CommandBuffer<B, C, S, L>>::set_line_width","value":"pub unsafe fn set_line_width(&mut Self, f32)","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":50685,"byte_end":50749,"line_start":276,"line_end":276,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":50942,"byte_end":50956,"line_start":282,"line_end":282,"column_start":19,"column_end":33},"name":"set_depth_bias","qualname":"<CommandBuffer<B, C, S, L>>::set_depth_bias","value":"pub unsafe fn set_depth_bias(&mut Self, pso::DepthBias)","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":50859,"byte_end":50923,"line_start":281,"line_end":281,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":51137,"byte_end":51160,"line_start":287,"line_end":287,"column_start":19,"column_end":42},"name":"push_graphics_constants","qualname":"<CommandBuffer<B, C, S, L>>::push_graphics_constants","value":"pub unsafe fn push_graphics_constants(&mut Self, &B::PipelineLayout,\n                                      pso::ShaderStageFlags, u32, &[u32])","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":51054,"byte_end":51118,"line_start":286,"line_end":286,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":51495,"byte_end":51508,"line_start":299,"line_end":299,"column_start":19,"column_end":32},"name":"resolve_image","qualname":"<CommandBuffer<B, C, S, L>>::resolve_image","value":"pub unsafe fn resolve_image<T>(&mut Self, &B::Image, image::Layout, &B::Image,\n                               image::Layout, T) where T: IntoIterator,\nT::Item: Borrow<ImageResolve>","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":51412,"byte_end":51476,"line_start":298,"line_end":298,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":51933,"byte_end":51943,"line_start":315,"line_end":315,"column_start":19,"column_end":29},"name":"blit_image","qualname":"<CommandBuffer<B, C, S, L>>::blit_image","value":"pub unsafe fn blit_image<T>(&mut Self, &B::Image, image::Layout, &B::Image,\n                            image::Layout, image::Filter, T) where\nT: IntoIterator, T::Item: Borrow<ImageBlit>","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":51850,"byte_end":51914,"line_start":314,"line_end":314,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":52486,"byte_end":52510,"line_start":334,"line_end":334,"column_start":19,"column_end":43},"name":"begin_render_pass_inline","qualname":"<CommandBuffer<B, C, S, Primary>>::begin_render_pass_inline","value":"pub unsafe fn begin_render_pass_inline<T>(&mut Self, &B::RenderPass,\n                                          &B::Framebuffer, pso::Rect, T)\n-> RenderPassInlineEncoder<, B> where T: IntoIterator,\nT::Item: Borrow<ClearValue>","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":52403,"byte_end":52467,"line_start":333,"line_end":333,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":52948,"byte_end":52975,"line_start":349,"line_end":349,"column_start":19,"column_end":46},"name":"begin_render_pass_secondary","qualname":"<CommandBuffer<B, C, S, Primary>>::begin_render_pass_secondary","value":"pub unsafe fn begin_render_pass_secondary<T>(&mut Self, &B::RenderPass,\n                                             &B::Framebuffer, pso::Rect, T)\n-> RenderPassSecondaryEncoder<, B> where T: IntoIterator,\nT::Item: Borrow<ClearValue>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new secondary render pass.\n","sig":null,"attributes":[{"value":"/ Creates a new secondary render pass.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":52889,"byte_end":52929,"line_start":348,"line_end":348,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":53541,"byte_end":53552,"line_start":366,"line_end":366,"column_start":19,"column_end":30},"name":"begin_query","qualname":"<CommandBuffer<B, C, S, L>>::begin_query","value":"pub unsafe fn begin_query(&mut Self, query::Query<, B>, query::ControlFlags)","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":53458,"byte_end":53522,"line_start":365,"line_end":365,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":53755,"byte_end":53764,"line_start":371,"line_end":371,"column_start":19,"column_end":28},"name":"end_query","qualname":"<CommandBuffer<B, C, S, L>>::end_query","value":"pub unsafe fn end_query(&mut Self, query::Query<, B>)","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":53672,"byte_end":53736,"line_start":370,"line_end":370,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":53930,"byte_end":53946,"line_start":376,"line_end":376,"column_start":19,"column_end":35},"name":"reset_query_pool","qualname":"<CommandBuffer<B, C, S, L>>::reset_query_pool","value":"pub unsafe fn reset_query_pool(&mut Self, &B::QueryPool, Range<query::Id>)","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":53847,"byte_end":53911,"line_start":375,"line_end":375,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":54151,"byte_end":54174,"line_start":381,"line_end":381,"column_start":19,"column_end":42},"name":"copy_query_pool_results","qualname":"<CommandBuffer<B, C, S, L>>::copy_query_pool_results","value":"pub unsafe fn copy_query_pool_results(&mut Self, &B::QueryPool,\n                                      Range<query::Id>, &B::Buffer,\n                                      buffer::Offset, buffer::Offset,\n                                      query::ResultFlags)","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":54068,"byte_end":54132,"line_start":380,"line_end":380,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":54588,"byte_end":54603,"line_start":395,"line_end":395,"column_start":19,"column_end":34},"name":"write_timestamp","qualname":"<CommandBuffer<B, C, S, L>>::write_timestamp","value":"pub unsafe fn write_timestamp(&mut Self, pso::PipelineStage,\n                              query::Query<, B>)","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":54505,"byte_end":54569,"line_start":394,"line_end":394,"column_start":5,"column_end":69}}]},{"kind":"Union","id":{"krate":0,"index":2730},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":55327,"byte_end":55340,"line_start":32,"line_end":32,"column_start":11,"column_end":24},"name":"ClearColorRaw","qualname":"::command::raw::ClearColorRaw","value":"ClearColorRaw { float32, int32, uint32 }","parent":null,"children":[{"krate":0,"index":2731},{"krate":0,"index":2733},{"krate":0,"index":2735},{"krate":0,"index":2737}],"decl_id":null,"docs":" Unsafe variant of `ClearColor`.\n","sig":null,"attributes":[{"value":"/ Unsafe variant of `ClearColor`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":55247,"byte_end":55282,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":55283,"byte_end":55293,"line_start":30,"line_end":30,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2731},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":55373,"byte_end":55380,"line_start":34,"line_end":34,"column_start":9,"column_end":16},"name":"float32","qualname":"::command::raw::ClearColorRaw::float32","value":"[f32; 4]","parent":{"krate":0,"index":2730},"children":[],"decl_id":null,"docs":" `f32` variant\n","sig":null,"attributes":[{"value":"/ `f32` variant","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":55347,"byte_end":55364,"line_start":33,"line_end":33,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":2733},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":55422,"byte_end":55427,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"name":"int32","qualname":"::command::raw::ClearColorRaw::int32","value":"[i32; 4]","parent":{"krate":0,"index":2730},"children":[],"decl_id":null,"docs":" `i32` variant\n","sig":null,"attributes":[{"value":"/ `i32` variant","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":55396,"byte_end":55413,"line_start":35,"line_end":35,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":2735},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":55469,"byte_end":55475,"line_start":38,"line_end":38,"column_start":9,"column_end":15},"name":"uint32","qualname":"::command::raw::ClearColorRaw::uint32","value":"[u32; 4]","parent":{"krate":0,"index":2730},"children":[],"decl_id":null,"docs":" `u32` variant\n","sig":null,"attributes":[{"value":"/ `u32` variant","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":55443,"byte_end":55460,"line_start":37,"line_end":37,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2742},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":55838,"byte_end":55858,"line_start":52,"line_end":52,"column_start":12,"column_end":32},"name":"ClearDepthStencilRaw","qualname":"::command::raw::ClearDepthStencilRaw","value":"ClearDepthStencilRaw { depth, stencil }","parent":null,"children":[{"krate":0,"index":2743},{"krate":0,"index":2744}],"decl_id":null,"docs":" A variant of `ClearDepthStencil` that has a `#[repr(C)]` layout\n and so is used when a known layout is needed.\n","sig":null,"attributes":[{"value":"/ A variant of `ClearDepthStencil` that has a `#[repr(C)]` layout","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":55668,"byte_end":55735,"line_start":48,"line_end":48,"column_start":1,"column_end":68}},{"value":"/ and so is used when a known layout is needed.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":55736,"byte_end":55785,"line_start":49,"line_end":49,"column_start":1,"column_end":50}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":55786,"byte_end":55796,"line_start":50,"line_end":50,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2743},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":55889,"byte_end":55894,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"name":"depth","qualname":"::command::raw::ClearDepthStencilRaw::depth","value":"f32","parent":{"krate":0,"index":2742},"children":[],"decl_id":null,"docs":" Depth value\n","sig":null,"attributes":[{"value":"/ Depth value","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":55865,"byte_end":55880,"line_start":53,"line_end":53,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":2744},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":55931,"byte_end":55938,"line_start":56,"line_end":56,"column_start":9,"column_end":16},"name":"stencil","qualname":"::command::raw::ClearDepthStencilRaw::stencil","value":"u32","parent":{"krate":0,"index":2742},"children":[],"decl_id":null,"docs":" Stencil value\n","sig":null,"attributes":[{"value":"/ Stencil value","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":55905,"byte_end":55922,"line_start":55,"line_end":55,"column_start":5,"column_end":22}}]},{"kind":"Union","id":{"krate":0,"index":2750},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":56028,"byte_end":56041,"line_start":62,"line_end":62,"column_start":11,"column_end":24},"name":"ClearValueRaw","qualname":"::command::raw::ClearValueRaw","value":"ClearValueRaw { color, depth_stencil }","parent":null,"children":[{"krate":0,"index":2751},{"krate":0,"index":2752},{"krate":0,"index":2753}],"decl_id":null,"docs":" Unsafe variant of `ClearValue`.\n","sig":null,"attributes":[{"value":"/ Unsafe variant of `ClearValue`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":55948,"byte_end":55983,"line_start":59,"line_end":59,"column_start":1,"column_end":36}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":55984,"byte_end":55994,"line_start":60,"line_end":60,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2751},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":56072,"byte_end":56077,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"name":"color","qualname":"::command::raw::ClearValueRaw::color","value":"command::raw::ClearColorRaw","parent":{"krate":0,"index":2750},"children":[],"decl_id":null,"docs":" Clear color\n","sig":null,"attributes":[{"value":"/ Clear color","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":56048,"byte_end":56063,"line_start":63,"line_end":63,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":2752},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":56134,"byte_end":56147,"line_start":66,"line_end":66,"column_start":9,"column_end":22},"name":"depth_stencil","qualname":"::command::raw::ClearValueRaw::depth_stencil","value":"command::raw::ClearDepthStencilRaw","parent":{"krate":0,"index":2750},"children":[],"decl_id":null,"docs":" Clear depth and stencil\n","sig":null,"attributes":[{"value":"/ Clear depth and stencil","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":56098,"byte_end":56125,"line_start":65,"line_end":65,"column_start":5,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":56534,"byte_end":56553,"line_start":80,"line_end":80,"column_start":10,"column_end":29},"name":"DescriptorSetOffset","qualname":"::command::raw::DescriptorSetOffset","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Offset for dynamic descriptors.\n","sig":null,"attributes":[{"value":"/ Offset for dynamic descriptors.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":56489,"byte_end":56524,"line_start":79,"line_end":79,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2758},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":56670,"byte_end":56688,"line_start":85,"line_end":85,"column_start":16,"column_end":34},"name":"CommandBufferFlags","qualname":"::command::raw::CommandBufferFlags","value":"CommandBufferFlags {  }","parent":null,"children":[{"krate":0,"index":2759}],"decl_id":null,"docs":" Option flags for various command buffer settings.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2800},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":56834,"byte_end":56839,"line_start":88,"line_end":88,"column_start":15,"column_end":20},"name":"EMPTY","qualname":"::command::raw::CommandBufferFlags::EMPTY","value":"CommandBufferFlags","parent":{"krate":0,"index":2799},"children":[],"decl_id":null,"docs":" No flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2801},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":57007,"byte_end":57022,"line_start":92,"line_end":92,"column_start":15,"column_end":30},"name":"ONE_TIME_SUBMIT","qualname":"::command::raw::CommandBufferFlags::ONE_TIME_SUBMIT","value":"CommandBufferFlags","parent":{"krate":0,"index":2799},"children":[],"decl_id":null,"docs":" Says that the command buffer will be recorded, submitted only once, and then reset and re-filled\n for another submission.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2802},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":57212,"byte_end":57232,"line_start":96,"line_end":96,"column_start":15,"column_end":35},"name":"RENDER_PASS_CONTINUE","qualname":"::command::raw::CommandBufferFlags::RENDER_PASS_CONTINUE","value":"CommandBufferFlags","parent":{"krate":0,"index":2799},"children":[],"decl_id":null,"docs":" If set on a secondary command buffer, it says the command buffer takes place entirely inside\n a render pass. Ignored on primary command buffer.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2803},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":57464,"byte_end":57480,"line_start":101,"line_end":101,"column_start":15,"column_end":31},"name":"SIMULTANEOUS_USE","qualname":"::command::raw::CommandBufferFlags::SIMULTANEOUS_USE","value":"CommandBufferFlags","parent":{"krate":0,"index":2799},"children":[],"decl_id":null,"docs":" Says that a command buffer can be recorded into multiple primary command buffers,\n and submitted to a queue while it is still pending.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2862},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":57758,"byte_end":57765,"line_start":111,"line_end":111,"column_start":5,"column_end":12},"name":"Primary","qualname":"::command::raw::Level::Primary","value":"Level::Primary","parent":{"krate":0,"index":2861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2864},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":57771,"byte_end":57780,"line_start":112,"line_end":112,"column_start":5,"column_end":14},"name":"Secondary","qualname":"::command::raw::Level::Secondary","value":"Level::Secondary","parent":{"krate":0,"index":2861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2861},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":57746,"byte_end":57751,"line_start":110,"line_end":110,"column_start":10,"column_end":15},"name":"Level","qualname":"::command::raw::Level","value":"pub enum Level { Primary, Secondary, }","parent":null,"children":[{"krate":0,"index":2862},{"krate":0,"index":2864}],"decl_id":null,"docs":" An enum that indicates at runtime whether a command buffer\n is primary or secondary, similar to what `command::Primary`\n and `command::Secondary` do at compile-time.\n","sig":null,"attributes":[{"value":"/ An enum that indicates at runtime whether a command buffer","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":57497,"byte_end":57559,"line_start":105,"line_end":105,"column_start":1,"column_end":63}},{"value":"/ is primary or secondary, similar to what `command::Primary`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":57560,"byte_end":57623,"line_start":106,"line_end":106,"column_start":1,"column_end":64}},{"value":"/ and `command::Secondary` do at compile-time.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":57624,"byte_end":57672,"line_start":107,"line_end":107,"column_start":1,"column_end":49}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":57673,"byte_end":57695,"line_start":108,"line_end":108,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2874},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":57836,"byte_end":57864,"line_start":117,"line_end":117,"column_start":12,"column_end":40},"name":"CommandBufferInheritanceInfo","qualname":"::command::raw::CommandBufferInheritanceInfo","value":"CommandBufferInheritanceInfo { subpass, framebuffer, occlusion_query_enable, occlusion_query_flags, pipeline_statistics }","parent":null,"children":[{"krate":0,"index":2877},{"krate":0,"index":2878},{"krate":0,"index":2879},{"krate":0,"index":2880},{"krate":0,"index":2881}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":57785,"byte_end":57807,"line_start":115,"line_end":115,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":2877},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":57891,"byte_end":57898,"line_start":118,"line_end":118,"column_start":9,"column_end":16},"name":"subpass","qualname":"::command::raw::CommandBufferInheritanceInfo::subpass","value":"std::option::Option<pass::Subpass<'a, B>>","parent":{"krate":0,"index":2874},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2878},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":57938,"byte_end":57949,"line_start":119,"line_end":119,"column_start":9,"column_end":20},"name":"framebuffer","qualname":"::command::raw::CommandBufferInheritanceInfo::framebuffer","value":"std::option::Option<&'a <B as Backend>::Framebuffer>","parent":{"krate":0,"index":2874},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2879},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":57987,"byte_end":58009,"line_start":120,"line_end":120,"column_start":9,"column_end":31},"name":"occlusion_query_enable","qualname":"::command::raw::CommandBufferInheritanceInfo::occlusion_query_enable","value":"bool","parent":{"krate":0,"index":2874},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2880},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":58025,"byte_end":58046,"line_start":121,"line_end":121,"column_start":9,"column_end":30},"name":"occlusion_query_flags","qualname":"::command::raw::CommandBufferInheritanceInfo::occlusion_query_flags","value":"query::ControlFlags","parent":{"krate":0,"index":2874},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2881},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":58077,"byte_end":58096,"line_start":122,"line_end":122,"column_start":9,"column_end":28},"name":"pipeline_statistics","qualname":"::command::raw::CommandBufferInheritanceInfo::pipeline_statistics","value":"query::PipelineStatistic","parent":{"krate":0,"index":2874},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":58632,"byte_end":58648,"line_start":139,"line_end":139,"column_start":11,"column_end":27},"name":"RawCommandBuffer","qualname":"::command::raw::RawCommandBuffer","value":"RawCommandBuffer<B: Backend>: fmt::Debug + Any + Send + Sync","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":309},{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330}],"decl_id":null,"docs":" A trait that describes all the operations that must be\n provided by a `Backend`'s command buffer.\n","sig":null,"attributes":[{"value":"/ A trait that describes all the operations that must be","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":58517,"byte_end":58575,"line_start":137,"line_end":137,"column_start":1,"column_end":59}},{"value":"/ provided by a `Backend`'s command buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":58576,"byte_end":58621,"line_start":138,"line_end":138,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":58764,"byte_end":58769,"line_start":141,"line_end":141,"column_start":15,"column_end":20},"name":"begin","qualname":"::command::raw::RawCommandBuffer::begin","value":"pub unsafe fn begin(&mut Self, CommandBufferFlags,\n                    CommandBufferInheritanceInfo<, B>)","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Begins recording commands to a command buffer.\n","sig":null,"attributes":[{"value":"/ Begins recording commands to a command buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":58699,"byte_end":58749,"line_start":140,"line_end":140,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":58961,"byte_end":58967,"line_start":148,"line_end":148,"column_start":15,"column_end":21},"name":"finish","qualname":"::command::raw::RawCommandBuffer::finish","value":"pub unsafe fn finish(&mut Self)","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Finish recording commands to a command buffer.\n","sig":null,"attributes":[{"value":"/ Finish recording commands to a command buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":58896,"byte_end":58946,"line_start":147,"line_end":147,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":59118,"byte_end":59123,"line_start":152,"line_end":152,"column_start":15,"column_end":20},"name":"reset","qualname":"::command::raw::RawCommandBuffer::reset","value":"pub unsafe fn reset(&mut Self, bool)","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Empties the command buffer, optionally releasing all\n resources from the commands that have been submitted.\n","sig":null,"attributes":[{"value":"/ Empties the command buffer, optionally releasing all","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":58985,"byte_end":59041,"line_start":150,"line_end":150,"column_start":5,"column_end":61}},{"value":"/ resources from the commands that have been submitted.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":59046,"byte_end":59103,"line_start":151,"line_end":151,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":59427,"byte_end":59443,"line_start":158,"line_end":158,"column_start":15,"column_end":31},"name":"pipeline_barrier","qualname":"::command::raw::RawCommandBuffer::pipeline_barrier","value":"pub unsafe fn pipeline_barrier<'a,\n                               T>(&mut Self, Range<pso::PipelineStage>,\n                                  Dependencies, T) where T: IntoIterator,\nT::Item: Borrow<Barrier>","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Inserts a synchronization dependency between pipeline stages\n in the command buffer.\n","sig":null,"attributes":[{"value":"/ Inserts a synchronization dependency between pipeline stages","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":59317,"byte_end":59381,"line_start":156,"line_end":156,"column_start":5,"column_end":69}},{"value":"/ in the command buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":59386,"byte_end":59412,"line_start":157,"line_end":157,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":59714,"byte_end":59725,"line_start":168,"line_end":168,"column_start":15,"column_end":26},"name":"fill_buffer","qualname":"::command::raw::RawCommandBuffer::fill_buffer","value":"pub unsafe fn fill_buffer<R>(&mut Self, &B::Buffer, R, u32) where\nR: RangeArg<buffer::Offset>","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Fill a buffer with the given `u32` value.\n","sig":null,"attributes":[{"value":"/ Fill a buffer with the given `u32` value.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":59654,"byte_end":59699,"line_start":167,"line_end":167,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":59897,"byte_end":59910,"line_start":173,"line_end":173,"column_start":15,"column_end":28},"name":"update_buffer","qualname":"::command::raw::RawCommandBuffer::update_buffer","value":"pub unsafe fn update_buffer(&mut Self, &B::Buffer, buffer::Offset, &[u8])","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Copy data from the given slice into a buffer.\n","sig":null,"attributes":[{"value":"/ Copy data from the given slice into a buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":59833,"byte_end":59882,"line_start":172,"line_end":172,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":60053,"byte_end":60064,"line_start":176,"line_end":176,"column_start":15,"column_end":26},"name":"clear_image","qualname":"::command::raw::RawCommandBuffer::clear_image","value":"pub unsafe fn clear_image<T>(&mut Self, &B::Image, Layout, ClearColorRaw,\n                             ClearDepthStencilRaw, T) where T: IntoIterator,\nT::Item: Borrow<SubresourceRange>","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Clears an image to the given color/depth/stencil.\n","sig":null,"attributes":[{"value":"/ Clears an image to the given color/depth/stencil.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":59985,"byte_end":60038,"line_start":175,"line_end":175,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":60466,"byte_end":60483,"line_start":189,"line_end":189,"column_start":15,"column_end":32},"name":"clear_attachments","qualname":"::command::raw::RawCommandBuffer::clear_attachments","value":"pub unsafe fn clear_attachments<T, U>(&mut Self, T, U) where T: IntoIterator,\nT::Item: Borrow<AttachmentClear>, U: IntoIterator,\nU::Item: Borrow<pso::ClearRect>","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Takes an iterator of attachments and an iterator of rect's,\n and clears the given rect's for *each* attachment.\n","sig":null,"attributes":[{"value":"/ Takes an iterator of attachments and an iterator of rect's,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":60329,"byte_end":60392,"line_start":187,"line_end":187,"column_start":5,"column_end":68}},{"value":"/ and clears the given rect's for *each* attachment.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":60397,"byte_end":60451,"line_start":188,"line_end":188,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":60831,"byte_end":60844,"line_start":198,"line_end":198,"column_start":15,"column_end":28},"name":"resolve_image","qualname":"::command::raw::RawCommandBuffer::resolve_image","value":"pub unsafe fn resolve_image<T>(&mut Self, &B::Image, Layout, &B::Image,\n                               Layout, T) where T: IntoIterator,\nT::Item: Borrow<ImageResolve>","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" \"Resolves\" a multisampled image, converting it into a non-multisampled\n image. Takes an iterator of regions to apply the resolution to.\n","sig":null,"attributes":[{"value":"/ \"Resolves\" a multisampled image, converting it into a non-multisampled","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":60670,"byte_end":60744,"line_start":196,"line_end":196,"column_start":5,"column_end":79}},{"value":"/ image. Takes an iterator of regions to apply the resolution to.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":60749,"byte_end":60816,"line_start":197,"line_end":197,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":61215,"byte_end":61225,"line_start":211,"line_end":211,"column_start":15,"column_end":25},"name":"blit_image","qualname":"::command::raw::RawCommandBuffer::blit_image","value":"pub unsafe fn blit_image<T>(&mut Self, &B::Image, Layout, &B::Image, Layout,\n                            Filter, T) where T: IntoIterator,\nT::Item: Borrow<ImageBlit>","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Copies regions from the source to destination image,\n applying scaling, filtering and potentially format conversion.\n","sig":null,"attributes":[{"value":"/ Copies regions from the source to destination image,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":61073,"byte_end":61129,"line_start":209,"line_end":209,"column_start":5,"column_end":61}},{"value":"/ applying scaling, filtering and potentially format conversion.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":61134,"byte_end":61200,"line_start":210,"line_end":210,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":61593,"byte_end":61610,"line_start":225,"line_end":225,"column_start":15,"column_end":32},"name":"bind_index_buffer","qualname":"::command::raw::RawCommandBuffer::bind_index_buffer","value":"pub unsafe fn bind_index_buffer(&mut Self, buffer::IndexBufferView<, B>)","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Bind the index buffer view, making it the \"current\" one that draw commands\n will operate on.\n","sig":null,"attributes":[{"value":"/ Bind the index buffer view, making it the \"current\" one that draw commands","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":61475,"byte_end":61553,"line_start":223,"line_end":223,"column_start":5,"column_end":83}},{"value":"/ will operate on.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":61558,"byte_end":61578,"line_start":224,"line_end":224,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":62578,"byte_end":62597,"line_start":243,"line_end":243,"column_start":15,"column_end":34},"name":"bind_vertex_buffers","qualname":"::command::raw::RawCommandBuffer::bind_vertex_buffers","value":"pub unsafe fn bind_vertex_buffers<I, T>(&mut Self, pso::BufferIndex, I) where\nI: IntoIterator<Item = (T, buffer::Offset)>, T: Borrow<B::Buffer>","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Bind the vertex buffer set, making it the \"current\" one that draw commands\n will operate on.","sig":null,"attributes":[{"value":"/ Bind the vertex buffer set, making it the \"current\" one that draw commands","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":61662,"byte_end":61740,"line_start":227,"line_end":227,"column_start":5,"column_end":83}},{"value":"/ will operate on.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":61745,"byte_end":61765,"line_start":228,"line_end":228,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":61770,"byte_end":61773,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Each buffer passed corresponds to the vertex input binding with the same index,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":61778,"byte_end":61861,"line_start":230,"line_end":230,"column_start":5,"column_end":88}},{"value":"/ starting from an offset index `first_binding`. For example an iterator with","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":61866,"byte_end":61945,"line_start":231,"line_end":231,"column_start":5,"column_end":84}},{"value":"/ two items and `first_binding` of 1 would fill vertex buffer binding numbers","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":61950,"byte_end":62029,"line_start":232,"line_end":232,"column_start":5,"column_end":84}},{"value":"/ 1 and 2.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":62034,"byte_end":62046,"line_start":233,"line_end":233,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":62051,"byte_end":62054,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ This binding number refers only to binding points for vertex buffers and is","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":62059,"byte_end":62138,"line_start":235,"line_end":235,"column_start":5,"column_end":84}},{"value":"/ completely separate from the binding numbers of `Descriptor`s in `DescriptorSet`s.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":62143,"byte_end":62229,"line_start":236,"line_end":236,"column_start":5,"column_end":91}},{"value":"/ It needs to match with the `VertexBufferDesc` and `AttributeDesc`s to which the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":62234,"byte_end":62317,"line_start":237,"line_end":237,"column_start":5,"column_end":88}},{"value":"/ data from each bound vertex buffer should flow.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":62322,"byte_end":62373,"line_start":238,"line_end":238,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":62378,"byte_end":62381,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ The `buffers` iterator should yield the `Buffer` to bind, as well as an","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":62386,"byte_end":62461,"line_start":240,"line_end":240,"column_start":5,"column_end":80}},{"value":"/ offset, in bytes, into that buffer where the vertex data that should be bound","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":62466,"byte_end":62547,"line_start":241,"line_end":241,"column_start":5,"column_end":86}},{"value":"/ starts.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":62552,"byte_end":62563,"line_start":242,"line_end":242,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":63568,"byte_end":63581,"line_start":265,"line_end":265,"column_start":15,"column_end":28},"name":"set_viewports","qualname":"::command::raw::RawCommandBuffer::set_viewports","value":"pub unsafe fn set_viewports<T>(&mut Self, u32, T) where T: IntoIterator,\nT::Item: Borrow<pso::Viewport>","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Set the viewport parameters for the rasterizer.","sig":null,"attributes":[{"value":"/ Set the viewport parameters for the rasterizer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":62758,"byte_end":62809,"line_start":248,"line_end":248,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":62814,"byte_end":62817,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Each viewport passed corresponds to the viewport with the same index,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":62822,"byte_end":62895,"line_start":250,"line_end":250,"column_start":5,"column_end":78}},{"value":"/ starting from an offset index `first_viewport`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":62900,"byte_end":62951,"line_start":251,"line_end":251,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":62956,"byte_end":62959,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":62964,"byte_end":62976,"line_start":253,"line_end":253,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":62981,"byte_end":62984,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This function does not return an error. Invalid usage of this function","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":62989,"byte_end":63063,"line_start":255,"line_end":255,"column_start":5,"column_end":79}},{"value":"/ will result in undefined behavior.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":63068,"byte_end":63106,"line_start":256,"line_end":256,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":63111,"byte_end":63114,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ - Command buffer must be in recording state.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":63119,"byte_end":63167,"line_start":258,"line_end":258,"column_start":5,"column_end":53}},{"value":"/ - Number of viewports must be between 1 and `max_viewports - first_viewport`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":63172,"byte_end":63253,"line_start":259,"line_end":259,"column_start":5,"column_end":86}},{"value":"/ - The first viewport must be less than `max_viewports`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":63258,"byte_end":63317,"line_start":260,"line_end":260,"column_start":5,"column_end":64}},{"value":"/ - Only queues with graphics capability support this function.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":63322,"byte_end":63387,"line_start":261,"line_end":261,"column_start":5,"column_end":70}},{"value":"/ - The bound pipeline must not have baked viewport state.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":63392,"byte_end":63452,"line_start":262,"line_end":262,"column_start":5,"column_end":65}},{"value":"/ - All viewports used by the pipeline must be specified before the first","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":63457,"byte_end":63532,"line_start":263,"line_end":263,"column_start":5,"column_end":80}},{"value":"/   draw call.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":63537,"byte_end":63553,"line_start":264,"line_end":264,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":64506,"byte_end":64518,"line_start":287,"line_end":287,"column_start":15,"column_end":27},"name":"set_scissors","qualname":"::command::raw::RawCommandBuffer::set_scissors","value":"pub unsafe fn set_scissors<T>(&mut Self, u32, T) where T: IntoIterator,\nT::Item: Borrow<pso::Rect>","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Set the scissor rectangles for the rasterizer.","sig":null,"attributes":[{"value":"/ Set the scissor rectangles for the rasterizer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":63711,"byte_end":63761,"line_start":270,"line_end":270,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":63766,"byte_end":63769,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Each scissor corresponds to the viewport with the same index, starting","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":63774,"byte_end":63848,"line_start":272,"line_end":272,"column_start":5,"column_end":79}},{"value":"/ from an offset index `first_scissor`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":63853,"byte_end":63894,"line_start":273,"line_end":273,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":63899,"byte_end":63902,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":63907,"byte_end":63919,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":63924,"byte_end":63927,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This function does not return an error. Invalid usage of this function","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":63932,"byte_end":64006,"line_start":277,"line_end":277,"column_start":5,"column_end":79}},{"value":"/ will result in undefined behavior.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":64011,"byte_end":64049,"line_start":278,"line_end":278,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":64054,"byte_end":64057,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ - Command buffer must be in recording state.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":64062,"byte_end":64110,"line_start":280,"line_end":280,"column_start":5,"column_end":53}},{"value":"/ - Number of scissors must be between 1 and `max_viewports - first_scissor`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":64115,"byte_end":64194,"line_start":281,"line_end":281,"column_start":5,"column_end":84}},{"value":"/ - The first scissor must be less than `max_viewports`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":64199,"byte_end":64257,"line_start":282,"line_end":282,"column_start":5,"column_end":63}},{"value":"/ - Only queues with graphics capability support this function.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":64262,"byte_end":64327,"line_start":283,"line_end":283,"column_start":5,"column_end":70}},{"value":"/ - The bound pipeline must not have baked scissor state.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":64332,"byte_end":64391,"line_start":284,"line_end":284,"column_start":5,"column_end":64}},{"value":"/ - All scissors used by the pipeline must be specified before the first draw","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":64396,"byte_end":64475,"line_start":285,"line_end":285,"column_start":5,"column_end":84}},{"value":"/   call.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":64480,"byte_end":64491,"line_start":286,"line_end":286,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":64852,"byte_end":64873,"line_start":295,"line_end":295,"column_start":15,"column_end":36},"name":"set_stencil_reference","qualname":"::command::raw::RawCommandBuffer::set_stencil_reference","value":"pub unsafe fn set_stencil_reference(&mut Self, pso::Face, pso::StencilValue)","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Sets the stencil reference value for comparison operations and store operations.\n Will be used on the LHS of stencil compare ops and as store value when the\n store op is Reference.\n","sig":null,"attributes":[{"value":"/ Sets the stencil reference value for comparison operations and store operations.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":64639,"byte_end":64723,"line_start":292,"line_end":292,"column_start":5,"column_end":89}},{"value":"/ Will be used on the LHS of stencil compare ops and as store value when the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":64728,"byte_end":64806,"line_start":293,"line_end":293,"column_start":5,"column_end":83}},{"value":"/ store op is Reference.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":64811,"byte_end":64837,"line_start":294,"line_end":294,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":64981,"byte_end":65002,"line_start":298,"line_end":298,"column_start":15,"column_end":36},"name":"set_stencil_read_mask","qualname":"::command::raw::RawCommandBuffer::set_stencil_read_mask","value":"pub unsafe fn set_stencil_read_mask(&mut Self, pso::Face, pso::StencilValue)","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Sets the stencil read mask.\n","sig":null,"attributes":[{"value":"/ Sets the stencil read mask.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":64935,"byte_end":64966,"line_start":297,"line_end":297,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":65111,"byte_end":65133,"line_start":301,"line_end":301,"column_start":15,"column_end":37},"name":"set_stencil_write_mask","qualname":"::command::raw::RawCommandBuffer::set_stencil_write_mask","value":"pub unsafe fn set_stencil_write_mask(&mut Self, pso::Face, pso::StencilValue)","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Sets the stencil write mask.\n","sig":null,"attributes":[{"value":"/ Sets the stencil write mask.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":65064,"byte_end":65096,"line_start":300,"line_end":300,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":65256,"byte_end":65275,"line_start":304,"line_end":304,"column_start":15,"column_end":34},"name":"set_blend_constants","qualname":"::command::raw::RawCommandBuffer::set_blend_constants","value":"pub unsafe fn set_blend_constants(&mut Self, pso::ColorValue)","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Set the blend constant values dynamically.\n","sig":null,"attributes":[{"value":"/ Set the blend constant values dynamically.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":65195,"byte_end":65241,"line_start":303,"line_end":303,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":65381,"byte_end":65397,"line_start":307,"line_end":307,"column_start":15,"column_end":31},"name":"set_depth_bounds","qualname":"::command::raw::RawCommandBuffer::set_depth_bounds","value":"pub unsafe fn set_depth_bounds(&mut Self, Range<f32>)","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Set the depth bounds test values dynamically.\n","sig":null,"attributes":[{"value":"/ Set the depth bounds test values dynamically.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":65317,"byte_end":65366,"line_start":306,"line_end":306,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":65485,"byte_end":65499,"line_start":310,"line_end":310,"column_start":15,"column_end":29},"name":"set_line_width","qualname":"::command::raw::RawCommandBuffer::set_line_width","value":"pub unsafe fn set_line_width(&mut Self, f32)","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Set the line width dynamically.\n","sig":null,"attributes":[{"value":"/ Set the line width dynamically.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":65435,"byte_end":65470,"line_start":309,"line_end":309,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":65579,"byte_end":65593,"line_start":313,"line_end":313,"column_start":15,"column_end":29},"name":"set_depth_bias","qualname":"::command::raw::RawCommandBuffer::set_depth_bias","value":"pub unsafe fn set_depth_bias(&mut Self, pso::DepthBias)","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Set the depth bias dynamically.\n","sig":null,"attributes":[{"value":"/ Set the depth bias dynamically.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":65529,"byte_end":65564,"line_start":312,"line_end":312,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":66156,"byte_end":66173,"line_start":323,"line_end":323,"column_start":15,"column_end":32},"name":"begin_render_pass","qualname":"::command::raw::RawCommandBuffer::begin_render_pass","value":"pub unsafe fn begin_render_pass<T>(&mut Self, &B::RenderPass, &B::Framebuffer,\n                                   pso::Rect, T, SubpassContents) where\nT: IntoIterator, T::Item: Borrow<ClearValueRaw>","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Begins recording commands for a render pass on the given framebuffer.\n `render_area` is the section of the framebuffer to render,\n `clear_values` is an iterator of `ClearValueRaw`'s to use to use for\n `clear_*` commands, one for each attachment of the render pass\n that has a clear operation.\n `first_subpass` specifies, for the first subpass, whether the\n rendering commands are provided inline or whether the render\n pass is composed of subpasses.\n","sig":null,"attributes":[{"value":"/ Begins recording commands for a render pass on the given framebuffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":65639,"byte_end":65712,"line_start":315,"line_end":315,"column_start":5,"column_end":78}},{"value":"/ `render_area` is the section of the framebuffer to render,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":65717,"byte_end":65779,"line_start":316,"line_end":316,"column_start":5,"column_end":67}},{"value":"/ `clear_values` is an iterator of `ClearValueRaw`'s to use to use for","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":65784,"byte_end":65856,"line_start":317,"line_end":317,"column_start":5,"column_end":77}},{"value":"/ `clear_*` commands, one for each attachment of the render pass","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":65861,"byte_end":65927,"line_start":318,"line_end":318,"column_start":5,"column_end":71}},{"value":"/ that has a clear operation.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":65932,"byte_end":65963,"line_start":319,"line_end":319,"column_start":5,"column_end":36}},{"value":"/ `first_subpass` specifies, for the first subpass, whether the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":65968,"byte_end":66033,"line_start":320,"line_end":320,"column_start":5,"column_end":70}},{"value":"/ rendering commands are provided inline or whether the render","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":66038,"byte_end":66102,"line_start":321,"line_end":321,"column_start":5,"column_end":69}},{"value":"/ pass is composed of subpasses.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":66107,"byte_end":66141,"line_start":322,"line_end":322,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":66523,"byte_end":66535,"line_start":335,"line_end":335,"column_start":15,"column_end":27},"name":"next_subpass","qualname":"::command::raw::RawCommandBuffer::next_subpass","value":"pub unsafe fn next_subpass(&mut Self, SubpassContents)","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Steps to the next subpass in the current render pass.\n","sig":null,"attributes":[{"value":"/ Steps to the next subpass in the current render pass.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":66451,"byte_end":66508,"line_start":334,"line_end":334,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":66657,"byte_end":66672,"line_start":338,"line_end":338,"column_start":15,"column_end":30},"name":"end_render_pass","qualname":"::command::raw::RawCommandBuffer::end_render_pass","value":"pub unsafe fn end_render_pass(&mut Self)","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Finishes recording commands for the current a render pass.\n","sig":null,"attributes":[{"value":"/ Finishes recording commands for the current a render pass.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":66580,"byte_end":66642,"line_start":337,"line_end":337,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":67022,"byte_end":67044,"line_start":349,"line_end":349,"column_start":15,"column_end":37},"name":"bind_graphics_pipeline","qualname":"::command::raw::RawCommandBuffer::bind_graphics_pipeline","value":"pub unsafe fn bind_graphics_pipeline(&mut Self, &B::GraphicsPipeline)","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Bind a graphics pipeline.","sig":null,"attributes":[{"value":"/ Bind a graphics pipeline.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":66690,"byte_end":66719,"line_start":340,"line_end":340,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":66724,"byte_end":66727,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":66732,"byte_end":66744,"line_start":342,"line_end":342,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":66749,"byte_end":66752,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ This function does not return an error. Invalid usage of this function","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":66757,"byte_end":66831,"line_start":344,"line_end":344,"column_start":5,"column_end":79}},{"value":"/ will result in an error on `finish`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":66836,"byte_end":66876,"line_start":345,"line_end":345,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":66881,"byte_end":66884,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ - Command buffer must be in recording state.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":66889,"byte_end":66937,"line_start":347,"line_end":347,"column_start":5,"column_end":53}},{"value":"/ - Only queues with graphics capability support this function.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":66942,"byte_end":67007,"line_start":348,"line_end":348,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":67294,"byte_end":67323,"line_start":353,"line_end":353,"column_start":15,"column_end":44},"name":"bind_graphics_descriptor_sets","qualname":"::command::raw::RawCommandBuffer::bind_graphics_descriptor_sets","value":"pub unsafe fn bind_graphics_descriptor_sets<I,\n                                            J>(&mut Self, &B::PipelineLayout,\n                                               usize, I, J) where\nI: IntoIterator, I::Item: Borrow<B::DescriptorSet>, J: IntoIterator,\nJ::Item: Borrow<DescriptorSetOffset>","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Takes an iterator of graphics `DescriptorSet`'s, and binds them to the command buffer.\n `first_set` is the index that the first descriptor is mapped to in the command buffer.\n","sig":null,"attributes":[{"value":"/ Takes an iterator of graphics `DescriptorSet`'s, and binds them to the command buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":67094,"byte_end":67184,"line_start":351,"line_end":351,"column_start":5,"column_end":95}},{"value":"/ `first_set` is the index that the first descriptor is mapped to in the command buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":67189,"byte_end":67279,"line_start":352,"line_end":352,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":67935,"byte_end":67956,"line_start":374,"line_end":374,"column_start":15,"column_end":36},"name":"bind_compute_pipeline","qualname":"::command::raw::RawCommandBuffer::bind_compute_pipeline","value":"pub unsafe fn bind_compute_pipeline(&mut Self, &B::ComputePipeline)","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Bind a compute pipeline.","sig":null,"attributes":[{"value":"/ Bind a compute pipeline.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":67605,"byte_end":67633,"line_start":365,"line_end":365,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":67638,"byte_end":67641,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":67646,"byte_end":67658,"line_start":367,"line_end":367,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":67663,"byte_end":67666,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ This function does not return an error. Invalid usage of this function","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":67671,"byte_end":67745,"line_start":369,"line_end":369,"column_start":5,"column_end":79}},{"value":"/ will result in an error on `finish`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":67750,"byte_end":67790,"line_start":370,"line_end":370,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":67795,"byte_end":67798,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ - Command buffer must be in recording state.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":67803,"byte_end":67851,"line_start":372,"line_end":372,"column_start":5,"column_end":53}},{"value":"/ - Only queues with compute capability support this function.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":67856,"byte_end":67920,"line_start":373,"line_end":373,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":68204,"byte_end":68232,"line_start":378,"line_end":378,"column_start":15,"column_end":43},"name":"bind_compute_descriptor_sets","qualname":"::command::raw::RawCommandBuffer::bind_compute_descriptor_sets","value":"pub unsafe fn bind_compute_descriptor_sets<I,\n                                           J>(&mut Self, &B::PipelineLayout,\n                                              usize, I, J) where\nI: IntoIterator, I::Item: Borrow<B::DescriptorSet>, J: IntoIterator,\nJ::Item: Borrow<DescriptorSetOffset>","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Takes an iterator of compute `DescriptorSet`'s, and binds them to the command buffer,\n `first_set` is the index that the first descriptor is mapped to in the command buffer.\n","sig":null,"attributes":[{"value":"/ Takes an iterator of compute `DescriptorSet`'s, and binds them to the command buffer,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":68005,"byte_end":68094,"line_start":376,"line_end":376,"column_start":5,"column_end":94}},{"value":"/ `first_set` is the index that the first descriptor is mapped to in the command buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":68099,"byte_end":68189,"line_start":377,"line_end":377,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":69268,"byte_end":69276,"line_start":406,"line_end":406,"column_start":15,"column_end":23},"name":"dispatch","qualname":"::command::raw::RawCommandBuffer::dispatch","value":"pub unsafe fn dispatch(&mut Self, WorkGroupCount)","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Execute a workgroup in the compute pipeline. `x`, `y` and `z` are the\n number of local workgroups to dispatch along each \"axis\"; a total of `x`*`y`*`z`\n local workgroups will be created.","sig":null,"attributes":[{"value":"/ Execute a workgroup in the compute pipeline. `x`, `y` and `z` are the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":68514,"byte_end":68587,"line_start":390,"line_end":390,"column_start":5,"column_end":78}},{"value":"/ number of local workgroups to dispatch along each \"axis\"; a total of `x`*`y`*`z`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":68592,"byte_end":68676,"line_start":391,"line_end":391,"column_start":5,"column_end":89}},{"value":"/ local workgroups will be created.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":68681,"byte_end":68718,"line_start":392,"line_end":392,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":68723,"byte_end":68726,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":68731,"byte_end":68743,"line_start":394,"line_end":394,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":68748,"byte_end":68751,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ This function does not return an error. Invalid usage of this function","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":68756,"byte_end":68830,"line_start":396,"line_end":396,"column_start":5,"column_end":79}},{"value":"/ will result in an error on `finish`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":68835,"byte_end":68875,"line_start":397,"line_end":397,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":68880,"byte_end":68883,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ - Command buffer must be in recording state.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":68888,"byte_end":68936,"line_start":399,"line_end":399,"column_start":5,"column_end":53}},{"value":"/ - A compute pipeline must be bound using `bind_compute_pipeline`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":68941,"byte_end":69010,"line_start":400,"line_end":400,"column_start":5,"column_end":74}},{"value":"/ - Only queues with compute capability support this function.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":69015,"byte_end":69079,"line_start":401,"line_end":401,"column_start":5,"column_end":69}},{"value":"/ - This function must be called outside of a render pass.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":69084,"byte_end":69144,"line_start":402,"line_end":402,"column_start":5,"column_end":65}},{"value":"/ - `count` must be less than or equal to `Limits::max_compute_work_group_count`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":69149,"byte_end":69231,"line_start":403,"line_end":403,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":69236,"byte_end":69239,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ TODO:","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":69244,"byte_end":69253,"line_start":405,"line_end":405,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":69436,"byte_end":69453,"line_start":410,"line_end":410,"column_start":15,"column_end":32},"name":"dispatch_indirect","qualname":"::command::raw::RawCommandBuffer::dispatch_indirect","value":"pub unsafe fn dispatch_indirect(&mut Self, &B::Buffer, buffer::Offset)","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Works similarly to `dispatch()` but reads parameters from the given\n buffer during execution.\n","sig":null,"attributes":[{"value":"/ Works similarly to `dispatch()` but reads parameters from the given","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":69317,"byte_end":69388,"line_start":408,"line_end":408,"column_start":5,"column_end":76}},{"value":"/ buffer during execution.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":69393,"byte_end":69421,"line_start":409,"line_end":409,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":69603,"byte_end":69614,"line_start":413,"line_end":413,"column_start":15,"column_end":26},"name":"copy_buffer","qualname":"::command::raw::RawCommandBuffer::copy_buffer","value":"pub unsafe fn copy_buffer<T>(&mut Self, &B::Buffer, &B::Buffer, T) where\nT: IntoIterator, T::Item: Borrow<BufferCopy>","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Adds a command to copy regions from the source to destination buffer.\n","sig":null,"attributes":[{"value":"/ Adds a command to copy regions from the source to destination buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":69515,"byte_end":69588,"line_start":412,"line_end":412,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":70055,"byte_end":70065,"line_start":422,"line_end":422,"column_start":15,"column_end":25},"name":"copy_image","qualname":"::command::raw::RawCommandBuffer::copy_image","value":"pub unsafe fn copy_image<T>(&mut Self, &B::Image, Layout, &B::Image, Layout,\n                            T) where T: IntoIterator,\nT::Item: Borrow<ImageCopy>","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Copies regions from the source to the destination images, which\n have the given layouts.  No format conversion is done; the source and destination\n `Layout`'s **must** have the same sized image formats (such as `Rgba8Unorm` and\n `R32`, both of which are 32 bits).\n","sig":null,"attributes":[{"value":"/ Copies regions from the source to the destination images, which","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":69752,"byte_end":69819,"line_start":418,"line_end":418,"column_start":5,"column_end":72}},{"value":"/ have the given layouts.  No format conversion is done; the source and destination","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":69824,"byte_end":69909,"line_start":419,"line_end":419,"column_start":5,"column_end":90}},{"value":"/ `Layout`'s **must** have the same sized image formats (such as `Rgba8Unorm` and","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":69914,"byte_end":69997,"line_start":420,"line_end":420,"column_start":5,"column_end":88}},{"value":"/ `R32`, both of which are 32 bits).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":70002,"byte_end":70040,"line_start":421,"line_end":421,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":70373,"byte_end":70393,"line_start":434,"line_end":434,"column_start":15,"column_end":35},"name":"copy_buffer_to_image","qualname":"::command::raw::RawCommandBuffer::copy_buffer_to_image","value":"pub unsafe fn copy_buffer_to_image<T>(&mut Self, &B::Buffer, &B::Image,\n                                      Layout, T) where T: IntoIterator,\nT::Item: Borrow<BufferImageCopy>","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Copies regions from the source buffer to the destination image.\n","sig":null,"attributes":[{"value":"/ Copies regions from the source buffer to the destination image.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":70291,"byte_end":70358,"line_start":433,"line_end":433,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":70680,"byte_end":70700,"line_start":445,"line_end":445,"column_start":15,"column_end":35},"name":"copy_image_to_buffer","qualname":"::command::raw::RawCommandBuffer::copy_image_to_buffer","value":"pub unsafe fn copy_image_to_buffer<T>(&mut Self, &B::Image, Layout,\n                                      &B::Buffer, T) where T: IntoIterator,\nT::Item: Borrow<BufferImageCopy>","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Copies regions from the source image to the destination buffer.\n","sig":null,"attributes":[{"value":"/ Copies regions from the source image to the destination buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":70598,"byte_end":70665,"line_start":444,"line_end":444,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":71232,"byte_end":71236,"line_start":460,"line_end":460,"column_start":15,"column_end":19},"name":"draw","qualname":"::command::raw::RawCommandBuffer::draw","value":"pub unsafe fn draw(&mut Self, Range<VertexCount>, Range<InstanceCount>)","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Performs a non-indexed drawing operation, fetching vertex attributes\n from the currently bound vertex buffers.  It performs instanced\n drawing, drawing `instances.len()`\n times with an `instanceIndex` starting with the start of the range.\n","sig":null,"attributes":[{"value":"/ Performs a non-indexed drawing operation, fetching vertex attributes","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":70954,"byte_end":71026,"line_start":456,"line_end":456,"column_start":5,"column_end":77}},{"value":"/ from the currently bound vertex buffers.  It performs instanced","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":71031,"byte_end":71098,"line_start":457,"line_end":457,"column_start":5,"column_end":72}},{"value":"/ drawing, drawing `instances.len()`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":71103,"byte_end":71141,"line_start":458,"line_end":458,"column_start":5,"column_end":43}},{"value":"/ times with an `instanceIndex` starting with the start of the range.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":71146,"byte_end":71217,"line_start":459,"line_end":459,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":71699,"byte_end":71711,"line_start":468,"line_end":468,"column_start":15,"column_end":27},"name":"draw_indexed","qualname":"::command::raw::RawCommandBuffer::draw_indexed","value":"pub unsafe fn draw_indexed(&mut Self, Range<IndexCount>, VertexOffset,\n                           Range<InstanceCount>)","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Performs indexed drawing, drawing the range of indices\n given by the current index buffer and any bound vertex buffers.\n `base_vertex` specifies the vertex offset corresponding to index 0.\n That is, the offset into the vertex buffer is `(current_index + base_vertex)`","sig":null,"attributes":[{"value":"/ Performs indexed drawing, drawing the range of indices","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":71317,"byte_end":71375,"line_start":462,"line_end":462,"column_start":5,"column_end":63}},{"value":"/ given by the current index buffer and any bound vertex buffers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":71380,"byte_end":71447,"line_start":463,"line_end":463,"column_start":5,"column_end":72}},{"value":"/ `base_vertex` specifies the vertex offset corresponding to index 0.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":71452,"byte_end":71523,"line_start":464,"line_end":464,"column_start":5,"column_end":76}},{"value":"/ That is, the offset into the vertex buffer is `(current_index + base_vertex)`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":71528,"byte_end":71609,"line_start":465,"line_end":465,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":71614,"byte_end":71617,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ It also performs instanced drawing, identical to `draw()`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":71622,"byte_end":71684,"line_start":467,"line_end":467,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":72406,"byte_end":72419,"line_start":484,"line_end":484,"column_start":15,"column_end":28},"name":"draw_indirect","qualname":"::command::raw::RawCommandBuffer::draw_indirect","value":"pub unsafe fn draw_indirect(&mut Self, &B::Buffer, buffer::Offset, DrawCount,\n                            u32)","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Functions identically to `draw()`, except the parameters are read\n from the given buffer, starting at `offset` and increasing `stride`\n bytes with each successive draw.  Performs `draw_count` draws total.\n `draw_count` may be zero.","sig":null,"attributes":[{"value":"/ Functions identically to `draw()`, except the parameters are read","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":71856,"byte_end":71925,"line_start":475,"line_end":475,"column_start":5,"column_end":74}},{"value":"/ from the given buffer, starting at `offset` and increasing `stride`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":71930,"byte_end":72001,"line_start":476,"line_end":476,"column_start":5,"column_end":76}},{"value":"/ bytes with each successive draw.  Performs `draw_count` draws total.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":72006,"byte_end":72078,"line_start":477,"line_end":477,"column_start":5,"column_end":77}},{"value":"/ `draw_count` may be zero.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":72083,"byte_end":72112,"line_start":478,"line_end":478,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":72117,"byte_end":72120,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ Each draw command in the buffer is a series of 4 `u32` values specifying,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":72125,"byte_end":72202,"line_start":480,"line_end":480,"column_start":5,"column_end":82}},{"value":"/ in order, the number of vertices to draw, the number of instances to draw,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":72207,"byte_end":72285,"line_start":481,"line_end":481,"column_start":5,"column_end":83}},{"value":"/ the index of the first vertex to draw, and the instance ID of the first","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":72290,"byte_end":72365,"line_start":482,"line_end":482,"column_start":5,"column_end":80}},{"value":"/ instance to draw.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":72370,"byte_end":72391,"line_start":483,"line_end":483,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":73005,"byte_end":73026,"line_start":499,"line_end":499,"column_start":15,"column_end":36},"name":"draw_indexed_indirect","qualname":"::command::raw::RawCommandBuffer::draw_indexed_indirect","value":"pub unsafe fn draw_indexed_indirect(&mut Self, &B::Buffer, buffer::Offset,\n                                    DrawCount, u32)","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Like `draw_indirect()`, this does indexed drawing a la `draw_indexed()` but\n reads the draw parameters out of the given buffer.","sig":null,"attributes":[{"value":"/ Like `draw_indirect()`, this does indexed drawing a la `draw_indexed()` but","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":72564,"byte_end":72643,"line_start":492,"line_end":492,"column_start":5,"column_end":84}},{"value":"/ reads the draw parameters out of the given buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":72648,"byte_end":72702,"line_start":493,"line_end":493,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":72707,"byte_end":72710,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ Each draw command in the buffer is a series of 5 values specifying,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":72715,"byte_end":72786,"line_start":495,"line_end":495,"column_start":5,"column_end":76}},{"value":"/ in order, the number of indices, the number of instances, the first index,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":72791,"byte_end":72869,"line_start":496,"line_end":496,"column_start":5,"column_end":83}},{"value":"/ the vertex offset, and the first instance.  All are `u32`'s except","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":72874,"byte_end":72944,"line_start":497,"line_end":497,"column_start":5,"column_end":75}},{"value":"/ the vertex offset, which is an `i32`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":72949,"byte_end":72990,"line_start":498,"line_end":498,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":73271,"byte_end":73280,"line_start":508,"line_end":508,"column_start":15,"column_end":24},"name":"set_event","qualname":"::command::raw::RawCommandBuffer::set_event","value":"pub unsafe fn set_event(&mut Self, &B::Event, pso::PipelineStage)","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Signals an event once all specified stages of the shader pipeline have completed.\n","sig":null,"attributes":[{"value":"/ Signals an event once all specified stages of the shader pipeline have completed.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":73171,"byte_end":73256,"line_start":507,"line_end":507,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":73443,"byte_end":73454,"line_start":511,"line_end":511,"column_start":15,"column_end":26},"name":"reset_event","qualname":"::command::raw::RawCommandBuffer::reset_event","value":"pub unsafe fn reset_event(&mut Self, &B::Event, pso::PipelineStage)","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Resets an event once all specified stages of the shader pipeline have completed.\n","sig":null,"attributes":[{"value":"/ Resets an event once all specified stages of the shader pipeline have completed.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":73344,"byte_end":73428,"line_start":510,"line_end":510,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":73919,"byte_end":73930,"line_start":519,"line_end":519,"column_start":15,"column_end":26},"name":"wait_events","qualname":"::command::raw::RawCommandBuffer::wait_events","value":"pub unsafe fn wait_events<'a, I,\n                          J>(&mut Self, I, Range<pso::PipelineStage>, J) where\nI: IntoIterator, I::Item: Borrow<B::Event>, J: IntoIterator,\nJ::Item: Borrow<Barrier>","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Waits at some shader stage(s) until all events have been signalled.","sig":null,"attributes":[{"value":"/ Waits at some shader stage(s) until all events have been signalled.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":73518,"byte_end":73589,"line_start":513,"line_end":513,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":73594,"byte_end":73597,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ - `src_stages` specifies the shader pipeline stages in which the events were signalled.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":73602,"byte_end":73693,"line_start":515,"line_end":515,"column_start":5,"column_end":96}},{"value":"/ - `dst_stages` specifies the shader pipeline stages at which execution should wait.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":73698,"byte_end":73785,"line_start":516,"line_end":516,"column_start":5,"column_end":92}},{"value":"/ - `barriers` specifies a series of memory barriers to be executed before pipeline execution","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":73790,"byte_end":73885,"line_start":517,"line_end":517,"column_start":5,"column_end":100}},{"value":"/   resumes.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":73890,"byte_end":73904,"line_start":518,"line_end":518,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":74413,"byte_end":74424,"line_start":533,"line_end":533,"column_start":15,"column_end":26},"name":"begin_query","qualname":"::command::raw::RawCommandBuffer::begin_query","value":"pub unsafe fn begin_query(&mut Self, query::Query<, B>, query::ControlFlags)","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Begins a query operation.  Queries count operations or record timestamps\n resulting from commands that occur between the beginning and end of the query,\n and save the results to the query pool.\n","sig":null,"attributes":[{"value":"/ Begins a query operation.  Queries count operations or record timestamps","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":74187,"byte_end":74263,"line_start":530,"line_end":530,"column_start":5,"column_end":81}},{"value":"/ resulting from commands that occur between the beginning and end of the query,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":74268,"byte_end":74350,"line_start":531,"line_end":531,"column_start":5,"column_end":87}},{"value":"/ and save the results to the query pool.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":74355,"byte_end":74398,"line_start":532,"line_end":532,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":74525,"byte_end":74534,"line_start":536,"line_end":536,"column_start":15,"column_end":24},"name":"end_query","qualname":"::command::raw::RawCommandBuffer::end_query","value":"pub unsafe fn end_query(&mut Self, query::Query<, B>)","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" End a query.\n","sig":null,"attributes":[{"value":"/ End a query.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":74494,"byte_end":74510,"line_start":535,"line_end":535,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":74655,"byte_end":74671,"line_start":539,"line_end":539,"column_start":15,"column_end":31},"name":"reset_query_pool","qualname":"::command::raw::RawCommandBuffer::reset_query_pool","value":"pub unsafe fn reset_query_pool(&mut Self, &B::QueryPool, Range<query::Id>)","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Reset/clear the values in the given range of the query pool.\n","sig":null,"attributes":[{"value":"/ Reset/clear the values in the given range of the query pool.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":74576,"byte_end":74640,"line_start":538,"line_end":538,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":74789,"byte_end":74812,"line_start":542,"line_end":542,"column_start":15,"column_end":38},"name":"copy_query_pool_results","qualname":"::command::raw::RawCommandBuffer::copy_query_pool_results","value":"pub unsafe fn copy_query_pool_results(&mut Self, &B::QueryPool,\n                                      Range<query::Id>, &B::Buffer,\n                                      buffer::Offset, buffer::Offset,\n                                      query::ResultFlags)","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Copy query results into a buffer.\n","sig":null,"attributes":[{"value":"/ Copy query results into a buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":74737,"byte_end":74774,"line_start":541,"line_end":541,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":75090,"byte_end":75105,"line_start":553,"line_end":553,"column_start":15,"column_end":30},"name":"write_timestamp","qualname":"::command::raw::RawCommandBuffer::write_timestamp","value":"pub unsafe fn write_timestamp(&mut Self, pso::PipelineStage,\n                              query::Query<, B>)","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Requests a timestamp to be written.\n","sig":null,"attributes":[{"value":"/ Requests a timestamp to be written.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":75036,"byte_end":75075,"line_start":552,"line_end":552,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":75375,"byte_end":75398,"line_start":558,"line_end":558,"column_start":15,"column_end":38},"name":"push_graphics_constants","qualname":"::command::raw::RawCommandBuffer::push_graphics_constants","value":"pub unsafe fn push_graphics_constants(&mut Self, &B::PipelineLayout,\n                                      pso::ShaderStageFlags, u32, &[u32])","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Modify constant data in a graphics pipeline.\n Push constants are intended to modify data in a pipeline more\n quickly than a updating the values inside a descriptor set.\n","sig":null,"attributes":[{"value":"/ Modify constant data in a graphics pipeline.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":75174,"byte_end":75222,"line_start":555,"line_end":555,"column_start":5,"column_end":53}},{"value":"/ Push constants are intended to modify data in a pipeline more","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":75227,"byte_end":75292,"line_start":556,"line_end":556,"column_start":5,"column_end":70}},{"value":"/ quickly than a updating the values inside a descriptor set.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":75297,"byte_end":75360,"line_start":557,"line_end":557,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":75754,"byte_end":75776,"line_start":569,"line_end":569,"column_start":15,"column_end":37},"name":"push_compute_constants","qualname":"::command::raw::RawCommandBuffer::push_compute_constants","value":"pub unsafe fn push_compute_constants(&mut Self, &B::PipelineLayout, u32,\n                                     &[u32])","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Modify constant data in a compute pipeline.\n Push constants are intended to modify data in a pipeline more\n quickly than a updating the values inside a descriptor set.\n","sig":null,"attributes":[{"value":"/ Modify constant data in a compute pipeline.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":75554,"byte_end":75601,"line_start":566,"line_end":566,"column_start":5,"column_end":52}},{"value":"/ Push constants are intended to modify data in a pipeline more","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":75606,"byte_end":75671,"line_start":567,"line_end":567,"column_start":5,"column_end":70}},{"value":"/ quickly than a updating the values inside a descriptor set.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":75676,"byte_end":75739,"line_start":568,"line_end":568,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":75956,"byte_end":75972,"line_start":577,"line_end":577,"column_start":15,"column_end":31},"name":"execute_commands","qualname":"::command::raw::RawCommandBuffer::execute_commands","value":"pub unsafe fn execute_commands<'a, T, I>(&mut Self, I) where T: 'a +\nBorrow<B::CommandBuffer>, I: IntoIterator<Item = &'a T>","parent":{"krate":0,"index":256},"children":[],"decl_id":null,"docs":" Execute the given secondary command buffers.\n","sig":null,"attributes":[{"value":"/ Execute the given secondary command buffers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":75893,"byte_end":75941,"line_start":576,"line_end":576,"column_start":5,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":76183,"byte_end":76203,"line_start":584,"line_end":584,"column_start":11,"column_end":31},"name":"IntoRawCommandBuffer","qualname":"::command::raw::IntoRawCommandBuffer","value":"IntoRawCommandBuffer<B: Backend, C>","parent":null,"children":[{"krate":0,"index":337}],"decl_id":null,"docs":" A trait for types that can be converted into raw command buffer.\n","sig":null,"attributes":[{"value":"/ A trait for types that can be converted into raw command buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":76104,"byte_end":76172,"line_start":583,"line_end":583,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":76270,"byte_end":76278,"line_start":586,"line_end":586,"column_start":8,"column_end":16},"name":"into_raw","qualname":"::command::raw::IntoRawCommandBuffer::into_raw","value":"pub fn into_raw(Self) -> B::CommandBuffer","parent":{"krate":0,"index":334},"children":[],"decl_id":null,"docs":" Converts into raw command buffer.\n","sig":null,"attributes":[{"value":"/ Converts into raw command buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":76225,"byte_end":76262,"line_start":585,"line_end":585,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2887},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":77138,"byte_end":77144,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"Inline","qualname":"::command::render_pass::SubpassContents::Inline","value":"SubpassContents::Inline","parent":{"krate":0,"index":2886},"children":[],"decl_id":null,"docs":" Contents of the subpass will be inline in the command buffer,\n NOT in secondary command buffers.\n","sig":null,"attributes":[{"value":"/ Contents of the subpass will be inline in the command buffer,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":77026,"byte_end":77091,"line_start":29,"line_end":29,"column_start":5,"column_end":70}},{"value":"/ NOT in secondary command buffers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":77096,"byte_end":77133,"line_start":30,"line_end":30,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2889},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":77357,"byte_end":77373,"line_start":35,"line_end":35,"column_start":5,"column_end":21},"name":"SecondaryBuffers","qualname":"::command::render_pass::SubpassContents::SecondaryBuffers","value":"SubpassContents::SecondaryBuffers","parent":{"krate":0,"index":2886},"children":[],"decl_id":null,"docs":" Contents of the subpass will be in secondary command buffers, and\n the primary command buffer will only contain `execute_command()` calls\n until the subpass or render pass is complete.\n","sig":null,"attributes":[{"value":"/ Contents of the subpass will be in secondary command buffers, and","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":77150,"byte_end":77219,"line_start":32,"line_end":32,"column_start":5,"column_end":74}},{"value":"/ the primary command buffer will only contain `execute_command()` calls","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":77224,"byte_end":77298,"line_start":33,"line_end":33,"column_start":5,"column_end":79}},{"value":"/ until the subpass or render pass is complete.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":77303,"byte_end":77352,"line_start":34,"line_end":34,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":2886},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":77004,"byte_end":77019,"line_start":28,"line_end":28,"column_start":10,"column_end":25},"name":"SubpassContents","qualname":"::command::render_pass::SubpassContents","value":"pub enum SubpassContents {\n\n    /// Contents of the subpass will be inline in the command buffer,\n    /// NOT in secondary command buffers.\n    Inline,\n\n    /// Contents of the subpass will be in secondary command buffers, and\n    /// the primary command buffer will only contain `execute_command()` calls\n    /// until the subpass or render pass is complete.\n    SecondaryBuffers,\n}","parent":null,"children":[{"krate":0,"index":2887},{"krate":0,"index":2889}],"decl_id":null,"docs":" Specifies how commands for the following renderpasses will be recorded.\n","sig":null,"attributes":[{"value":"/ Specifies how commands for the following renderpasses will be recorded.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":76902,"byte_end":76977,"line_start":26,"line_end":26,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2893},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":77725,"byte_end":77744,"line_start":44,"line_end":44,"column_start":12,"column_end":31},"name":"RenderSubpassCommon","qualname":"::command::render_pass::RenderSubpassCommon","value":"RenderSubpassCommon {  }","parent":null,"children":[{"krate":0,"index":2896},{"krate":0,"index":2897}],"decl_id":null,"docs":" This struct contains all methods for all commands submittable during a subpass.\n It is used to implement the identical portions of RenderPassInlineEncoder and SubpassCommandBuffer.","sig":null,"attributes":[{"value":"/ This struct contains all methods for all commands submittable during a subpass.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":77378,"byte_end":77461,"line_start":38,"line_end":38,"column_start":1,"column_end":84}},{"value":"/ It is used to implement the identical portions of RenderPassInlineEncoder and SubpassCommandBuffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":77462,"byte_end":77565,"line_start":39,"line_end":39,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":77566,"byte_end":77569,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Where methods are undocumented, they are identical to the methods on the `RawCommandBuffer`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":77570,"byte_end":77665,"line_start":41,"line_end":41,"column_start":1,"column_end":96}},{"value":"/ trait with the same names.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":77666,"byte_end":77696,"line_start":42,"line_end":42,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":78034,"byte_end":78051,"line_start":58,"line_end":58,"column_start":19,"column_end":36},"name":"clear_attachments","qualname":"<RenderSubpassCommon<B, C>>::clear_attachments","value":"pub unsafe fn clear_attachments<T, U>(&mut Self, T, U) where T: IntoIterator,\nT::Item: Borrow<AttachmentClear>, U: IntoIterator,\nU::Item: Borrow<pso::ClearRect>","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":78012,"byte_end":78015,"line_start":57,"line_end":57,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":78335,"byte_end":78339,"line_start":69,"line_end":69,"column_start":19,"column_end":23},"name":"draw","qualname":"<RenderSubpassCommon<B, C>>::draw","value":"pub unsafe fn draw(&mut Self, Range<VertexCount>, Range<InstanceCount>)","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":78313,"byte_end":78316,"line_start":68,"line_end":68,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":78505,"byte_end":78517,"line_start":74,"line_end":74,"column_start":19,"column_end":31},"name":"draw_indexed","qualname":"<RenderSubpassCommon<B, C>>::draw_indexed","value":"pub unsafe fn draw_indexed(&mut Self, Range<IndexCount>, VertexOffset,\n                           Range<InstanceCount>)","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":78483,"byte_end":78486,"line_start":73,"line_end":73,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":78793,"byte_end":78806,"line_start":86,"line_end":86,"column_start":19,"column_end":32},"name":"draw_indirect","qualname":"<RenderSubpassCommon<B, C>>::draw_indirect","value":"pub unsafe fn draw_indirect(&mut Self, &B::Buffer, buffer::Offset, DrawCount,\n                            u32)","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":78771,"byte_end":78774,"line_start":85,"line_end":85,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":79085,"byte_end":79106,"line_start":98,"line_end":98,"column_start":19,"column_end":40},"name":"draw_indexed_indirect","qualname":"<RenderSubpassCommon<B, C>>::draw_indexed_indirect","value":"pub unsafe fn draw_indexed_indirect(&mut Self, &B::Buffer, buffer::Offset,\n                                    DrawCount, u32)","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":79063,"byte_end":79066,"line_start":97,"line_end":97,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":79394,"byte_end":79411,"line_start":111,"line_end":111,"column_start":19,"column_end":36},"name":"bind_index_buffer","qualname":"<RenderSubpassCommon<B, C>>::bind_index_buffer","value":"pub unsafe fn bind_index_buffer(&mut Self, buffer::IndexBufferView<, B>)","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":79372,"byte_end":79375,"line_start":110,"line_end":110,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":79544,"byte_end":79563,"line_start":116,"line_end":116,"column_start":19,"column_end":38},"name":"bind_vertex_buffers","qualname":"<RenderSubpassCommon<B, C>>::bind_vertex_buffers","value":"pub unsafe fn bind_vertex_buffers<I, T>(&mut Self, pso::BufferIndex, I) where\nI: IntoIterator<Item = (T, buffer::Offset)>, T: Borrow<B::Buffer>","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":79522,"byte_end":79525,"line_start":115,"line_end":115,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":79859,"byte_end":79881,"line_start":127,"line_end":127,"column_start":19,"column_end":41},"name":"bind_graphics_pipeline","qualname":"<RenderSubpassCommon<B, C>>::bind_graphics_pipeline","value":"pub unsafe fn bind_graphics_pipeline(&mut Self, &B::GraphicsPipeline)","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":79837,"byte_end":79840,"line_start":126,"line_end":126,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":80023,"byte_end":80052,"line_start":132,"line_end":132,"column_start":19,"column_end":48},"name":"bind_graphics_descriptor_sets","qualname":"<RenderSubpassCommon<B, C>>::bind_graphics_descriptor_sets","value":"pub unsafe fn bind_graphics_descriptor_sets<I,\n                                            J>(&mut Self, &B::PipelineLayout,\n                                               usize, I, J) where\nI: IntoIterator, I::Item: Borrow<B::DescriptorSet>, J: IntoIterator,\nJ::Item: Borrow<DescriptorSetOffset>","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":80001,"byte_end":80004,"line_start":131,"line_end":131,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":80488,"byte_end":80501,"line_start":150,"line_end":150,"column_start":19,"column_end":32},"name":"set_viewports","qualname":"<RenderSubpassCommon<B, C>>::set_viewports","value":"pub unsafe fn set_viewports<T>(&mut Self, u32, T) where T: IntoIterator,\nT::Item: Borrow<pso::Viewport>","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":80466,"byte_end":80469,"line_start":149,"line_end":149,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":80762,"byte_end":80774,"line_start":161,"line_end":161,"column_start":19,"column_end":31},"name":"set_scissors","qualname":"<RenderSubpassCommon<B, C>>::set_scissors","value":"pub unsafe fn set_scissors<T>(&mut Self, u32, T) where T: IntoIterator,\nT::Item: Borrow<pso::Rect>","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":80740,"byte_end":80743,"line_start":160,"line_end":160,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":81000,"byte_end":81021,"line_start":170,"line_end":170,"column_start":19,"column_end":40},"name":"set_stencil_reference","qualname":"<RenderSubpassCommon<B, C>>::set_stencil_reference","value":"pub unsafe fn set_stencil_reference(&mut Self, pso::Face, pso::StencilValue)","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":80978,"byte_end":80981,"line_start":169,"line_end":169,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":81179,"byte_end":81200,"line_start":175,"line_end":175,"column_start":19,"column_end":40},"name":"set_stencil_read_mask","qualname":"<RenderSubpassCommon<B, C>>::set_stencil_read_mask","value":"pub unsafe fn set_stencil_read_mask(&mut Self, pso::Face, pso::StencilValue)","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":81157,"byte_end":81160,"line_start":174,"line_end":174,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":81358,"byte_end":81380,"line_start":180,"line_end":180,"column_start":19,"column_end":41},"name":"set_stencil_write_mask","qualname":"<RenderSubpassCommon<B, C>>::set_stencil_write_mask","value":"pub unsafe fn set_stencil_write_mask(&mut Self, pso::Face, pso::StencilValue)","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":81336,"byte_end":81339,"line_start":179,"line_end":179,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":81539,"byte_end":81558,"line_start":185,"line_end":185,"column_start":19,"column_end":38},"name":"set_blend_constants","qualname":"<RenderSubpassCommon<B, C>>::set_blend_constants","value":"pub unsafe fn set_blend_constants(&mut Self, pso::ColorValue)","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":81517,"byte_end":81520,"line_start":184,"line_end":184,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":81680,"byte_end":81696,"line_start":190,"line_end":190,"column_start":19,"column_end":35},"name":"set_depth_bounds","qualname":"<RenderSubpassCommon<B, C>>::set_depth_bounds","value":"pub unsafe fn set_depth_bounds(&mut Self, Range<f32>)","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":81658,"byte_end":81661,"line_start":189,"line_end":189,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":81818,"byte_end":81841,"line_start":195,"line_end":195,"column_start":19,"column_end":42},"name":"push_graphics_constants","qualname":"<RenderSubpassCommon<B, C>>::push_graphics_constants","value":"pub unsafe fn push_graphics_constants(&mut Self, &B::PipelineLayout,\n                                      pso::ShaderStageFlags, u32, &[u32])","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":81796,"byte_end":81799,"line_start":194,"line_end":194,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":82142,"byte_end":82156,"line_start":208,"line_end":208,"column_start":19,"column_end":33},"name":"set_line_width","qualname":"<RenderSubpassCommon<B, C>>::set_line_width","value":"pub unsafe fn set_line_width(&mut Self, f32)","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":82120,"byte_end":82123,"line_start":207,"line_end":207,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":82268,"byte_end":82282,"line_start":213,"line_end":213,"column_start":19,"column_end":33},"name":"set_depth_bias","qualname":"<RenderSubpassCommon<B, C>>::set_depth_bias","value":"pub unsafe fn set_depth_bias(&mut Self, pso::DepthBias)","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":82246,"byte_end":82249,"line_start":212,"line_end":212,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":82458,"byte_end":82469,"line_start":220,"line_end":220,"column_start":19,"column_end":30},"name":"begin_query","qualname":"<RenderSubpassCommon<B, C>>::begin_query","value":"pub unsafe fn begin_query(&mut Self, query::Query<, B>, query::ControlFlags)","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":82436,"byte_end":82439,"line_start":219,"line_end":219,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":82624,"byte_end":82633,"line_start":225,"line_end":225,"column_start":19,"column_end":28},"name":"end_query","qualname":"<RenderSubpassCommon<B, C>>::end_query","value":"pub unsafe fn end_query(&mut Self, query::Query<, B>)","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":82602,"byte_end":82605,"line_start":224,"line_end":224,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":82751,"byte_end":82766,"line_start":230,"line_end":230,"column_start":19,"column_end":34},"name":"write_timestamp","qualname":"<RenderSubpassCommon<B, C>>::write_timestamp","value":"pub unsafe fn write_timestamp(&mut Self, pso::PipelineStage,\n                              query::Query<, B>)","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":82729,"byte_end":82732,"line_start":229,"line_end":229,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2902},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":83042,"byte_end":83065,"line_start":238,"line_end":238,"column_start":12,"column_end":35},"name":"RenderPassInlineEncoder","qualname":"::command::render_pass::RenderPassInlineEncoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" An object that records commands into a command buffer inline, that is,\n without secondary command buffers.\n","sig":null,"attributes":[{"value":"/ An object that records commands into a command buffer inline, that is,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":82900,"byte_end":82974,"line_start":235,"line_end":235,"column_start":1,"column_end":75}},{"value":"/ without secondary command buffers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":82975,"byte_end":83013,"line_start":236,"line_end":236,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":83358,"byte_end":83361,"line_start":247,"line_end":247,"column_start":19,"column_end":22},"name":"new","qualname":"<RenderPassInlineEncoder>::new","value":"pub unsafe fn new<C, T,\n                  S: Shot>(&'a mut CommandBuffer<B, C, S, Primary>,\n                           &B::RenderPass, &B::Framebuffer, pso::Rect, T)\n-> Self where C: Supports<Graphics>, T: IntoIterator,\nT::Item: Borrow<ClearValue>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `RenderPassInlineEncoder`, starting a new render\n pass in the given `CommandBuffer`.\n","sig":null,"attributes":[{"value":"/ Creates a new `RenderPassInlineEncoder`, starting a new render","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":83230,"byte_end":83296,"line_start":245,"line_end":245,"column_start":5,"column_end":71}},{"value":"/ pass in the given `CommandBuffer`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":83301,"byte_end":83339,"line_start":246,"line_end":246,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":84141,"byte_end":84160,"line_start":275,"line_end":275,"column_start":12,"column_end":31},"name":"next_subpass_inline","qualname":"<RenderPassInlineEncoder>::next_subpass_inline","value":"pub fn next_subpass_inline(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Start the next subpass.\n","sig":null,"attributes":[{"value":"/ Start the next subpass.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":84102,"byte_end":84129,"line_start":274,"line_end":274,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":84360,"byte_end":84382,"line_start":283,"line_end":283,"column_start":12,"column_end":34},"name":"next_subpass_secondary","qualname":"<RenderPassInlineEncoder>::next_subpass_secondary","value":"pub fn next_subpass_secondary(Self) -> RenderPassSecondaryEncoder","parent":null,"children":[],"decl_id":null,"docs":" Begins recording a new subpass with secondary buffers.\n","sig":null,"attributes":[{"value":"/ Begins recording a new subpass with secondary buffers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":84290,"byte_end":84348,"line_start":282,"line_end":282,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":2911},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":85376,"byte_end":85402,"line_start":317,"line_end":317,"column_start":12,"column_end":38},"name":"RenderPassSecondaryEncoder","qualname":"::command::render_pass::RenderPassSecondaryEncoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" An object that records commands into a command buffer where each command must\n be a call to execute a secondary command buffer.\n","sig":null,"attributes":[{"value":"/ An object that records commands into a command buffer where each command must","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":85213,"byte_end":85294,"line_start":314,"line_end":314,"column_start":1,"column_end":82}},{"value":"/ be a call to execute a secondary command buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":85295,"byte_end":85347,"line_start":315,"line_end":315,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":85741,"byte_end":85744,"line_start":325,"line_end":325,"column_start":19,"column_end":22},"name":"new","qualname":"<RenderPassSecondaryEncoder>::new","value":"pub unsafe fn new<C, T,\n                  S: Shot>(&'a mut CommandBuffer<B, C, S, Primary>,\n                           &B::RenderPass, &B::Framebuffer, pso::Rect, T)\n-> Self where C: Supports<Graphics>, T: IntoIterator,\nT::Item: Borrow<ClearValue>","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given `CommandBuffer` in a `RenderPassSecondaryEncoder`,\n starting a new render pass where the actual commands are contained in\n secondary command buffers.\n","sig":null,"attributes":[{"value":"/ Wraps the given `CommandBuffer` in a `RenderPassSecondaryEncoder`,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":85539,"byte_end":85609,"line_start":322,"line_end":322,"column_start":5,"column_end":75}},{"value":"/ starting a new render pass where the actual commands are contained in","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":85614,"byte_end":85687,"line_start":323,"line_end":323,"column_start":5,"column_end":78}},{"value":"/ secondary command buffers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":85692,"byte_end":85722,"line_start":324,"line_end":324,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":86553,"byte_end":86569,"line_start":353,"line_end":353,"column_start":19,"column_end":35},"name":"execute_commands","qualname":"<RenderPassSecondaryEncoder>::execute_commands","value":"pub unsafe fn execute_commands<'b, T, I>(&mut Self, I) where T: 'b +\nSubmittable<B, Graphics, Secondary>, I: IntoIterator<Item = &'b T>","parent":null,"children":[],"decl_id":null,"docs":" Executes the given commands as a secondary command buffer.\n","sig":null,"attributes":[{"value":"/ Executes the given commands as a secondary command buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":86472,"byte_end":86534,"line_start":352,"line_end":352,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":86829,"byte_end":86848,"line_start":362,"line_end":362,"column_start":12,"column_end":31},"name":"next_subpass_inline","qualname":"<RenderPassSecondaryEncoder>::next_subpass_inline","value":"pub fn next_subpass_inline(Self) -> RenderPassInlineEncoder","parent":null,"children":[],"decl_id":null,"docs":" Starts a new subpass with inline commands.\n","sig":null,"attributes":[{"value":"/ Starts a new subpass with inline commands.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":86771,"byte_end":86817,"line_start":361,"line_end":361,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":87242,"byte_end":87264,"line_start":372,"line_end":372,"column_start":12,"column_end":34},"name":"next_subpass_secondary","qualname":"<RenderPassSecondaryEncoder>::next_subpass_secondary","value":"pub fn next_subpass_secondary(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Starts a new subpass with secondary command buffers.\n","sig":null,"attributes":[{"value":"/ Starts a new subpass with secondary command buffers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":87174,"byte_end":87230,"line_start":371,"line_end":371,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2920},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":87658,"byte_end":87678,"line_start":390,"line_end":390,"column_start":12,"column_end":32},"name":"SubpassCommandBuffer","qualname":"::command::render_pass::SubpassCommandBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" A secondary command buffer recorded entirely within a subpass.\n","sig":null,"attributes":[{"value":"/ A secondary command buffer recorded entirely within a subpass.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":87563,"byte_end":87629,"line_start":388,"line_end":388,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":87974,"byte_end":87977,"line_start":397,"line_end":397,"column_start":19,"column_end":22},"name":"new","qualname":"<SubpassCommandBuffer<B, S>>::new","value":"pub unsafe fn new(B::CommandBuffer) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given `CommandBuffer` in a `SubpassCommandBuffer`, starting\n to record a new subpass.\n","sig":null,"attributes":[{"value":"/ Wraps the given `CommandBuffer` in a `SubpassCommandBuffer`, starting","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":87849,"byte_end":87922,"line_start":395,"line_end":395,"column_start":5,"column_end":78}},{"value":"/ to record a new subpass.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":87927,"byte_end":87955,"line_start":396,"line_end":396,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":88244,"byte_end":88250,"line_start":404,"line_end":404,"column_start":19,"column_end":25},"name":"finish","qualname":"<SubpassCommandBuffer<B, S>>::finish","value":"pub unsafe fn finish(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Finish recording commands to the command buffer.","sig":null,"attributes":[{"value":"/ Finish recording commands to the command buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":88095,"byte_end":88147,"line_start":401,"line_end":401,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":88152,"byte_end":88155,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ The command pool must be reset to able to re-record commands.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":88160,"byte_end":88225,"line_start":403,"line_end":403,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":88432,"byte_end":88437,"line_start":411,"line_end":411,"column_start":19,"column_end":24},"name":"begin","qualname":"<SubpassCommandBuffer<B, OneShot>>::begin","value":"pub unsafe fn begin<'a>(&mut Self, pass::Subpass, Option<&'a B::Framebuffer>)","parent":null,"children":[],"decl_id":null,"docs":" Begin recording a one-shot sub-pass command buffer.\n","sig":null,"attributes":[{"value":"/ Begin recording a one-shot sub-pass command buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":88358,"byte_end":88413,"line_start":410,"line_end":410,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":89038,"byte_end":89043,"line_start":428,"line_end":428,"column_start":19,"column_end":24},"name":"begin","qualname":"<SubpassCommandBuffer<B, MultiShot>>::begin","value":"pub unsafe fn begin<'a>(&mut Self, bool, pass::Subpass,\n                        Option<&'a B::Framebuffer>)","parent":null,"children":[],"decl_id":null,"docs":" Begin recording a one-shot sub-pass command buffer.\n","sig":null,"attributes":[{"value":"/ Begin recording a one-shot sub-pass command buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":88964,"byte_end":89019,"line_start":427,"line_end":427,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2932},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":91142,"byte_end":91152,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"BufferCopy","qualname":"::command::transfer::BufferCopy","value":"BufferCopy { src, dst, size }","parent":null,"children":[{"krate":0,"index":2933},{"krate":0,"index":2934},{"krate":0,"index":2935}],"decl_id":null,"docs":" Specifies a source region and a destination\n region in a buffer for copying.  All values\n are in units of bytes.\n","sig":null,"attributes":[{"value":"/ Specifies a source region and a destination","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":90915,"byte_end":90962,"line_start":12,"line_end":12,"column_start":1,"column_end":48}},{"value":"/ region in a buffer for copying.  All values","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":90963,"byte_end":91010,"line_start":13,"line_end":13,"column_start":1,"column_end":48}},{"value":"/ are in units of bytes.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":91011,"byte_end":91037,"line_start":14,"line_end":14,"column_start":1,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":2933},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":91200,"byte_end":91203,"line_start":19,"line_end":19,"column_start":9,"column_end":12},"name":"src","qualname":"::command::transfer::BufferCopy::src","value":"u64","parent":{"krate":0,"index":2932},"children":[],"decl_id":null,"docs":" Buffer region source offset.\n","sig":null,"attributes":[{"value":"/ Buffer region source offset.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":91159,"byte_end":91191,"line_start":18,"line_end":18,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":2934},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":91271,"byte_end":91274,"line_start":21,"line_end":21,"column_start":9,"column_end":12},"name":"dst","qualname":"::command::transfer::BufferCopy::dst","value":"u64","parent":{"krate":0,"index":2932},"children":[],"decl_id":null,"docs":" Buffer region destination offset.\n","sig":null,"attributes":[{"value":"/ Buffer region destination offset.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":91225,"byte_end":91262,"line_start":20,"line_end":20,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":2935},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":91321,"byte_end":91325,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"name":"size","qualname":"::command::transfer::BufferCopy::size","value":"u64","parent":{"krate":0,"index":2932},"children":[],"decl_id":null,"docs":" Region size.\n","sig":null,"attributes":[{"value":"/ Region size.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":91296,"byte_end":91312,"line_start":22,"line_end":22,"column_start":5,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":2992},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":91537,"byte_end":91546,"line_start":30,"line_end":30,"column_start":12,"column_end":21},"name":"ImageCopy","qualname":"::command::transfer::ImageCopy","value":"ImageCopy { src_subresource, src_offset, dst_subresource, dst_offset, extent }","parent":null,"children":[{"krate":0,"index":2993},{"krate":0,"index":2994},{"krate":0,"index":2995},{"krate":0,"index":2996},{"krate":0,"index":2997}],"decl_id":null,"docs":" Bundles together all the parameters needed to copy data from one `Image`\n to another.\n","sig":null,"attributes":[{"value":"/ Bundles together all the parameters needed to copy data from one `Image`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":91346,"byte_end":91422,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ to another.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":91423,"byte_end":91438,"line_start":27,"line_end":27,"column_start":1,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":2993},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":91601,"byte_end":91616,"line_start":32,"line_end":32,"column_start":9,"column_end":24},"name":"src_subresource","qualname":"::command::transfer::ImageCopy::src_subresource","value":"image::SubresourceLayers","parent":{"krate":0,"index":2992},"children":[],"decl_id":null,"docs":" The image subresource to copy from.\n","sig":null,"attributes":[{"value":"/ The image subresource to copy from.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":91553,"byte_end":91592,"line_start":31,"line_end":31,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2994},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":91679,"byte_end":91689,"line_start":34,"line_end":34,"column_start":9,"column_end":19},"name":"src_offset","qualname":"::command::transfer::ImageCopy::src_offset","value":"image::Offset","parent":{"krate":0,"index":2992},"children":[],"decl_id":null,"docs":" The source offset.\n","sig":null,"attributes":[{"value":"/ The source offset.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":91648,"byte_end":91670,"line_start":33,"line_end":33,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":2995},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":91756,"byte_end":91771,"line_start":36,"line_end":36,"column_start":9,"column_end":24},"name":"dst_subresource","qualname":"::command::transfer::ImageCopy::dst_subresource","value":"image::SubresourceLayers","parent":{"krate":0,"index":2992},"children":[],"decl_id":null,"docs":" The image subresource to copy to.\n","sig":null,"attributes":[{"value":"/ The image subresource to copy to.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":91710,"byte_end":91747,"line_start":35,"line_end":35,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":2996},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":91839,"byte_end":91849,"line_start":38,"line_end":38,"column_start":9,"column_end":19},"name":"dst_offset","qualname":"::command::transfer::ImageCopy::dst_offset","value":"image::Offset","parent":{"krate":0,"index":2992},"children":[],"decl_id":null,"docs":" The destination offset.\n","sig":null,"attributes":[{"value":"/ The destination offset.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":91803,"byte_end":91830,"line_start":37,"line_end":37,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2997},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":91916,"byte_end":91922,"line_start":40,"line_end":40,"column_start":9,"column_end":15},"name":"extent","qualname":"::command::transfer::ImageCopy::extent","value":"image::Extent","parent":{"krate":0,"index":2992},"children":[],"decl_id":null,"docs":" The extent of the region to copy.\n","sig":null,"attributes":[{"value":"/ The extent of the region to copy.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":91870,"byte_end":91907,"line_start":39,"line_end":39,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":3057},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":92135,"byte_end":92150,"line_start":47,"line_end":47,"column_start":12,"column_end":27},"name":"BufferImageCopy","qualname":"::command::transfer::BufferImageCopy","value":"BufferImageCopy { buffer_offset, buffer_width, buffer_height, image_layers, image_offset, image_extent }","parent":null,"children":[{"krate":0,"index":3058},{"krate":0,"index":3059},{"krate":0,"index":3060},{"krate":0,"index":3061},{"krate":0,"index":3062},{"krate":0,"index":3063}],"decl_id":null,"docs":" Bundles together all the parameters needed to copy a buffer\n to an image or vice-versa.\n","sig":null,"attributes":[{"value":"/ Bundles together all the parameters needed to copy a buffer","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":91942,"byte_end":92005,"line_start":43,"line_end":43,"column_start":1,"column_end":64}},{"value":"/ to an image or vice-versa.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":92006,"byte_end":92036,"line_start":44,"line_end":44,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":3058},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":92193,"byte_end":92206,"line_start":49,"line_end":49,"column_start":9,"column_end":22},"name":"buffer_offset","qualname":"::command::transfer::BufferImageCopy::buffer_offset","value":"u64","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" Buffer offset in bytes.\n","sig":null,"attributes":[{"value":"/ Buffer offset in bytes.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":92157,"byte_end":92184,"line_start":48,"line_end":48,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3059},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":92275,"byte_end":92287,"line_start":51,"line_end":51,"column_start":9,"column_end":21},"name":"buffer_width","qualname":"::command::transfer::BufferImageCopy::buffer_width","value":"u32","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" Width of a buffer 'row' in texels.\n","sig":null,"attributes":[{"value":"/ Width of a buffer 'row' in texels.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":92228,"byte_end":92266,"line_start":50,"line_end":50,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":3060},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":92354,"byte_end":92367,"line_start":53,"line_end":53,"column_start":9,"column_end":22},"name":"buffer_height","qualname":"::command::transfer::BufferImageCopy::buffer_height","value":"u32","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" Height of a buffer 'image slice' in texels.\n","sig":null,"attributes":[{"value":"/ Height of a buffer 'image slice' in texels.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":92298,"byte_end":92345,"line_start":52,"line_end":52,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3061},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":92413,"byte_end":92425,"line_start":55,"line_end":55,"column_start":9,"column_end":21},"name":"image_layers","qualname":"::command::transfer::BufferImageCopy::image_layers","value":"image::SubresourceLayers","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" The image subresource.\n","sig":null,"attributes":[{"value":"/ The image subresource.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":92378,"byte_end":92404,"line_start":54,"line_end":54,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":3062},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":92517,"byte_end":92529,"line_start":57,"line_end":57,"column_start":9,"column_end":21},"name":"image_offset","qualname":"::command::transfer::BufferImageCopy::image_offset","value":"image::Offset","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" The offset of the portion of the image to copy.\n","sig":null,"attributes":[{"value":"/ The offset of the portion of the image to copy.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":92457,"byte_end":92508,"line_start":56,"line_end":56,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":3063},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":92604,"byte_end":92616,"line_start":59,"line_end":59,"column_start":9,"column_end":21},"name":"image_extent","qualname":"::command::transfer::BufferImageCopy::image_extent","value":"image::Extent","parent":{"krate":0,"index":3057},"children":[],"decl_id":null,"docs":" Size of the portion of the image to copy.\n","sig":null,"attributes":[{"value":"/ Size of the portion of the image to copy.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":92550,"byte_end":92595,"line_start":58,"line_end":58,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":92810,"byte_end":92826,"line_start":64,"line_end":64,"column_start":19,"column_end":35},"name":"pipeline_barrier","qualname":"<CommandBuffer<B, C, S, L>>::pipeline_barrier","value":"pub unsafe fn pipeline_barrier<'i,\n                               T>(&mut Self, Range<PipelineStage>,\n                                  Dependencies, T) where T: IntoIterator,\nT::Item: Borrow<Barrier>","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":92727,"byte_end":92791,"line_start":63,"line_end":63,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":93193,"byte_end":93204,"line_start":77,"line_end":77,"column_start":19,"column_end":30},"name":"fill_buffer","qualname":"<CommandBuffer<B, C, S, L>>::fill_buffer","value":"pub unsafe fn fill_buffer<R>(&mut Self, &B::Buffer, R, u32) where\nR: RangeArg<buffer::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":93110,"byte_end":93174,"line_start":76,"line_end":76,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":93457,"byte_end":93468,"line_start":85,"line_end":85,"column_start":19,"column_end":30},"name":"copy_buffer","qualname":"<CommandBuffer<B, C, S, L>>::copy_buffer","value":"pub unsafe fn copy_buffer<T>(&mut Self, &B::Buffer, &B::Buffer, T) where\nT: IntoIterator, T::Item: Borrow<BufferCopy>","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":93374,"byte_end":93438,"line_start":84,"line_end":84,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":93749,"byte_end":93762,"line_start":94,"line_end":94,"column_start":19,"column_end":32},"name":"update_buffer","qualname":"<CommandBuffer<B, C, S, L>>::update_buffer","value":"pub unsafe fn update_buffer(&mut Self, &B::Buffer, buffer::Offset, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":93666,"byte_end":93730,"line_start":93,"line_end":93,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":94019,"byte_end":94029,"line_start":104,"line_end":104,"column_start":19,"column_end":29},"name":"copy_image","qualname":"<CommandBuffer<B, C, S, L>>::copy_image","value":"pub unsafe fn copy_image<T>(&mut Self, &B::Image, image::Layout, &B::Image,\n                            image::Layout, T) where T: IntoIterator,\nT::Item: Borrow<ImageCopy>","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":93936,"byte_end":94000,"line_start":103,"line_end":103,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":94448,"byte_end":94468,"line_start":120,"line_end":120,"column_start":19,"column_end":39},"name":"copy_buffer_to_image","qualname":"<CommandBuffer<B, C, S, L>>::copy_buffer_to_image","value":"pub unsafe fn copy_buffer_to_image<T>(&mut Self, &B::Buffer, &B::Image,\n                                      image::Layout, T) where T: IntoIterator,\nT::Item: Borrow<BufferImageCopy>","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":94365,"byte_end":94429,"line_start":119,"line_end":119,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":94844,"byte_end":94864,"line_start":134,"line_end":134,"column_start":19,"column_end":39},"name":"copy_image_to_buffer","qualname":"<CommandBuffer<B, C, S, L>>::copy_image_to_buffer","value":"pub unsafe fn copy_image_to_buffer<T>(&mut Self, &B::Image, image::Layout,\n                                      &B::Buffer, T) where T: IntoIterator,\nT::Item: Borrow<BufferImageCopy>","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":94761,"byte_end":94825,"line_start":133,"line_end":133,"column_start":5,"column_end":69}}]},{"kind":"Trait","id":{"krate":0,"index":541},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":34612,"byte_end":34616,"line_start":44,"line_end":44,"column_start":11,"column_end":15},"name":"Shot","qualname":"::command::Shot","value":"Shot","parent":null,"children":[],"decl_id":null,"docs":" Trait indicating how many times a Submit object can be submitted to a command buffer.\n","sig":null,"attributes":[{"value":"/ Trait indicating how many times a Submit object can be submitted to a command buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":34512,"byte_end":34601,"line_start":43,"line_end":43,"column_start":1,"column_end":90}}]},{"kind":"Enum","id":{"krate":0,"index":3125},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":34702,"byte_end":34709,"line_start":47,"line_end":47,"column_start":10,"column_end":17},"name":"OneShot","qualname":"::command::OneShot","value":"pub enum OneShot { }","parent":null,"children":[],"decl_id":null,"docs":" Indicates a Submit that can only be submitted once.\n","sig":null,"attributes":[{"value":"/ Indicates a Submit that can only be submitted once.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":34620,"byte_end":34675,"line_start":45,"line_end":45,"column_start":1,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":3128},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":34826,"byte_end":34835,"line_start":52,"line_end":52,"column_start":10,"column_end":19},"name":"MultiShot","qualname":"::command::MultiShot","value":"pub enum MultiShot { }","parent":null,"children":[],"decl_id":null,"docs":" Indicates a Submit that can be submitted multiple times.\n","sig":null,"attributes":[{"value":"/ Indicates a Submit that can be submitted multiple times.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":34739,"byte_end":34799,"line_start":50,"line_end":50,"column_start":1,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":544},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":34931,"byte_end":34936,"line_start":56,"line_end":56,"column_start":11,"column_end":16},"name":"Level","qualname":"::command::Level","value":"Level","parent":null,"children":[],"decl_id":null,"docs":" A trait indicating the level of a command buffer.\n","sig":null,"attributes":[{"value":"/ A trait indicating the level of a command buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":34867,"byte_end":34920,"line_start":55,"line_end":55,"column_start":1,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":3131},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":35154,"byte_end":35161,"line_start":63,"line_end":63,"column_start":10,"column_end":17},"name":"Primary","qualname":"::command::Primary","value":"pub enum Primary { }","parent":null,"children":[],"decl_id":null,"docs":" Indicates a primary command buffer.\n Vulkan describes a primary command buffer as one which can be directly submitted\n to a queue, and can execute `Secondary` command buffers.\n","sig":null,"attributes":[{"value":"/ Indicates a primary command buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":34941,"byte_end":34980,"line_start":58,"line_end":58,"column_start":1,"column_end":40}},{"value":"/ Vulkan describes a primary command buffer as one which can be directly submitted","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":34982,"byte_end":35066,"line_start":60,"line_end":60,"column_start":1,"column_end":85}},{"value":"/ to a queue, and can execute `Secondary` command buffers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":35067,"byte_end":35127,"line_start":61,"line_end":61,"column_start":1,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":3134},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":35581,"byte_end":35590,"line_start":73,"line_end":73,"column_start":10,"column_end":19},"name":"Secondary","qualname":"::command::Secondary","value":"pub enum Secondary { }","parent":null,"children":[],"decl_id":null,"docs":" Indicates a secondary command buffer.","sig":null,"attributes":[{"value":"/ Indicates a secondary command buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":35192,"byte_end":35233,"line_start":66,"line_end":66,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":35234,"byte_end":35237,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Vulkan describes a secondary command buffer as one which cannot be directly submitted","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":35238,"byte_end":35327,"line_start":68,"line_end":68,"column_start":1,"column_end":90}},{"value":"/ to a queue, but can be executed by a primary command buffer. This allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":35328,"byte_end":35404,"line_start":69,"line_end":69,"column_start":1,"column_end":77}},{"value":"/ multiple secondary command buffers to be constructed which do specific","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":35405,"byte_end":35479,"line_start":70,"line_end":70,"column_start":1,"column_end":75}},{"value":"/ things and can then be composed together into primary command buffers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":35480,"byte_end":35554,"line_start":71,"line_end":71,"column_start":1,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":547},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":35721,"byte_end":35732,"line_start":77,"line_end":77,"column_start":11,"column_end":22},"name":"Submittable","qualname":"::command::Submittable","value":"Submittable<B: Backend, C: Capability, L: Level>: Borrow<B::CommandBuffer>","parent":null,"children":[],"decl_id":null,"docs":" A property of a command buffer to be submitted to a queue with specific capability.\n","sig":null,"attributes":[{"value":"/ A property of a command buffer to be submitted to a queue with specific capability.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":35623,"byte_end":35710,"line_start":76,"line_end":76,"column_start":1,"column_end":88}}]},{"kind":"Type","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":35902,"byte_end":35924,"line_start":80,"line_end":80,"column_start":10,"column_end":32},"name":"SecondaryCommandBuffer","qualname":"::command::SecondaryCommandBuffer","value":"CommandBuffer<B, C, S, Secondary>","parent":null,"children":[],"decl_id":null,"docs":" A convenience alias for not typing out the full signature of a secondary command buffer.\n","sig":null,"attributes":[{"value":"/ A convenience alias for not typing out the full signature of a secondary command buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":35800,"byte_end":35892,"line_start":79,"line_end":79,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":3137},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":36130,"byte_end":36143,"line_start":85,"line_end":85,"column_start":12,"column_end":25},"name":"CommandBuffer","qualname":"::command::CommandBuffer","value":"CommandBuffer {  }","parent":null,"children":[{"krate":0,"index":3143},{"krate":0,"index":3144}],"decl_id":null,"docs":" A strongly-typed command buffer that will only implement methods that are valid for the operations\n it supports.\n","sig":null,"attributes":[{"value":"/ A strongly-typed command buffer that will only implement methods that are valid for the operations","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":35982,"byte_end":36084,"line_start":82,"line_end":82,"column_start":1,"column_end":103}},{"value":"/ it supports.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":36085,"byte_end":36101,"line_start":83,"line_end":83,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":36918,"byte_end":36923,"line_start":114,"line_end":114,"column_start":19,"column_end":24},"name":"begin","qualname":"<CommandBuffer<B, C, OneShot, Primary>>::begin","value":"pub unsafe fn begin(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Begin recording a one-shot primary command buffer.\n","sig":null,"attributes":[{"value":"/ Begin recording a one-shot primary command buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":36845,"byte_end":36899,"line_start":113,"line_end":113,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":37229,"byte_end":37234,"line_start":123,"line_end":123,"column_start":19,"column_end":24},"name":"begin","qualname":"<CommandBuffer<B, C, MultiShot, Primary>>::begin","value":"pub unsafe fn begin(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Begin recording a multi-shot primary command buffer.\n","sig":null,"attributes":[{"value":"/ Begin recording a multi-shot primary command buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":37154,"byte_end":37210,"line_start":122,"line_end":122,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":37678,"byte_end":37683,"line_start":136,"line_end":136,"column_start":19,"column_end":24},"name":"begin","qualname":"<CommandBuffer<B, C, OneShot, Secondary>>::begin","value":"pub unsafe fn begin(&mut Self, CommandBufferInheritanceInfo<, B>)","parent":null,"children":[],"decl_id":null,"docs":" Begin recording a one-shot secondary command buffer.\n","sig":null,"attributes":[{"value":"/ Begin recording a one-shot secondary command buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":37603,"byte_end":37659,"line_start":135,"line_end":135,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":37998,"byte_end":38003,"line_start":144,"line_end":144,"column_start":19,"column_end":24},"name":"begin","qualname":"<CommandBuffer<B, C, MultiShot, Secondary>>::begin","value":"pub unsafe fn begin(&mut Self, bool, CommandBufferInheritanceInfo<, B>)","parent":null,"children":[],"decl_id":null,"docs":" Begin recording a multi-shot secondary command buffer.\n","sig":null,"attributes":[{"value":"/ Begin recording a multi-shot secondary command buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":37921,"byte_end":37979,"line_start":143,"line_end":143,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":38494,"byte_end":38497,"line_start":160,"line_end":160,"column_start":19,"column_end":22},"name":"new","qualname":"<CommandBuffer<B, C, S, L>>::new","value":"pub unsafe fn new(B::CommandBuffer) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new typed command buffer from a raw command pool.\n","sig":null,"attributes":[{"value":"/ Create a new typed command buffer from a raw command pool.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":38413,"byte_end":38475,"line_start":159,"line_end":159,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":38779,"byte_end":38785,"line_start":170,"line_end":170,"column_start":19,"column_end":25},"name":"finish","qualname":"<CommandBuffer<B, C, S, L>>::finish","value":"pub unsafe fn finish(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Finish recording commands to the command buffers.","sig":null,"attributes":[{"value":"/ Finish recording commands to the command buffers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":38627,"byte_end":38680,"line_start":167,"line_end":167,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":38685,"byte_end":38688,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ The command buffer must be reset to able to re-record commands.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":38693,"byte_end":38760,"line_start":169,"line_end":169,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":39251,"byte_end":39256,"line_start":181,"line_end":181,"column_start":19,"column_end":24},"name":"reset","qualname":"<CommandBuffer<B, C, S, L>>::reset","value":"pub unsafe fn reset(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Empties the command buffer, optionally releasing all resources from the\n commands that have been submitted. The command buffer is moved back to\n the \"initial\" state.","sig":null,"attributes":[{"value":"/ Empties the command buffer, optionally releasing all resources from the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":38837,"byte_end":38912,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ commands that have been submitted. The command buffer is moved back to","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":38917,"byte_end":38991,"line_start":175,"line_end":175,"column_start":5,"column_end":79}},{"value":"/ the \"initial\" state.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":38996,"byte_end":39020,"line_start":176,"line_end":176,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":39025,"byte_end":39028,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ The command buffer must not be in the \"pending\" state. Additionally, the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":39033,"byte_end":39109,"line_start":178,"line_end":178,"column_start":5,"column_end":81}},{"value":"/ command pool must have been created with the RESET_INDIVIDUAL flag to be","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":39114,"byte_end":39190,"line_start":179,"line_end":179,"column_start":5,"column_end":81}},{"value":"/ able to reset individual buffers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":39195,"byte_end":39232,"line_start":180,"line_end":180,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":39706,"byte_end":39715,"line_start":197,"line_end":197,"column_start":19,"column_end":28},"name":"downgrade","qualname":"<CommandBuffer<B, C, S, L>>::downgrade","value":"pub unsafe fn downgrade<D>(&mut Self) -> &mut CommandBuffer<B, D, S> where\nC: Supports<D>","parent":null,"children":[],"decl_id":null,"docs":" Downgrade a command buffer to a lesser capability type.\n","sig":null,"attributes":[{"value":"/ Downgrade a command buffer to a lesser capability type.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":39628,"byte_end":39687,"line_start":196,"line_end":196,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":39996,"byte_end":40012,"line_start":207,"line_end":207,"column_start":19,"column_end":35},"name":"execute_commands","qualname":"<CommandBuffer<B, C, S, Primary>>::execute_commands","value":"pub unsafe fn execute_commands<'a, I, T, K>(&mut Self, I) where K: Capability,\nT: 'a + Submittable<B, K, Secondary>, I: IntoIterator<Item = &'a T>,\nC: Supports<K>","parent":null,"children":[],"decl_id":null,"docs":" Identical to the `RawCommandBuffer` method of the same name.\n","sig":null,"attributes":[{"value":"/ Identical to the `RawCommandBuffer` method of the same name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":39913,"byte_end":39977,"line_start":206,"line_end":206,"column_start":5,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"device","qualname":"::device","value":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":22820},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":22832},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":3152},{"krate":0,"index":3171},{"krate":0,"index":3170},{"krate":0,"index":3168},{"krate":0,"index":3160},{"krate":0,"index":3165},{"krate":0,"index":3157},{"krate":0,"index":3158},{"krate":0,"index":3154},{"krate":0,"index":3155},{"krate":0,"index":3173},{"krate":0,"index":3192},{"krate":0,"index":3191},{"krate":0,"index":3189},{"krate":0,"index":3181},{"krate":0,"index":3186},{"krate":0,"index":3178},{"krate":0,"index":3179},{"krate":0,"index":3175},{"krate":0,"index":3176},{"krate":0,"index":3194},{"krate":0,"index":3213},{"krate":0,"index":3212},{"krate":0,"index":3210},{"krate":0,"index":3202},{"krate":0,"index":3207},{"krate":0,"index":3199},{"krate":0,"index":3200},{"krate":0,"index":3196},{"krate":0,"index":3197},{"krate":0,"index":3215},{"krate":0,"index":3237},{"krate":0,"index":3236},{"krate":0,"index":3234},{"krate":0,"index":3226},{"krate":0,"index":3231},{"krate":0,"index":3223},{"krate":0,"index":3224},{"krate":0,"index":3220},{"krate":0,"index":3221},{"krate":0,"index":3239},{"krate":0,"index":3264},{"krate":0,"index":3263},{"krate":0,"index":3261},{"krate":0,"index":3253},{"krate":0,"index":3258},{"krate":0,"index":3249},{"krate":0,"index":3250},{"krate":0,"index":3246},{"krate":0,"index":3247},{"krate":0,"index":643},{"krate":0,"index":645},{"krate":0,"index":3266},{"krate":0,"index":3290},{"krate":0,"index":3289},{"krate":0,"index":3287},{"krate":0,"index":3279},{"krate":0,"index":3284},{"krate":0,"index":3275},{"krate":0,"index":3276},{"krate":0,"index":3272},{"krate":0,"index":3273},{"krate":0,"index":647},{"krate":0,"index":3292},{"krate":0,"index":3318},{"krate":0,"index":3317},{"krate":0,"index":3315},{"krate":0,"index":3307},{"krate":0,"index":3312},{"krate":0,"index":3303},{"krate":0,"index":3304},{"krate":0,"index":3300},{"krate":0,"index":3301},{"krate":0,"index":649},{"krate":0,"index":3320},{"krate":0,"index":3379},{"krate":0,"index":3378},{"krate":0,"index":3376},{"krate":0,"index":3373},{"krate":0,"index":3374},{"krate":0,"index":3370},{"krate":0,"index":3371},{"krate":0,"index":3364},{"krate":0,"index":3325},{"krate":0,"index":3381},{"krate":0,"index":3414},{"krate":0,"index":3412},{"krate":0,"index":3404},{"krate":0,"index":3409},{"krate":0,"index":3400},{"krate":0,"index":3401},{"krate":0,"index":3397},{"krate":0,"index":3398},{"krate":0,"index":651},{"krate":0,"index":653}],"decl_id":null,"docs":" Logical device","sig":null,"attributes":[{"value":"/ Logical device","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":95155,"byte_end":95173,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":95174,"byte_end":95177,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Device","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":95178,"byte_end":95190,"line_start":3,"line_end":3,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":95191,"byte_end":95194,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module exposes the `Device` trait, which provides methods for creating","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":95195,"byte_end":95274,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ and managing graphics resources such as buffers, images and memory.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":95275,"byte_end":95346,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":95347,"byte_end":95350,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `Adapter` and `Device` types are very similar to the Vulkan concept of","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":95351,"byte_end":95429,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ \"physical devices\" vs. \"logical devices\"; an `Adapter` is single GPU","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":95430,"byte_end":95502,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/ (or CPU) that implements a backend, a `Device` is a","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":95503,"byte_end":95558,"line_start":10,"line_end":10,"column_start":1,"column_end":56}},{"value":"/ handle to that physical device that has the requested capabilities","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":95559,"byte_end":95629,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ and is used to actually do things.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":95630,"byte_end":95668,"line_start":12,"line_end":12,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3152},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":96303,"byte_end":96313,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"DeviceLost","qualname":"::device::DeviceLost","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error occurred caused device to be lost.\n","sig":null,"attributes":[{"value":"/ Error occurred caused device to be lost.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":96160,"byte_end":96204,"line_start":30,"line_end":30,"column_start":1,"column_end":45}},{"value":"fail(display = \"Device is lost\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":96256,"byte_end":96291,"line_start":32,"line_end":32,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3173},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":96461,"byte_end":96472,"line_start":38,"line_end":38,"column_start":12,"column_end":23},"name":"SurfaceLost","qualname":"::device::SurfaceLost","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error occurred caused surface to be lost.\n","sig":null,"attributes":[{"value":"/ Error occurred caused surface to be lost.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":96316,"byte_end":96361,"line_start":35,"line_end":35,"column_start":1,"column_end":46}},{"value":"fail(display = \"Surface is lost\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":96413,"byte_end":96449,"line_start":37,"line_end":37,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3194},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":96632,"byte_end":96643,"line_start":43,"line_end":43,"column_start":12,"column_end":23},"name":"WindowInUse","qualname":"::device::WindowInUse","value":"","parent":null,"children":[],"decl_id":null,"docs":" Native window is already in use by graphics API.\n","sig":null,"attributes":[{"value":"/ Native window is already in use by graphics API.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":96475,"byte_end":96527,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"fail(display = \"Native window in use\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":96579,"byte_end":96620,"line_start":42,"line_end":42,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3216},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":96828,"byte_end":96843,"line_start":50,"line_end":50,"column_start":5,"column_end":20},"name":"OutOfHostMemory","qualname":"::device::OutOfMemory::OutOfHostMemory","value":"OutOfMemory::OutOfHostMemory","parent":{"krate":0,"index":3215},"children":[],"decl_id":null,"docs":" Host memory exhausted.\n","sig":null,"attributes":[{"value":"/ Host memory exhausted.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":96753,"byte_end":96779,"line_start":48,"line_end":48,"column_start":5,"column_end":31}},{"value":"fail(display = \"Out of host memory\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":96784,"byte_end":96823,"line_start":49,"line_end":49,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3218},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":96929,"byte_end":96946,"line_start":54,"line_end":54,"column_start":5,"column_end":22},"name":"OutOfDeviceMemory","qualname":"::device::OutOfMemory::OutOfDeviceMemory","value":"OutOfMemory::OutOfDeviceMemory","parent":{"krate":0,"index":3215},"children":[],"decl_id":null,"docs":" Device memory exhausted.\n","sig":null,"attributes":[{"value":"/ Device memory exhausted.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":96850,"byte_end":96878,"line_start":52,"line_end":52,"column_start":5,"column_end":33}},{"value":"fail(display = \"Out of device memory\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":96883,"byte_end":96924,"line_start":53,"line_end":53,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":3215},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":96735,"byte_end":96746,"line_start":47,"line_end":47,"column_start":10,"column_end":21},"name":"OutOfMemory","qualname":"::device::OutOfMemory","value":"pub enum OutOfMemory {\n\n    /// Host memory exhausted.\n    #[fail(display = \"Out of host memory\")]\n    OutOfHostMemory,\n\n    /// Device memory exhausted.\n    #[fail(display = \"Out of device memory\")]\n    OutOfDeviceMemory,\n}","parent":null,"children":[{"krate":0,"index":3216},{"krate":0,"index":3218}],"decl_id":null,"docs":" Error allocating memory.\n","sig":null,"attributes":[{"value":"/ Error allocating memory.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":96646,"byte_end":96674,"line_start":45,"line_end":45,"column_start":1,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3240},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":97182,"byte_end":97193,"line_start":63,"line_end":63,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::device::OomOrDeviceLost::OutOfMemory","value":"OomOrDeviceLost::OutOfMemory(OutOfMemory)","parent":{"krate":0,"index":3239},"children":[],"decl_id":null,"docs":" Out of either host or device memory.\n","sig":null,"attributes":[{"value":"/ Out of either host or device memory.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":97105,"byte_end":97145,"line_start":61,"line_end":61,"column_start":5,"column_end":45}},{"value":"fail(display = \"{}\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":97150,"byte_end":97177,"line_start":62,"line_end":62,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3243},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":97267,"byte_end":97277,"line_start":66,"line_end":66,"column_start":5,"column_end":15},"name":"DeviceLost","qualname":"::device::OomOrDeviceLost::DeviceLost","value":"OomOrDeviceLost::DeviceLost(DeviceLost)","parent":{"krate":0,"index":3239},"children":[],"decl_id":null,"docs":" Device is lost\n","sig":null,"attributes":[{"value":"/ Device is lost","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":97212,"byte_end":97230,"line_start":64,"line_end":64,"column_start":5,"column_end":23}},{"value":"fail(display = \"{}\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":97235,"byte_end":97262,"line_start":65,"line_end":65,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":3239},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":97083,"byte_end":97098,"line_start":60,"line_end":60,"column_start":10,"column_end":25},"name":"OomOrDeviceLost","qualname":"::device::OomOrDeviceLost","value":"pub enum OomOrDeviceLost {\n\n    /// Out of either host or device memory.\n    #[fail(display = \"{}\", _0)]\n    OutOfMemory(OutOfMemory),\n\n    /// Device is lost\n    #[fail(display = \"{}\", _0)]\n    DeviceLost(DeviceLost),\n}","parent":null,"children":[{"krate":0,"index":3240},{"krate":0,"index":3243}],"decl_id":null,"docs":" Error occurred caused device to be lost\n or out of memory error.\n","sig":null,"attributes":[{"value":"/ Error occurred caused device to be lost","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":96951,"byte_end":96994,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/ or out of memory error.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":96995,"byte_end":97022,"line_start":58,"line_end":58,"column_start":1,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3267},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":97772,"byte_end":97783,"line_start":86,"line_end":86,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::device::AllocationError::OutOfMemory","value":"AllocationError::OutOfMemory(OutOfMemory)","parent":{"krate":0,"index":3266},"children":[],"decl_id":null,"docs":" Out of either host or device memory.\n","sig":null,"attributes":[{"value":"/ Out of either host or device memory.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":97695,"byte_end":97735,"line_start":84,"line_end":84,"column_start":5,"column_end":45}},{"value":"fail(display = \"{}\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":97740,"byte_end":97767,"line_start":85,"line_end":85,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3270},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":97935,"byte_end":97949,"line_start":90,"line_end":90,"column_start":5,"column_end":19},"name":"TooManyObjects","qualname":"::device::AllocationError::TooManyObjects","value":"AllocationError::TooManyObjects","parent":{"krate":0,"index":3266},"children":[],"decl_id":null,"docs":" Vulkan implementation doesn't allow to create too many objects.\n","sig":null,"attributes":[{"value":"/ Vulkan implementation doesn't allow to create too many objects.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":97803,"byte_end":97870,"line_start":88,"line_end":88,"column_start":5,"column_end":72}},{"value":"fail(display = \"Can't allocate more memory objects\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":97875,"byte_end":97930,"line_start":89,"line_end":89,"column_start":5,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":3266},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":97673,"byte_end":97688,"line_start":83,"line_end":83,"column_start":10,"column_end":25},"name":"AllocationError","qualname":"::device::AllocationError","value":"pub enum AllocationError {\n\n    /// Out of either host or device memory.\n    #[fail(display = \"{}\", _0)]\n    OutOfMemory(OutOfMemory),\n\n    /// Vulkan implementation doesn't allow to create too many objects.\n    #[fail(display = \"Can't allocate more memory objects\")]\n    TooManyObjects,\n}","parent":null,"children":[{"krate":0,"index":3267},{"krate":0,"index":3270}],"decl_id":null,"docs":" Possible cause of allocation failure.\n","sig":null,"attributes":[{"value":"/ Possible cause of allocation failure.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":97571,"byte_end":97612,"line_start":81,"line_end":81,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3293},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":98298,"byte_end":98309,"line_start":104,"line_end":104,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::device::BindError::OutOfMemory","value":"BindError::OutOfMemory(OutOfMemory)","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":" Out of either host or device memory.\n","sig":null,"attributes":[{"value":"/ Out of either host or device memory.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":98221,"byte_end":98261,"line_start":102,"line_end":102,"column_start":5,"column_end":45}},{"value":"fail(display = \"{}\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":98266,"byte_end":98293,"line_start":103,"line_end":103,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3296},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":98486,"byte_end":98497,"line_start":107,"line_end":107,"column_start":5,"column_end":16},"name":"WrongMemory","qualname":"::device::BindError::WrongMemory","value":"BindError::WrongMemory","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":" Requested binding to memory that doesn't support the required operations.\n","sig":null,"attributes":[{"value":"/ Requested binding to memory that doesn't support the required operations.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":98328,"byte_end":98405,"line_start":105,"line_end":105,"column_start":5,"column_end":82}},{"value":"fail(display = \"Unsupported memory allocation for the requirements\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":98410,"byte_end":98481,"line_start":106,"line_end":106,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3298},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":98618,"byte_end":98629,"line_start":110,"line_end":110,"column_start":5,"column_end":16},"name":"OutOfBounds","qualname":"::device::BindError::OutOfBounds","value":"BindError::OutOfBounds","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":" Requested binding to an invalid memory.\n","sig":null,"attributes":[{"value":"/ Requested binding to an invalid memory.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":98503,"byte_end":98546,"line_start":108,"line_end":108,"column_start":5,"column_end":48}},{"value":"fail(display = \"Not enough space in the memory allocation\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":98551,"byte_end":98613,"line_start":109,"line_end":109,"column_start":5,"column_end":67}}]},{"kind":"Enum","id":{"krate":0,"index":3292},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":98205,"byte_end":98214,"line_start":101,"line_end":101,"column_start":10,"column_end":19},"name":"BindError","qualname":"::device::BindError","value":"pub enum BindError {\n\n    /// Out of either host or device memory.\n    #[fail(display = \"{}\", _0)]\n    OutOfMemory(OutOfMemory),\n\n    /// Requested binding to memory that doesn't support the required operations.\n    #[fail(display = \"Unsupported memory allocation for the requirements\")]\n    WrongMemory,\n\n    /// Requested binding to an invalid memory.\n    #[fail(display = \"Not enough space in the memory allocation\")]\n    OutOfBounds,\n}","parent":null,"children":[{"krate":0,"index":3293},{"krate":0,"index":3296},{"krate":0,"index":3298}],"decl_id":null,"docs":" Error binding a resource to memory allocation.\n","sig":null,"attributes":[{"value":"/ Error binding a resource to memory allocation.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":98094,"byte_end":98144,"line_start":99,"line_end":99,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3321},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":98957,"byte_end":98960,"line_start":124,"line_end":124,"column_start":5,"column_end":8},"name":"Any","qualname":"::device::WaitFor::Any","value":"WaitFor::Any","parent":{"krate":0,"index":3320},"children":[],"decl_id":null,"docs":" Wait for any target.\n","sig":null,"attributes":[{"value":"/ Wait for any target.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":98928,"byte_end":98952,"line_start":123,"line_end":123,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3323},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":99004,"byte_end":99007,"line_start":126,"line_end":126,"column_start":5,"column_end":8},"name":"All","qualname":"::device::WaitFor::All","value":"WaitFor::All","parent":{"krate":0,"index":3320},"children":[],"decl_id":null,"docs":" Wait for all targets at once.\n","sig":null,"attributes":[{"value":"/ Wait for all targets at once.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":98966,"byte_end":98999,"line_start":125,"line_end":125,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":3320},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":98914,"byte_end":98921,"line_start":122,"line_end":122,"column_start":10,"column_end":17},"name":"WaitFor","qualname":"::device::WaitFor","value":"pub enum WaitFor {\n\n    /// Wait for any target.\n    Any,\n\n    /// Wait for all targets at once.\n    All,\n}","parent":null,"children":[{"krate":0,"index":3321},{"krate":0,"index":3323}],"decl_id":null,"docs":" Specifies the waiting targets.\n","sig":null,"attributes":[{"value":"/ Specifies the waiting targets.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":98762,"byte_end":98796,"line_start":119,"line_end":119,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3382},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":99225,"byte_end":99242,"line_start":134,"line_end":134,"column_start":5,"column_end":22},"name":"CompilationFailed","qualname":"::device::ShaderError::CompilationFailed","value":"ShaderError::CompilationFailed(String)","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" The shader failed to compile.\n","sig":null,"attributes":[{"value":"/ The shader failed to compile.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":99128,"byte_end":99161,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"fail(display = \"shader compilation failed: {}\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":99166,"byte_end":99220,"line_start":133,"line_end":133,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3385},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":99351,"byte_end":99368,"line_start":137,"line_end":137,"column_start":5,"column_end":22},"name":"MissingEntryPoint","qualname":"::device::ShaderError::MissingEntryPoint","value":"ShaderError::MissingEntryPoint(String)","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Missing entry point.\n","sig":null,"attributes":[{"value":"/ Missing entry point.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":99256,"byte_end":99280,"line_start":135,"line_end":135,"column_start":5,"column_end":29}},{"value":"fail(display = \"shader is missing an entry point: {}\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":99285,"byte_end":99346,"line_start":136,"line_end":136,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3388},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":99501,"byte_end":99518,"line_start":140,"line_end":140,"column_start":5,"column_end":22},"name":"InterfaceMismatch","qualname":"::device::ShaderError::InterfaceMismatch","value":"ShaderError::InterfaceMismatch(String)","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Mismatch of interface (e.g missing push constants).\n","sig":null,"attributes":[{"value":"/ Mismatch of interface (e.g missing push constants).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":99382,"byte_end":99437,"line_start":138,"line_end":138,"column_start":5,"column_end":60}},{"value":"fail(display = \"shader interface mismatch: {}\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":99442,"byte_end":99496,"line_start":139,"line_end":139,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3391},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":99635,"byte_end":99651,"line_start":143,"line_end":143,"column_start":5,"column_end":21},"name":"UnsupportedStage","qualname":"::device::ShaderError::UnsupportedStage","value":"ShaderError::UnsupportedStage(pso::Stage)","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Shader stage is not supported.\n","sig":null,"attributes":[{"value":"/ Shader stage is not supported.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":99532,"byte_end":99566,"line_start":141,"line_end":141,"column_start":5,"column_end":39}},{"value":"fail(display = \"shader stage \\\"{}\\\" is unsupported\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":99571,"byte_end":99630,"line_start":142,"line_end":142,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3394},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":99746,"byte_end":99757,"line_start":146,"line_end":146,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::device::ShaderError::OutOfMemory","value":"ShaderError::OutOfMemory(OutOfMemory)","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Out of either host or device memory.\n","sig":null,"attributes":[{"value":"/ Out of either host or device memory.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":99669,"byte_end":99709,"line_start":144,"line_end":144,"column_start":5,"column_end":45}},{"value":"fail(display = \"{}\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":99714,"byte_end":99741,"line_start":145,"line_end":145,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":3381},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":99110,"byte_end":99121,"line_start":131,"line_end":131,"column_start":10,"column_end":21},"name":"ShaderError","qualname":"::device::ShaderError","value":"pub enum ShaderError {\n\n    /// The shader failed to compile.\n    #[fail(display = \"shader compilation failed: {}\", _0)]\n    CompilationFailed(String),\n\n    /// Missing entry point.\n    #[fail(display = \"shader is missing an entry point: {}\", _0)]\n    MissingEntryPoint(String),\n\n    /// Mismatch of interface (e.g missing push constants).\n    #[fail(display = \"shader interface mismatch: {}\", _0)]\n    InterfaceMismatch(String),\n\n    /// Shader stage is not supported.\n    #[fail(display = \"shader stage \\\"{}\\\" is unsupported\", _0)]\n    UnsupportedStage(pso::Stage),\n\n    /// Out of either host or device memory.\n    #[fail(display = \"{}\", _0)]\n    OutOfMemory(OutOfMemory),\n}","parent":null,"children":[{"krate":0,"index":3382},{"krate":0,"index":3385},{"krate":0,"index":3388},{"krate":0,"index":3391},{"krate":0,"index":3394}],"decl_id":null,"docs":" An error from creating a shader module.\n","sig":null,"attributes":[{"value":"/ An error from creating a shader module.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":99012,"byte_end":99055,"line_start":129,"line_end":129,"column_start":1,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":653},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":100709,"byte_end":100715,"line_start":175,"line_end":175,"column_start":11,"column_end":17},"name":"Device","qualname":"::device::Device","value":"Device<B: Backend>: fmt::Debug + Any + Send + Sync","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":678},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":685},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":722},{"krate":0,"index":725},{"krate":0,"index":727},{"krate":0,"index":731},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":740},{"krate":0,"index":743},{"krate":0,"index":747},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775}],"decl_id":null,"docs":" # Overview","sig":null,"attributes":[{"value":"/ # Overview","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":99907,"byte_end":99921,"line_start":155,"line_end":155,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":99922,"byte_end":99925,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ A `Device` is responsible for creating and managing resources for the physical device","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":99926,"byte_end":100015,"line_start":157,"line_end":157,"column_start":1,"column_end":90}},{"value":"/ it was created from.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":100016,"byte_end":100040,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":100041,"byte_end":100044,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ## Resource Construction and Handling","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":100045,"byte_end":100086,"line_start":160,"line_end":160,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":100087,"byte_end":100090,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ This device structure can then be used to create and manage different resources, like buffers,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":100091,"byte_end":100189,"line_start":162,"line_end":162,"column_start":1,"column_end":99}},{"value":"/ shader programs and textures. See the individual methods for more information.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":100190,"byte_end":100272,"line_start":163,"line_end":163,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":100273,"byte_end":100276,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ ## Mutability","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":100277,"byte_end":100294,"line_start":165,"line_end":165,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":100295,"byte_end":100298,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ All the methods get `&self`. Any internal mutability of the `Device` is hidden from the user.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":100299,"byte_end":100396,"line_start":167,"line_end":167,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":100397,"byte_end":100400,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ## Synchronization","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":100401,"byte_end":100423,"line_start":169,"line_end":169,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":100424,"byte_end":100427,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ `Device` should be usable concurrently from multiple threads. The `Send` and `Sync` bounds","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":100428,"byte_end":100522,"line_start":171,"line_end":171,"column_start":1,"column_end":95}},{"value":"/ are not enforced at the HAL level due to OpenGL constraint (to be revised). Users can still","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":100523,"byte_end":100618,"line_start":172,"line_end":172,"column_start":1,"column_end":96}},{"value":"/ benefit from the backends that support synchronization of the `Device`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":100619,"byte_end":100694,"line_start":173,"line_end":173,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":100695,"byte_end":100698,"line_start":174,"line_end":174,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":101125,"byte_end":101140,"line_start":184,"line_end":184,"column_start":15,"column_end":30},"name":"allocate_memory","qualname":"::device::Device::allocate_memory","value":"pub unsafe fn allocate_memory(&Self, MemoryTypeId, u64)\n-> Result<B::Memory, AllocationError>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Allocates a memory segment of a specified type.","sig":null,"attributes":[{"value":"/ Allocates a memory segment of a specified type.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":100766,"byte_end":100817,"line_start":176,"line_end":176,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":100822,"byte_end":100825,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ There is only a limited amount of allocations allowed depending on the implementation!","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":100830,"byte_end":100920,"line_start":178,"line_end":178,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":100925,"byte_end":100928,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":100933,"byte_end":100948,"line_start":180,"line_end":180,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":100953,"byte_end":100956,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ * `memory_type` - Index of the memory type in the memory properties of the associated physical device.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":100961,"byte_end":101067,"line_start":182,"line_end":182,"column_start":5,"column_end":111}},{"value":"/ * `size` - Size of the allocation.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":101072,"byte_end":101110,"line_start":183,"line_end":183,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":101298,"byte_end":101309,"line_start":191,"line_end":191,"column_start":15,"column_end":26},"name":"free_memory","qualname":"::device::Device::free_memory","value":"pub unsafe fn free_memory(&Self, B::Memory)","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Free device memory\n","sig":null,"attributes":[{"value":"/ Free device memory","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":101261,"byte_end":101283,"line_start":190,"line_end":190,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":101503,"byte_end":101522,"line_start":196,"line_end":196,"column_start":15,"column_end":34},"name":"create_command_pool","qualname":"::device::Device::create_command_pool","value":"pub unsafe fn create_command_pool(&Self, QueueFamilyId,\n                                  CommandPoolCreateFlags)\n-> Result<B::CommandPool, OutOfMemory>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Create a new command pool for a given queue family.","sig":null,"attributes":[{"value":"/ Create a new command pool for a given queue family.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":101342,"byte_end":101397,"line_start":193,"line_end":193,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":101402,"byte_end":101405,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ *Note*: the family has to be associated by one as the `Gpu::queue_groups`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":101410,"byte_end":101488,"line_start":195,"line_end":195,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":101731,"byte_end":101756,"line_start":203,"line_end":203,"column_start":15,"column_end":40},"name":"create_command_pool_typed","qualname":"::device::Device::create_command_pool_typed","value":"pub unsafe fn create_command_pool_typed<C>(&Self, &QueueGroup<B, C>,\n                                           CommandPoolCreateFlags)\n-> Result<CommandPool<B, C>, OutOfMemory>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Create a strongly typed command pool wrapper.\n","sig":null,"attributes":[{"value":"/ Create a strongly typed command pool wrapper.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":101667,"byte_end":101716,"line_start":202,"line_end":202,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":102054,"byte_end":102074,"line_start":213,"line_end":213,"column_start":15,"column_end":35},"name":"destroy_command_pool","qualname":"::device::Device::destroy_command_pool","value":"pub unsafe fn destroy_command_pool(&Self, B::CommandPool)","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Destroy a command pool.\n","sig":null,"attributes":[{"value":"/ Destroy a command pool.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":102012,"byte_end":102039,"line_start":212,"line_end":212,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":102481,"byte_end":102499,"line_start":220,"line_end":220,"column_start":15,"column_end":33},"name":"create_render_pass","qualname":"::device::Device::create_render_pass","value":"pub unsafe fn create_render_pass<'a, IA, IS, ID>(&Self, IA, IS, ID)\n-> Result<B::RenderPass, OutOfMemory> where IA: IntoIterator,\nIA::Item: Borrow<pass::Attachment>, IS: IntoIterator,\nIS::Item: Borrow<pass::SubpassDesc>, ID: IntoIterator,\nID::Item: Borrow<pass::SubpassDependency>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Create a render pass with the given attachments and subpasses.","sig":null,"attributes":[{"value":"/ Create a render pass with the given attachments and subpasses.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":102110,"byte_end":102176,"line_start":215,"line_end":215,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":102181,"byte_end":102184,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ A *render pass* represents a collection of attachments, subpasses, and dependencies between","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":102189,"byte_end":102284,"line_start":217,"line_end":217,"column_start":5,"column_end":100}},{"value":"/ the subpasses, and describes how the attachments are used over the course of the subpasses.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":102289,"byte_end":102384,"line_start":218,"line_end":218,"column_start":5,"column_end":100}},{"value":"/ The use of a render pass in a command buffer is a *render pass* instance.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":102389,"byte_end":102466,"line_start":219,"line_end":219,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":102929,"byte_end":102948,"line_start":235,"line_end":235,"column_start":15,"column_end":34},"name":"destroy_render_pass","qualname":"::device::Device::destroy_render_pass","value":"pub unsafe fn destroy_render_pass(&Self, B::RenderPass)","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Destroy a `RenderPass`.\n","sig":null,"attributes":[{"value":"/ Destroy a `RenderPass`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":102887,"byte_end":102914,"line_start":234,"line_end":234,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":103989,"byte_end":104011,"line_start":254,"line_end":254,"column_start":15,"column_end":37},"name":"create_pipeline_layout","qualname":"::device::Device::create_pipeline_layout","value":"pub unsafe fn create_pipeline_layout<IS, IR>(&Self, IS, IR)\n-> Result<B::PipelineLayout, OutOfMemory> where IS: IntoIterator,\nIS::Item: Borrow<B::DescriptorSetLayout>, IR: IntoIterator,\nIR::Item: Borrow<(pso::ShaderStageFlags, Range<u32>)>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Create a new pipeline layout object.","sig":null,"attributes":[{"value":"/ Create a new pipeline layout object.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":102981,"byte_end":103021,"line_start":237,"line_end":237,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":103026,"byte_end":103029,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":103034,"byte_end":103049,"line_start":239,"line_end":239,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":103054,"byte_end":103057,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ * `set_layouts` - Descriptor set layouts","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":103062,"byte_end":103106,"line_start":241,"line_end":241,"column_start":5,"column_end":49}},{"value":"/ * `push_constants` - Ranges of push constants. A shader stage may only contain one push","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":103111,"byte_end":103202,"line_start":242,"line_end":242,"column_start":5,"column_end":96}},{"value":"/     constant block. The length of the range indicates the number of u32 constants occupied","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":103207,"byte_end":103301,"line_start":243,"line_end":243,"column_start":5,"column_end":99}},{"value":"/     by the push constant block.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":103306,"byte_end":103341,"line_start":244,"line_end":244,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":103346,"byte_end":103349,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # PipelineLayout","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":103354,"byte_end":103374,"line_start":246,"line_end":246,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":103379,"byte_end":103382,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Access to descriptor sets from a pipeline is accomplished through a *pipeline layout*.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":103387,"byte_end":103477,"line_start":248,"line_end":248,"column_start":5,"column_end":95}},{"value":"/ Zero or more descriptor set layouts and zero or more push constant ranges are combined to","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":103482,"byte_end":103575,"line_start":249,"line_end":249,"column_start":5,"column_end":98}},{"value":"/ form a pipeline layout object which describes the complete set of resources that **can** be","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":103580,"byte_end":103675,"line_start":250,"line_end":250,"column_start":5,"column_end":100}},{"value":"/ accessed by a pipeline. The pipeline layout represents a sequence of descriptor sets with","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":103680,"byte_end":103773,"line_start":251,"line_end":251,"column_start":5,"column_end":98}},{"value":"/ each having a specific layout. This sequence of layouts is used to determine the interface","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":103778,"byte_end":103872,"line_start":252,"line_end":252,"column_start":5,"column_end":99}},{"value":"/ between shader stages and shader resources. Each pipeline is created using a pipeline layout.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":103877,"byte_end":103974,"line_start":253,"line_end":253,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":104367,"byte_end":104390,"line_start":266,"line_end":266,"column_start":15,"column_end":38},"name":"destroy_pipeline_layout","qualname":"::device::Device::destroy_pipeline_layout","value":"pub unsafe fn destroy_pipeline_layout(&Self, B::PipelineLayout)","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Destroy a pipeline layout object\n","sig":null,"attributes":[{"value":"/ Destroy a pipeline layout object","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":104316,"byte_end":104352,"line_start":265,"line_end":265,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":104481,"byte_end":104502,"line_start":269,"line_end":269,"column_start":15,"column_end":36},"name":"create_pipeline_cache","qualname":"::device::Device::create_pipeline_cache","value":"pub unsafe fn create_pipeline_cache(&Self, Option<&[u8]>)\n-> Result<B::PipelineCache, OutOfMemory>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Create a pipeline cache object.\n","sig":null,"attributes":[{"value":"/ Create a pipeline cache object.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":104431,"byte_end":104466,"line_start":268,"line_end":268,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":104661,"byte_end":104684,"line_start":275,"line_end":275,"column_start":15,"column_end":38},"name":"get_pipeline_cache_data","qualname":"::device::Device::get_pipeline_cache_data","value":"pub unsafe fn get_pipeline_cache_data(&Self, &B::PipelineCache)\n-> Result<Vec<u8>, OutOfMemory>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Retrieve data from pipeline cache object.\n","sig":null,"attributes":[{"value":"/ Retrieve data from pipeline cache object.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":104601,"byte_end":104646,"line_start":274,"line_end":274,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":104859,"byte_end":104880,"line_start":281,"line_end":281,"column_start":15,"column_end":36},"name":"merge_pipeline_caches","qualname":"::device::Device::merge_pipeline_caches","value":"pub unsafe fn merge_pipeline_caches<I>(&Self, &B::PipelineCache, I)\n-> Result<(), OutOfMemory> where I: IntoIterator,\nI::Item: Borrow<B::PipelineCache>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Merge a number of source pipeline caches into the target one.\n","sig":null,"attributes":[{"value":"/ Merge a number of source pipeline caches into the target one.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":104779,"byte_end":104844,"line_start":280,"line_end":280,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":105122,"byte_end":105144,"line_start":291,"line_end":291,"column_start":15,"column_end":37},"name":"destroy_pipeline_cache","qualname":"::device::Device::destroy_pipeline_cache","value":"pub unsafe fn destroy_pipeline_cache(&Self, B::PipelineCache)","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Destroy a pipeline cache object.\n","sig":null,"attributes":[{"value":"/ Destroy a pipeline cache object.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":105071,"byte_end":105107,"line_start":290,"line_end":290,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":105229,"byte_end":105253,"line_start":294,"line_end":294,"column_start":15,"column_end":39},"name":"create_graphics_pipeline","qualname":"::device::Device::create_graphics_pipeline","value":"pub unsafe fn create_graphics_pipeline<'a>(&Self, &pso::GraphicsPipelineDesc,\n                                           Option<&B::PipelineCache>)\n-> Result<B::GraphicsPipeline, pso::CreationError>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Create a graphics pipeline.\n","sig":null,"attributes":[{"value":"/ Create a graphics pipeline.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":105183,"byte_end":105214,"line_start":293,"line_end":293,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":105567,"byte_end":105592,"line_start":304,"line_end":304,"column_start":15,"column_end":40},"name":"create_graphics_pipelines","qualname":"::device::Device::create_graphics_pipelines","value":"pub unsafe fn create_graphics_pipelines<'a,\n                                        I>(&Self, I,\n                                           Option<&B::PipelineCache>)\n-> Vec<Result<B::GraphicsPipeline, pso::CreationError>> where I: IntoIterator,\nI::Item: Borrow<pso::GraphicsPipelineDesc>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Create graphics pipelines.\n","sig":null,"attributes":[{"value":"/ Create graphics pipelines.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":105522,"byte_end":105552,"line_start":303,"line_end":303,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":106205,"byte_end":106230,"line_start":323,"line_end":323,"column_start":15,"column_end":40},"name":"destroy_graphics_pipeline","qualname":"::device::Device::destroy_graphics_pipeline","value":"pub unsafe fn destroy_graphics_pipeline(&Self, B::GraphicsPipeline)","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Destroy a graphics pipeline.","sig":null,"attributes":[{"value":"/ Destroy a graphics pipeline.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":105988,"byte_end":106020,"line_start":319,"line_end":319,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":106025,"byte_end":106028,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ The graphics pipeline shouldn't be destroyed before any submitted command buffer,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":106033,"byte_end":106118,"line_start":321,"line_end":321,"column_start":5,"column_end":90}},{"value":"/ which references the graphics pipeline, has finished execution.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":106123,"byte_end":106190,"line_start":322,"line_end":322,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":106320,"byte_end":106343,"line_start":326,"line_end":326,"column_start":15,"column_end":38},"name":"create_compute_pipeline","qualname":"::device::Device::create_compute_pipeline","value":"pub unsafe fn create_compute_pipeline<'a>(&Self, &pso::ComputePipelineDesc,\n                                          Option<&B::PipelineCache>)\n-> Result<B::ComputePipeline, pso::CreationError>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Create a compute pipeline.\n","sig":null,"attributes":[{"value":"/ Create a compute pipeline.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":106275,"byte_end":106305,"line_start":325,"line_end":325,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":106653,"byte_end":106677,"line_start":336,"line_end":336,"column_start":15,"column_end":39},"name":"create_compute_pipelines","qualname":"::device::Device::create_compute_pipelines","value":"pub unsafe fn create_compute_pipelines<'a,\n                                       I>(&Self, I, Option<&B::PipelineCache>)\n-> Vec<Result<B::ComputePipeline, pso::CreationError>> where I: IntoIterator,\nI::Item: Borrow<pso::ComputePipelineDesc>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Create compute pipelines.\n","sig":null,"attributes":[{"value":"/ Create compute pipelines.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":106609,"byte_end":106638,"line_start":335,"line_end":335,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":107284,"byte_end":107308,"line_start":355,"line_end":355,"column_start":15,"column_end":39},"name":"destroy_compute_pipeline","qualname":"::device::Device::destroy_compute_pipeline","value":"pub unsafe fn destroy_compute_pipeline(&Self, B::ComputePipeline)","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Destroy a compute pipeline.","sig":null,"attributes":[{"value":"/ Destroy a compute pipeline.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":107070,"byte_end":107101,"line_start":351,"line_end":351,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":107106,"byte_end":107109,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ The compute pipeline shouldn't be destroyed before any submitted command buffer,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":107114,"byte_end":107198,"line_start":353,"line_end":353,"column_start":5,"column_end":89}},{"value":"/ which references the compute pipeline, has finished execution.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":107203,"byte_end":107269,"line_start":354,"line_end":354,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":107519,"byte_end":107537,"line_start":361,"line_end":361,"column_start":15,"column_end":33},"name":"create_framebuffer","qualname":"::device::Device::create_framebuffer","value":"pub unsafe fn create_framebuffer<I>(&Self, &B::RenderPass, I, image::Extent)\n-> Result<B::Framebuffer, OutOfMemory> where I: IntoIterator,\nI::Item: Borrow<B::ImageView>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Create a new framebuffer object.","sig":null,"attributes":[{"value":"/ Create a new framebuffer object.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":107352,"byte_end":107388,"line_start":357,"line_end":357,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":107393,"byte_end":107396,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":107401,"byte_end":107413,"line_start":359,"line_end":359,"column_start":5,"column_end":17}},{"value":"/ - `extent.width`, `extent.height` and `extent.depth` **must** be greater than `0`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":107418,"byte_end":107504,"line_start":360,"line_end":360,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":107963,"byte_end":107982,"line_start":375,"line_end":375,"column_start":15,"column_end":34},"name":"destroy_framebuffer","qualname":"::device::Device::destroy_framebuffer","value":"pub unsafe fn destroy_framebuffer(&Self, B::Framebuffer)","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Destroy a framebuffer.","sig":null,"attributes":[{"value":"/ Destroy a framebuffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":107766,"byte_end":107792,"line_start":371,"line_end":371,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":107797,"byte_end":107800,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The framebuffer shouldn't be destroy before any submitted command buffer,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":107805,"byte_end":107882,"line_start":373,"line_end":373,"column_start":5,"column_end":82}},{"value":"/ which references the framebuffer, has finished execution.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":107887,"byte_end":107948,"line_start":374,"line_end":374,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":108293,"byte_end":108313,"line_start":381,"line_end":381,"column_start":15,"column_end":35},"name":"create_shader_module","qualname":"::device::Device::create_shader_module","value":"pub unsafe fn create_shader_module(&Self, &[u32])\n-> Result<B::ShaderModule, ShaderError>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Create a new shader module object through the SPIR-V binary data.","sig":null,"attributes":[{"value":"/ Create a new shader module object through the SPIR-V binary data.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":108017,"byte_end":108086,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":108091,"byte_end":108094,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ Once a shader module has been created, any entry points it contains can be used in pipeline","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":108099,"byte_end":108194,"line_start":379,"line_end":379,"column_start":5,"column_end":100}},{"value":"/ shader stages as described in *Compute Pipelines* and *Graphics Pipelines*.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":108199,"byte_end":108278,"line_start":380,"line_end":380,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":108568,"byte_end":108589,"line_start":389,"line_end":389,"column_start":15,"column_end":36},"name":"destroy_shader_module","qualname":"::device::Device::destroy_shader_module","value":"pub unsafe fn destroy_shader_module(&Self, B::ShaderModule)","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Destroy a shader module module","sig":null,"attributes":[{"value":"/ Destroy a shader module module","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":108410,"byte_end":108444,"line_start":386,"line_end":386,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":108449,"byte_end":108452,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ A shader module can be destroyed while pipelines created using its shaders are still in use.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":108457,"byte_end":108553,"line_start":388,"line_end":388,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":108779,"byte_end":108792,"line_start":394,"line_end":394,"column_start":15,"column_end":28},"name":"create_buffer","qualname":"::device::Device::create_buffer","value":"pub unsafe fn create_buffer(&Self, u64, buffer::Usage)\n-> Result<B::Buffer, buffer::CreationError>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Create a new buffer (unbound).","sig":null,"attributes":[{"value":"/ Create a new buffer (unbound).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":108628,"byte_end":108662,"line_start":391,"line_end":391,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":108667,"byte_end":108670,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ The created buffer won't have associated memory until `bind_buffer_memory` is called.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":108675,"byte_end":108764,"line_start":393,"line_end":393,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":108971,"byte_end":108994,"line_start":401,"line_end":401,"column_start":15,"column_end":38},"name":"get_buffer_requirements","qualname":"::device::Device::get_buffer_requirements","value":"pub unsafe fn get_buffer_requirements(&Self, &B::Buffer) -> Requirements","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Get memory requirements for the buffer\n","sig":null,"attributes":[{"value":"/ Get memory requirements for the buffer","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":108914,"byte_end":108956,"line_start":400,"line_end":400,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":109245,"byte_end":109263,"line_start":407,"line_end":407,"column_start":15,"column_end":33},"name":"bind_buffer_memory","qualname":"::device::Device::bind_buffer_memory","value":"pub unsafe fn bind_buffer_memory(&Self, &B::Memory, u64, &mut B::Buffer)\n-> Result<(), BindError>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Bind memory to a buffer.","sig":null,"attributes":[{"value":"/ Bind memory to a buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":109041,"byte_end":109069,"line_start":403,"line_end":403,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":109074,"byte_end":109077,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Be sure to check that there is enough memory available for the buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":109082,"byte_end":109156,"line_start":405,"line_end":405,"column_start":5,"column_end":79}},{"value":"/ Use `get_buffer_requirements` to acquire the memory requirements.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":109161,"byte_end":109230,"line_start":406,"line_end":406,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":109579,"byte_end":109593,"line_start":418,"line_end":418,"column_start":15,"column_end":29},"name":"destroy_buffer","qualname":"::device::Device::destroy_buffer","value":"pub unsafe fn destroy_buffer(&Self, B::Buffer)","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Destroy a buffer.","sig":null,"attributes":[{"value":"/ Destroy a buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":109395,"byte_end":109416,"line_start":414,"line_end":414,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":109421,"byte_end":109424,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ The buffer shouldn't be destroyed before any submitted command buffer,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":109429,"byte_end":109503,"line_start":416,"line_end":416,"column_start":5,"column_end":79}},{"value":"/ which references the images, has finished execution.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":109508,"byte_end":109564,"line_start":417,"line_end":417,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":109676,"byte_end":109694,"line_start":421,"line_end":421,"column_start":15,"column_end":33},"name":"create_buffer_view","qualname":"::device::Device::create_buffer_view","value":"pub unsafe fn create_buffer_view<R: RangeArg<u64>>(&Self, &B::Buffer,\n                                                   Option<format::Format>, R)\n-> Result<B::BufferView, buffer::ViewCreationError>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Create a new buffer view object\n","sig":null,"attributes":[{"value":"/ Create a new buffer view object","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":109626,"byte_end":109661,"line_start":420,"line_end":420,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":109920,"byte_end":109939,"line_start":429,"line_end":429,"column_start":15,"column_end":34},"name":"destroy_buffer_view","qualname":"::device::Device::destroy_buffer_view","value":"pub unsafe fn destroy_buffer_view(&Self, B::BufferView)","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Destroy a buffer view object\n","sig":null,"attributes":[{"value":"/ Destroy a buffer view object","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":109873,"byte_end":109905,"line_start":428,"line_end":428,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":110018,"byte_end":110030,"line_start":432,"line_end":432,"column_start":15,"column_end":27},"name":"create_image","qualname":"::device::Device::create_image","value":"pub unsafe fn create_image(&Self, image::Kind, image::Level, format::Format,\n                           image::Tiling, image::Usage,\n                           image::ViewCapabilities)\n-> Result<B::Image, image::CreationError>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Create a new image object\n","sig":null,"attributes":[{"value":"/ Create a new image object","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":109974,"byte_end":110003,"line_start":431,"line_end":431,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":110354,"byte_end":110376,"line_start":443,"line_end":443,"column_start":15,"column_end":37},"name":"get_image_requirements","qualname":"::device::Device::get_image_requirements","value":"pub unsafe fn get_image_requirements(&Self, &B::Image) -> Requirements","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Get memory requirements for the Image\n","sig":null,"attributes":[{"value":"/ Get memory requirements for the Image","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":110298,"byte_end":110339,"line_start":442,"line_end":442,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":110442,"byte_end":110473,"line_start":446,"line_end":446,"column_start":15,"column_end":46},"name":"get_image_subresource_footprint","qualname":"::device::Device::get_image_subresource_footprint","value":"pub unsafe fn get_image_subresource_footprint(&Self, &B::Image,\n                                              image::Subresource)\n-> image::SubresourceFootprint","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":110424,"byte_end":110427,"line_start":445,"line_end":445,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":110656,"byte_end":110673,"line_start":453,"line_end":453,"column_start":15,"column_end":32},"name":"bind_image_memory","qualname":"::device::Device::bind_image_memory","value":"pub unsafe fn bind_image_memory(&Self, &B::Memory, u64, &mut B::Image)\n-> Result<(), BindError>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Bind device memory to an image object\n","sig":null,"attributes":[{"value":"/ Bind device memory to an image object","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":110600,"byte_end":110641,"line_start":452,"line_end":452,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":110989,"byte_end":111002,"line_start":464,"line_end":464,"column_start":15,"column_end":28},"name":"destroy_image","qualname":"::device::Device::destroy_image","value":"pub unsafe fn destroy_image(&Self, B::Image)","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Destroy an image.","sig":null,"attributes":[{"value":"/ Destroy an image.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":110806,"byte_end":110827,"line_start":460,"line_end":460,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":110832,"byte_end":110835,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ The image shouldn't be destroyed before any submitted command buffer,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":110840,"byte_end":110913,"line_start":462,"line_end":462,"column_start":5,"column_end":78}},{"value":"/ which references the images, has finished execution.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":110918,"byte_end":110974,"line_start":463,"line_end":463,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":111095,"byte_end":111112,"line_start":467,"line_end":467,"column_start":15,"column_end":32},"name":"create_image_view","qualname":"::device::Device::create_image_view","value":"pub unsafe fn create_image_view(&Self, &B::Image, image::ViewKind,\n                                format::Format, format::Swizzle,\n                                image::SubresourceRange)\n-> Result<B::ImageView, image::ViewError>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Create an image view from an existing image\n","sig":null,"attributes":[{"value":"/ Create an image view from an existing image","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":111033,"byte_end":111080,"line_start":466,"line_end":466,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":111398,"byte_end":111416,"line_start":477,"line_end":477,"column_start":15,"column_end":33},"name":"destroy_image_view","qualname":"::device::Device::destroy_image_view","value":"pub unsafe fn destroy_image_view(&Self, B::ImageView)","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Destroy an image view object\n","sig":null,"attributes":[{"value":"/ Destroy an image view object","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":111351,"byte_end":111383,"line_start":476,"line_end":476,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":111496,"byte_end":111510,"line_start":480,"line_end":480,"column_start":15,"column_end":29},"name":"create_sampler","qualname":"::device::Device::create_sampler","value":"pub unsafe fn create_sampler(&Self, image::SamplerInfo)\n-> Result<B::Sampler, AllocationError>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Create a new sampler object\n","sig":null,"attributes":[{"value":"/ Create a new sampler object","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":111450,"byte_end":111481,"line_start":479,"line_end":479,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":111655,"byte_end":111670,"line_start":486,"line_end":486,"column_start":15,"column_end":30},"name":"destroy_sampler","qualname":"::device::Device::destroy_sampler","value":"pub unsafe fn destroy_sampler(&Self, B::Sampler)","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Destroy a sampler object\n","sig":null,"attributes":[{"value":"/ Destroy a sampler object","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":111612,"byte_end":111640,"line_start":485,"line_end":485,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":111903,"byte_end":111925,"line_start":492,"line_end":492,"column_start":15,"column_end":37},"name":"create_descriptor_pool","qualname":"::device::Device::create_descriptor_pool","value":"pub unsafe fn create_descriptor_pool<I>(&Self, usize, I,\n                                        DescriptorPoolCreateFlags)\n-> Result<B::DescriptorPool, OutOfMemory> where I: IntoIterator,\nI::Item: Borrow<pso::DescriptorRangeDesc>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Create a descriptor pool.","sig":null,"attributes":[{"value":"/ Create a descriptor pool.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":111705,"byte_end":111734,"line_start":488,"line_end":488,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":111739,"byte_end":111742,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ Descriptor pools allow allocation of descriptor sets.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":111747,"byte_end":111804,"line_start":490,"line_end":490,"column_start":5,"column_end":62}},{"value":"/ The pool can't be modified directly, only through updating descriptor sets.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":111809,"byte_end":111888,"line_start":491,"line_end":491,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":112483,"byte_end":112506,"line_start":507,"line_end":507,"column_start":15,"column_end":38},"name":"destroy_descriptor_pool","qualname":"::device::Device::destroy_descriptor_pool","value":"pub unsafe fn destroy_descriptor_pool(&Self, B::DescriptorPool)","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Destroy a descriptor pool object","sig":null,"attributes":[{"value":"/ Destroy a descriptor pool object","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":112181,"byte_end":112217,"line_start":502,"line_end":502,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":112222,"byte_end":112225,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ When a pool is destroyed, all descriptor sets allocated from the pool are implicitly freed","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":112230,"byte_end":112324,"line_start":504,"line_end":504,"column_start":5,"column_end":99}},{"value":"/ and become invalid. Descriptor sets allocated from a given pool do not need to be freed","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":112329,"byte_end":112420,"line_start":505,"line_end":505,"column_start":5,"column_end":96}},{"value":"/ before destroying that descriptor pool.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":112425,"byte_end":112468,"line_start":506,"line_end":506,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":112985,"byte_end":113013,"line_start":515,"line_end":515,"column_start":15,"column_end":43},"name":"create_descriptor_set_layout","qualname":"::device::Device::create_descriptor_set_layout","value":"pub unsafe fn create_descriptor_set_layout<I, J>(&Self, I, J)\n-> Result<B::DescriptorSetLayout, OutOfMemory> where I: IntoIterator,\nI::Item: Borrow<pso::DescriptorSetLayoutBinding>, J: IntoIterator,\nJ::Item: Borrow<B::Sampler>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Create a descriptor set layout.","sig":null,"attributes":[{"value":"/ Create a descriptor set layout.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":112545,"byte_end":112580,"line_start":509,"line_end":509,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":112585,"byte_end":112588,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ A descriptor set layout object is defined by an array of zero or more descriptor bindings.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":112593,"byte_end":112687,"line_start":511,"line_end":511,"column_start":5,"column_end":99}},{"value":"/ Each individual descriptor binding is specified by a descriptor type, a count (array size)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":112692,"byte_end":112786,"line_start":512,"line_end":512,"column_start":5,"column_end":99}},{"value":"/ of the number of descriptors in the binding, a set of shader stages that **can** access the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":112791,"byte_end":112886,"line_start":513,"line_end":513,"column_start":5,"column_end":100}},{"value":"/ binding, and (if using immutable samplers) an array of sampler descriptors.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":112891,"byte_end":112970,"line_start":514,"line_end":514,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":113358,"byte_end":113387,"line_start":527,"line_end":527,"column_start":15,"column_end":44},"name":"destroy_descriptor_set_layout","qualname":"::device::Device::destroy_descriptor_set_layout","value":"pub unsafe fn destroy_descriptor_set_layout(&Self, B::DescriptorSetLayout)","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Destroy a descriptor set layout object\n","sig":null,"attributes":[{"value":"/ Destroy a descriptor set layout object","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":113301,"byte_end":113343,"line_start":526,"line_end":526,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":113513,"byte_end":113534,"line_start":530,"line_end":530,"column_start":15,"column_end":36},"name":"write_descriptor_sets","qualname":"::device::Device::write_descriptor_sets","value":"pub unsafe fn write_descriptor_sets<'a, I, J>(&Self, I) where\nI: IntoIterator<Item = pso::DescriptorSetWrite>, J: IntoIterator,\nJ::Item: Borrow<pso::Descriptor>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Specifying the parameters of a descriptor set write operation\n","sig":null,"attributes":[{"value":"/ Specifying the parameters of a descriptor set write operation","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":113433,"byte_end":113498,"line_start":529,"line_end":529,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":113794,"byte_end":113814,"line_start":537,"line_end":537,"column_start":15,"column_end":35},"name":"copy_descriptor_sets","qualname":"::device::Device::copy_descriptor_sets","value":"pub unsafe fn copy_descriptor_sets<'a, I>(&Self, I) where I: IntoIterator,\nI::Item: Borrow<pso::DescriptorSetCopy>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Structure specifying a copy descriptor set operation\n","sig":null,"attributes":[{"value":"/ Structure specifying a copy descriptor set operation","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":113723,"byte_end":113779,"line_start":536,"line_end":536,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":114127,"byte_end":114137,"line_start":545,"line_end":545,"column_start":15,"column_end":25},"name":"map_memory","qualname":"::device::Device::map_memory","value":"pub unsafe fn map_memory<R>(&Self, &B::Memory, R)\n-> Result<*mut u8, mapping::Error> where R: RangeArg<u64>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Map a memory object into application address space","sig":null,"attributes":[{"value":"/ Map a memory object into application address space","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":113939,"byte_end":113993,"line_start":542,"line_end":542,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":113998,"byte_end":114001,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ Call `map_memory()` to retrieve a host virtual address pointer to a region of a mappable memory object","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":114006,"byte_end":114112,"line_start":544,"line_end":544,"column_start":5,"column_end":111}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":114299,"byte_end":114325,"line_start":550,"line_end":550,"column_start":15,"column_end":41},"name":"flush_mapped_memory_ranges","qualname":"::device::Device::flush_mapped_memory_ranges","value":"pub unsafe fn flush_mapped_memory_ranges<'a, I, R>(&Self, I)\n-> Result<(), OutOfMemory> where I: IntoIterator,\nI::Item: Borrow<(&'a B::Memory, R)>, R: RangeArg<u64>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Flush mapped memory ranges\n","sig":null,"attributes":[{"value":"/ Flush mapped memory ranges","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":114254,"byte_end":114284,"line_start":549,"line_end":549,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":114572,"byte_end":114603,"line_start":557,"line_end":557,"column_start":15,"column_end":46},"name":"invalidate_mapped_memory_ranges","qualname":"::device::Device::invalidate_mapped_memory_ranges","value":"pub unsafe fn invalidate_mapped_memory_ranges<'a, I, R>(&Self, I)\n-> Result<(), OutOfMemory> where I: IntoIterator,\nI::Item: Borrow<(&'a B::Memory, R)>, R: RangeArg<u64>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Invalidate ranges of non-coherent memory from the host caches\n","sig":null,"attributes":[{"value":"/ Invalidate ranges of non-coherent memory from the host caches","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":114492,"byte_end":114557,"line_start":556,"line_end":556,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":114895,"byte_end":114907,"line_start":567,"line_end":567,"column_start":15,"column_end":27},"name":"unmap_memory","qualname":"::device::Device::unmap_memory","value":"pub unsafe fn unmap_memory(&Self, &B::Memory)","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Unmap a memory object once host access to it is no longer needed by the application\n","sig":null,"attributes":[{"value":"/ Unmap a memory object once host access to it is no longer needed by the application","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":114793,"byte_end":114880,"line_start":566,"line_end":566,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":115073,"byte_end":115095,"line_start":572,"line_end":572,"column_start":15,"column_end":37},"name":"acquire_mapping_reader","qualname":"::device::Device::acquire_mapping_reader","value":"pub unsafe fn acquire_mapping_reader<'a, T>(&Self, &'a B::Memory, Range<u64>)\n-> Result<mapping::Reader, mapping::Error> where T: Copy","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Acquire a mapping Reader.","sig":null,"attributes":[{"value":"/ Acquire a mapping Reader.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":114941,"byte_end":114970,"line_start":569,"line_end":569,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":114975,"byte_end":114978,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ The accessible slice will correspond to the specified range (in bytes).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":114983,"byte_end":115058,"line_start":571,"line_end":571,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":115801,"byte_end":115823,"line_start":595,"line_end":595,"column_start":15,"column_end":37},"name":"release_mapping_reader","qualname":"::device::Device::release_mapping_reader","value":"pub unsafe fn release_mapping_reader<'a, T>(&Self, mapping::Reader)","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Release a mapping Reader.\n","sig":null,"attributes":[{"value":"/ Release a mapping Reader.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":115757,"byte_end":115786,"line_start":594,"line_end":594,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":116096,"byte_end":116118,"line_start":603,"line_end":603,"column_start":15,"column_end":37},"name":"acquire_mapping_writer","qualname":"::device::Device::acquire_mapping_writer","value":"pub unsafe fn acquire_mapping_writer<'a, T>(&Self, &'a B::Memory, Range<u64>)\n-> Result<mapping::Writer, mapping::Error> where T: Copy","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Acquire a mapping Writer.","sig":null,"attributes":[{"value":"/ Acquire a mapping Writer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":115964,"byte_end":115993,"line_start":600,"line_end":600,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":115998,"byte_end":116001,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ The accessible slice will correspond to the specified range (in bytes).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":116006,"byte_end":116081,"line_start":602,"line_end":602,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":116730,"byte_end":116752,"line_start":624,"line_end":624,"column_start":15,"column_end":37},"name":"release_mapping_writer","qualname":"::device::Device::release_mapping_writer","value":"pub unsafe fn release_mapping_writer<'a, T>(&Self, mapping::Writer)\n-> Result<(), OutOfMemory>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Release a mapping Writer.\n","sig":null,"attributes":[{"value":"/ Release a mapping Writer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":116686,"byte_end":116715,"line_start":623,"line_end":623,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":117092,"byte_end":117108,"line_start":635,"line_end":635,"column_start":8,"column_end":24},"name":"create_semaphore","qualname":"::device::Device::create_semaphore","value":"pub fn create_semaphore(&Self) -> Result<B::Semaphore, OutOfMemory>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Create a new semaphore object\n","sig":null,"attributes":[{"value":"/ Create a new semaphore object","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":117051,"byte_end":117084,"line_start":634,"line_end":634,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":117204,"byte_end":117221,"line_start":638,"line_end":638,"column_start":15,"column_end":32},"name":"destroy_semaphore","qualname":"::device::Device::destroy_semaphore","value":"pub unsafe fn destroy_semaphore(&Self, B::Semaphore)","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Destroy a semaphore object\n","sig":null,"attributes":[{"value":"/ Destroy a semaphore object","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":117159,"byte_end":117189,"line_start":637,"line_end":637,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":117794,"byte_end":117806,"line_start":647,"line_end":647,"column_start":8,"column_end":20},"name":"create_fence","qualname":"::device::Device::create_fence","value":"pub fn create_fence(&Self, bool) -> Result<B::Fence, OutOfMemory>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Create a new fence object","sig":null,"attributes":[{"value":"/ Create a new fence object","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":117260,"byte_end":117289,"line_start":640,"line_end":640,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":117294,"byte_end":117297,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ Fences are a synchronization primitive that **can** be used to insert a dependency from","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":117302,"byte_end":117393,"line_start":642,"line_end":642,"column_start":5,"column_end":96}},{"value":"/ a queue to the host. Fences have two states - signaled and unsignaled. A fence **can** be","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":117398,"byte_end":117491,"line_start":643,"line_end":643,"column_start":5,"column_end":98}},{"value":"/ signaled as part of the execution of a *queue submission* command. Fences **can** be unsignaled","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":117496,"byte_end":117595,"line_start":644,"line_end":644,"column_start":5,"column_end":104}},{"value":"/ on the host with *reset_fences*. Fences **can** be waited on by the host with the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":117600,"byte_end":117685,"line_start":645,"line_end":645,"column_start":5,"column_end":90}},{"value":"/ *wait_for_fences* command, and the current state **can** be queried with *get_fence_status*.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":117690,"byte_end":117786,"line_start":646,"line_end":646,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":117887,"byte_end":117898,"line_start":650,"line_end":650,"column_start":15,"column_end":26},"name":"reset_fence","qualname":"::device::Device::reset_fence","value":"pub unsafe fn reset_fence(&Self, &B::Fence) -> Result<(), OutOfMemory>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":117869,"byte_end":117872,"line_start":649,"line_end":649,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":118027,"byte_end":118039,"line_start":655,"line_end":655,"column_start":15,"column_end":27},"name":"reset_fences","qualname":"::device::Device::reset_fences","value":"pub unsafe fn reset_fences<I>(&Self, I) -> Result<(), OutOfMemory> where\nI: IntoIterator, I::Item: Borrow<B::Fence>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":118009,"byte_end":118012,"line_start":654,"line_end":654,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":118404,"byte_end":118418,"line_start":668,"line_end":668,"column_start":15,"column_end":29},"name":"wait_for_fence","qualname":"::device::Device::wait_for_fence","value":"pub unsafe fn wait_for_fence(&Self, &B::Fence, u64)\n-> Result<bool, OomOrDeviceLost>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Blocks until the given fence is signaled.\n Returns true if the fence was signaled before the timeout.\n","sig":null,"attributes":[{"value":"/ Blocks until the given fence is signaled.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":118277,"byte_end":118322,"line_start":666,"line_end":666,"column_start":5,"column_end":50}},{"value":"/ Returns true if the fence was signaled before the timeout.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":118327,"byte_end":118389,"line_start":667,"line_end":667,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":118753,"byte_end":118768,"line_start":678,"line_end":678,"column_start":15,"column_end":30},"name":"wait_for_fences","qualname":"::device::Device::wait_for_fences","value":"pub unsafe fn wait_for_fences<I>(&Self, I, WaitFor, u64)\n-> Result<bool, OomOrDeviceLost> where I: IntoIterator,\nI::Item: Borrow<B::Fence>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Blocks until all or one of the given fences are signaled.\n Returns true if fences were signaled before the timeout.\n","sig":null,"attributes":[{"value":"/ Blocks until all or one of the given fences are signaled.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":118612,"byte_end":118673,"line_start":676,"line_end":676,"column_start":5,"column_end":66}},{"value":"/ Returns true if fences were signaled before the timeout.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":118678,"byte_end":118738,"line_start":677,"line_end":677,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":120404,"byte_end":120420,"line_start":727,"line_end":727,"column_start":15,"column_end":31},"name":"get_fence_status","qualname":"::device::Device::get_fence_status","value":"pub unsafe fn get_fence_status(&Self, &B::Fence) -> Result<bool, DeviceLost>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" true for signaled, false for not ready\n","sig":null,"attributes":[{"value":"/ true for signaled, false for not ready","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":120347,"byte_end":120389,"line_start":726,"line_end":726,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":120521,"byte_end":120534,"line_start":730,"line_end":730,"column_start":15,"column_end":28},"name":"destroy_fence","qualname":"::device::Device::destroy_fence","value":"pub unsafe fn destroy_fence(&Self, B::Fence)","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Destroy a fence object\n","sig":null,"attributes":[{"value":"/ Destroy a fence object","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":120480,"byte_end":120506,"line_start":729,"line_end":729,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":120600,"byte_end":120612,"line_start":733,"line_end":733,"column_start":8,"column_end":20},"name":"create_event","qualname":"::device::Device::create_event","value":"pub fn create_event(&Self) -> Result<B::Event, OutOfMemory>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Create an event object.\n","sig":null,"attributes":[{"value":"/ Create an event object.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":120565,"byte_end":120592,"line_start":732,"line_end":732,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":120702,"byte_end":120715,"line_start":736,"line_end":736,"column_start":15,"column_end":28},"name":"destroy_event","qualname":"::device::Device::destroy_event","value":"pub unsafe fn destroy_event(&Self, B::Event)","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Destroy an event object.\n","sig":null,"attributes":[{"value":"/ Destroy an event object.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":120659,"byte_end":120687,"line_start":735,"line_end":735,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":120873,"byte_end":120889,"line_start":741,"line_end":741,"column_start":15,"column_end":31},"name":"get_event_status","qualname":"::device::Device::get_event_status","value":"pub unsafe fn get_event_status(&Self, &B::Event)\n-> Result<bool, OomOrDeviceLost>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Query the status of an event.","sig":null,"attributes":[{"value":"/ Query the status of an event.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":120746,"byte_end":120779,"line_start":738,"line_end":738,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":120784,"byte_end":120787,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if the event is set, or `false` if it is reset.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":120792,"byte_end":120858,"line_start":740,"line_end":740,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":120987,"byte_end":120996,"line_start":744,"line_end":744,"column_start":15,"column_end":24},"name":"set_event","qualname":"::device::Device::set_event","value":"pub unsafe fn set_event(&Self, &B::Event) -> Result<(), OutOfMemory>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Sets an event.\n","sig":null,"attributes":[{"value":"/ Sets an event.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":120954,"byte_end":120972,"line_start":743,"line_end":743,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":121090,"byte_end":121101,"line_start":747,"line_end":747,"column_start":15,"column_end":26},"name":"reset_event","qualname":"::device::Device::reset_event","value":"pub unsafe fn reset_event(&Self, &B::Event) -> Result<(), OutOfMemory>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Resets an event.\n","sig":null,"attributes":[{"value":"/ Resets an event.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":121055,"byte_end":121075,"line_start":746,"line_end":746,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":121365,"byte_end":121382,"line_start":753,"line_end":753,"column_start":15,"column_end":32},"name":"create_query_pool","qualname":"::device::Device::create_query_pool","value":"pub unsafe fn create_query_pool(&Self, query::Type, query::Id)\n-> Result<B::QueryPool, query::CreationError>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Create a new query pool object","sig":null,"attributes":[{"value":"/ Create a new query pool object","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":121160,"byte_end":121194,"line_start":749,"line_end":749,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":121199,"byte_end":121202,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ Queries are managed using query pool objects. Each query pool is a collection of a specific","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":121207,"byte_end":121302,"line_start":751,"line_end":751,"column_start":5,"column_end":100}},{"value":"/ number of queries of a particular type.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":121307,"byte_end":121350,"line_start":752,"line_end":752,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":121554,"byte_end":121572,"line_start":760,"line_end":760,"column_start":15,"column_end":33},"name":"destroy_query_pool","qualname":"::device::Device::destroy_query_pool","value":"pub unsafe fn destroy_query_pool(&Self, B::QueryPool)","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Destroy a query pool object\n","sig":null,"attributes":[{"value":"/ Destroy a query pool object","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":121508,"byte_end":121539,"line_start":759,"line_end":759,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":121789,"byte_end":121811,"line_start":764,"line_end":764,"column_start":15,"column_end":37},"name":"get_query_pool_results","qualname":"::device::Device::get_query_pool_results","value":"pub unsafe fn get_query_pool_results(&Self, &B::QueryPool, Range<query::Id>,\n                                     &mut [u8], buffer::Offset,\n                                     query::ResultFlags)\n-> Result<bool, OomOrDeviceLost>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Get query pool results into the specified CPU memory.\n Returns `Ok(false)` if the results are not ready yet and neither of `WAIT` or `PARTIAL` flags are set.\n","sig":null,"attributes":[{"value":"/ Get query pool results into the specified CPU memory.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":121606,"byte_end":121663,"line_start":762,"line_end":762,"column_start":5,"column_end":62}},{"value":"/ Returns `Ok(false)` if the results are not ready yet and neither of `WAIT` or `PARTIAL` flags are set.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":121668,"byte_end":121774,"line_start":763,"line_end":763,"column_start":5,"column_end":111}}]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":123170,"byte_end":123186,"line_start":802,"line_end":802,"column_start":15,"column_end":31},"name":"create_swapchain","qualname":"::device::Device::create_swapchain","value":"pub unsafe fn create_swapchain(&Self, &mut B::Surface, SwapchainConfig,\n                               Option<B::Swapchain>)\n-> Result<(B::Swapchain, Vec<B::Image>), window::CreationError>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Create a new swapchain from a surface and a queue family, optionally providing the old\n swapchain to aid in resource reuse and rendering continuity.","sig":null,"attributes":[{"value":"/ Create a new swapchain from a surface and a queue family, optionally providing the old","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":122029,"byte_end":122119,"line_start":773,"line_end":773,"column_start":5,"column_end":95}},{"value":"/ swapchain to aid in resource reuse and rendering continuity.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":122124,"byte_end":122188,"line_start":774,"line_end":774,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":122193,"byte_end":122196,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ *Note*: The number of exposed images in the back buffer might differ","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":122201,"byte_end":122273,"line_start":776,"line_end":776,"column_start":5,"column_end":77}},{"value":"/ from number of internally used buffers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":122278,"byte_end":122321,"line_start":777,"line_end":777,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":122326,"byte_end":122329,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":122334,"byte_end":122346,"line_start":779,"line_end":779,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":122351,"byte_end":122354,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ The queue family _must_ support surface presentation.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":122359,"byte_end":122416,"line_start":781,"line_end":781,"column_start":5,"column_end":62}},{"value":"/ This can be checked by calling [`supports_queue_family`](trait.Surface.html#tymethod.supports_queue_family)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":122421,"byte_end":122532,"line_start":782,"line_end":782,"column_start":5,"column_end":116}},{"value":"/ on this surface.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":122537,"byte_end":122557,"line_start":783,"line_end":783,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":122562,"byte_end":122565,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":122570,"byte_end":122584,"line_start":785,"line_end":785,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":122589,"byte_end":122592,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":122597,"byte_end":122610,"line_start":787,"line_end":787,"column_start":5,"column_end":18}},{"value":"/ # extern crate gfx_backend_empty as empty;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":122615,"byte_end":122661,"line_start":788,"line_end":788,"column_start":5,"column_end":51}},{"value":"/ # extern crate gfx_hal;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":122666,"byte_end":122693,"line_start":789,"line_end":789,"column_start":5,"column_end":32}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":122698,"byte_end":122715,"line_start":790,"line_end":790,"column_start":5,"column_end":22}},{"value":"/ use gfx_hal::{Device, SwapchainConfig};","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":122720,"byte_end":122763,"line_start":791,"line_end":791,"column_start":5,"column_end":48}},{"value":"/ use gfx_hal::format::Format;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":122768,"byte_end":122800,"line_start":792,"line_end":792,"column_start":5,"column_end":37}},{"value":"/ # use gfx_hal::{CommandQueue, Graphics};","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":122805,"byte_end":122849,"line_start":793,"line_end":793,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":122854,"byte_end":122857,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ # let mut surface: empty::Surface = return;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":122862,"byte_end":122909,"line_start":795,"line_end":795,"column_start":5,"column_end":52}},{"value":"/ # let device: empty::Device = return;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":122914,"byte_end":122955,"line_start":796,"line_end":796,"column_start":5,"column_end":46}},{"value":"/ # unsafe {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":122960,"byte_end":122974,"line_start":797,"line_end":797,"column_start":5,"column_end":19}},{"value":"/ let swapchain_config = SwapchainConfig::new(100, 100, Format::Rgba8Srgb, 2);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":122979,"byte_end":123059,"line_start":798,"line_end":798,"column_start":5,"column_end":85}},{"value":"/ device.create_swapchain(&mut surface, swapchain_config, None);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":123064,"byte_end":123130,"line_start":799,"line_end":799,"column_start":5,"column_end":71}},{"value":"/ # }}","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":123135,"byte_end":123143,"line_start":800,"line_end":800,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":123148,"byte_end":123155,"line_start":801,"line_end":801,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":123409,"byte_end":123426,"line_start":810,"line_end":810,"column_start":15,"column_end":32},"name":"destroy_swapchain","qualname":"::device::Device::destroy_swapchain","value":"pub unsafe fn destroy_swapchain(&Self, B::Swapchain)","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":123391,"byte_end":123394,"line_start":809,"line_end":809,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":123616,"byte_end":123625,"line_start":815,"line_end":815,"column_start":8,"column_end":17},"name":"wait_idle","qualname":"::device::Device::wait_idle","value":"pub fn wait_idle(&Self) -> Result<(), HostExecutionError>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Wait for all queues associated with this device to idle.","sig":null,"attributes":[{"value":"/ Wait for all queues associated with this device to idle.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":123465,"byte_end":123525,"line_start":812,"line_end":812,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":123530,"byte_end":123533,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ Host access to all queues needs to be **externally** sycnhronized!","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":123538,"byte_end":123608,"line_start":814,"line_end":814,"column_start":5,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":776},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","parent":null,"children":[{"krate":0,"index":3416},{"krate":0,"index":3441},{"krate":0,"index":3446},{"krate":0,"index":3439},{"krate":0,"index":3437},{"krate":0,"index":3434},{"krate":0,"index":3435},{"krate":0,"index":3431},{"krate":0,"index":3432},{"krate":0,"index":3449},{"krate":0,"index":3466},{"krate":0,"index":3471},{"krate":0,"index":3464},{"krate":0,"index":3462},{"krate":0,"index":3459},{"krate":0,"index":3460},{"krate":0,"index":3456},{"krate":0,"index":3457}],"decl_id":null,"docs":" Return values from function calls.\n","sig":null,"attributes":[{"value":"/ Return values from function calls.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":123671,"byte_end":123709,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3417},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":123990,"byte_end":124005,"line_start":9,"line_end":9,"column_start":5,"column_end":20},"name":"OutOfHostMemory","qualname":"::error::DeviceCreationError::OutOfHostMemory","value":"DeviceCreationError::OutOfHostMemory","parent":{"krate":0,"index":3416},"children":[],"decl_id":null,"docs":" Memory allocation on the host side failed.\n This could be caused by a lack of memory.\n","sig":null,"attributes":[{"value":"/ Memory allocation on the host side failed.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":123833,"byte_end":123879,"line_start":6,"line_end":6,"column_start":5,"column_end":51}},{"value":"/ This could be caused by a lack of memory.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":123884,"byte_end":123929,"line_start":7,"line_end":7,"column_start":5,"column_end":50}},{"value":"fail(display = \"Host memory allocation failed.\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":123934,"byte_end":123985,"line_start":8,"line_end":8,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3419},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":124172,"byte_end":124189,"line_start":13,"line_end":13,"column_start":5,"column_end":22},"name":"OutOfDeviceMemory","qualname":"::error::DeviceCreationError::OutOfDeviceMemory","value":"DeviceCreationError::OutOfDeviceMemory","parent":{"krate":0,"index":3416},"children":[],"decl_id":null,"docs":" Memory allocation on the device side failed.\n This could be caused by a lack of memory.\n","sig":null,"attributes":[{"value":"/ Memory allocation on the device side failed.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":124011,"byte_end":124059,"line_start":10,"line_end":10,"column_start":5,"column_end":53}},{"value":"/ This could be caused by a lack of memory.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":124064,"byte_end":124109,"line_start":11,"line_end":11,"column_start":5,"column_end":50}},{"value":"fail(display = \"Device memory allocation failed.\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":124114,"byte_end":124167,"line_start":12,"line_end":12,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3421},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":124326,"byte_end":124346,"line_start":16,"line_end":16,"column_start":5,"column_end":25},"name":"InitializationFailed","qualname":"::error::DeviceCreationError::InitializationFailed","value":"DeviceCreationError::InitializationFailed","parent":{"krate":0,"index":3416},"children":[],"decl_id":null,"docs":" Device initialization failed due to implementation specific errors.\n","sig":null,"attributes":[{"value":"/ Device initialization failed due to implementation specific errors.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":124195,"byte_end":124266,"line_start":14,"line_end":14,"column_start":5,"column_end":76}},{"value":"fail(display = \"Device initialization failed.\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":124271,"byte_end":124321,"line_start":15,"line_end":15,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3423},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":124526,"byte_end":124542,"line_start":20,"line_end":20,"column_start":5,"column_end":21},"name":"MissingExtension","qualname":"::error::DeviceCreationError::MissingExtension","value":"DeviceCreationError::MissingExtension","parent":{"krate":0,"index":3416},"children":[],"decl_id":null,"docs":" At least one of the user requested extensions if not supported by the\n physical device.\n","sig":null,"attributes":[{"value":"/ At least one of the user requested extensions if not supported by the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":124352,"byte_end":124425,"line_start":17,"line_end":17,"column_start":5,"column_end":78}},{"value":"/ physical device.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":124430,"byte_end":124450,"line_start":18,"line_end":18,"column_start":5,"column_end":25}},{"value":"fail(display = \"One or multiple extensions are not supported.\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":124455,"byte_end":124521,"line_start":19,"line_end":19,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3425},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":124841,"byte_end":124855,"line_start":27,"line_end":27,"column_start":5,"column_end":19},"name":"MissingFeature","qualname":"::error::DeviceCreationError::MissingFeature","value":"DeviceCreationError::MissingFeature","parent":{"krate":0,"index":3416},"children":[],"decl_id":null,"docs":" At least one of the user requested features if not supported by the\n physical device.","sig":null,"attributes":[{"value":"/ At least one of the user requested features if not supported by the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":124548,"byte_end":124619,"line_start":21,"line_end":21,"column_start":5,"column_end":76}},{"value":"/ physical device.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":124624,"byte_end":124644,"line_start":22,"line_end":22,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":124649,"byte_end":124652,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Use [`features`](trait.PhysicalDevice.html#tymethod.features)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":124657,"byte_end":124722,"line_start":24,"line_end":24,"column_start":5,"column_end":70}},{"value":"/ for checking the supported features.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":124727,"byte_end":124767,"line_start":25,"line_end":25,"column_start":5,"column_end":45}},{"value":"fail(display = \"One or multiple features are not supported.\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":124772,"byte_end":124836,"line_start":26,"line_end":26,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3427},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":125156,"byte_end":125170,"line_start":33,"line_end":33,"column_start":5,"column_end":19},"name":"TooManyObjects","qualname":"::error::DeviceCreationError::TooManyObjects","value":"DeviceCreationError::TooManyObjects","parent":{"krate":0,"index":3416},"children":[],"decl_id":null,"docs":" Too many logical devices have been created from this physical device.","sig":null,"attributes":[{"value":"/ Too many logical devices have been created from this physical device.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":124861,"byte_end":124934,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":124939,"byte_end":124942,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ The implementation may only support one logical device for each physical","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":124947,"byte_end":125023,"line_start":30,"line_end":30,"column_start":5,"column_end":81}},{"value":"/ device or lacks resources to allocate a new device.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":125028,"byte_end":125083,"line_start":31,"line_end":31,"column_start":5,"column_end":60}},{"value":"fail(display = \"Too many device objects have been created.\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":125088,"byte_end":125151,"line_start":32,"line_end":32,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3429},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":125434,"byte_end":125444,"line_start":40,"line_end":40,"column_start":5,"column_end":15},"name":"DeviceLost","qualname":"::error::DeviceCreationError::DeviceLost","value":"DeviceCreationError::DeviceLost","parent":{"krate":0,"index":3416},"children":[],"decl_id":null,"docs":" The logical or physical device are lost during the device creation\n process.","sig":null,"attributes":[{"value":"/ The logical or physical device are lost during the device creation","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":125176,"byte_end":125246,"line_start":34,"line_end":34,"column_start":5,"column_end":75}},{"value":"/ process.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":125251,"byte_end":125263,"line_start":35,"line_end":35,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":125268,"byte_end":125271,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This may be caused by hardware failure, physical device removal,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":125276,"byte_end":125344,"line_start":37,"line_end":37,"column_start":5,"column_end":73}},{"value":"/ power outage, etc.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":125349,"byte_end":125371,"line_start":38,"line_end":38,"column_start":5,"column_end":27}},{"value":"fail(display = \"Physical or logical device lost.\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":125376,"byte_end":125429,"line_start":39,"line_end":39,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":3416},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":123807,"byte_end":123826,"line_start":5,"line_end":5,"column_start":10,"column_end":29},"name":"DeviceCreationError","qualname":"::error::DeviceCreationError","value":"pub enum DeviceCreationError {\n\n    /// Memory allocation on the host side failed.\n    /// This could be caused by a lack of memory.\n    #[fail(display = \"Host memory allocation failed.\")]\n    OutOfHostMemory,\n\n    /// Memory allocation on the device side failed.\n    /// This could be caused by a lack of memory.\n    #[fail(display = \"Device memory allocation failed.\")]\n    OutOfDeviceMemory,\n\n    /// Device initialization failed due to implementation specific errors.\n    #[fail(display = \"Device initialization failed.\")]\n    InitializationFailed,\n\n    /// At least one of the user requested extensions if not supported by the\n    /// physical device.\n    #[fail(display = \"One or multiple extensions are not supported.\")]\n    MissingExtension,\n\n    /// At least one of the user requested features if not supported by the\n    /// physical device.\n    ///\n    /// Use [`features`](trait.PhysicalDevice.html#tymethod.features)\n    /// for checking the supported features.\n    #[fail(display = \"One or multiple features are not supported.\")]\n    MissingFeature,\n\n    /// Too many logical devices have been created from this physical device.\n    ///\n    /// The implementation may only support one logical device for each physical\n    /// device or lacks resources to allocate a new device.\n    #[fail(display = \"Too many device objects have been created.\")]\n    TooManyObjects,\n\n    /// The logical or physical device are lost during the device creation\n    /// process.\n    ///\n    /// This may be caused by hardware failure, physical device removal,\n    /// power outage, etc.\n    #[fail(display = \"Physical or logical device lost.\")]\n    DeviceLost,\n}","parent":null,"children":[{"krate":0,"index":3417},{"krate":0,"index":3419},{"krate":0,"index":3421},{"krate":0,"index":3423},{"krate":0,"index":3425},{"krate":0,"index":3427},{"krate":0,"index":3429}],"decl_id":null,"docs":" Device creation errors during `open`.\n","sig":null,"attributes":[{"value":"/ Device creation errors during `open`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":123711,"byte_end":123752,"line_start":3,"line_end":3,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3450},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":125745,"byte_end":125760,"line_start":49,"line_end":49,"column_start":5,"column_end":20},"name":"OutOfHostMemory","qualname":"::error::HostExecutionError::OutOfHostMemory","value":"HostExecutionError::OutOfHostMemory","parent":{"krate":0,"index":3449},"children":[],"decl_id":null,"docs":" Memory allocation on the host side failed.\n This could be caused by a lack of memory.\n","sig":null,"attributes":[{"value":"/ Memory allocation on the host side failed.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":125588,"byte_end":125634,"line_start":46,"line_end":46,"column_start":5,"column_end":51}},{"value":"/ This could be caused by a lack of memory.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":125639,"byte_end":125684,"line_start":47,"line_end":47,"column_start":5,"column_end":50}},{"value":"fail(display = \"Host memory allocation failed.\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":125689,"byte_end":125740,"line_start":48,"line_end":48,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3452},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":125927,"byte_end":125944,"line_start":53,"line_end":53,"column_start":5,"column_end":22},"name":"OutOfDeviceMemory","qualname":"::error::HostExecutionError::OutOfDeviceMemory","value":"HostExecutionError::OutOfDeviceMemory","parent":{"krate":0,"index":3449},"children":[],"decl_id":null,"docs":" Memory allocation on the device side failed.\n This could be caused by a lack of memory.\n","sig":null,"attributes":[{"value":"/ Memory allocation on the device side failed.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":125766,"byte_end":125814,"line_start":50,"line_end":50,"column_start":5,"column_end":53}},{"value":"/ This could be caused by a lack of memory.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":125819,"byte_end":125864,"line_start":51,"line_end":51,"column_start":5,"column_end":50}},{"value":"fail(display = \"Device memory allocation failed.\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":125869,"byte_end":125922,"line_start":52,"line_end":52,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3454},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":126208,"byte_end":126218,"line_start":60,"line_end":60,"column_start":5,"column_end":15},"name":"DeviceLost","qualname":"::error::HostExecutionError::DeviceLost","value":"HostExecutionError::DeviceLost","parent":{"krate":0,"index":3449},"children":[],"decl_id":null,"docs":" The logical or physical device are lost during the device creation\n process.","sig":null,"attributes":[{"value":"/ The logical or physical device are lost during the device creation","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":125950,"byte_end":126020,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ process.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":126025,"byte_end":126037,"line_start":55,"line_end":55,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":126042,"byte_end":126045,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This may be caused by hardware failure, physical device removal,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":126050,"byte_end":126118,"line_start":57,"line_end":57,"column_start":5,"column_end":73}},{"value":"/ power outage, etc.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":126123,"byte_end":126145,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"fail(display = \"Physical or logical device lost.\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":126150,"byte_end":126203,"line_start":59,"line_end":59,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":3449},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":125563,"byte_end":125581,"line_start":45,"line_end":45,"column_start":10,"column_end":28},"name":"HostExecutionError","qualname":"::error::HostExecutionError","value":"pub enum HostExecutionError {\n\n    /// Memory allocation on the host side failed.\n    /// This could be caused by a lack of memory.\n    #[fail(display = \"Host memory allocation failed.\")]\n    OutOfHostMemory,\n\n    /// Memory allocation on the device side failed.\n    /// This could be caused by a lack of memory.\n    #[fail(display = \"Device memory allocation failed.\")]\n    OutOfDeviceMemory,\n\n    /// The logical or physical device are lost during the device creation\n    /// process.\n    ///\n    /// This may be caused by hardware failure, physical device removal,\n    /// power outage, etc.\n    #[fail(display = \"Physical or logical device lost.\")]\n    DeviceLost,\n}","parent":null,"children":[{"krate":0,"index":3450},{"krate":0,"index":3452},{"krate":0,"index":3454}],"decl_id":null,"docs":" Errors during execution of operations on the host side.\n","sig":null,"attributes":[{"value":"/ Errors during execution of operations on the host side.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\error.rs","byte_start":125449,"byte_end":125508,"line_start":43,"line_end":43,"column_start":1,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":777},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"format","qualname":"::format","value":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","parent":null,"children":[{"krate":0,"index":3474},{"krate":0,"index":3538},{"krate":0,"index":3497},{"krate":0,"index":3496},{"krate":0,"index":3492},{"krate":0,"index":3493},{"krate":0,"index":3489},{"krate":0,"index":3490},{"krate":0,"index":3487},{"krate":0,"index":3481},{"krate":0,"index":3479},{"krate":0,"index":3476},{"krate":0,"index":3544},{"krate":0,"index":3551},{"krate":0,"index":3553},{"krate":0,"index":3555},{"krate":0,"index":3557},{"krate":0,"index":3559},{"krate":0,"index":3568},{"krate":0,"index":3571},{"krate":0,"index":3573},{"krate":0,"index":3576},{"krate":0,"index":3578},{"krate":0,"index":3581},{"krate":0,"index":3583},{"krate":0,"index":3586},{"krate":0,"index":3588},{"krate":0,"index":3591},{"krate":0,"index":3594},{"krate":0,"index":3617},{"krate":0,"index":3655},{"krate":0,"index":3654},{"krate":0,"index":3652},{"krate":0,"index":3649},{"krate":0,"index":3650},{"krate":0,"index":3646},{"krate":0,"index":3644},{"krate":0,"index":3640},{"krate":0,"index":3641},{"krate":0,"index":3622},{"krate":0,"index":778},{"krate":0,"index":3657},{"krate":0,"index":3695},{"krate":0,"index":3694},{"krate":0,"index":3692},{"krate":0,"index":3689},{"krate":0,"index":3690},{"krate":0,"index":3686},{"krate":0,"index":3684},{"krate":0,"index":3680},{"krate":0,"index":3681},{"krate":0,"index":3662},{"krate":0,"index":780},{"krate":0,"index":3697},{"krate":0,"index":3779},{"krate":0,"index":3778},{"krate":0,"index":3776},{"krate":0,"index":3773},{"krate":0,"index":3774},{"krate":0,"index":3770},{"krate":0,"index":3768},{"krate":0,"index":3765},{"krate":0,"index":3766},{"krate":0,"index":3763},{"krate":0,"index":3757},{"krate":0,"index":3710},{"krate":0,"index":3781},{"krate":0,"index":3843},{"krate":0,"index":3842},{"krate":0,"index":3840},{"krate":0,"index":3837},{"krate":0,"index":3838},{"krate":0,"index":3834},{"krate":0,"index":3832},{"krate":0,"index":3828},{"krate":0,"index":3829},{"krate":0,"index":3810},{"krate":0,"index":3804},{"krate":0,"index":3787},{"krate":0,"index":781},{"krate":0,"index":783},{"krate":0,"index":3845},{"krate":0,"index":3915},{"krate":0,"index":3913},{"krate":0,"index":3912},{"krate":0,"index":3910},{"krate":0,"index":3906},{"krate":0,"index":3907},{"krate":0,"index":3903},{"krate":0,"index":3904},{"krate":0,"index":3900},{"krate":0,"index":3894},{"krate":0,"index":3849},{"krate":0,"index":3917},{"krate":0,"index":3987},{"krate":0,"index":3981},{"krate":0,"index":3940},{"krate":0,"index":3939},{"krate":0,"index":3935},{"krate":0,"index":3936},{"krate":0,"index":3932},{"krate":0,"index":3933},{"krate":0,"index":3930},{"krate":0,"index":3924},{"krate":0,"index":3922},{"krate":0,"index":3919},{"krate":0,"index":3989},{"krate":0,"index":4002},{"krate":0,"index":4004},{"krate":0,"index":4006},{"krate":0,"index":4008},{"krate":0,"index":4010},{"krate":0,"index":4025},{"krate":0,"index":4028},{"krate":0,"index":4030},{"krate":0,"index":4033},{"krate":0,"index":4035},{"krate":0,"index":4038},{"krate":0,"index":4040},{"krate":0,"index":4043},{"krate":0,"index":4045},{"krate":0,"index":4048},{"krate":0,"index":4051},{"krate":0,"index":4092},{"krate":0,"index":4162},{"krate":0,"index":4156},{"krate":0,"index":4115},{"krate":0,"index":4114},{"krate":0,"index":4110},{"krate":0,"index":4111},{"krate":0,"index":4107},{"krate":0,"index":4108},{"krate":0,"index":4105},{"krate":0,"index":4099},{"krate":0,"index":4097},{"krate":0,"index":4094},{"krate":0,"index":4164},{"krate":0,"index":4172},{"krate":0,"index":4174},{"krate":0,"index":4176},{"krate":0,"index":4178},{"krate":0,"index":4180},{"krate":0,"index":4190},{"krate":0,"index":4193},{"krate":0,"index":4195},{"krate":0,"index":4198},{"krate":0,"index":4200},{"krate":0,"index":4203},{"krate":0,"index":4205},{"krate":0,"index":4208},{"krate":0,"index":4210},{"krate":0,"index":4213},{"krate":0,"index":4216},{"krate":0,"index":4242},{"krate":0,"index":4336},{"krate":0,"index":4335},{"krate":0,"index":4333},{"krate":0,"index":4330},{"krate":0,"index":4331},{"krate":0,"index":4327},{"krate":0,"index":4325},{"krate":0,"index":4322},{"krate":0,"index":4323},{"krate":0,"index":4320},{"krate":0,"index":4314},{"krate":0,"index":4261},{"krate":0,"index":4341},{"krate":0,"index":4659},{"krate":0,"index":4658},{"krate":0,"index":4656},{"krate":0,"index":4653},{"krate":0,"index":4654},{"krate":0,"index":4650},{"krate":0,"index":4648},{"krate":0,"index":4645},{"krate":0,"index":4646},{"krate":0,"index":4643},{"krate":0,"index":4637},{"krate":0,"index":4472},{"krate":0,"index":4338},{"krate":0,"index":4661},{"krate":0,"index":4713},{"krate":0,"index":4712},{"krate":0,"index":4710},{"krate":0,"index":4707},{"krate":0,"index":4708},{"krate":0,"index":4704},{"krate":0,"index":4702},{"krate":0,"index":4698},{"krate":0,"index":4699},{"krate":0,"index":4688},{"krate":0,"index":4682},{"krate":0,"index":4665},{"krate":0,"index":786},{"krate":0,"index":5086},{"krate":0,"index":5885},{"krate":0,"index":5884},{"krate":0,"index":5882},{"krate":0,"index":5879},{"krate":0,"index":5880},{"krate":0,"index":5876},{"krate":0,"index":5874},{"krate":0,"index":5871},{"krate":0,"index":5872},{"krate":0,"index":5869},{"krate":0,"index":5863},{"krate":0,"index":5458},{"krate":0,"index":4715},{"krate":0,"index":4716},{"krate":0,"index":5887},{"krate":0,"index":5926},{"krate":0,"index":5925},{"krate":0,"index":5923},{"krate":0,"index":5920},{"krate":0,"index":5921},{"krate":0,"index":5917},{"krate":0,"index":5915},{"krate":0,"index":5912},{"krate":0,"index":5913},{"krate":0,"index":5910},{"krate":0,"index":5904},{"krate":0,"index":5889},{"krate":0,"index":4718},{"krate":0,"index":5928},{"krate":0,"index":5967},{"krate":0,"index":5966},{"krate":0,"index":5964},{"krate":0,"index":5961},{"krate":0,"index":5962},{"krate":0,"index":5958},{"krate":0,"index":5956},{"krate":0,"index":5953},{"krate":0,"index":5954},{"krate":0,"index":5951},{"krate":0,"index":5945},{"krate":0,"index":5930},{"krate":0,"index":4720},{"krate":0,"index":5969},{"krate":0,"index":6008},{"krate":0,"index":6007},{"krate":0,"index":6005},{"krate":0,"index":6002},{"krate":0,"index":6003},{"krate":0,"index":5999},{"krate":0,"index":5997},{"krate":0,"index":5994},{"krate":0,"index":5995},{"krate":0,"index":5992},{"krate":0,"index":5986},{"krate":0,"index":5971},{"krate":0,"index":4722},{"krate":0,"index":6010},{"krate":0,"index":6049},{"krate":0,"index":6048},{"krate":0,"index":6046},{"krate":0,"index":6043},{"krate":0,"index":6044},{"krate":0,"index":6040},{"krate":0,"index":6038},{"krate":0,"index":6035},{"krate":0,"index":6036},{"krate":0,"index":6033},{"krate":0,"index":6027},{"krate":0,"index":6012},{"krate":0,"index":4724},{"krate":0,"index":6051},{"krate":0,"index":6090},{"krate":0,"index":6089},{"krate":0,"index":6087},{"krate":0,"index":6084},{"krate":0,"index":6085},{"krate":0,"index":6081},{"krate":0,"index":6079},{"krate":0,"index":6076},{"krate":0,"index":6077},{"krate":0,"index":6074},{"krate":0,"index":6068},{"krate":0,"index":6053},{"krate":0,"index":4726},{"krate":0,"index":6092},{"krate":0,"index":6131},{"krate":0,"index":6130},{"krate":0,"index":6128},{"krate":0,"index":6125},{"krate":0,"index":6126},{"krate":0,"index":6122},{"krate":0,"index":6120},{"krate":0,"index":6117},{"krate":0,"index":6118},{"krate":0,"index":6115},{"krate":0,"index":6109},{"krate":0,"index":6094},{"krate":0,"index":4728},{"krate":0,"index":6133},{"krate":0,"index":6172},{"krate":0,"index":6171},{"krate":0,"index":6169},{"krate":0,"index":6166},{"krate":0,"index":6167},{"krate":0,"index":6163},{"krate":0,"index":6161},{"krate":0,"index":6158},{"krate":0,"index":6159},{"krate":0,"index":6156},{"krate":0,"index":6150},{"krate":0,"index":6135},{"krate":0,"index":4730},{"krate":0,"index":6174},{"krate":0,"index":6213},{"krate":0,"index":6212},{"krate":0,"index":6210},{"krate":0,"index":6207},{"krate":0,"index":6208},{"krate":0,"index":6204},{"krate":0,"index":6202},{"krate":0,"index":6199},{"krate":0,"index":6200},{"krate":0,"index":6197},{"krate":0,"index":6191},{"krate":0,"index":6176},{"krate":0,"index":4732},{"krate":0,"index":6215},{"krate":0,"index":6254},{"krate":0,"index":6253},{"krate":0,"index":6251},{"krate":0,"index":6248},{"krate":0,"index":6249},{"krate":0,"index":6245},{"krate":0,"index":6243},{"krate":0,"index":6240},{"krate":0,"index":6241},{"krate":0,"index":6238},{"krate":0,"index":6232},{"krate":0,"index":6217},{"krate":0,"index":4734},{"krate":0,"index":6256},{"krate":0,"index":6295},{"krate":0,"index":6294},{"krate":0,"index":6292},{"krate":0,"index":6289},{"krate":0,"index":6290},{"krate":0,"index":6286},{"krate":0,"index":6284},{"krate":0,"index":6281},{"krate":0,"index":6282},{"krate":0,"index":6279},{"krate":0,"index":6273},{"krate":0,"index":6258},{"krate":0,"index":4736},{"krate":0,"index":6297},{"krate":0,"index":6336},{"krate":0,"index":6335},{"krate":0,"index":6333},{"krate":0,"index":6330},{"krate":0,"index":6331},{"krate":0,"index":6327},{"krate":0,"index":6325},{"krate":0,"index":6322},{"krate":0,"index":6323},{"krate":0,"index":6320},{"krate":0,"index":6314},{"krate":0,"index":6299},{"krate":0,"index":4738},{"krate":0,"index":6338},{"krate":0,"index":6377},{"krate":0,"index":6376},{"krate":0,"index":6374},{"krate":0,"index":6371},{"krate":0,"index":6372},{"krate":0,"index":6368},{"krate":0,"index":6366},{"krate":0,"index":6363},{"krate":0,"index":6364},{"krate":0,"index":6361},{"krate":0,"index":6355},{"krate":0,"index":6340},{"krate":0,"index":4740},{"krate":0,"index":6379},{"krate":0,"index":6418},{"krate":0,"index":6417},{"krate":0,"index":6415},{"krate":0,"index":6412},{"krate":0,"index":6413},{"krate":0,"index":6409},{"krate":0,"index":6407},{"krate":0,"index":6404},{"krate":0,"index":6405},{"krate":0,"index":6402},{"krate":0,"index":6396},{"krate":0,"index":6381},{"krate":0,"index":4742},{"krate":0,"index":6420},{"krate":0,"index":6459},{"krate":0,"index":6458},{"krate":0,"index":6456},{"krate":0,"index":6453},{"krate":0,"index":6454},{"krate":0,"index":6450},{"krate":0,"index":6448},{"krate":0,"index":6445},{"krate":0,"index":6446},{"krate":0,"index":6443},{"krate":0,"index":6437},{"krate":0,"index":6422},{"krate":0,"index":4744},{"krate":0,"index":6461},{"krate":0,"index":6500},{"krate":0,"index":6499},{"krate":0,"index":6497},{"krate":0,"index":6494},{"krate":0,"index":6495},{"krate":0,"index":6491},{"krate":0,"index":6489},{"krate":0,"index":6486},{"krate":0,"index":6487},{"krate":0,"index":6484},{"krate":0,"index":6478},{"krate":0,"index":6463},{"krate":0,"index":4746},{"krate":0,"index":6502},{"krate":0,"index":6541},{"krate":0,"index":6540},{"krate":0,"index":6538},{"krate":0,"index":6535},{"krate":0,"index":6536},{"krate":0,"index":6532},{"krate":0,"index":6530},{"krate":0,"index":6527},{"krate":0,"index":6528},{"krate":0,"index":6525},{"krate":0,"index":6519},{"krate":0,"index":6504},{"krate":0,"index":4748},{"krate":0,"index":6543},{"krate":0,"index":6582},{"krate":0,"index":6581},{"krate":0,"index":6579},{"krate":0,"index":6576},{"krate":0,"index":6577},{"krate":0,"index":6573},{"krate":0,"index":6571},{"krate":0,"index":6568},{"krate":0,"index":6569},{"krate":0,"index":6566},{"krate":0,"index":6560},{"krate":0,"index":6545},{"krate":0,"index":4750},{"krate":0,"index":6584},{"krate":0,"index":6623},{"krate":0,"index":6622},{"krate":0,"index":6620},{"krate":0,"index":6617},{"krate":0,"index":6618},{"krate":0,"index":6614},{"krate":0,"index":6612},{"krate":0,"index":6609},{"krate":0,"index":6610},{"krate":0,"index":6607},{"krate":0,"index":6601},{"krate":0,"index":6586},{"krate":0,"index":4752},{"krate":0,"index":6625},{"krate":0,"index":6664},{"krate":0,"index":6663},{"krate":0,"index":6661},{"krate":0,"index":6658},{"krate":0,"index":6659},{"krate":0,"index":6655},{"krate":0,"index":6653},{"krate":0,"index":6650},{"krate":0,"index":6651},{"krate":0,"index":6648},{"krate":0,"index":6642},{"krate":0,"index":6627},{"krate":0,"index":4754},{"krate":0,"index":6666},{"krate":0,"index":6705},{"krate":0,"index":6704},{"krate":0,"index":6702},{"krate":0,"index":6699},{"krate":0,"index":6700},{"krate":0,"index":6696},{"krate":0,"index":6694},{"krate":0,"index":6691},{"krate":0,"index":6692},{"krate":0,"index":6689},{"krate":0,"index":6683},{"krate":0,"index":6668},{"krate":0,"index":4756},{"krate":0,"index":6707},{"krate":0,"index":6746},{"krate":0,"index":6745},{"krate":0,"index":6743},{"krate":0,"index":6740},{"krate":0,"index":6741},{"krate":0,"index":6737},{"krate":0,"index":6735},{"krate":0,"index":6732},{"krate":0,"index":6733},{"krate":0,"index":6730},{"krate":0,"index":6724},{"krate":0,"index":6709},{"krate":0,"index":4758},{"krate":0,"index":6748},{"krate":0,"index":6787},{"krate":0,"index":6786},{"krate":0,"index":6784},{"krate":0,"index":6781},{"krate":0,"index":6782},{"krate":0,"index":6778},{"krate":0,"index":6776},{"krate":0,"index":6773},{"krate":0,"index":6774},{"krate":0,"index":6771},{"krate":0,"index":6765},{"krate":0,"index":6750},{"krate":0,"index":4760},{"krate":0,"index":6789},{"krate":0,"index":6828},{"krate":0,"index":6827},{"krate":0,"index":6825},{"krate":0,"index":6822},{"krate":0,"index":6823},{"krate":0,"index":6819},{"krate":0,"index":6817},{"krate":0,"index":6814},{"krate":0,"index":6815},{"krate":0,"index":6812},{"krate":0,"index":6806},{"krate":0,"index":6791},{"krate":0,"index":4762},{"krate":0,"index":6830},{"krate":0,"index":6869},{"krate":0,"index":6868},{"krate":0,"index":6866},{"krate":0,"index":6863},{"krate":0,"index":6864},{"krate":0,"index":6860},{"krate":0,"index":6858},{"krate":0,"index":6855},{"krate":0,"index":6856},{"krate":0,"index":6853},{"krate":0,"index":6847},{"krate":0,"index":6832},{"krate":0,"index":4764},{"krate":0,"index":6871},{"krate":0,"index":6910},{"krate":0,"index":6909},{"krate":0,"index":6907},{"krate":0,"index":6904},{"krate":0,"index":6905},{"krate":0,"index":6901},{"krate":0,"index":6899},{"krate":0,"index":6896},{"krate":0,"index":6897},{"krate":0,"index":6894},{"krate":0,"index":6888},{"krate":0,"index":6873},{"krate":0,"index":4766},{"krate":0,"index":6912},{"krate":0,"index":6951},{"krate":0,"index":6950},{"krate":0,"index":6948},{"krate":0,"index":6945},{"krate":0,"index":6946},{"krate":0,"index":6942},{"krate":0,"index":6940},{"krate":0,"index":6937},{"krate":0,"index":6938},{"krate":0,"index":6935},{"krate":0,"index":6929},{"krate":0,"index":6914},{"krate":0,"index":4768},{"krate":0,"index":6953},{"krate":0,"index":6992},{"krate":0,"index":6991},{"krate":0,"index":6989},{"krate":0,"index":6986},{"krate":0,"index":6987},{"krate":0,"index":6983},{"krate":0,"index":6981},{"krate":0,"index":6978},{"krate":0,"index":6979},{"krate":0,"index":6976},{"krate":0,"index":6970},{"krate":0,"index":6955},{"krate":0,"index":4770},{"krate":0,"index":6994},{"krate":0,"index":7033},{"krate":0,"index":7032},{"krate":0,"index":7030},{"krate":0,"index":7027},{"krate":0,"index":7028},{"krate":0,"index":7024},{"krate":0,"index":7022},{"krate":0,"index":7019},{"krate":0,"index":7020},{"krate":0,"index":7017},{"krate":0,"index":7011},{"krate":0,"index":6996},{"krate":0,"index":4772},{"krate":0,"index":7035},{"krate":0,"index":7074},{"krate":0,"index":7073},{"krate":0,"index":7071},{"krate":0,"index":7068},{"krate":0,"index":7069},{"krate":0,"index":7065},{"krate":0,"index":7063},{"krate":0,"index":7060},{"krate":0,"index":7061},{"krate":0,"index":7058},{"krate":0,"index":7052},{"krate":0,"index":7037},{"krate":0,"index":4774},{"krate":0,"index":7076},{"krate":0,"index":7115},{"krate":0,"index":7114},{"krate":0,"index":7112},{"krate":0,"index":7109},{"krate":0,"index":7110},{"krate":0,"index":7106},{"krate":0,"index":7104},{"krate":0,"index":7101},{"krate":0,"index":7102},{"krate":0,"index":7099},{"krate":0,"index":7093},{"krate":0,"index":7078},{"krate":0,"index":4776},{"krate":0,"index":7117},{"krate":0,"index":7156},{"krate":0,"index":7155},{"krate":0,"index":7153},{"krate":0,"index":7150},{"krate":0,"index":7151},{"krate":0,"index":7147},{"krate":0,"index":7145},{"krate":0,"index":7142},{"krate":0,"index":7143},{"krate":0,"index":7140},{"krate":0,"index":7134},{"krate":0,"index":7119},{"krate":0,"index":4778},{"krate":0,"index":7158},{"krate":0,"index":7197},{"krate":0,"index":7196},{"krate":0,"index":7194},{"krate":0,"index":7191},{"krate":0,"index":7192},{"krate":0,"index":7188},{"krate":0,"index":7186},{"krate":0,"index":7183},{"krate":0,"index":7184},{"krate":0,"index":7181},{"krate":0,"index":7175},{"krate":0,"index":7160},{"krate":0,"index":4780},{"krate":0,"index":7199},{"krate":0,"index":7238},{"krate":0,"index":7237},{"krate":0,"index":7235},{"krate":0,"index":7232},{"krate":0,"index":7233},{"krate":0,"index":7229},{"krate":0,"index":7227},{"krate":0,"index":7224},{"krate":0,"index":7225},{"krate":0,"index":7222},{"krate":0,"index":7216},{"krate":0,"index":7201},{"krate":0,"index":4782},{"krate":0,"index":7240},{"krate":0,"index":7279},{"krate":0,"index":7278},{"krate":0,"index":7276},{"krate":0,"index":7273},{"krate":0,"index":7274},{"krate":0,"index":7270},{"krate":0,"index":7268},{"krate":0,"index":7265},{"krate":0,"index":7266},{"krate":0,"index":7263},{"krate":0,"index":7257},{"krate":0,"index":7242},{"krate":0,"index":4784},{"krate":0,"index":7281},{"krate":0,"index":7320},{"krate":0,"index":7319},{"krate":0,"index":7317},{"krate":0,"index":7314},{"krate":0,"index":7315},{"krate":0,"index":7311},{"krate":0,"index":7309},{"krate":0,"index":7306},{"krate":0,"index":7307},{"krate":0,"index":7304},{"krate":0,"index":7298},{"krate":0,"index":7283},{"krate":0,"index":4786},{"krate":0,"index":7322},{"krate":0,"index":7361},{"krate":0,"index":7360},{"krate":0,"index":7358},{"krate":0,"index":7355},{"krate":0,"index":7356},{"krate":0,"index":7352},{"krate":0,"index":7350},{"krate":0,"index":7347},{"krate":0,"index":7348},{"krate":0,"index":7345},{"krate":0,"index":7339},{"krate":0,"index":7324},{"krate":0,"index":4788},{"krate":0,"index":7363},{"krate":0,"index":7402},{"krate":0,"index":7401},{"krate":0,"index":7399},{"krate":0,"index":7396},{"krate":0,"index":7397},{"krate":0,"index":7393},{"krate":0,"index":7391},{"krate":0,"index":7388},{"krate":0,"index":7389},{"krate":0,"index":7386},{"krate":0,"index":7380},{"krate":0,"index":7365},{"krate":0,"index":4790},{"krate":0,"index":7404},{"krate":0,"index":7443},{"krate":0,"index":7442},{"krate":0,"index":7440},{"krate":0,"index":7437},{"krate":0,"index":7438},{"krate":0,"index":7434},{"krate":0,"index":7432},{"krate":0,"index":7429},{"krate":0,"index":7430},{"krate":0,"index":7427},{"krate":0,"index":7421},{"krate":0,"index":7406},{"krate":0,"index":4792},{"krate":0,"index":7445},{"krate":0,"index":7484},{"krate":0,"index":7483},{"krate":0,"index":7481},{"krate":0,"index":7478},{"krate":0,"index":7479},{"krate":0,"index":7475},{"krate":0,"index":7473},{"krate":0,"index":7470},{"krate":0,"index":7471},{"krate":0,"index":7468},{"krate":0,"index":7462},{"krate":0,"index":7447},{"krate":0,"index":4794},{"krate":0,"index":7486},{"krate":0,"index":7525},{"krate":0,"index":7524},{"krate":0,"index":7522},{"krate":0,"index":7519},{"krate":0,"index":7520},{"krate":0,"index":7516},{"krate":0,"index":7514},{"krate":0,"index":7511},{"krate":0,"index":7512},{"krate":0,"index":7509},{"krate":0,"index":7503},{"krate":0,"index":7488},{"krate":0,"index":4796},{"krate":0,"index":7527},{"krate":0,"index":7566},{"krate":0,"index":7565},{"krate":0,"index":7563},{"krate":0,"index":7560},{"krate":0,"index":7561},{"krate":0,"index":7557},{"krate":0,"index":7555},{"krate":0,"index":7552},{"krate":0,"index":7553},{"krate":0,"index":7550},{"krate":0,"index":7544},{"krate":0,"index":7529},{"krate":0,"index":4798},{"krate":0,"index":7568},{"krate":0,"index":7607},{"krate":0,"index":7606},{"krate":0,"index":7604},{"krate":0,"index":7601},{"krate":0,"index":7602},{"krate":0,"index":7598},{"krate":0,"index":7596},{"krate":0,"index":7593},{"krate":0,"index":7594},{"krate":0,"index":7591},{"krate":0,"index":7585},{"krate":0,"index":7570},{"krate":0,"index":4800},{"krate":0,"index":7609},{"krate":0,"index":7648},{"krate":0,"index":7647},{"krate":0,"index":7645},{"krate":0,"index":7642},{"krate":0,"index":7643},{"krate":0,"index":7639},{"krate":0,"index":7637},{"krate":0,"index":7634},{"krate":0,"index":7635},{"krate":0,"index":7632},{"krate":0,"index":7626},{"krate":0,"index":7611},{"krate":0,"index":4802},{"krate":0,"index":7650},{"krate":0,"index":7689},{"krate":0,"index":7688},{"krate":0,"index":7686},{"krate":0,"index":7683},{"krate":0,"index":7684},{"krate":0,"index":7680},{"krate":0,"index":7678},{"krate":0,"index":7675},{"krate":0,"index":7676},{"krate":0,"index":7673},{"krate":0,"index":7667},{"krate":0,"index":7652},{"krate":0,"index":4804},{"krate":0,"index":7691},{"krate":0,"index":7730},{"krate":0,"index":7729},{"krate":0,"index":7727},{"krate":0,"index":7724},{"krate":0,"index":7725},{"krate":0,"index":7721},{"krate":0,"index":7719},{"krate":0,"index":7716},{"krate":0,"index":7717},{"krate":0,"index":7714},{"krate":0,"index":7708},{"krate":0,"index":7693},{"krate":0,"index":4806},{"krate":0,"index":7732},{"krate":0,"index":7771},{"krate":0,"index":7770},{"krate":0,"index":7768},{"krate":0,"index":7765},{"krate":0,"index":7766},{"krate":0,"index":7762},{"krate":0,"index":7760},{"krate":0,"index":7757},{"krate":0,"index":7758},{"krate":0,"index":7755},{"krate":0,"index":7749},{"krate":0,"index":7734},{"krate":0,"index":4808},{"krate":0,"index":7773},{"krate":0,"index":7812},{"krate":0,"index":7811},{"krate":0,"index":7809},{"krate":0,"index":7806},{"krate":0,"index":7807},{"krate":0,"index":7803},{"krate":0,"index":7801},{"krate":0,"index":7798},{"krate":0,"index":7799},{"krate":0,"index":7796},{"krate":0,"index":7790},{"krate":0,"index":7775},{"krate":0,"index":4810},{"krate":0,"index":7814},{"krate":0,"index":7853},{"krate":0,"index":7852},{"krate":0,"index":7850},{"krate":0,"index":7847},{"krate":0,"index":7848},{"krate":0,"index":7844},{"krate":0,"index":7842},{"krate":0,"index":7839},{"krate":0,"index":7840},{"krate":0,"index":7837},{"krate":0,"index":7831},{"krate":0,"index":7816},{"krate":0,"index":4812},{"krate":0,"index":7855},{"krate":0,"index":7894},{"krate":0,"index":7893},{"krate":0,"index":7891},{"krate":0,"index":7888},{"krate":0,"index":7889},{"krate":0,"index":7885},{"krate":0,"index":7883},{"krate":0,"index":7880},{"krate":0,"index":7881},{"krate":0,"index":7878},{"krate":0,"index":7872},{"krate":0,"index":7857},{"krate":0,"index":4814},{"krate":0,"index":7896},{"krate":0,"index":7935},{"krate":0,"index":7934},{"krate":0,"index":7932},{"krate":0,"index":7929},{"krate":0,"index":7930},{"krate":0,"index":7926},{"krate":0,"index":7924},{"krate":0,"index":7921},{"krate":0,"index":7922},{"krate":0,"index":7919},{"krate":0,"index":7913},{"krate":0,"index":7898},{"krate":0,"index":4816},{"krate":0,"index":7937},{"krate":0,"index":7976},{"krate":0,"index":7975},{"krate":0,"index":7973},{"krate":0,"index":7970},{"krate":0,"index":7971},{"krate":0,"index":7967},{"krate":0,"index":7965},{"krate":0,"index":7962},{"krate":0,"index":7963},{"krate":0,"index":7960},{"krate":0,"index":7954},{"krate":0,"index":7939},{"krate":0,"index":4818},{"krate":0,"index":7978},{"krate":0,"index":8017},{"krate":0,"index":8016},{"krate":0,"index":8014},{"krate":0,"index":8011},{"krate":0,"index":8012},{"krate":0,"index":8008},{"krate":0,"index":8006},{"krate":0,"index":8003},{"krate":0,"index":8004},{"krate":0,"index":8001},{"krate":0,"index":7995},{"krate":0,"index":7980},{"krate":0,"index":4820},{"krate":0,"index":8019},{"krate":0,"index":8058},{"krate":0,"index":8057},{"krate":0,"index":8055},{"krate":0,"index":8052},{"krate":0,"index":8053},{"krate":0,"index":8049},{"krate":0,"index":8047},{"krate":0,"index":8044},{"krate":0,"index":8045},{"krate":0,"index":8042},{"krate":0,"index":8036},{"krate":0,"index":8021},{"krate":0,"index":4822},{"krate":0,"index":8060},{"krate":0,"index":8099},{"krate":0,"index":8098},{"krate":0,"index":8096},{"krate":0,"index":8093},{"krate":0,"index":8094},{"krate":0,"index":8090},{"krate":0,"index":8088},{"krate":0,"index":8085},{"krate":0,"index":8086},{"krate":0,"index":8083},{"krate":0,"index":8077},{"krate":0,"index":8062},{"krate":0,"index":4824},{"krate":0,"index":8101},{"krate":0,"index":8140},{"krate":0,"index":8139},{"krate":0,"index":8137},{"krate":0,"index":8134},{"krate":0,"index":8135},{"krate":0,"index":8131},{"krate":0,"index":8129},{"krate":0,"index":8126},{"krate":0,"index":8127},{"krate":0,"index":8124},{"krate":0,"index":8118},{"krate":0,"index":8103},{"krate":0,"index":4826},{"krate":0,"index":8142},{"krate":0,"index":8181},{"krate":0,"index":8180},{"krate":0,"index":8178},{"krate":0,"index":8175},{"krate":0,"index":8176},{"krate":0,"index":8172},{"krate":0,"index":8170},{"krate":0,"index":8167},{"krate":0,"index":8168},{"krate":0,"index":8165},{"krate":0,"index":8159},{"krate":0,"index":8144},{"krate":0,"index":4828},{"krate":0,"index":8183},{"krate":0,"index":8222},{"krate":0,"index":8221},{"krate":0,"index":8219},{"krate":0,"index":8216},{"krate":0,"index":8217},{"krate":0,"index":8213},{"krate":0,"index":8211},{"krate":0,"index":8208},{"krate":0,"index":8209},{"krate":0,"index":8206},{"krate":0,"index":8200},{"krate":0,"index":8185},{"krate":0,"index":4830},{"krate":0,"index":8224},{"krate":0,"index":8263},{"krate":0,"index":8262},{"krate":0,"index":8260},{"krate":0,"index":8257},{"krate":0,"index":8258},{"krate":0,"index":8254},{"krate":0,"index":8252},{"krate":0,"index":8249},{"krate":0,"index":8250},{"krate":0,"index":8247},{"krate":0,"index":8241},{"krate":0,"index":8226},{"krate":0,"index":4832},{"krate":0,"index":8265},{"krate":0,"index":8304},{"krate":0,"index":8303},{"krate":0,"index":8301},{"krate":0,"index":8298},{"krate":0,"index":8299},{"krate":0,"index":8295},{"krate":0,"index":8293},{"krate":0,"index":8290},{"krate":0,"index":8291},{"krate":0,"index":8288},{"krate":0,"index":8282},{"krate":0,"index":8267},{"krate":0,"index":4834},{"krate":0,"index":8306},{"krate":0,"index":8345},{"krate":0,"index":8344},{"krate":0,"index":8342},{"krate":0,"index":8339},{"krate":0,"index":8340},{"krate":0,"index":8336},{"krate":0,"index":8334},{"krate":0,"index":8331},{"krate":0,"index":8332},{"krate":0,"index":8329},{"krate":0,"index":8323},{"krate":0,"index":8308},{"krate":0,"index":4836},{"krate":0,"index":8347},{"krate":0,"index":8386},{"krate":0,"index":8385},{"krate":0,"index":8383},{"krate":0,"index":8380},{"krate":0,"index":8381},{"krate":0,"index":8377},{"krate":0,"index":8375},{"krate":0,"index":8372},{"krate":0,"index":8373},{"krate":0,"index":8370},{"krate":0,"index":8364},{"krate":0,"index":8349},{"krate":0,"index":4838},{"krate":0,"index":8388},{"krate":0,"index":8427},{"krate":0,"index":8426},{"krate":0,"index":8424},{"krate":0,"index":8421},{"krate":0,"index":8422},{"krate":0,"index":8418},{"krate":0,"index":8416},{"krate":0,"index":8413},{"krate":0,"index":8414},{"krate":0,"index":8411},{"krate":0,"index":8405},{"krate":0,"index":8390},{"krate":0,"index":4840},{"krate":0,"index":8429},{"krate":0,"index":8468},{"krate":0,"index":8467},{"krate":0,"index":8465},{"krate":0,"index":8462},{"krate":0,"index":8463},{"krate":0,"index":8459},{"krate":0,"index":8457},{"krate":0,"index":8454},{"krate":0,"index":8455},{"krate":0,"index":8452},{"krate":0,"index":8446},{"krate":0,"index":8431},{"krate":0,"index":4842},{"krate":0,"index":8470},{"krate":0,"index":8509},{"krate":0,"index":8508},{"krate":0,"index":8506},{"krate":0,"index":8503},{"krate":0,"index":8504},{"krate":0,"index":8500},{"krate":0,"index":8498},{"krate":0,"index":8495},{"krate":0,"index":8496},{"krate":0,"index":8493},{"krate":0,"index":8487},{"krate":0,"index":8472},{"krate":0,"index":4844},{"krate":0,"index":8511},{"krate":0,"index":8550},{"krate":0,"index":8549},{"krate":0,"index":8547},{"krate":0,"index":8544},{"krate":0,"index":8545},{"krate":0,"index":8541},{"krate":0,"index":8539},{"krate":0,"index":8536},{"krate":0,"index":8537},{"krate":0,"index":8534},{"krate":0,"index":8528},{"krate":0,"index":8513},{"krate":0,"index":4846},{"krate":0,"index":8552},{"krate":0,"index":8591},{"krate":0,"index":8590},{"krate":0,"index":8588},{"krate":0,"index":8585},{"krate":0,"index":8586},{"krate":0,"index":8582},{"krate":0,"index":8580},{"krate":0,"index":8577},{"krate":0,"index":8578},{"krate":0,"index":8575},{"krate":0,"index":8569},{"krate":0,"index":8554},{"krate":0,"index":4848},{"krate":0,"index":8593},{"krate":0,"index":8632},{"krate":0,"index":8631},{"krate":0,"index":8629},{"krate":0,"index":8626},{"krate":0,"index":8627},{"krate":0,"index":8623},{"krate":0,"index":8621},{"krate":0,"index":8618},{"krate":0,"index":8619},{"krate":0,"index":8616},{"krate":0,"index":8610},{"krate":0,"index":8595},{"krate":0,"index":4850},{"krate":0,"index":8634},{"krate":0,"index":8673},{"krate":0,"index":8672},{"krate":0,"index":8670},{"krate":0,"index":8667},{"krate":0,"index":8668},{"krate":0,"index":8664},{"krate":0,"index":8662},{"krate":0,"index":8659},{"krate":0,"index":8660},{"krate":0,"index":8657},{"krate":0,"index":8651},{"krate":0,"index":8636},{"krate":0,"index":4852},{"krate":0,"index":8675},{"krate":0,"index":8714},{"krate":0,"index":8713},{"krate":0,"index":8711},{"krate":0,"index":8708},{"krate":0,"index":8709},{"krate":0,"index":8705},{"krate":0,"index":8703},{"krate":0,"index":8700},{"krate":0,"index":8701},{"krate":0,"index":8698},{"krate":0,"index":8692},{"krate":0,"index":8677},{"krate":0,"index":4854},{"krate":0,"index":8716},{"krate":0,"index":8755},{"krate":0,"index":8754},{"krate":0,"index":8752},{"krate":0,"index":8749},{"krate":0,"index":8750},{"krate":0,"index":8746},{"krate":0,"index":8744},{"krate":0,"index":8741},{"krate":0,"index":8742},{"krate":0,"index":8739},{"krate":0,"index":8733},{"krate":0,"index":8718},{"krate":0,"index":4856},{"krate":0,"index":8757},{"krate":0,"index":8796},{"krate":0,"index":8795},{"krate":0,"index":8793},{"krate":0,"index":8790},{"krate":0,"index":8791},{"krate":0,"index":8787},{"krate":0,"index":8785},{"krate":0,"index":8782},{"krate":0,"index":8783},{"krate":0,"index":8780},{"krate":0,"index":8774},{"krate":0,"index":8759},{"krate":0,"index":4858},{"krate":0,"index":8798},{"krate":0,"index":8837},{"krate":0,"index":8836},{"krate":0,"index":8834},{"krate":0,"index":8831},{"krate":0,"index":8832},{"krate":0,"index":8828},{"krate":0,"index":8826},{"krate":0,"index":8823},{"krate":0,"index":8824},{"krate":0,"index":8821},{"krate":0,"index":8815},{"krate":0,"index":8800},{"krate":0,"index":4860},{"krate":0,"index":8839},{"krate":0,"index":8878},{"krate":0,"index":8877},{"krate":0,"index":8875},{"krate":0,"index":8872},{"krate":0,"index":8873},{"krate":0,"index":8869},{"krate":0,"index":8867},{"krate":0,"index":8864},{"krate":0,"index":8865},{"krate":0,"index":8862},{"krate":0,"index":8856},{"krate":0,"index":8841},{"krate":0,"index":4862},{"krate":0,"index":8880},{"krate":0,"index":8919},{"krate":0,"index":8918},{"krate":0,"index":8916},{"krate":0,"index":8913},{"krate":0,"index":8914},{"krate":0,"index":8910},{"krate":0,"index":8908},{"krate":0,"index":8905},{"krate":0,"index":8906},{"krate":0,"index":8903},{"krate":0,"index":8897},{"krate":0,"index":8882},{"krate":0,"index":4864},{"krate":0,"index":8921},{"krate":0,"index":8960},{"krate":0,"index":8959},{"krate":0,"index":8957},{"krate":0,"index":8954},{"krate":0,"index":8955},{"krate":0,"index":8951},{"krate":0,"index":8949},{"krate":0,"index":8946},{"krate":0,"index":8947},{"krate":0,"index":8944},{"krate":0,"index":8938},{"krate":0,"index":8923},{"krate":0,"index":4866},{"krate":0,"index":8962},{"krate":0,"index":9001},{"krate":0,"index":9000},{"krate":0,"index":8998},{"krate":0,"index":8995},{"krate":0,"index":8996},{"krate":0,"index":8992},{"krate":0,"index":8990},{"krate":0,"index":8987},{"krate":0,"index":8988},{"krate":0,"index":8985},{"krate":0,"index":8979},{"krate":0,"index":8964},{"krate":0,"index":4868},{"krate":0,"index":9003},{"krate":0,"index":9042},{"krate":0,"index":9041},{"krate":0,"index":9039},{"krate":0,"index":9036},{"krate":0,"index":9037},{"krate":0,"index":9033},{"krate":0,"index":9031},{"krate":0,"index":9028},{"krate":0,"index":9029},{"krate":0,"index":9026},{"krate":0,"index":9020},{"krate":0,"index":9005},{"krate":0,"index":4870},{"krate":0,"index":9044},{"krate":0,"index":9083},{"krate":0,"index":9082},{"krate":0,"index":9080},{"krate":0,"index":9077},{"krate":0,"index":9078},{"krate":0,"index":9074},{"krate":0,"index":9072},{"krate":0,"index":9069},{"krate":0,"index":9070},{"krate":0,"index":9067},{"krate":0,"index":9061},{"krate":0,"index":9046},{"krate":0,"index":4872},{"krate":0,"index":9085},{"krate":0,"index":9124},{"krate":0,"index":9123},{"krate":0,"index":9121},{"krate":0,"index":9118},{"krate":0,"index":9119},{"krate":0,"index":9115},{"krate":0,"index":9113},{"krate":0,"index":9110},{"krate":0,"index":9111},{"krate":0,"index":9108},{"krate":0,"index":9102},{"krate":0,"index":9087},{"krate":0,"index":4874},{"krate":0,"index":9126},{"krate":0,"index":9165},{"krate":0,"index":9164},{"krate":0,"index":9162},{"krate":0,"index":9159},{"krate":0,"index":9160},{"krate":0,"index":9156},{"krate":0,"index":9154},{"krate":0,"index":9151},{"krate":0,"index":9152},{"krate":0,"index":9149},{"krate":0,"index":9143},{"krate":0,"index":9128},{"krate":0,"index":4876},{"krate":0,"index":9167},{"krate":0,"index":9206},{"krate":0,"index":9205},{"krate":0,"index":9203},{"krate":0,"index":9200},{"krate":0,"index":9201},{"krate":0,"index":9197},{"krate":0,"index":9195},{"krate":0,"index":9192},{"krate":0,"index":9193},{"krate":0,"index":9190},{"krate":0,"index":9184},{"krate":0,"index":9169},{"krate":0,"index":4878},{"krate":0,"index":9208},{"krate":0,"index":9247},{"krate":0,"index":9246},{"krate":0,"index":9244},{"krate":0,"index":9241},{"krate":0,"index":9242},{"krate":0,"index":9238},{"krate":0,"index":9236},{"krate":0,"index":9233},{"krate":0,"index":9234},{"krate":0,"index":9231},{"krate":0,"index":9225},{"krate":0,"index":9210},{"krate":0,"index":4880},{"krate":0,"index":9249},{"krate":0,"index":9288},{"krate":0,"index":9287},{"krate":0,"index":9285},{"krate":0,"index":9282},{"krate":0,"index":9283},{"krate":0,"index":9279},{"krate":0,"index":9277},{"krate":0,"index":9274},{"krate":0,"index":9275},{"krate":0,"index":9272},{"krate":0,"index":9266},{"krate":0,"index":9251},{"krate":0,"index":4882},{"krate":0,"index":9290},{"krate":0,"index":9329},{"krate":0,"index":9328},{"krate":0,"index":9326},{"krate":0,"index":9323},{"krate":0,"index":9324},{"krate":0,"index":9320},{"krate":0,"index":9318},{"krate":0,"index":9315},{"krate":0,"index":9316},{"krate":0,"index":9313},{"krate":0,"index":9307},{"krate":0,"index":9292},{"krate":0,"index":4884},{"krate":0,"index":9331},{"krate":0,"index":9370},{"krate":0,"index":9369},{"krate":0,"index":9367},{"krate":0,"index":9364},{"krate":0,"index":9365},{"krate":0,"index":9361},{"krate":0,"index":9359},{"krate":0,"index":9356},{"krate":0,"index":9357},{"krate":0,"index":9354},{"krate":0,"index":9348},{"krate":0,"index":9333},{"krate":0,"index":4886},{"krate":0,"index":9372},{"krate":0,"index":9411},{"krate":0,"index":9410},{"krate":0,"index":9408},{"krate":0,"index":9405},{"krate":0,"index":9406},{"krate":0,"index":9402},{"krate":0,"index":9400},{"krate":0,"index":9397},{"krate":0,"index":9398},{"krate":0,"index":9395},{"krate":0,"index":9389},{"krate":0,"index":9374},{"krate":0,"index":4888},{"krate":0,"index":9413},{"krate":0,"index":9452},{"krate":0,"index":9451},{"krate":0,"index":9449},{"krate":0,"index":9446},{"krate":0,"index":9447},{"krate":0,"index":9443},{"krate":0,"index":9441},{"krate":0,"index":9438},{"krate":0,"index":9439},{"krate":0,"index":9436},{"krate":0,"index":9430},{"krate":0,"index":9415},{"krate":0,"index":4890},{"krate":0,"index":9454},{"krate":0,"index":9493},{"krate":0,"index":9492},{"krate":0,"index":9490},{"krate":0,"index":9487},{"krate":0,"index":9488},{"krate":0,"index":9484},{"krate":0,"index":9482},{"krate":0,"index":9479},{"krate":0,"index":9480},{"krate":0,"index":9477},{"krate":0,"index":9471},{"krate":0,"index":9456},{"krate":0,"index":4892},{"krate":0,"index":9495},{"krate":0,"index":9534},{"krate":0,"index":9533},{"krate":0,"index":9531},{"krate":0,"index":9528},{"krate":0,"index":9529},{"krate":0,"index":9525},{"krate":0,"index":9523},{"krate":0,"index":9520},{"krate":0,"index":9521},{"krate":0,"index":9518},{"krate":0,"index":9512},{"krate":0,"index":9497},{"krate":0,"index":4894},{"krate":0,"index":9536},{"krate":0,"index":9575},{"krate":0,"index":9574},{"krate":0,"index":9572},{"krate":0,"index":9569},{"krate":0,"index":9570},{"krate":0,"index":9566},{"krate":0,"index":9564},{"krate":0,"index":9561},{"krate":0,"index":9562},{"krate":0,"index":9559},{"krate":0,"index":9553},{"krate":0,"index":9538},{"krate":0,"index":4896},{"krate":0,"index":9577},{"krate":0,"index":9616},{"krate":0,"index":9615},{"krate":0,"index":9613},{"krate":0,"index":9610},{"krate":0,"index":9611},{"krate":0,"index":9607},{"krate":0,"index":9605},{"krate":0,"index":9602},{"krate":0,"index":9603},{"krate":0,"index":9600},{"krate":0,"index":9594},{"krate":0,"index":9579},{"krate":0,"index":4898},{"krate":0,"index":9618},{"krate":0,"index":9657},{"krate":0,"index":9656},{"krate":0,"index":9654},{"krate":0,"index":9651},{"krate":0,"index":9652},{"krate":0,"index":9648},{"krate":0,"index":9646},{"krate":0,"index":9643},{"krate":0,"index":9644},{"krate":0,"index":9641},{"krate":0,"index":9635},{"krate":0,"index":9620},{"krate":0,"index":4900},{"krate":0,"index":9659},{"krate":0,"index":9698},{"krate":0,"index":9697},{"krate":0,"index":9695},{"krate":0,"index":9692},{"krate":0,"index":9693},{"krate":0,"index":9689},{"krate":0,"index":9687},{"krate":0,"index":9684},{"krate":0,"index":9685},{"krate":0,"index":9682},{"krate":0,"index":9676},{"krate":0,"index":9661},{"krate":0,"index":4902},{"krate":0,"index":9700},{"krate":0,"index":9739},{"krate":0,"index":9738},{"krate":0,"index":9736},{"krate":0,"index":9733},{"krate":0,"index":9734},{"krate":0,"index":9730},{"krate":0,"index":9728},{"krate":0,"index":9725},{"krate":0,"index":9726},{"krate":0,"index":9723},{"krate":0,"index":9717},{"krate":0,"index":9702},{"krate":0,"index":4904},{"krate":0,"index":9741},{"krate":0,"index":9780},{"krate":0,"index":9779},{"krate":0,"index":9777},{"krate":0,"index":9774},{"krate":0,"index":9775},{"krate":0,"index":9771},{"krate":0,"index":9769},{"krate":0,"index":9766},{"krate":0,"index":9767},{"krate":0,"index":9764},{"krate":0,"index":9758},{"krate":0,"index":9743},{"krate":0,"index":4906},{"krate":0,"index":9782},{"krate":0,"index":9821},{"krate":0,"index":9820},{"krate":0,"index":9818},{"krate":0,"index":9815},{"krate":0,"index":9816},{"krate":0,"index":9812},{"krate":0,"index":9810},{"krate":0,"index":9807},{"krate":0,"index":9808},{"krate":0,"index":9805},{"krate":0,"index":9799},{"krate":0,"index":9784},{"krate":0,"index":4908},{"krate":0,"index":9823},{"krate":0,"index":9862},{"krate":0,"index":9861},{"krate":0,"index":9859},{"krate":0,"index":9856},{"krate":0,"index":9857},{"krate":0,"index":9853},{"krate":0,"index":9851},{"krate":0,"index":9848},{"krate":0,"index":9849},{"krate":0,"index":9846},{"krate":0,"index":9840},{"krate":0,"index":9825},{"krate":0,"index":4910},{"krate":0,"index":9864},{"krate":0,"index":9903},{"krate":0,"index":9902},{"krate":0,"index":9900},{"krate":0,"index":9897},{"krate":0,"index":9898},{"krate":0,"index":9894},{"krate":0,"index":9892},{"krate":0,"index":9889},{"krate":0,"index":9890},{"krate":0,"index":9887},{"krate":0,"index":9881},{"krate":0,"index":9866},{"krate":0,"index":4912},{"krate":0,"index":9905},{"krate":0,"index":9944},{"krate":0,"index":9943},{"krate":0,"index":9941},{"krate":0,"index":9938},{"krate":0,"index":9939},{"krate":0,"index":9935},{"krate":0,"index":9933},{"krate":0,"index":9930},{"krate":0,"index":9931},{"krate":0,"index":9928},{"krate":0,"index":9922},{"krate":0,"index":9907},{"krate":0,"index":4914},{"krate":0,"index":9946},{"krate":0,"index":9985},{"krate":0,"index":9984},{"krate":0,"index":9982},{"krate":0,"index":9979},{"krate":0,"index":9980},{"krate":0,"index":9976},{"krate":0,"index":9974},{"krate":0,"index":9971},{"krate":0,"index":9972},{"krate":0,"index":9969},{"krate":0,"index":9963},{"krate":0,"index":9948},{"krate":0,"index":4916},{"krate":0,"index":9987},{"krate":0,"index":10026},{"krate":0,"index":10025},{"krate":0,"index":10023},{"krate":0,"index":10020},{"krate":0,"index":10021},{"krate":0,"index":10017},{"krate":0,"index":10015},{"krate":0,"index":10012},{"krate":0,"index":10013},{"krate":0,"index":10010},{"krate":0,"index":10004},{"krate":0,"index":9989},{"krate":0,"index":4918},{"krate":0,"index":10028},{"krate":0,"index":10067},{"krate":0,"index":10066},{"krate":0,"index":10064},{"krate":0,"index":10061},{"krate":0,"index":10062},{"krate":0,"index":10058},{"krate":0,"index":10056},{"krate":0,"index":10053},{"krate":0,"index":10054},{"krate":0,"index":10051},{"krate":0,"index":10045},{"krate":0,"index":10030},{"krate":0,"index":4920},{"krate":0,"index":10069},{"krate":0,"index":10108},{"krate":0,"index":10107},{"krate":0,"index":10105},{"krate":0,"index":10102},{"krate":0,"index":10103},{"krate":0,"index":10099},{"krate":0,"index":10097},{"krate":0,"index":10094},{"krate":0,"index":10095},{"krate":0,"index":10092},{"krate":0,"index":10086},{"krate":0,"index":10071},{"krate":0,"index":4922},{"krate":0,"index":10110},{"krate":0,"index":10149},{"krate":0,"index":10148},{"krate":0,"index":10146},{"krate":0,"index":10143},{"krate":0,"index":10144},{"krate":0,"index":10140},{"krate":0,"index":10138},{"krate":0,"index":10135},{"krate":0,"index":10136},{"krate":0,"index":10133},{"krate":0,"index":10127},{"krate":0,"index":10112},{"krate":0,"index":4924},{"krate":0,"index":10151},{"krate":0,"index":10190},{"krate":0,"index":10189},{"krate":0,"index":10187},{"krate":0,"index":10184},{"krate":0,"index":10185},{"krate":0,"index":10181},{"krate":0,"index":10179},{"krate":0,"index":10176},{"krate":0,"index":10177},{"krate":0,"index":10174},{"krate":0,"index":10168},{"krate":0,"index":10153},{"krate":0,"index":4926},{"krate":0,"index":10192},{"krate":0,"index":10231},{"krate":0,"index":10230},{"krate":0,"index":10228},{"krate":0,"index":10225},{"krate":0,"index":10226},{"krate":0,"index":10222},{"krate":0,"index":10220},{"krate":0,"index":10217},{"krate":0,"index":10218},{"krate":0,"index":10215},{"krate":0,"index":10209},{"krate":0,"index":10194},{"krate":0,"index":4928},{"krate":0,"index":10233},{"krate":0,"index":10272},{"krate":0,"index":10271},{"krate":0,"index":10269},{"krate":0,"index":10266},{"krate":0,"index":10267},{"krate":0,"index":10263},{"krate":0,"index":10261},{"krate":0,"index":10258},{"krate":0,"index":10259},{"krate":0,"index":10256},{"krate":0,"index":10250},{"krate":0,"index":10235},{"krate":0,"index":4930},{"krate":0,"index":10274},{"krate":0,"index":10313},{"krate":0,"index":10312},{"krate":0,"index":10310},{"krate":0,"index":10307},{"krate":0,"index":10308},{"krate":0,"index":10304},{"krate":0,"index":10302},{"krate":0,"index":10299},{"krate":0,"index":10300},{"krate":0,"index":10297},{"krate":0,"index":10291},{"krate":0,"index":10276},{"krate":0,"index":4932},{"krate":0,"index":10315},{"krate":0,"index":10354},{"krate":0,"index":10353},{"krate":0,"index":10351},{"krate":0,"index":10348},{"krate":0,"index":10349},{"krate":0,"index":10345},{"krate":0,"index":10343},{"krate":0,"index":10340},{"krate":0,"index":10341},{"krate":0,"index":10338},{"krate":0,"index":10332},{"krate":0,"index":10317},{"krate":0,"index":4934},{"krate":0,"index":10356},{"krate":0,"index":10395},{"krate":0,"index":10394},{"krate":0,"index":10392},{"krate":0,"index":10389},{"krate":0,"index":10390},{"krate":0,"index":10386},{"krate":0,"index":10384},{"krate":0,"index":10381},{"krate":0,"index":10382},{"krate":0,"index":10379},{"krate":0,"index":10373},{"krate":0,"index":10358},{"krate":0,"index":4936},{"krate":0,"index":10397},{"krate":0,"index":10436},{"krate":0,"index":10435},{"krate":0,"index":10433},{"krate":0,"index":10430},{"krate":0,"index":10431},{"krate":0,"index":10427},{"krate":0,"index":10425},{"krate":0,"index":10422},{"krate":0,"index":10423},{"krate":0,"index":10420},{"krate":0,"index":10414},{"krate":0,"index":10399},{"krate":0,"index":4938},{"krate":0,"index":10438},{"krate":0,"index":10477},{"krate":0,"index":10476},{"krate":0,"index":10474},{"krate":0,"index":10471},{"krate":0,"index":10472},{"krate":0,"index":10468},{"krate":0,"index":10466},{"krate":0,"index":10463},{"krate":0,"index":10464},{"krate":0,"index":10461},{"krate":0,"index":10455},{"krate":0,"index":10440},{"krate":0,"index":4940},{"krate":0,"index":10479},{"krate":0,"index":10518},{"krate":0,"index":10517},{"krate":0,"index":10515},{"krate":0,"index":10512},{"krate":0,"index":10513},{"krate":0,"index":10509},{"krate":0,"index":10507},{"krate":0,"index":10504},{"krate":0,"index":10505},{"krate":0,"index":10502},{"krate":0,"index":10496},{"krate":0,"index":10481},{"krate":0,"index":4942},{"krate":0,"index":10520},{"krate":0,"index":10559},{"krate":0,"index":10558},{"krate":0,"index":10556},{"krate":0,"index":10553},{"krate":0,"index":10554},{"krate":0,"index":10550},{"krate":0,"index":10548},{"krate":0,"index":10545},{"krate":0,"index":10546},{"krate":0,"index":10543},{"krate":0,"index":10537},{"krate":0,"index":10522},{"krate":0,"index":4944},{"krate":0,"index":10561},{"krate":0,"index":10600},{"krate":0,"index":10599},{"krate":0,"index":10597},{"krate":0,"index":10594},{"krate":0,"index":10595},{"krate":0,"index":10591},{"krate":0,"index":10589},{"krate":0,"index":10586},{"krate":0,"index":10587},{"krate":0,"index":10584},{"krate":0,"index":10578},{"krate":0,"index":10563},{"krate":0,"index":4946},{"krate":0,"index":10602},{"krate":0,"index":10641},{"krate":0,"index":10640},{"krate":0,"index":10638},{"krate":0,"index":10635},{"krate":0,"index":10636},{"krate":0,"index":10632},{"krate":0,"index":10630},{"krate":0,"index":10627},{"krate":0,"index":10628},{"krate":0,"index":10625},{"krate":0,"index":10619},{"krate":0,"index":10604},{"krate":0,"index":4948},{"krate":0,"index":10643},{"krate":0,"index":10682},{"krate":0,"index":10681},{"krate":0,"index":10679},{"krate":0,"index":10676},{"krate":0,"index":10677},{"krate":0,"index":10673},{"krate":0,"index":10671},{"krate":0,"index":10668},{"krate":0,"index":10669},{"krate":0,"index":10666},{"krate":0,"index":10660},{"krate":0,"index":10645},{"krate":0,"index":4950},{"krate":0,"index":10684},{"krate":0,"index":10723},{"krate":0,"index":10722},{"krate":0,"index":10720},{"krate":0,"index":10717},{"krate":0,"index":10718},{"krate":0,"index":10714},{"krate":0,"index":10712},{"krate":0,"index":10709},{"krate":0,"index":10710},{"krate":0,"index":10707},{"krate":0,"index":10701},{"krate":0,"index":10686},{"krate":0,"index":4952},{"krate":0,"index":10725},{"krate":0,"index":10764},{"krate":0,"index":10763},{"krate":0,"index":10761},{"krate":0,"index":10758},{"krate":0,"index":10759},{"krate":0,"index":10755},{"krate":0,"index":10753},{"krate":0,"index":10750},{"krate":0,"index":10751},{"krate":0,"index":10748},{"krate":0,"index":10742},{"krate":0,"index":10727},{"krate":0,"index":4954},{"krate":0,"index":10766},{"krate":0,"index":10805},{"krate":0,"index":10804},{"krate":0,"index":10802},{"krate":0,"index":10799},{"krate":0,"index":10800},{"krate":0,"index":10796},{"krate":0,"index":10794},{"krate":0,"index":10791},{"krate":0,"index":10792},{"krate":0,"index":10789},{"krate":0,"index":10783},{"krate":0,"index":10768},{"krate":0,"index":4956},{"krate":0,"index":10807},{"krate":0,"index":10846},{"krate":0,"index":10845},{"krate":0,"index":10843},{"krate":0,"index":10840},{"krate":0,"index":10841},{"krate":0,"index":10837},{"krate":0,"index":10835},{"krate":0,"index":10832},{"krate":0,"index":10833},{"krate":0,"index":10830},{"krate":0,"index":10824},{"krate":0,"index":10809},{"krate":0,"index":4958},{"krate":0,"index":10848},{"krate":0,"index":10887},{"krate":0,"index":10886},{"krate":0,"index":10884},{"krate":0,"index":10881},{"krate":0,"index":10882},{"krate":0,"index":10878},{"krate":0,"index":10876},{"krate":0,"index":10873},{"krate":0,"index":10874},{"krate":0,"index":10871},{"krate":0,"index":10865},{"krate":0,"index":10850},{"krate":0,"index":4960},{"krate":0,"index":10889},{"krate":0,"index":10928},{"krate":0,"index":10927},{"krate":0,"index":10925},{"krate":0,"index":10922},{"krate":0,"index":10923},{"krate":0,"index":10919},{"krate":0,"index":10917},{"krate":0,"index":10914},{"krate":0,"index":10915},{"krate":0,"index":10912},{"krate":0,"index":10906},{"krate":0,"index":10891},{"krate":0,"index":4962},{"krate":0,"index":10930},{"krate":0,"index":10969},{"krate":0,"index":10968},{"krate":0,"index":10966},{"krate":0,"index":10963},{"krate":0,"index":10964},{"krate":0,"index":10960},{"krate":0,"index":10958},{"krate":0,"index":10955},{"krate":0,"index":10956},{"krate":0,"index":10953},{"krate":0,"index":10947},{"krate":0,"index":10932},{"krate":0,"index":4964},{"krate":0,"index":10971},{"krate":0,"index":11010},{"krate":0,"index":11009},{"krate":0,"index":11007},{"krate":0,"index":11004},{"krate":0,"index":11005},{"krate":0,"index":11001},{"krate":0,"index":10999},{"krate":0,"index":10996},{"krate":0,"index":10997},{"krate":0,"index":10994},{"krate":0,"index":10988},{"krate":0,"index":10973},{"krate":0,"index":4966},{"krate":0,"index":11012},{"krate":0,"index":11051},{"krate":0,"index":11050},{"krate":0,"index":11048},{"krate":0,"index":11045},{"krate":0,"index":11046},{"krate":0,"index":11042},{"krate":0,"index":11040},{"krate":0,"index":11037},{"krate":0,"index":11038},{"krate":0,"index":11035},{"krate":0,"index":11029},{"krate":0,"index":11014},{"krate":0,"index":4968},{"krate":0,"index":11053},{"krate":0,"index":11092},{"krate":0,"index":11091},{"krate":0,"index":11089},{"krate":0,"index":11086},{"krate":0,"index":11087},{"krate":0,"index":11083},{"krate":0,"index":11081},{"krate":0,"index":11078},{"krate":0,"index":11079},{"krate":0,"index":11076},{"krate":0,"index":11070},{"krate":0,"index":11055},{"krate":0,"index":4970},{"krate":0,"index":11094},{"krate":0,"index":11133},{"krate":0,"index":11132},{"krate":0,"index":11130},{"krate":0,"index":11127},{"krate":0,"index":11128},{"krate":0,"index":11124},{"krate":0,"index":11122},{"krate":0,"index":11119},{"krate":0,"index":11120},{"krate":0,"index":11117},{"krate":0,"index":11111},{"krate":0,"index":11096},{"krate":0,"index":4972},{"krate":0,"index":11135},{"krate":0,"index":11174},{"krate":0,"index":11173},{"krate":0,"index":11171},{"krate":0,"index":11168},{"krate":0,"index":11169},{"krate":0,"index":11165},{"krate":0,"index":11163},{"krate":0,"index":11160},{"krate":0,"index":11161},{"krate":0,"index":11158},{"krate":0,"index":11152},{"krate":0,"index":11137},{"krate":0,"index":4974},{"krate":0,"index":11176},{"krate":0,"index":11215},{"krate":0,"index":11214},{"krate":0,"index":11212},{"krate":0,"index":11209},{"krate":0,"index":11210},{"krate":0,"index":11206},{"krate":0,"index":11204},{"krate":0,"index":11201},{"krate":0,"index":11202},{"krate":0,"index":11199},{"krate":0,"index":11193},{"krate":0,"index":11178},{"krate":0,"index":4976},{"krate":0,"index":11217},{"krate":0,"index":11256},{"krate":0,"index":11255},{"krate":0,"index":11253},{"krate":0,"index":11250},{"krate":0,"index":11251},{"krate":0,"index":11247},{"krate":0,"index":11245},{"krate":0,"index":11242},{"krate":0,"index":11243},{"krate":0,"index":11240},{"krate":0,"index":11234},{"krate":0,"index":11219},{"krate":0,"index":4978},{"krate":0,"index":11258},{"krate":0,"index":11297},{"krate":0,"index":11296},{"krate":0,"index":11294},{"krate":0,"index":11291},{"krate":0,"index":11292},{"krate":0,"index":11288},{"krate":0,"index":11286},{"krate":0,"index":11283},{"krate":0,"index":11284},{"krate":0,"index":11281},{"krate":0,"index":11275},{"krate":0,"index":11260},{"krate":0,"index":4980},{"krate":0,"index":11299},{"krate":0,"index":11338},{"krate":0,"index":11337},{"krate":0,"index":11335},{"krate":0,"index":11332},{"krate":0,"index":11333},{"krate":0,"index":11329},{"krate":0,"index":11327},{"krate":0,"index":11324},{"krate":0,"index":11325},{"krate":0,"index":11322},{"krate":0,"index":11316},{"krate":0,"index":11301},{"krate":0,"index":4982},{"krate":0,"index":11340},{"krate":0,"index":11379},{"krate":0,"index":11378},{"krate":0,"index":11376},{"krate":0,"index":11373},{"krate":0,"index":11374},{"krate":0,"index":11370},{"krate":0,"index":11368},{"krate":0,"index":11365},{"krate":0,"index":11366},{"krate":0,"index":11363},{"krate":0,"index":11357},{"krate":0,"index":11342},{"krate":0,"index":4984},{"krate":0,"index":11381},{"krate":0,"index":11420},{"krate":0,"index":11419},{"krate":0,"index":11417},{"krate":0,"index":11414},{"krate":0,"index":11415},{"krate":0,"index":11411},{"krate":0,"index":11409},{"krate":0,"index":11406},{"krate":0,"index":11407},{"krate":0,"index":11404},{"krate":0,"index":11398},{"krate":0,"index":11383},{"krate":0,"index":4986},{"krate":0,"index":11422},{"krate":0,"index":11461},{"krate":0,"index":11460},{"krate":0,"index":11458},{"krate":0,"index":11455},{"krate":0,"index":11456},{"krate":0,"index":11452},{"krate":0,"index":11450},{"krate":0,"index":11447},{"krate":0,"index":11448},{"krate":0,"index":11445},{"krate":0,"index":11439},{"krate":0,"index":11424},{"krate":0,"index":4988},{"krate":0,"index":11463},{"krate":0,"index":11502},{"krate":0,"index":11501},{"krate":0,"index":11499},{"krate":0,"index":11496},{"krate":0,"index":11497},{"krate":0,"index":11493},{"krate":0,"index":11491},{"krate":0,"index":11488},{"krate":0,"index":11489},{"krate":0,"index":11486},{"krate":0,"index":11480},{"krate":0,"index":11465},{"krate":0,"index":4990},{"krate":0,"index":11504},{"krate":0,"index":11543},{"krate":0,"index":11542},{"krate":0,"index":11540},{"krate":0,"index":11537},{"krate":0,"index":11538},{"krate":0,"index":11534},{"krate":0,"index":11532},{"krate":0,"index":11529},{"krate":0,"index":11530},{"krate":0,"index":11527},{"krate":0,"index":11521},{"krate":0,"index":11506},{"krate":0,"index":4992},{"krate":0,"index":11545},{"krate":0,"index":11584},{"krate":0,"index":11583},{"krate":0,"index":11581},{"krate":0,"index":11578},{"krate":0,"index":11579},{"krate":0,"index":11575},{"krate":0,"index":11573},{"krate":0,"index":11570},{"krate":0,"index":11571},{"krate":0,"index":11568},{"krate":0,"index":11562},{"krate":0,"index":11547},{"krate":0,"index":4994},{"krate":0,"index":11586},{"krate":0,"index":11625},{"krate":0,"index":11624},{"krate":0,"index":11622},{"krate":0,"index":11619},{"krate":0,"index":11620},{"krate":0,"index":11616},{"krate":0,"index":11614},{"krate":0,"index":11611},{"krate":0,"index":11612},{"krate":0,"index":11609},{"krate":0,"index":11603},{"krate":0,"index":11588},{"krate":0,"index":4996},{"krate":0,"index":11627},{"krate":0,"index":11666},{"krate":0,"index":11665},{"krate":0,"index":11663},{"krate":0,"index":11660},{"krate":0,"index":11661},{"krate":0,"index":11657},{"krate":0,"index":11655},{"krate":0,"index":11652},{"krate":0,"index":11653},{"krate":0,"index":11650},{"krate":0,"index":11644},{"krate":0,"index":11629},{"krate":0,"index":4998},{"krate":0,"index":11668},{"krate":0,"index":11707},{"krate":0,"index":11706},{"krate":0,"index":11704},{"krate":0,"index":11701},{"krate":0,"index":11702},{"krate":0,"index":11698},{"krate":0,"index":11696},{"krate":0,"index":11693},{"krate":0,"index":11694},{"krate":0,"index":11691},{"krate":0,"index":11685},{"krate":0,"index":11670},{"krate":0,"index":5000},{"krate":0,"index":11709},{"krate":0,"index":11748},{"krate":0,"index":11747},{"krate":0,"index":11745},{"krate":0,"index":11742},{"krate":0,"index":11743},{"krate":0,"index":11739},{"krate":0,"index":11737},{"krate":0,"index":11734},{"krate":0,"index":11735},{"krate":0,"index":11732},{"krate":0,"index":11726},{"krate":0,"index":11711},{"krate":0,"index":5002},{"krate":0,"index":11750},{"krate":0,"index":11789},{"krate":0,"index":11788},{"krate":0,"index":11786},{"krate":0,"index":11783},{"krate":0,"index":11784},{"krate":0,"index":11780},{"krate":0,"index":11778},{"krate":0,"index":11775},{"krate":0,"index":11776},{"krate":0,"index":11773},{"krate":0,"index":11767},{"krate":0,"index":11752},{"krate":0,"index":5004},{"krate":0,"index":11791},{"krate":0,"index":11830},{"krate":0,"index":11829},{"krate":0,"index":11827},{"krate":0,"index":11824},{"krate":0,"index":11825},{"krate":0,"index":11821},{"krate":0,"index":11819},{"krate":0,"index":11816},{"krate":0,"index":11817},{"krate":0,"index":11814},{"krate":0,"index":11808},{"krate":0,"index":11793},{"krate":0,"index":5006},{"krate":0,"index":11832},{"krate":0,"index":11871},{"krate":0,"index":11870},{"krate":0,"index":11868},{"krate":0,"index":11865},{"krate":0,"index":11866},{"krate":0,"index":11862},{"krate":0,"index":11860},{"krate":0,"index":11857},{"krate":0,"index":11858},{"krate":0,"index":11855},{"krate":0,"index":11849},{"krate":0,"index":11834},{"krate":0,"index":5008},{"krate":0,"index":11873},{"krate":0,"index":11912},{"krate":0,"index":11911},{"krate":0,"index":11909},{"krate":0,"index":11906},{"krate":0,"index":11907},{"krate":0,"index":11903},{"krate":0,"index":11901},{"krate":0,"index":11898},{"krate":0,"index":11899},{"krate":0,"index":11896},{"krate":0,"index":11890},{"krate":0,"index":11875},{"krate":0,"index":5010},{"krate":0,"index":11914},{"krate":0,"index":11953},{"krate":0,"index":11952},{"krate":0,"index":11950},{"krate":0,"index":11947},{"krate":0,"index":11948},{"krate":0,"index":11944},{"krate":0,"index":11942},{"krate":0,"index":11939},{"krate":0,"index":11940},{"krate":0,"index":11937},{"krate":0,"index":11931},{"krate":0,"index":11916},{"krate":0,"index":5012},{"krate":0,"index":11955},{"krate":0,"index":11994},{"krate":0,"index":11993},{"krate":0,"index":11991},{"krate":0,"index":11988},{"krate":0,"index":11989},{"krate":0,"index":11985},{"krate":0,"index":11983},{"krate":0,"index":11980},{"krate":0,"index":11981},{"krate":0,"index":11978},{"krate":0,"index":11972},{"krate":0,"index":11957},{"krate":0,"index":5014},{"krate":0,"index":11996},{"krate":0,"index":12035},{"krate":0,"index":12034},{"krate":0,"index":12032},{"krate":0,"index":12029},{"krate":0,"index":12030},{"krate":0,"index":12026},{"krate":0,"index":12024},{"krate":0,"index":12021},{"krate":0,"index":12022},{"krate":0,"index":12019},{"krate":0,"index":12013},{"krate":0,"index":11998},{"krate":0,"index":5016},{"krate":0,"index":12037},{"krate":0,"index":12076},{"krate":0,"index":12075},{"krate":0,"index":12073},{"krate":0,"index":12070},{"krate":0,"index":12071},{"krate":0,"index":12067},{"krate":0,"index":12065},{"krate":0,"index":12062},{"krate":0,"index":12063},{"krate":0,"index":12060},{"krate":0,"index":12054},{"krate":0,"index":12039},{"krate":0,"index":5018},{"krate":0,"index":12078},{"krate":0,"index":12117},{"krate":0,"index":12116},{"krate":0,"index":12114},{"krate":0,"index":12111},{"krate":0,"index":12112},{"krate":0,"index":12108},{"krate":0,"index":12106},{"krate":0,"index":12103},{"krate":0,"index":12104},{"krate":0,"index":12101},{"krate":0,"index":12095},{"krate":0,"index":12080},{"krate":0,"index":5020},{"krate":0,"index":12119},{"krate":0,"index":12158},{"krate":0,"index":12157},{"krate":0,"index":12155},{"krate":0,"index":12152},{"krate":0,"index":12153},{"krate":0,"index":12149},{"krate":0,"index":12147},{"krate":0,"index":12144},{"krate":0,"index":12145},{"krate":0,"index":12142},{"krate":0,"index":12136},{"krate":0,"index":12121},{"krate":0,"index":5022},{"krate":0,"index":12160},{"krate":0,"index":12199},{"krate":0,"index":12198},{"krate":0,"index":12196},{"krate":0,"index":12193},{"krate":0,"index":12194},{"krate":0,"index":12190},{"krate":0,"index":12188},{"krate":0,"index":12185},{"krate":0,"index":12186},{"krate":0,"index":12183},{"krate":0,"index":12177},{"krate":0,"index":12162},{"krate":0,"index":5024},{"krate":0,"index":12201},{"krate":0,"index":12240},{"krate":0,"index":12239},{"krate":0,"index":12237},{"krate":0,"index":12234},{"krate":0,"index":12235},{"krate":0,"index":12231},{"krate":0,"index":12229},{"krate":0,"index":12226},{"krate":0,"index":12227},{"krate":0,"index":12224},{"krate":0,"index":12218},{"krate":0,"index":12203},{"krate":0,"index":5026},{"krate":0,"index":12242},{"krate":0,"index":12281},{"krate":0,"index":12280},{"krate":0,"index":12278},{"krate":0,"index":12275},{"krate":0,"index":12276},{"krate":0,"index":12272},{"krate":0,"index":12270},{"krate":0,"index":12267},{"krate":0,"index":12268},{"krate":0,"index":12265},{"krate":0,"index":12259},{"krate":0,"index":12244},{"krate":0,"index":5028},{"krate":0,"index":12283},{"krate":0,"index":12322},{"krate":0,"index":12321},{"krate":0,"index":12319},{"krate":0,"index":12316},{"krate":0,"index":12317},{"krate":0,"index":12313},{"krate":0,"index":12311},{"krate":0,"index":12308},{"krate":0,"index":12309},{"krate":0,"index":12306},{"krate":0,"index":12300},{"krate":0,"index":12285},{"krate":0,"index":5030},{"krate":0,"index":12324},{"krate":0,"index":12363},{"krate":0,"index":12362},{"krate":0,"index":12360},{"krate":0,"index":12357},{"krate":0,"index":12358},{"krate":0,"index":12354},{"krate":0,"index":12352},{"krate":0,"index":12349},{"krate":0,"index":12350},{"krate":0,"index":12347},{"krate":0,"index":12341},{"krate":0,"index":12326},{"krate":0,"index":5032},{"krate":0,"index":12365},{"krate":0,"index":12404},{"krate":0,"index":12403},{"krate":0,"index":12401},{"krate":0,"index":12398},{"krate":0,"index":12399},{"krate":0,"index":12395},{"krate":0,"index":12393},{"krate":0,"index":12390},{"krate":0,"index":12391},{"krate":0,"index":12388},{"krate":0,"index":12382},{"krate":0,"index":12367},{"krate":0,"index":5034},{"krate":0,"index":12406},{"krate":0,"index":12445},{"krate":0,"index":12444},{"krate":0,"index":12442},{"krate":0,"index":12439},{"krate":0,"index":12440},{"krate":0,"index":12436},{"krate":0,"index":12434},{"krate":0,"index":12431},{"krate":0,"index":12432},{"krate":0,"index":12429},{"krate":0,"index":12423},{"krate":0,"index":12408},{"krate":0,"index":5036},{"krate":0,"index":12447},{"krate":0,"index":12486},{"krate":0,"index":12485},{"krate":0,"index":12483},{"krate":0,"index":12480},{"krate":0,"index":12481},{"krate":0,"index":12477},{"krate":0,"index":12475},{"krate":0,"index":12472},{"krate":0,"index":12473},{"krate":0,"index":12470},{"krate":0,"index":12464},{"krate":0,"index":12449},{"krate":0,"index":5038},{"krate":0,"index":12488},{"krate":0,"index":12527},{"krate":0,"index":12526},{"krate":0,"index":12524},{"krate":0,"index":12521},{"krate":0,"index":12522},{"krate":0,"index":12518},{"krate":0,"index":12516},{"krate":0,"index":12513},{"krate":0,"index":12514},{"krate":0,"index":12511},{"krate":0,"index":12505},{"krate":0,"index":12490},{"krate":0,"index":5040},{"krate":0,"index":12529},{"krate":0,"index":12568},{"krate":0,"index":12567},{"krate":0,"index":12565},{"krate":0,"index":12562},{"krate":0,"index":12563},{"krate":0,"index":12559},{"krate":0,"index":12557},{"krate":0,"index":12554},{"krate":0,"index":12555},{"krate":0,"index":12552},{"krate":0,"index":12546},{"krate":0,"index":12531},{"krate":0,"index":5042},{"krate":0,"index":12570},{"krate":0,"index":12609},{"krate":0,"index":12608},{"krate":0,"index":12606},{"krate":0,"index":12603},{"krate":0,"index":12604},{"krate":0,"index":12600},{"krate":0,"index":12598},{"krate":0,"index":12595},{"krate":0,"index":12596},{"krate":0,"index":12593},{"krate":0,"index":12587},{"krate":0,"index":12572},{"krate":0,"index":5044},{"krate":0,"index":12611},{"krate":0,"index":12650},{"krate":0,"index":12649},{"krate":0,"index":12647},{"krate":0,"index":12644},{"krate":0,"index":12645},{"krate":0,"index":12641},{"krate":0,"index":12639},{"krate":0,"index":12636},{"krate":0,"index":12637},{"krate":0,"index":12634},{"krate":0,"index":12628},{"krate":0,"index":12613},{"krate":0,"index":5046},{"krate":0,"index":12652},{"krate":0,"index":12691},{"krate":0,"index":12690},{"krate":0,"index":12688},{"krate":0,"index":12685},{"krate":0,"index":12686},{"krate":0,"index":12682},{"krate":0,"index":12680},{"krate":0,"index":12677},{"krate":0,"index":12678},{"krate":0,"index":12675},{"krate":0,"index":12669},{"krate":0,"index":12654},{"krate":0,"index":5048},{"krate":0,"index":12693},{"krate":0,"index":12732},{"krate":0,"index":12731},{"krate":0,"index":12729},{"krate":0,"index":12726},{"krate":0,"index":12727},{"krate":0,"index":12723},{"krate":0,"index":12721},{"krate":0,"index":12718},{"krate":0,"index":12719},{"krate":0,"index":12716},{"krate":0,"index":12710},{"krate":0,"index":12695},{"krate":0,"index":5050},{"krate":0,"index":12734},{"krate":0,"index":12773},{"krate":0,"index":12772},{"krate":0,"index":12770},{"krate":0,"index":12767},{"krate":0,"index":12768},{"krate":0,"index":12764},{"krate":0,"index":12762},{"krate":0,"index":12759},{"krate":0,"index":12760},{"krate":0,"index":12757},{"krate":0,"index":12751},{"krate":0,"index":12736},{"krate":0,"index":5052},{"krate":0,"index":12775},{"krate":0,"index":12814},{"krate":0,"index":12813},{"krate":0,"index":12811},{"krate":0,"index":12808},{"krate":0,"index":12809},{"krate":0,"index":12805},{"krate":0,"index":12803},{"krate":0,"index":12800},{"krate":0,"index":12801},{"krate":0,"index":12798},{"krate":0,"index":12792},{"krate":0,"index":12777},{"krate":0,"index":5054},{"krate":0,"index":12816},{"krate":0,"index":12855},{"krate":0,"index":12854},{"krate":0,"index":12852},{"krate":0,"index":12849},{"krate":0,"index":12850},{"krate":0,"index":12846},{"krate":0,"index":12844},{"krate":0,"index":12841},{"krate":0,"index":12842},{"krate":0,"index":12839},{"krate":0,"index":12833},{"krate":0,"index":12818},{"krate":0,"index":5056},{"krate":0,"index":12857},{"krate":0,"index":12896},{"krate":0,"index":12895},{"krate":0,"index":12893},{"krate":0,"index":12890},{"krate":0,"index":12891},{"krate":0,"index":12887},{"krate":0,"index":12885},{"krate":0,"index":12882},{"krate":0,"index":12883},{"krate":0,"index":12880},{"krate":0,"index":12874},{"krate":0,"index":12859},{"krate":0,"index":5058},{"krate":0,"index":12898},{"krate":0,"index":12937},{"krate":0,"index":12936},{"krate":0,"index":12934},{"krate":0,"index":12931},{"krate":0,"index":12932},{"krate":0,"index":12928},{"krate":0,"index":12926},{"krate":0,"index":12923},{"krate":0,"index":12924},{"krate":0,"index":12921},{"krate":0,"index":12915},{"krate":0,"index":12900},{"krate":0,"index":5060},{"krate":0,"index":12939},{"krate":0,"index":12978},{"krate":0,"index":12977},{"krate":0,"index":12975},{"krate":0,"index":12972},{"krate":0,"index":12973},{"krate":0,"index":12969},{"krate":0,"index":12967},{"krate":0,"index":12964},{"krate":0,"index":12965},{"krate":0,"index":12962},{"krate":0,"index":12956},{"krate":0,"index":12941},{"krate":0,"index":5062},{"krate":0,"index":12980},{"krate":0,"index":13019},{"krate":0,"index":13018},{"krate":0,"index":13016},{"krate":0,"index":13013},{"krate":0,"index":13014},{"krate":0,"index":13010},{"krate":0,"index":13008},{"krate":0,"index":13005},{"krate":0,"index":13006},{"krate":0,"index":13003},{"krate":0,"index":12997},{"krate":0,"index":12982},{"krate":0,"index":5064},{"krate":0,"index":13021},{"krate":0,"index":13060},{"krate":0,"index":13059},{"krate":0,"index":13057},{"krate":0,"index":13054},{"krate":0,"index":13055},{"krate":0,"index":13051},{"krate":0,"index":13049},{"krate":0,"index":13046},{"krate":0,"index":13047},{"krate":0,"index":13044},{"krate":0,"index":13038},{"krate":0,"index":13023},{"krate":0,"index":5066},{"krate":0,"index":13062},{"krate":0,"index":13101},{"krate":0,"index":13100},{"krate":0,"index":13098},{"krate":0,"index":13095},{"krate":0,"index":13096},{"krate":0,"index":13092},{"krate":0,"index":13090},{"krate":0,"index":13087},{"krate":0,"index":13088},{"krate":0,"index":13085},{"krate":0,"index":13079},{"krate":0,"index":13064},{"krate":0,"index":5068},{"krate":0,"index":13103},{"krate":0,"index":13142},{"krate":0,"index":13141},{"krate":0,"index":13139},{"krate":0,"index":13136},{"krate":0,"index":13137},{"krate":0,"index":13133},{"krate":0,"index":13131},{"krate":0,"index":13128},{"krate":0,"index":13129},{"krate":0,"index":13126},{"krate":0,"index":13120},{"krate":0,"index":13105},{"krate":0,"index":5070},{"krate":0,"index":13144},{"krate":0,"index":13183},{"krate":0,"index":13182},{"krate":0,"index":13180},{"krate":0,"index":13177},{"krate":0,"index":13178},{"krate":0,"index":13174},{"krate":0,"index":13172},{"krate":0,"index":13169},{"krate":0,"index":13170},{"krate":0,"index":13167},{"krate":0,"index":13161},{"krate":0,"index":13146},{"krate":0,"index":5072},{"krate":0,"index":13185},{"krate":0,"index":13224},{"krate":0,"index":13223},{"krate":0,"index":13221},{"krate":0,"index":13218},{"krate":0,"index":13219},{"krate":0,"index":13215},{"krate":0,"index":13213},{"krate":0,"index":13210},{"krate":0,"index":13211},{"krate":0,"index":13208},{"krate":0,"index":13202},{"krate":0,"index":13187},{"krate":0,"index":5074},{"krate":0,"index":13226},{"krate":0,"index":13265},{"krate":0,"index":13264},{"krate":0,"index":13262},{"krate":0,"index":13259},{"krate":0,"index":13260},{"krate":0,"index":13256},{"krate":0,"index":13254},{"krate":0,"index":13251},{"krate":0,"index":13252},{"krate":0,"index":13249},{"krate":0,"index":13243},{"krate":0,"index":13228},{"krate":0,"index":5076},{"krate":0,"index":13267},{"krate":0,"index":13306},{"krate":0,"index":13305},{"krate":0,"index":13303},{"krate":0,"index":13300},{"krate":0,"index":13301},{"krate":0,"index":13297},{"krate":0,"index":13295},{"krate":0,"index":13292},{"krate":0,"index":13293},{"krate":0,"index":13290},{"krate":0,"index":13284},{"krate":0,"index":13269},{"krate":0,"index":5078},{"krate":0,"index":13308},{"krate":0,"index":13347},{"krate":0,"index":13346},{"krate":0,"index":13344},{"krate":0,"index":13341},{"krate":0,"index":13342},{"krate":0,"index":13338},{"krate":0,"index":13336},{"krate":0,"index":13333},{"krate":0,"index":13334},{"krate":0,"index":13331},{"krate":0,"index":13325},{"krate":0,"index":13310},{"krate":0,"index":5080},{"krate":0,"index":13349},{"krate":0,"index":13388},{"krate":0,"index":13387},{"krate":0,"index":13385},{"krate":0,"index":13382},{"krate":0,"index":13383},{"krate":0,"index":13379},{"krate":0,"index":13377},{"krate":0,"index":13374},{"krate":0,"index":13375},{"krate":0,"index":13372},{"krate":0,"index":13366},{"krate":0,"index":13351},{"krate":0,"index":5082},{"krate":0,"index":13390},{"krate":0,"index":13429},{"krate":0,"index":13428},{"krate":0,"index":13426},{"krate":0,"index":13423},{"krate":0,"index":13424},{"krate":0,"index":13420},{"krate":0,"index":13418},{"krate":0,"index":13415},{"krate":0,"index":13416},{"krate":0,"index":13413},{"krate":0,"index":13407},{"krate":0,"index":13392},{"krate":0,"index":5084},{"krate":0,"index":789},{"krate":0,"index":795},{"krate":0,"index":797},{"krate":0,"index":800},{"krate":0,"index":803}],"decl_id":null,"docs":" Universal format specification.\n Applicable to textures, views, and vertex buffers.","sig":null,"attributes":[{"value":"/ Universal format specification.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":126223,"byte_end":126258,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/ Applicable to textures, views, and vertex buffers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":126259,"byte_end":126313,"line_start":2,"line_end":2,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":126314,"byte_end":126317,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ For a more detailed description of all the specific format specifiers,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":126318,"byte_end":126392,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ please see [the official Vulkan documentation](https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkFormat.html)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":126393,"byte_end":126517,"line_start":5,"line_end":5,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":126518,"byte_end":126521,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `gfx-rs` splits a `Format` into two sub-components, a `SurfaceType` and","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":126522,"byte_end":126597,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ a `ChannelType`.  The `SurfaceType` specifies how the large the channels are,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":126598,"byte_end":126679,"line_start":8,"line_end":8,"column_start":1,"column_end":82}},{"value":"/ for instance `R32_G32_B32_A32`.  The `ChannelType` specifies how the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":126680,"byte_end":126752,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/ components are interpreted, for instance `Sfloat` or `Sint`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":126753,"byte_end":126817,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":3474},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":127195,"byte_end":127202,"line_start":19,"line_end":19,"column_start":16,"column_end":23},"name":"Aspects","qualname":"::format::Aspects","value":"Aspects {  }","parent":null,"children":[{"krate":0,"index":3475}],"decl_id":null,"docs":" Bitflags which describe what properties of an image\n a format specifies or does not specify.  For example,\n the `Rgba8Unorm` format only specifies a `COLOR` aspect,\n while `D32SfloatS8Uint` specifies both a depth and stencil\n aspect but no color.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3560},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":127249,"byte_end":127254,"line_start":21,"line_end":21,"column_start":15,"column_end":20},"name":"COLOR","qualname":"::format::Aspects::COLOR","value":"Aspects","parent":{"krate":0,"index":3559},"children":[],"decl_id":null,"docs":" Color aspect.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3561},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":127302,"byte_end":127307,"line_start":23,"line_end":23,"column_start":15,"column_end":20},"name":"DEPTH","qualname":"::format::Aspects::DEPTH","value":"Aspects","parent":{"krate":0,"index":3559},"children":[],"decl_id":null,"docs":" Depth aspect.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3562},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":127357,"byte_end":127364,"line_start":25,"line_end":25,"column_start":15,"column_end":22},"name":"STENCIL","qualname":"::format::Aspects::STENCIL","value":"Aspects","parent":{"krate":0,"index":3559},"children":[],"decl_id":null,"docs":" Stencil aspect.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3617},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":127490,"byte_end":127500,"line_start":31,"line_end":31,"column_start":12,"column_end":22},"name":"FormatDesc","qualname":"::format::FormatDesc","value":"FormatDesc { bits, dim, packed, aspects }","parent":null,"children":[{"krate":0,"index":3618},{"krate":0,"index":3619},{"krate":0,"index":3620},{"krate":0,"index":3621}],"decl_id":null,"docs":" Description of a format.\n","sig":null,"attributes":[{"value":"/ Description of a format.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":127382,"byte_end":127410,"line_start":29,"line_end":29,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":3618},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":128058,"byte_end":128062,"line_start":40,"line_end":40,"column_start":9,"column_end":13},"name":"bits","qualname":"::format::FormatDesc::bits","value":"u16","parent":{"krate":0,"index":3617},"children":[],"decl_id":null,"docs":" Total number of bits.","sig":null,"attributes":[{"value":"/ Total number of bits.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":127507,"byte_end":127532,"line_start":32,"line_end":32,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":127537,"byte_end":127540,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ * Depth/Stencil formats are opaque formats, where the total number of bits is unknown.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":127545,"byte_end":127635,"line_start":34,"line_end":34,"column_start":5,"column_end":95}},{"value":"/   A dummy value is used for these formats instead (sum of depth and stencil bits).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":127640,"byte_end":127726,"line_start":35,"line_end":35,"column_start":5,"column_end":91}},{"value":"/   For copy operations, the number of bits of the corresponding aspect should be used.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":127731,"byte_end":127820,"line_start":36,"line_end":36,"column_start":5,"column_end":94}},{"value":"/ * The total number can be larger than the sum of individual format bits","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":127825,"byte_end":127900,"line_start":37,"line_end":37,"column_start":5,"column_end":80}},{"value":"/   (`color`, `alpha`, `depth` and `stencil`) for packed formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":127905,"byte_end":127972,"line_start":38,"line_end":38,"column_start":5,"column_end":72}},{"value":"/ * For compressed formats, this denotes the number of bits per block.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":127977,"byte_end":128049,"line_start":39,"line_end":39,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":3619},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":128133,"byte_end":128136,"line_start":42,"line_end":42,"column_start":9,"column_end":12},"name":"dim","qualname":"::format::FormatDesc::dim","value":"(u8, u8)","parent":{"krate":0,"index":3617},"children":[],"decl_id":null,"docs":" Dimensions (width, height) of the texel blocks.\n","sig":null,"attributes":[{"value":"/ Dimensions (width, height) of the texel blocks.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":128073,"byte_end":128124,"line_start":41,"line_end":41,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":3620},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":128364,"byte_end":128370,"line_start":47,"line_end":47,"column_start":9,"column_end":15},"name":"packed","qualname":"::format::FormatDesc::packed","value":"bool","parent":{"krate":0,"index":3617},"children":[],"decl_id":null,"docs":" The format representation depends on the endianness of the platform.","sig":null,"attributes":[{"value":"/ The format representation depends on the endianness of the platform.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":128152,"byte_end":128224,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":128229,"byte_end":128232,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ * On little-endian systems, the actual oreder of components is reverse of what","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":128237,"byte_end":128319,"line_start":45,"line_end":45,"column_start":5,"column_end":87}},{"value":"/   a surface type specifies.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":128324,"byte_end":128355,"line_start":46,"line_end":46,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3621},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":128409,"byte_end":128416,"line_start":49,"line_end":49,"column_start":9,"column_end":16},"name":"aspects","qualname":"::format::FormatDesc::aspects","value":"format::Aspects","parent":{"krate":0,"index":3617},"children":[],"decl_id":null,"docs":" Format aspects\n","sig":null,"attributes":[{"value":"/ Format aspects","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":128382,"byte_end":128400,"line_start":48,"line_end":48,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":128502,"byte_end":128515,"line_start":54,"line_end":54,"column_start":12,"column_end":25},"name":"is_compressed","qualname":"<FormatDesc>::is_compressed","value":"pub fn is_compressed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the format is compressed.\n","sig":null,"attributes":[{"value":"/ Check if the format is compressed.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":128452,"byte_end":128490,"line_start":53,"line_end":53,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":3657},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":128702,"byte_end":128712,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"FormatBits","qualname":"::format::FormatBits","value":"FormatBits { color, alpha, depth, stencil }","parent":null,"children":[{"krate":0,"index":3658},{"krate":0,"index":3659},{"krate":0,"index":3660},{"krate":0,"index":3661}],"decl_id":null,"docs":" Description of the bits distribution of a format.\n","sig":null,"attributes":[{"value":"/ Description of the bits distribution of a format.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":128569,"byte_end":128622,"line_start":59,"line_end":59,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":3658},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":128829,"byte_end":128834,"line_start":65,"line_end":65,"column_start":9,"column_end":14},"name":"color","qualname":"::format::FormatBits::color","value":"u8","parent":{"krate":0,"index":3657},"children":[],"decl_id":null,"docs":" Number of color bits (summed for R/G/B).","sig":null,"attributes":[{"value":"/ Number of color bits (summed for R/G/B).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":128719,"byte_end":128763,"line_start":62,"line_end":62,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":128768,"byte_end":128771,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ For compressed formats, this value is 0.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":128776,"byte_end":128820,"line_start":64,"line_end":64,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3659},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":128935,"byte_end":128940,"line_start":69,"line_end":69,"column_start":9,"column_end":14},"name":"alpha","qualname":"::format::FormatBits::alpha","value":"u8","parent":{"krate":0,"index":3657},"children":[],"decl_id":null,"docs":" Number of alpha bits.","sig":null,"attributes":[{"value":"/ Number of alpha bits.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":128844,"byte_end":128869,"line_start":66,"line_end":66,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":128874,"byte_end":128877,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ For compressed formats, this value is 0.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":128882,"byte_end":128926,"line_start":68,"line_end":68,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3660},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":128983,"byte_end":128988,"line_start":71,"line_end":71,"column_start":9,"column_end":14},"name":"depth","qualname":"::format::FormatBits::depth","value":"u8","parent":{"krate":0,"index":3657},"children":[],"decl_id":null,"docs":" Number of depth bits\n","sig":null,"attributes":[{"value":"/ Number of depth bits","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":128950,"byte_end":128974,"line_start":70,"line_end":70,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":3661},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":129033,"byte_end":129040,"line_start":73,"line_end":73,"column_start":9,"column_end":16},"name":"stencil","qualname":"::format::FormatBits::stencil","value":"u8","parent":{"krate":0,"index":3657},"children":[],"decl_id":null,"docs":" Number of stencil bits\n","sig":null,"attributes":[{"value":"/ Number of stencil bits","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":128998,"byte_end":129024,"line_start":72,"line_end":72,"column_start":5,"column_end":31}}]},{"kind":"Const","id":{"krate":0,"index":780},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":129112,"byte_end":129121,"line_start":77,"line_end":77,"column_start":11,"column_end":20},"name":"BITS_ZERO","qualname":"::format::BITS_ZERO","value":"FormatBits","parent":null,"children":[],"decl_id":null,"docs":" Format bits configuration with no bits assigned.\n","sig":null,"attributes":[{"value":"/ Format bits configuration with no bits assigned.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":129049,"byte_end":129101,"line_start":76,"line_end":76,"column_start":1,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3698},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":129538,"byte_end":129542,"line_start":91,"line_end":91,"column_start":5,"column_end":9},"name":"Zero","qualname":"::format::Component::Zero","value":"Component::Zero","parent":{"krate":0,"index":3697},"children":[],"decl_id":null,"docs":" Hardcoded zero\n","sig":null,"attributes":[{"value":"/ Hardcoded zero","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":129515,"byte_end":129533,"line_start":90,"line_end":90,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3700},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":129570,"byte_end":129573,"line_start":93,"line_end":93,"column_start":5,"column_end":8},"name":"One","qualname":"::format::Component::One","value":"Component::One","parent":{"krate":0,"index":3697},"children":[],"decl_id":null,"docs":" Hardcoded one\n","sig":null,"attributes":[{"value":"/ Hardcoded one","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":129548,"byte_end":129565,"line_start":92,"line_end":92,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3702},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":129599,"byte_end":129600,"line_start":95,"line_end":95,"column_start":5,"column_end":6},"name":"R","qualname":"::format::Component::R","value":"Component::R","parent":{"krate":0,"index":3697},"children":[],"decl_id":null,"docs":" Red channel\n","sig":null,"attributes":[{"value":"/ Red channel","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":129579,"byte_end":129594,"line_start":94,"line_end":94,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3704},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":129628,"byte_end":129629,"line_start":97,"line_end":97,"column_start":5,"column_end":6},"name":"G","qualname":"::format::Component::G","value":"Component::G","parent":{"krate":0,"index":3697},"children":[],"decl_id":null,"docs":" Green channel\n","sig":null,"attributes":[{"value":"/ Green channel","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":129606,"byte_end":129623,"line_start":96,"line_end":96,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3706},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":129656,"byte_end":129657,"line_start":99,"line_end":99,"column_start":5,"column_end":6},"name":"B","qualname":"::format::Component::B","value":"Component::B","parent":{"krate":0,"index":3697},"children":[],"decl_id":null,"docs":" Blue channel\n","sig":null,"attributes":[{"value":"/ Blue channel","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":129635,"byte_end":129651,"line_start":98,"line_end":98,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3708},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":129686,"byte_end":129687,"line_start":101,"line_end":101,"column_start":5,"column_end":6},"name":"A","qualname":"::format::Component::A","value":"Component::A","parent":{"krate":0,"index":3697},"children":[],"decl_id":null,"docs":" Alpha channel.\n","sig":null,"attributes":[{"value":"/ Alpha channel.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":129663,"byte_end":129681,"line_start":100,"line_end":100,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":3697},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":129499,"byte_end":129508,"line_start":89,"line_end":89,"column_start":10,"column_end":19},"name":"Component","qualname":"::format::Component","value":"pub enum Component {\n\n    /// Hardcoded zero\n    Zero,\n\n    /// Hardcoded one\n    One,\n\n    /// Red channel\n    R,\n\n    /// Green channel\n    G,\n\n    /// Blue channel\n    B,\n\n    /// Alpha channel.\n    A,\n}","parent":null,"children":[{"krate":0,"index":3698},{"krate":0,"index":3700},{"krate":0,"index":3702},{"krate":0,"index":3704},{"krate":0,"index":3706},{"krate":0,"index":3708}],"decl_id":null,"docs":" Source channel in a swizzle configuration. Some may redirect onto\n different physical channels, some may be hardcoded to 0 or 1.\n","sig":null,"attributes":[{"value":"/ Source channel in a swizzle configuration. Some may redirect onto","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":129211,"byte_end":129280,"line_start":84,"line_end":84,"column_start":1,"column_end":70}},{"value":"/ different physical channels, some may be hardcoded to 0 or 1.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":129281,"byte_end":129346,"line_start":85,"line_end":85,"column_start":1,"column_end":66}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":129347,"byte_end":129358,"line_start":86,"line_end":86,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3781},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":130257,"byte_end":130264,"line_start":114,"line_end":114,"column_start":12,"column_end":19},"name":"Swizzle","qualname":"::format::Swizzle","value":"","parent":null,"children":[],"decl_id":null,"docs":" Channel swizzle configuration for the resource views.\n This specifies a \"swizzle\" operation which remaps the various\n channels of a format into a different order.  For example,\n `Swizzle(Component::B, Component::G, Component::R, Component::A)`\n will swap `RGBA` formats into `BGRA` formats and back.","sig":null,"attributes":[{"value":"/ Channel swizzle configuration for the resource views.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":129692,"byte_end":129749,"line_start":104,"line_end":104,"column_start":1,"column_end":58}},{"value":"/ This specifies a \"swizzle\" operation which remaps the various","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":129750,"byte_end":129815,"line_start":105,"line_end":105,"column_start":1,"column_end":66}},{"value":"/ channels of a format into a different order.  For example,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":129816,"byte_end":129878,"line_start":106,"line_end":106,"column_start":1,"column_end":63}},{"value":"/ `Swizzle(Component::B, Component::G, Component::R, Component::A)`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":129879,"byte_end":129948,"line_start":107,"line_end":107,"column_start":1,"column_end":70}},{"value":"/ will swap `RGBA` formats into `BGRA` formats and back.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":129949,"byte_end":130007,"line_start":108,"line_end":108,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":130008,"byte_end":130011,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ Note: It's not currently mirrored at compile-time,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":130012,"byte_end":130066,"line_start":110,"line_end":110,"column_start":1,"column_end":55}},{"value":"/ thus providing less safety and convenience.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":130067,"byte_end":130114,"line_start":111,"line_end":111,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":3783},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":130265,"byte_end":130278,"line_start":114,"line_end":114,"column_start":20,"column_end":33},"name":"0","qualname":"::format::Swizzle::0","value":"format::Component","parent":{"krate":0,"index":3781},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3784},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":130280,"byte_end":130293,"line_start":114,"line_end":114,"column_start":35,"column_end":48},"name":"1","qualname":"::format::Swizzle::1","value":"format::Component","parent":{"krate":0,"index":3781},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3785},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":130295,"byte_end":130308,"line_start":114,"line_end":114,"column_start":50,"column_end":63},"name":"2","qualname":"::format::Swizzle::2","value":"format::Component","parent":{"krate":0,"index":3781},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3786},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":130310,"byte_end":130323,"line_start":114,"line_end":114,"column_start":65,"column_end":78},"name":"3","qualname":"::format::Swizzle::3","value":"format::Component","parent":{"krate":0,"index":3781},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":782},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":130426,"byte_end":130428,"line_start":118,"line_end":118,"column_start":15,"column_end":17},"name":"NO","qualname":"::format::Swizzle::NO","value":"Swizzle","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" A trivially non-swizzling configuration; performs no changes.\n","sig":null,"attributes":[{"value":"/ A trivially non-swizzling configuration; performs no changes.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":130346,"byte_end":130411,"line_start":117,"line_end":117,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":3845},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":130768,"byte_end":130778,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"Properties","qualname":"::format::Properties","value":"Properties { linear_tiling, optimal_tiling, buffer_features }","parent":null,"children":[{"krate":0,"index":3846},{"krate":0,"index":3847},{"krate":0,"index":3848}],"decl_id":null,"docs":" Format properties of the physical device.\n","sig":null,"attributes":[{"value":"/ Format properties of the physical device.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":130588,"byte_end":130633,"line_start":127,"line_end":127,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":3846},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":130986,"byte_end":130999,"line_start":134,"line_end":134,"column_start":9,"column_end":22},"name":"linear_tiling","qualname":"::format::Properties::linear_tiling","value":"format::ImageFeature","parent":{"krate":0,"index":3845},"children":[],"decl_id":null,"docs":" A bitmask of the features supported when an image with linear tiling is requested.\n Linear tiling has a known layout in-memory so data can be copied to and from host\n memory.\n","sig":null,"attributes":[{"value":"/ A bitmask of the features supported when an image with linear tiling is requested.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":130785,"byte_end":130871,"line_start":131,"line_end":131,"column_start":5,"column_end":91}},{"value":"/ Linear tiling has a known layout in-memory so data can be copied to and from host","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":130876,"byte_end":130961,"line_start":132,"line_end":132,"column_start":5,"column_end":90}},{"value":"/ memory.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":130966,"byte_end":130977,"line_start":133,"line_end":133,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":3847},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":131204,"byte_end":131218,"line_start":137,"line_end":137,"column_start":9,"column_end":23},"name":"optimal_tiling","qualname":"::format::Properties::optimal_tiling","value":"format::ImageFeature","parent":{"krate":0,"index":3845},"children":[],"decl_id":null,"docs":" A bitmask of the features supported when an image with optimal tiling is requested.\n Optimal tiling is arranged however the GPU wants; its exact layout is undefined.\n","sig":null,"attributes":[{"value":"/ A bitmask of the features supported when an image with optimal tiling is requested.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":131019,"byte_end":131106,"line_start":135,"line_end":135,"column_start":5,"column_end":92}},{"value":"/ Optimal tiling is arranged however the GPU wants; its exact layout is undefined.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":131111,"byte_end":131195,"line_start":136,"line_end":136,"column_start":5,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":3848},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":131285,"byte_end":131300,"line_start":139,"line_end":139,"column_start":9,"column_end":24},"name":"buffer_features","qualname":"::format::Properties::buffer_features","value":"format::BufferFeature","parent":{"krate":0,"index":3845},"children":[],"decl_id":null,"docs":" The features supported by buffers.\n","sig":null,"attributes":[{"value":"/ The features supported by buffers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":131238,"byte_end":131276,"line_start":138,"line_end":138,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":3917},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":131465,"byte_end":131477,"line_start":146,"line_end":146,"column_start":16,"column_end":28},"name":"ImageFeature","qualname":"::format::ImageFeature","value":"ImageFeature {  }","parent":null,"children":[{"krate":0,"index":3918}],"decl_id":null,"docs":" Image feature flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4011},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":131538,"byte_end":131545,"line_start":148,"line_end":148,"column_start":15,"column_end":22},"name":"SAMPLED","qualname":"::format::ImageFeature::SAMPLED","value":"ImageFeature","parent":{"krate":0,"index":4010},"children":[],"decl_id":null,"docs":" Image view can be sampled.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4012},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":131620,"byte_end":131627,"line_start":150,"line_end":150,"column_start":15,"column_end":22},"name":"STORAGE","qualname":"::format::ImageFeature::STORAGE","value":"ImageFeature","parent":{"krate":0,"index":4010},"children":[],"decl_id":null,"docs":" Image view can be used as storage image.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4013},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":131717,"byte_end":131731,"line_start":152,"line_end":152,"column_start":15,"column_end":29},"name":"STORAGE_ATOMIC","qualname":"::format::ImageFeature::STORAGE_ATOMIC","value":"ImageFeature","parent":{"krate":0,"index":4010},"children":[],"decl_id":null,"docs":" Image view can be used as storage image (with atomics).\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4014},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":131819,"byte_end":131835,"line_start":154,"line_end":154,"column_start":15,"column_end":31},"name":"COLOR_ATTACHMENT","qualname":"::format::ImageFeature::COLOR_ATTACHMENT","value":"ImageFeature","parent":{"krate":0,"index":4010},"children":[],"decl_id":null,"docs":" Image view can be used as color and input attachment.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4015},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":131940,"byte_end":131962,"line_start":156,"line_end":156,"column_start":15,"column_end":37},"name":"COLOR_ATTACHMENT_BLEND","qualname":"::format::ImageFeature::COLOR_ATTACHMENT_BLEND","value":"ImageFeature","parent":{"krate":0,"index":4010},"children":[],"decl_id":null,"docs":" Image view can be used as color (with blending) and input attachment.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4016},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":132060,"byte_end":132084,"line_start":158,"line_end":158,"column_start":15,"column_end":39},"name":"DEPTH_STENCIL_ATTACHMENT","qualname":"::format::ImageFeature::DEPTH_STENCIL_ATTACHMENT","value":"ImageFeature","parent":{"krate":0,"index":4010},"children":[],"decl_id":null,"docs":" Image view can be used as depth-stencil and input attachment.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4017},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":132167,"byte_end":132175,"line_start":160,"line_end":160,"column_start":15,"column_end":23},"name":"BLIT_SRC","qualname":"::format::ImageFeature::BLIT_SRC","value":"ImageFeature","parent":{"krate":0,"index":4010},"children":[],"decl_id":null,"docs":" Image can be used as source for blit commands.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4018},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":132263,"byte_end":132271,"line_start":162,"line_end":162,"column_start":15,"column_end":23},"name":"BLIT_DST","qualname":"::format::ImageFeature::BLIT_DST","value":"ImageFeature","parent":{"krate":0,"index":4010},"children":[],"decl_id":null,"docs":" Image can be used as destination for blit commands.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4019},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":132462,"byte_end":132476,"line_start":166,"line_end":166,"column_start":15,"column_end":29},"name":"SAMPLED_LINEAR","qualname":"::format::ImageFeature::SAMPLED_LINEAR","value":"ImageFeature","parent":{"krate":0,"index":4010},"children":[],"decl_id":null,"docs":" Image can be sampled with a (mipmap) linear sampler or as blit source\n with linear sampling.\n Requires `SAMPLED` or `BLIT_SRC` flag.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4092},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":132643,"byte_end":132656,"line_start":174,"line_end":174,"column_start":16,"column_end":29},"name":"BufferFeature","qualname":"::format::BufferFeature","value":"BufferFeature {  }","parent":null,"children":[{"krate":0,"index":4093}],"decl_id":null,"docs":" Buffer feature flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4181},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":132739,"byte_end":132752,"line_start":176,"line_end":176,"column_start":15,"column_end":28},"name":"UNIFORM_TEXEL","qualname":"::format::BufferFeature::UNIFORM_TEXEL","value":"BufferFeature","parent":{"krate":0,"index":4180},"children":[],"decl_id":null,"docs":" Buffer view can be used as uniform texel buffer.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4182},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":132835,"byte_end":132848,"line_start":178,"line_end":178,"column_start":15,"column_end":28},"name":"STORAGE_TEXEL","qualname":"::format::BufferFeature::STORAGE_TEXEL","value":"BufferFeature","parent":{"krate":0,"index":4180},"children":[],"decl_id":null,"docs":" Buffer view can be used as storage texel buffer.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4183},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":132947,"byte_end":132967,"line_start":180,"line_end":180,"column_start":15,"column_end":35},"name":"STORAGE_TEXEL_ATOMIC","qualname":"::format::BufferFeature::STORAGE_TEXEL_ATOMIC","value":"BufferFeature","parent":{"krate":0,"index":4180},"children":[],"decl_id":null,"docs":" Buffer view can be used as storage texel buffer (with atomics).\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4184},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":133043,"byte_end":133049,"line_start":182,"line_end":182,"column_start":15,"column_end":21},"name":"VERTEX","qualname":"::format::BufferFeature::VERTEX","value":"BufferFeature","parent":{"krate":0,"index":4180},"children":[],"decl_id":null,"docs":" Image view can be used as vertex buffer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4243},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":133369,"byte_end":133374,"line_start":193,"line_end":193,"column_start":5,"column_end":10},"name":"Unorm","qualname":"::format::ChannelType::Unorm","value":"ChannelType::Unorm","parent":{"krate":0,"index":4242},"children":[],"decl_id":null,"docs":" Unsigned normalized.\n","sig":null,"attributes":[{"value":"/ Unsigned normalized.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":133340,"byte_end":133364,"line_start":192,"line_end":192,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4245},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":133407,"byte_end":133412,"line_start":195,"line_end":195,"column_start":5,"column_end":10},"name":"Snorm","qualname":"::format::ChannelType::Snorm","value":"ChannelType::Snorm","parent":{"krate":0,"index":4242},"children":[],"decl_id":null,"docs":" Signed normalized.\n","sig":null,"attributes":[{"value":"/ Signed normalized.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":133380,"byte_end":133402,"line_start":194,"line_end":194,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4247},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":133444,"byte_end":133448,"line_start":197,"line_end":197,"column_start":5,"column_end":9},"name":"Uint","qualname":"::format::ChannelType::Uint","value":"ChannelType::Uint","parent":{"krate":0,"index":4242},"children":[],"decl_id":null,"docs":" Unsigned integer.\n","sig":null,"attributes":[{"value":"/ Unsigned integer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":133418,"byte_end":133439,"line_start":196,"line_end":196,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4249},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":133478,"byte_end":133482,"line_start":199,"line_end":199,"column_start":5,"column_end":9},"name":"Sint","qualname":"::format::ChannelType::Sint","value":"ChannelType::Sint","parent":{"krate":0,"index":4242},"children":[],"decl_id":null,"docs":" Signed integer.\n","sig":null,"attributes":[{"value":"/ Signed integer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":133454,"byte_end":133473,"line_start":198,"line_end":198,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4251},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":133521,"byte_end":133527,"line_start":201,"line_end":201,"column_start":5,"column_end":11},"name":"Ufloat","qualname":"::format::ChannelType::Ufloat","value":"ChannelType::Ufloat","parent":{"krate":0,"index":4242},"children":[],"decl_id":null,"docs":" Unsigned floating-point.\n","sig":null,"attributes":[{"value":"/ Unsigned floating-point.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":133488,"byte_end":133516,"line_start":200,"line_end":200,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4253},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":133564,"byte_end":133570,"line_start":203,"line_end":203,"column_start":5,"column_end":11},"name":"Sfloat","qualname":"::format::ChannelType::Sfloat","value":"ChannelType::Sfloat","parent":{"krate":0,"index":4242},"children":[],"decl_id":null,"docs":" Signed floating-point.\n","sig":null,"attributes":[{"value":"/ Signed floating-point.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":133533,"byte_end":133559,"line_start":202,"line_end":202,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4255},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":133609,"byte_end":133616,"line_start":205,"line_end":205,"column_start":5,"column_end":12},"name":"Uscaled","qualname":"::format::ChannelType::Uscaled","value":"ChannelType::Uscaled","parent":{"krate":0,"index":4242},"children":[],"decl_id":null,"docs":" Unsigned scaled integer.\n","sig":null,"attributes":[{"value":"/ Unsigned scaled integer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":133576,"byte_end":133604,"line_start":204,"line_end":204,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4257},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":133653,"byte_end":133660,"line_start":207,"line_end":207,"column_start":5,"column_end":12},"name":"Sscaled","qualname":"::format::ChannelType::Sscaled","value":"ChannelType::Sscaled","parent":{"krate":0,"index":4242},"children":[],"decl_id":null,"docs":" Signed scaled integer.\n","sig":null,"attributes":[{"value":"/ Signed scaled integer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":133622,"byte_end":133648,"line_start":206,"line_end":206,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4259},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":133720,"byte_end":133724,"line_start":209,"line_end":209,"column_start":5,"column_end":9},"name":"Srgb","qualname":"::format::ChannelType::Srgb","value":"ChannelType::Srgb","parent":{"krate":0,"index":4242},"children":[],"decl_id":null,"docs":" Unsigned normalized, SRGB non-linear encoded.\n","sig":null,"attributes":[{"value":"/ Unsigned normalized, SRGB non-linear encoded.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":133666,"byte_end":133715,"line_start":208,"line_end":208,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":4242},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":133322,"byte_end":133333,"line_start":191,"line_end":191,"column_start":10,"column_end":21},"name":"ChannelType","qualname":"::format::ChannelType","value":"pub enum ChannelType {\n\n    /// Unsigned normalized.\n    Unorm,\n\n    /// Signed normalized.\n    Snorm,\n\n    /// Unsigned integer.\n    Uint,\n\n    /// Signed integer.\n    Sint,\n\n    /// Unsigned floating-point.\n    Ufloat,\n\n    /// Signed floating-point.\n    Sfloat,\n\n    /// Unsigned scaled integer.\n    Uscaled,\n\n    /// Signed scaled integer.\n    Sscaled,\n\n    /// Unsigned normalized, SRGB non-linear encoded.\n    Srgb,\n}","parent":null,"children":[{"krate":0,"index":4243},{"krate":0,"index":4245},{"krate":0,"index":4247},{"krate":0,"index":4249},{"krate":0,"index":4251},{"krate":0,"index":4253},{"krate":0,"index":4255},{"krate":0,"index":4257},{"krate":0,"index":4259}],"decl_id":null,"docs":" Type of a surface channel. This is how we interpret the\n storage allocated with `SurfaceType`.\n","sig":null,"attributes":[{"value":"/ Type of a surface channel. This is how we interpret the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":133068,"byte_end":133127,"line_start":186,"line_end":186,"column_start":1,"column_end":60}},{"value":"/ storage allocated with `SurfaceType`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":133128,"byte_end":133169,"line_start":187,"line_end":187,"column_start":1,"column_end":42}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":133170,"byte_end":133181,"line_start":188,"line_end":188,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4661},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":139360,"byte_end":139370,"line_start":325,"line_end":325,"column_start":12,"column_end":22},"name":"BaseFormat","qualname":"::format::BaseFormat","value":"","parent":null,"children":[],"decl_id":null,"docs":" Generic run-time base format.\n","sig":null,"attributes":[{"value":"/ Generic run-time base format.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":139184,"byte_end":139217,"line_start":322,"line_end":322,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":4663},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":139371,"byte_end":139386,"line_start":325,"line_end":325,"column_start":23,"column_end":38},"name":"0","qualname":"::format::BaseFormat::0","value":"format::SurfaceType","parent":{"krate":0,"index":4661},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4664},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":139388,"byte_end":139403,"line_start":325,"line_end":325,"column_start":40,"column_end":55},"name":"1","qualname":"::format::BaseFormat::1","value":"format::ChannelType","parent":{"krate":0,"index":4661},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":786},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":139453,"byte_end":139461,"line_start":328,"line_end":328,"column_start":11,"column_end":19},"name":"AsFormat","qualname":"::format::AsFormat","value":"AsFormat","parent":null,"children":[{"krate":0,"index":787}],"decl_id":null,"docs":" Conversion trait into `Format`;\n","sig":null,"attributes":[{"value":"/ Conversion trait into `Format`;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":139407,"byte_end":139442,"line_start":327,"line_end":327,"column_start":1,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":787},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":139501,"byte_end":139505,"line_start":330,"line_end":330,"column_start":11,"column_end":15},"name":"SELF","qualname":"::format::AsFormat::SELF","value":"Format","parent":{"krate":0,"index":786},"children":[],"decl_id":null,"docs":" Associated format.\n","sig":null,"attributes":[{"value":"/ Associated format.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":139468,"byte_end":139490,"line_start":329,"line_end":329,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":5887},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":142014,"byte_end":142022,"line_start":395,"line_end":395,"column_start":5,"column_end":13},"name":"Rg4Unorm","qualname":"::format::Rg4Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":140974,"byte_end":141048,"line_start":367,"line_end":367,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141061,"byte_end":141115,"line_start":368,"line_end":368,"column_start":13,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":5928},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":142045,"byte_end":142055,"line_start":396,"line_end":396,"column_start":5,"column_end":15},"name":"Rgba4Unorm","qualname":"::format::Rgba4Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5969},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":142084,"byte_end":142094,"line_start":397,"line_end":397,"column_start":5,"column_end":15},"name":"Bgra4Unorm","qualname":"::format::Bgra4Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6010},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":142123,"byte_end":142134,"line_start":398,"line_end":398,"column_start":5,"column_end":16},"name":"R5g6b5Unorm","qualname":"::format::R5g6b5Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6051},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":142160,"byte_end":142171,"line_start":399,"line_end":399,"column_start":5,"column_end":16},"name":"B5g6r5Unorm","qualname":"::format::B5g6r5Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6092},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":142197,"byte_end":142210,"line_start":400,"line_end":400,"column_start":5,"column_end":18},"name":"R5g5b5a1Unorm","qualname":"::format::R5g5b5a1Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6133},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":142239,"byte_end":142252,"line_start":401,"line_end":401,"column_start":5,"column_end":18},"name":"B5g5r5a1Unorm","qualname":"::format::B5g5r5a1Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6174},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":142281,"byte_end":142294,"line_start":402,"line_end":402,"column_start":5,"column_end":18},"name":"A1r5g5b5Unorm","qualname":"::format::A1r5g5b5Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6215},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":142323,"byte_end":142330,"line_start":403,"line_end":403,"column_start":5,"column_end":12},"name":"R8Unorm","qualname":"::format::R8Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6256},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":142350,"byte_end":142357,"line_start":404,"line_end":404,"column_start":5,"column_end":12},"name":"R8Snorm","qualname":"::format::R8Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6297},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":142377,"byte_end":142386,"line_start":405,"line_end":405,"column_start":5,"column_end":14},"name":"R8Uscaled","qualname":"::format::R8Uscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6338},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":142408,"byte_end":142417,"line_start":406,"line_end":406,"column_start":5,"column_end":14},"name":"R8Sscaled","qualname":"::format::R8Sscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6379},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":142439,"byte_end":142445,"line_start":407,"line_end":407,"column_start":5,"column_end":11},"name":"R8Uint","qualname":"::format::R8Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6420},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":142464,"byte_end":142470,"line_start":408,"line_end":408,"column_start":5,"column_end":11},"name":"R8Sint","qualname":"::format::R8Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6461},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":142489,"byte_end":142495,"line_start":409,"line_end":409,"column_start":5,"column_end":11},"name":"R8Srgb","qualname":"::format::R8Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6502},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":142514,"byte_end":142522,"line_start":410,"line_end":410,"column_start":5,"column_end":13},"name":"Rg8Unorm","qualname":"::format::Rg8Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6543},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":142545,"byte_end":142553,"line_start":411,"line_end":411,"column_start":5,"column_end":13},"name":"Rg8Snorm","qualname":"::format::Rg8Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6584},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":142576,"byte_end":142586,"line_start":412,"line_end":412,"column_start":5,"column_end":15},"name":"Rg8Uscaled","qualname":"::format::Rg8Uscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6625},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":142611,"byte_end":142621,"line_start":413,"line_end":413,"column_start":5,"column_end":15},"name":"Rg8Sscaled","qualname":"::format::Rg8Sscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6666},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":142646,"byte_end":142653,"line_start":414,"line_end":414,"column_start":5,"column_end":12},"name":"Rg8Uint","qualname":"::format::Rg8Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6707},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":142675,"byte_end":142682,"line_start":415,"line_end":415,"column_start":5,"column_end":12},"name":"Rg8Sint","qualname":"::format::Rg8Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6748},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":142704,"byte_end":142711,"line_start":416,"line_end":416,"column_start":5,"column_end":12},"name":"Rg8Srgb","qualname":"::format::Rg8Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6789},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":142733,"byte_end":142742,"line_start":417,"line_end":417,"column_start":5,"column_end":14},"name":"Rgb8Unorm","qualname":"::format::Rgb8Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6830},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":142768,"byte_end":142777,"line_start":418,"line_end":418,"column_start":5,"column_end":14},"name":"Rgb8Snorm","qualname":"::format::Rgb8Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6871},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":142803,"byte_end":142814,"line_start":419,"line_end":419,"column_start":5,"column_end":16},"name":"Rgb8Uscaled","qualname":"::format::Rgb8Uscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6912},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":142842,"byte_end":142853,"line_start":420,"line_end":420,"column_start":5,"column_end":16},"name":"Rgb8Sscaled","qualname":"::format::Rgb8Sscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6953},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":142881,"byte_end":142889,"line_start":421,"line_end":421,"column_start":5,"column_end":13},"name":"Rgb8Uint","qualname":"::format::Rgb8Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6994},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":142914,"byte_end":142922,"line_start":422,"line_end":422,"column_start":5,"column_end":13},"name":"Rgb8Sint","qualname":"::format::Rgb8Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":7035},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":142947,"byte_end":142955,"line_start":423,"line_end":423,"column_start":5,"column_end":13},"name":"Rgb8Srgb","qualname":"::format::Rgb8Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":7076},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":142980,"byte_end":142989,"line_start":424,"line_end":424,"column_start":5,"column_end":14},"name":"Bgr8Unorm","qualname":"::format::Bgr8Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":7117},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":143015,"byte_end":143024,"line_start":425,"line_end":425,"column_start":5,"column_end":14},"name":"Bgr8Snorm","qualname":"::format::Bgr8Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":7158},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":143050,"byte_end":143061,"line_start":426,"line_end":426,"column_start":5,"column_end":16},"name":"Bgr8Uscaled","qualname":"::format::Bgr8Uscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":7199},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":143089,"byte_end":143100,"line_start":427,"line_end":427,"column_start":5,"column_end":16},"name":"Bgr8Sscaled","qualname":"::format::Bgr8Sscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":7240},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":143128,"byte_end":143136,"line_start":428,"line_end":428,"column_start":5,"column_end":13},"name":"Bgr8Uint","qualname":"::format::Bgr8Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":7281},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":143161,"byte_end":143169,"line_start":429,"line_end":429,"column_start":5,"column_end":13},"name":"Bgr8Sint","qualname":"::format::Bgr8Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":7322},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":143194,"byte_end":143202,"line_start":430,"line_end":430,"column_start":5,"column_end":13},"name":"Bgr8Srgb","qualname":"::format::Bgr8Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":7363},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":143227,"byte_end":143237,"line_start":431,"line_end":431,"column_start":5,"column_end":15},"name":"Rgba8Unorm","qualname":"::format::Rgba8Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":7404},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":143266,"byte_end":143276,"line_start":432,"line_end":432,"column_start":5,"column_end":15},"name":"Rgba8Snorm","qualname":"::format::Rgba8Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":7445},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":143305,"byte_end":143317,"line_start":433,"line_end":433,"column_start":5,"column_end":17},"name":"Rgba8Uscaled","qualname":"::format::Rgba8Uscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":7486},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":143348,"byte_end":143360,"line_start":434,"line_end":434,"column_start":5,"column_end":17},"name":"Rgba8Sscaled","qualname":"::format::Rgba8Sscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":7527},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":143391,"byte_end":143400,"line_start":435,"line_end":435,"column_start":5,"column_end":14},"name":"Rgba8Uint","qualname":"::format::Rgba8Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":7568},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":143428,"byte_end":143437,"line_start":436,"line_end":436,"column_start":5,"column_end":14},"name":"Rgba8Sint","qualname":"::format::Rgba8Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":7609},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":143465,"byte_end":143474,"line_start":437,"line_end":437,"column_start":5,"column_end":14},"name":"Rgba8Srgb","qualname":"::format::Rgba8Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":7650},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":143502,"byte_end":143512,"line_start":438,"line_end":438,"column_start":5,"column_end":15},"name":"Bgra8Unorm","qualname":"::format::Bgra8Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":7691},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":143541,"byte_end":143551,"line_start":439,"line_end":439,"column_start":5,"column_end":15},"name":"Bgra8Snorm","qualname":"::format::Bgra8Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":7732},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":143580,"byte_end":143592,"line_start":440,"line_end":440,"column_start":5,"column_end":17},"name":"Bgra8Uscaled","qualname":"::format::Bgra8Uscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":7773},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":143623,"byte_end":143635,"line_start":441,"line_end":441,"column_start":5,"column_end":17},"name":"Bgra8Sscaled","qualname":"::format::Bgra8Sscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":7814},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":143666,"byte_end":143675,"line_start":442,"line_end":442,"column_start":5,"column_end":14},"name":"Bgra8Uint","qualname":"::format::Bgra8Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":7855},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":143703,"byte_end":143712,"line_start":443,"line_end":443,"column_start":5,"column_end":14},"name":"Bgra8Sint","qualname":"::format::Bgra8Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":7896},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":143740,"byte_end":143749,"line_start":444,"line_end":444,"column_start":5,"column_end":14},"name":"Bgra8Srgb","qualname":"::format::Bgra8Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":7937},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":143777,"byte_end":143787,"line_start":445,"line_end":445,"column_start":5,"column_end":15},"name":"Abgr8Unorm","qualname":"::format::Abgr8Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":7978},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":143816,"byte_end":143826,"line_start":446,"line_end":446,"column_start":5,"column_end":15},"name":"Abgr8Snorm","qualname":"::format::Abgr8Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":8019},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":143855,"byte_end":143867,"line_start":447,"line_end":447,"column_start":5,"column_end":17},"name":"Abgr8Uscaled","qualname":"::format::Abgr8Uscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":8060},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":143898,"byte_end":143910,"line_start":448,"line_end":448,"column_start":5,"column_end":17},"name":"Abgr8Sscaled","qualname":"::format::Abgr8Sscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":8101},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":143941,"byte_end":143950,"line_start":449,"line_end":449,"column_start":5,"column_end":14},"name":"Abgr8Uint","qualname":"::format::Abgr8Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":8142},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":143978,"byte_end":143987,"line_start":450,"line_end":450,"column_start":5,"column_end":14},"name":"Abgr8Sint","qualname":"::format::Abgr8Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":8183},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":144015,"byte_end":144024,"line_start":451,"line_end":451,"column_start":5,"column_end":14},"name":"Abgr8Srgb","qualname":"::format::Abgr8Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":8224},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":144052,"byte_end":144068,"line_start":452,"line_end":452,"column_start":5,"column_end":21},"name":"A2r10g10b10Unorm","qualname":"::format::A2r10g10b10Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":8265},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":144100,"byte_end":144116,"line_start":453,"line_end":453,"column_start":5,"column_end":21},"name":"A2r10g10b10Snorm","qualname":"::format::A2r10g10b10Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":8306},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":144148,"byte_end":144166,"line_start":454,"line_end":454,"column_start":5,"column_end":23},"name":"A2r10g10b10Uscaled","qualname":"::format::A2r10g10b10Uscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":8347},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":144200,"byte_end":144218,"line_start":455,"line_end":455,"column_start":5,"column_end":23},"name":"A2r10g10b10Sscaled","qualname":"::format::A2r10g10b10Sscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":8388},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":144252,"byte_end":144267,"line_start":456,"line_end":456,"column_start":5,"column_end":20},"name":"A2r10g10b10Uint","qualname":"::format::A2r10g10b10Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":8429},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":144298,"byte_end":144313,"line_start":457,"line_end":457,"column_start":5,"column_end":20},"name":"A2r10g10b10Sint","qualname":"::format::A2r10g10b10Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":8470},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":144344,"byte_end":144360,"line_start":458,"line_end":458,"column_start":5,"column_end":21},"name":"A2b10g10r10Unorm","qualname":"::format::A2b10g10r10Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":8511},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":144392,"byte_end":144408,"line_start":459,"line_end":459,"column_start":5,"column_end":21},"name":"A2b10g10r10Snorm","qualname":"::format::A2b10g10r10Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":8552},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":144440,"byte_end":144458,"line_start":460,"line_end":460,"column_start":5,"column_end":23},"name":"A2b10g10r10Uscaled","qualname":"::format::A2b10g10r10Uscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":8593},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":144492,"byte_end":144510,"line_start":461,"line_end":461,"column_start":5,"column_end":23},"name":"A2b10g10r10Sscaled","qualname":"::format::A2b10g10r10Sscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":8634},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":144544,"byte_end":144559,"line_start":462,"line_end":462,"column_start":5,"column_end":20},"name":"A2b10g10r10Uint","qualname":"::format::A2b10g10r10Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":8675},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":144590,"byte_end":144605,"line_start":463,"line_end":463,"column_start":5,"column_end":20},"name":"A2b10g10r10Sint","qualname":"::format::A2b10g10r10Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":8716},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":144636,"byte_end":144644,"line_start":464,"line_end":464,"column_start":5,"column_end":13},"name":"R16Unorm","qualname":"::format::R16Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":8757},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":144665,"byte_end":144673,"line_start":465,"line_end":465,"column_start":5,"column_end":13},"name":"R16Snorm","qualname":"::format::R16Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":8798},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":144694,"byte_end":144704,"line_start":466,"line_end":466,"column_start":5,"column_end":15},"name":"R16Uscaled","qualname":"::format::R16Uscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":8839},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":144727,"byte_end":144737,"line_start":467,"line_end":467,"column_start":5,"column_end":15},"name":"R16Sscaled","qualname":"::format::R16Sscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":8880},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":144760,"byte_end":144767,"line_start":468,"line_end":468,"column_start":5,"column_end":12},"name":"R16Uint","qualname":"::format::R16Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":8921},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":144787,"byte_end":144794,"line_start":469,"line_end":469,"column_start":5,"column_end":12},"name":"R16Sint","qualname":"::format::R16Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":8962},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":144814,"byte_end":144823,"line_start":470,"line_end":470,"column_start":5,"column_end":14},"name":"R16Sfloat","qualname":"::format::R16Sfloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":9003},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":144845,"byte_end":144854,"line_start":471,"line_end":471,"column_start":5,"column_end":14},"name":"Rg16Unorm","qualname":"::format::Rg16Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":9044},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":144879,"byte_end":144888,"line_start":472,"line_end":472,"column_start":5,"column_end":14},"name":"Rg16Snorm","qualname":"::format::Rg16Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":9085},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":144913,"byte_end":144924,"line_start":473,"line_end":473,"column_start":5,"column_end":16},"name":"Rg16Uscaled","qualname":"::format::Rg16Uscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":9126},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":144951,"byte_end":144962,"line_start":474,"line_end":474,"column_start":5,"column_end":16},"name":"Rg16Sscaled","qualname":"::format::Rg16Sscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":9167},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":144989,"byte_end":144997,"line_start":475,"line_end":475,"column_start":5,"column_end":13},"name":"Rg16Uint","qualname":"::format::Rg16Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":9208},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":145021,"byte_end":145029,"line_start":476,"line_end":476,"column_start":5,"column_end":13},"name":"Rg16Sint","qualname":"::format::Rg16Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":9249},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":145053,"byte_end":145063,"line_start":477,"line_end":477,"column_start":5,"column_end":15},"name":"Rg16Sfloat","qualname":"::format::Rg16Sfloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":9290},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":145089,"byte_end":145099,"line_start":478,"line_end":478,"column_start":5,"column_end":15},"name":"Rgb16Unorm","qualname":"::format::Rgb16Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":9331},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":145128,"byte_end":145138,"line_start":479,"line_end":479,"column_start":5,"column_end":15},"name":"Rgb16Snorm","qualname":"::format::Rgb16Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":9372},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":145167,"byte_end":145179,"line_start":480,"line_end":480,"column_start":5,"column_end":17},"name":"Rgb16Uscaled","qualname":"::format::Rgb16Uscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":9413},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":145210,"byte_end":145222,"line_start":481,"line_end":481,"column_start":5,"column_end":17},"name":"Rgb16Sscaled","qualname":"::format::Rgb16Sscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":9454},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":145253,"byte_end":145262,"line_start":482,"line_end":482,"column_start":5,"column_end":14},"name":"Rgb16Uint","qualname":"::format::Rgb16Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":9495},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":145290,"byte_end":145299,"line_start":483,"line_end":483,"column_start":5,"column_end":14},"name":"Rgb16Sint","qualname":"::format::Rgb16Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":9536},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":145327,"byte_end":145338,"line_start":484,"line_end":484,"column_start":5,"column_end":16},"name":"Rgb16Sfloat","qualname":"::format::Rgb16Sfloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":9577},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":145368,"byte_end":145379,"line_start":485,"line_end":485,"column_start":5,"column_end":16},"name":"Rgba16Unorm","qualname":"::format::Rgba16Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":9618},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":145412,"byte_end":145423,"line_start":486,"line_end":486,"column_start":5,"column_end":16},"name":"Rgba16Snorm","qualname":"::format::Rgba16Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":9659},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":145456,"byte_end":145469,"line_start":487,"line_end":487,"column_start":5,"column_end":18},"name":"Rgba16Uscaled","qualname":"::format::Rgba16Uscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":9700},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":145504,"byte_end":145517,"line_start":488,"line_end":488,"column_start":5,"column_end":18},"name":"Rgba16Sscaled","qualname":"::format::Rgba16Sscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":9741},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":145552,"byte_end":145562,"line_start":489,"line_end":489,"column_start":5,"column_end":15},"name":"Rgba16Uint","qualname":"::format::Rgba16Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":9782},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":145594,"byte_end":145604,"line_start":490,"line_end":490,"column_start":5,"column_end":15},"name":"Rgba16Sint","qualname":"::format::Rgba16Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":9823},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":145636,"byte_end":145648,"line_start":491,"line_end":491,"column_start":5,"column_end":17},"name":"Rgba16Sfloat","qualname":"::format::Rgba16Sfloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":9864},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":145682,"byte_end":145689,"line_start":492,"line_end":492,"column_start":5,"column_end":12},"name":"R32Uint","qualname":"::format::R32Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":9905},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":145709,"byte_end":145716,"line_start":493,"line_end":493,"column_start":5,"column_end":12},"name":"R32Sint","qualname":"::format::R32Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":9946},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":145736,"byte_end":145745,"line_start":494,"line_end":494,"column_start":5,"column_end":14},"name":"R32Sfloat","qualname":"::format::R32Sfloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":9987},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":145767,"byte_end":145775,"line_start":495,"line_end":495,"column_start":5,"column_end":13},"name":"Rg32Uint","qualname":"::format::Rg32Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":10028},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":145799,"byte_end":145807,"line_start":496,"line_end":496,"column_start":5,"column_end":13},"name":"Rg32Sint","qualname":"::format::Rg32Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":10069},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":145831,"byte_end":145841,"line_start":497,"line_end":497,"column_start":5,"column_end":15},"name":"Rg32Sfloat","qualname":"::format::Rg32Sfloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":10110},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":145867,"byte_end":145876,"line_start":498,"line_end":498,"column_start":5,"column_end":14},"name":"Rgb32Uint","qualname":"::format::Rgb32Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":10151},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":145904,"byte_end":145913,"line_start":499,"line_end":499,"column_start":5,"column_end":14},"name":"Rgb32Sint","qualname":"::format::Rgb32Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":10192},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":145941,"byte_end":145952,"line_start":500,"line_end":500,"column_start":5,"column_end":16},"name":"Rgb32Sfloat","qualname":"::format::Rgb32Sfloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":10233},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":145982,"byte_end":145992,"line_start":501,"line_end":501,"column_start":5,"column_end":15},"name":"Rgba32Uint","qualname":"::format::Rgba32Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":10274},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":146024,"byte_end":146034,"line_start":502,"line_end":502,"column_start":5,"column_end":15},"name":"Rgba32Sint","qualname":"::format::Rgba32Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":10315},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":146066,"byte_end":146078,"line_start":503,"line_end":503,"column_start":5,"column_end":17},"name":"Rgba32Sfloat","qualname":"::format::Rgba32Sfloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":10356},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":146112,"byte_end":146119,"line_start":504,"line_end":504,"column_start":5,"column_end":12},"name":"R64Uint","qualname":"::format::R64Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":10397},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":146139,"byte_end":146146,"line_start":505,"line_end":505,"column_start":5,"column_end":12},"name":"R64Sint","qualname":"::format::R64Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":10438},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":146166,"byte_end":146175,"line_start":506,"line_end":506,"column_start":5,"column_end":14},"name":"R64Sfloat","qualname":"::format::R64Sfloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":10479},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":146197,"byte_end":146205,"line_start":507,"line_end":507,"column_start":5,"column_end":13},"name":"Rg64Uint","qualname":"::format::Rg64Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":10520},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":146229,"byte_end":146237,"line_start":508,"line_end":508,"column_start":5,"column_end":13},"name":"Rg64Sint","qualname":"::format::Rg64Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":10561},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":146261,"byte_end":146271,"line_start":509,"line_end":509,"column_start":5,"column_end":15},"name":"Rg64Sfloat","qualname":"::format::Rg64Sfloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":10602},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":146297,"byte_end":146306,"line_start":510,"line_end":510,"column_start":5,"column_end":14},"name":"Rgb64Uint","qualname":"::format::Rgb64Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":10643},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":146334,"byte_end":146343,"line_start":511,"line_end":511,"column_start":5,"column_end":14},"name":"Rgb64Sint","qualname":"::format::Rgb64Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":10684},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":146371,"byte_end":146382,"line_start":512,"line_end":512,"column_start":5,"column_end":16},"name":"Rgb64Sfloat","qualname":"::format::Rgb64Sfloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":10725},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":146412,"byte_end":146422,"line_start":513,"line_end":513,"column_start":5,"column_end":15},"name":"Rgba64Uint","qualname":"::format::Rgba64Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":10766},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":146454,"byte_end":146464,"line_start":514,"line_end":514,"column_start":5,"column_end":15},"name":"Rgba64Sint","qualname":"::format::Rgba64Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":10807},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":146496,"byte_end":146508,"line_start":515,"line_end":515,"column_start":5,"column_end":17},"name":"Rgba64Sfloat","qualname":"::format::Rgba64Sfloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":10848},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":146542,"byte_end":146557,"line_start":516,"line_end":516,"column_start":5,"column_end":20},"name":"B10g11r11Ufloat","qualname":"::format::B10g11r11Ufloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":10889},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":146587,"byte_end":146601,"line_start":517,"line_end":517,"column_start":5,"column_end":19},"name":"E5b9g9r9Ufloat","qualname":"::format::E5b9g9r9Ufloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":10930},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":146631,"byte_end":146639,"line_start":518,"line_end":518,"column_start":5,"column_end":13},"name":"D16Unorm","qualname":"::format::D16Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":10971},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":146660,"byte_end":146670,"line_start":519,"line_end":519,"column_start":5,"column_end":15},"name":"X8D24Unorm","qualname":"::format::X8D24Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":11012},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":146693,"byte_end":146702,"line_start":520,"line_end":520,"column_start":5,"column_end":14},"name":"D32Sfloat","qualname":"::format::D32Sfloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":11053},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":146724,"byte_end":146730,"line_start":521,"line_end":521,"column_start":5,"column_end":11},"name":"S8Uint","qualname":"::format::S8Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":11094},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":146749,"byte_end":146763,"line_start":522,"line_end":522,"column_start":5,"column_end":19},"name":"D16UnormS8Uint","qualname":"::format::D16UnormS8Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":11135},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":146787,"byte_end":146801,"line_start":523,"line_end":523,"column_start":5,"column_end":19},"name":"D24UnormS8Uint","qualname":"::format::D24UnormS8Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":11176},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":146825,"byte_end":146840,"line_start":524,"line_end":524,"column_start":5,"column_end":20},"name":"D32SfloatS8Uint","qualname":"::format::D32SfloatS8Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":11217},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":146865,"byte_end":146876,"line_start":525,"line_end":525,"column_start":5,"column_end":16},"name":"Bc1RgbUnorm","qualname":"::format::Bc1RgbUnorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":11258},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":146901,"byte_end":146911,"line_start":526,"line_end":526,"column_start":5,"column_end":15},"name":"Bc1RgbSrgb","qualname":"::format::Bc1RgbSrgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":11299},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":146935,"byte_end":146947,"line_start":527,"line_end":527,"column_start":5,"column_end":17},"name":"Bc1RgbaUnorm","qualname":"::format::Bc1RgbaUnorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":11340},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":146973,"byte_end":146984,"line_start":528,"line_end":528,"column_start":5,"column_end":16},"name":"Bc1RgbaSrgb","qualname":"::format::Bc1RgbaSrgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":11381},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":147009,"byte_end":147017,"line_start":529,"line_end":529,"column_start":5,"column_end":13},"name":"Bc2Unorm","qualname":"::format::Bc2Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":11422},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":147038,"byte_end":147045,"line_start":530,"line_end":530,"column_start":5,"column_end":12},"name":"Bc2Srgb","qualname":"::format::Bc2Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":11463},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":147065,"byte_end":147073,"line_start":531,"line_end":531,"column_start":5,"column_end":13},"name":"Bc3Unorm","qualname":"::format::Bc3Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":11504},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":147094,"byte_end":147101,"line_start":532,"line_end":532,"column_start":5,"column_end":12},"name":"Bc3Srgb","qualname":"::format::Bc3Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":11545},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":147121,"byte_end":147129,"line_start":533,"line_end":533,"column_start":5,"column_end":13},"name":"Bc4Unorm","qualname":"::format::Bc4Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":11586},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":147150,"byte_end":147158,"line_start":534,"line_end":534,"column_start":5,"column_end":13},"name":"Bc4Snorm","qualname":"::format::Bc4Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":11627},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":147179,"byte_end":147187,"line_start":535,"line_end":535,"column_start":5,"column_end":13},"name":"Bc5Unorm","qualname":"::format::Bc5Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":11668},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":147208,"byte_end":147216,"line_start":536,"line_end":536,"column_start":5,"column_end":13},"name":"Bc5Snorm","qualname":"::format::Bc5Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":11709},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":147237,"byte_end":147247,"line_start":537,"line_end":537,"column_start":5,"column_end":15},"name":"Bc6hUfloat","qualname":"::format::Bc6hUfloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":11750},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":147269,"byte_end":147279,"line_start":538,"line_end":538,"column_start":5,"column_end":15},"name":"Bc6hSfloat","qualname":"::format::Bc6hSfloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":11791},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":147301,"byte_end":147309,"line_start":539,"line_end":539,"column_start":5,"column_end":13},"name":"Bc7Unorm","qualname":"::format::Bc7Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":11832},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":147330,"byte_end":147337,"line_start":540,"line_end":540,"column_start":5,"column_end":12},"name":"Bc7Srgb","qualname":"::format::Bc7Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":11873},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":147357,"byte_end":147372,"line_start":541,"line_end":541,"column_start":5,"column_end":20},"name":"Etc2R8g8b8Unorm","qualname":"::format::Etc2R8g8b8Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":11914},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":147403,"byte_end":147417,"line_start":542,"line_end":542,"column_start":5,"column_end":19},"name":"Etc2R8g8b8Srgb","qualname":"::format::Etc2R8g8b8Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":11955},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":147447,"byte_end":147464,"line_start":543,"line_end":543,"column_start":5,"column_end":22},"name":"Etc2R8g8b8a1Unorm","qualname":"::format::Etc2R8g8b8a1Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":11996},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":147498,"byte_end":147514,"line_start":544,"line_end":544,"column_start":5,"column_end":21},"name":"Etc2R8g8b8a1Srgb","qualname":"::format::Etc2R8g8b8a1Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":12037},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":147547,"byte_end":147564,"line_start":545,"line_end":545,"column_start":5,"column_end":22},"name":"Etc2R8g8b8a8Unorm","qualname":"::format::Etc2R8g8b8a8Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":12078},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":147598,"byte_end":147614,"line_start":546,"line_end":546,"column_start":5,"column_end":21},"name":"Etc2R8g8b8a8Srgb","qualname":"::format::Etc2R8g8b8a8Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":12119},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":147647,"byte_end":147658,"line_start":547,"line_end":547,"column_start":5,"column_end":16},"name":"EacR11Unorm","qualname":"::format::EacR11Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":12160},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":147683,"byte_end":147694,"line_start":548,"line_end":548,"column_start":5,"column_end":16},"name":"EacR11Snorm","qualname":"::format::EacR11Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":12201},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":147719,"byte_end":147733,"line_start":549,"line_end":549,"column_start":5,"column_end":19},"name":"EacR11g11Unorm","qualname":"::format::EacR11g11Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":12242},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":147762,"byte_end":147776,"line_start":550,"line_end":550,"column_start":5,"column_end":19},"name":"EacR11g11Snorm","qualname":"::format::EacR11g11Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":12283},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":147805,"byte_end":147817,"line_start":551,"line_end":551,"column_start":5,"column_end":17},"name":"Astc4x4Unorm","qualname":"::format::Astc4x4Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":12324},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":147843,"byte_end":147854,"line_start":552,"line_end":552,"column_start":5,"column_end":16},"name":"Astc4x4Srgb","qualname":"::format::Astc4x4Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":12365},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":147879,"byte_end":147891,"line_start":553,"line_end":553,"column_start":5,"column_end":17},"name":"Astc5x4Unorm","qualname":"::format::Astc5x4Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":12406},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":147917,"byte_end":147928,"line_start":554,"line_end":554,"column_start":5,"column_end":16},"name":"Astc5x4Srgb","qualname":"::format::Astc5x4Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":12447},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":147953,"byte_end":147965,"line_start":555,"line_end":555,"column_start":5,"column_end":17},"name":"Astc5x5Unorm","qualname":"::format::Astc5x5Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":12488},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":147991,"byte_end":148002,"line_start":556,"line_end":556,"column_start":5,"column_end":16},"name":"Astc5x5Srgb","qualname":"::format::Astc5x5Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":12529},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":148027,"byte_end":148039,"line_start":557,"line_end":557,"column_start":5,"column_end":17},"name":"Astc6x5Unorm","qualname":"::format::Astc6x5Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":12570},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":148065,"byte_end":148076,"line_start":558,"line_end":558,"column_start":5,"column_end":16},"name":"Astc6x5Srgb","qualname":"::format::Astc6x5Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":12611},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":148101,"byte_end":148113,"line_start":559,"line_end":559,"column_start":5,"column_end":17},"name":"Astc6x6Unorm","qualname":"::format::Astc6x6Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":12652},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":148139,"byte_end":148150,"line_start":560,"line_end":560,"column_start":5,"column_end":16},"name":"Astc6x6Srgb","qualname":"::format::Astc6x6Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":12693},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":148175,"byte_end":148187,"line_start":561,"line_end":561,"column_start":5,"column_end":17},"name":"Astc8x5Unorm","qualname":"::format::Astc8x5Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":12734},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":148213,"byte_end":148224,"line_start":562,"line_end":562,"column_start":5,"column_end":16},"name":"Astc8x5Srgb","qualname":"::format::Astc8x5Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":12775},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":148249,"byte_end":148261,"line_start":563,"line_end":563,"column_start":5,"column_end":17},"name":"Astc8x6Unorm","qualname":"::format::Astc8x6Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":12816},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":148287,"byte_end":148298,"line_start":564,"line_end":564,"column_start":5,"column_end":16},"name":"Astc8x6Srgb","qualname":"::format::Astc8x6Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":12857},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":148323,"byte_end":148335,"line_start":565,"line_end":565,"column_start":5,"column_end":17},"name":"Astc8x8Unorm","qualname":"::format::Astc8x8Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":12898},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":148361,"byte_end":148372,"line_start":566,"line_end":566,"column_start":5,"column_end":16},"name":"Astc8x8Srgb","qualname":"::format::Astc8x8Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":12939},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":148397,"byte_end":148410,"line_start":567,"line_end":567,"column_start":5,"column_end":18},"name":"Astc10x5Unorm","qualname":"::format::Astc10x5Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":12980},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":148437,"byte_end":148449,"line_start":568,"line_end":568,"column_start":5,"column_end":17},"name":"Astc10x5Srgb","qualname":"::format::Astc10x5Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":13021},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":148475,"byte_end":148488,"line_start":569,"line_end":569,"column_start":5,"column_end":18},"name":"Astc10x6Unorm","qualname":"::format::Astc10x6Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":13062},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":148515,"byte_end":148527,"line_start":570,"line_end":570,"column_start":5,"column_end":17},"name":"Astc10x6Srgb","qualname":"::format::Astc10x6Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":13103},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":148553,"byte_end":148566,"line_start":571,"line_end":571,"column_start":5,"column_end":18},"name":"Astc10x8Unorm","qualname":"::format::Astc10x8Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":13144},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":148593,"byte_end":148605,"line_start":572,"line_end":572,"column_start":5,"column_end":17},"name":"Astc10x8Srgb","qualname":"::format::Astc10x8Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":13185},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":148631,"byte_end":148645,"line_start":573,"line_end":573,"column_start":5,"column_end":19},"name":"Astc10x10Unorm","qualname":"::format::Astc10x10Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":13226},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":148673,"byte_end":148686,"line_start":574,"line_end":574,"column_start":5,"column_end":18},"name":"Astc10x10Srgb","qualname":"::format::Astc10x10Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":13267},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":148713,"byte_end":148727,"line_start":575,"line_end":575,"column_start":5,"column_end":19},"name":"Astc12x10Unorm","qualname":"::format::Astc12x10Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":13308},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":148755,"byte_end":148768,"line_start":576,"line_end":576,"column_start":5,"column_end":18},"name":"Astc12x10Srgb","qualname":"::format::Astc12x10Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":13349},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":148795,"byte_end":148809,"line_start":577,"line_end":577,"column_start":5,"column_end":19},"name":"Astc12x12Unorm","qualname":"::format::Astc12x12Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":13390},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":148837,"byte_end":148850,"line_start":578,"line_end":578,"column_start":5,"column_end":18},"name":"Astc12x12Srgb","qualname":"::format::Astc12x12Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141430,"byte_end":141504,"line_start":378,"line_end":378,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141517,"byte_end":141571,"line_start":379,"line_end":379,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":141584,"byte_end":141606,"line_start":380,"line_end":380,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":148983,"byte_end":148994,"line_start":585,"line_end":585,"column_start":12,"column_end":23},"name":"base_format","qualname":"<Format>::base_format","value":"pub fn base_format(Self) -> BaseFormat","parent":null,"children":[],"decl_id":null,"docs":" Get base format.","sig":null,"attributes":[{"value":"/ Get base format.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":148894,"byte_end":148914,"line_start":582,"line_end":582,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":148919,"byte_end":148922,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if format is `Undefined`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":148927,"byte_end":148971,"line_start":584,"line_end":584,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":149200,"byte_end":149212,"line_start":591,"line_end":591,"column_start":12,"column_end":24},"name":"surface_desc","qualname":"<Format>::surface_desc","value":"pub fn surface_desc(&Self) -> FormatDesc","parent":null,"children":[],"decl_id":null,"docs":" A shortcut to obtain surface format description.\n","sig":null,"attributes":[{"value":"/ A shortcut to obtain surface format description.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":149136,"byte_end":149188,"line_start":590,"line_end":590,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":149340,"byte_end":149348,"line_start":596,"line_end":596,"column_start":12,"column_end":20},"name":"is_color","qualname":"<Format>::is_color","value":"pub fn is_color(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the format has a color aspect.\n","sig":null,"attributes":[{"value":"/ Returns if the format has a color aspect.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":149283,"byte_end":149328,"line_start":595,"line_end":595,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":149494,"byte_end":149502,"line_start":601,"line_end":601,"column_start":12,"column_end":20},"name":"is_depth","qualname":"<Format>::is_depth","value":"pub fn is_depth(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the format has a depth aspect.\n","sig":null,"attributes":[{"value":"/ Returns if the format has a depth aspect.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":149437,"byte_end":149482,"line_start":600,"line_end":600,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":149650,"byte_end":149660,"line_start":606,"line_end":606,"column_start":12,"column_end":22},"name":"is_stencil","qualname":"<Format>::is_stencil","value":"pub fn is_stencil(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the format has a stencil aspect.\n","sig":null,"attributes":[{"value":"/ Returns if the format has a stencil aspect.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":149591,"byte_end":149638,"line_start":605,"line_end":605,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":806},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"image","qualname":"::image","value":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","parent":null,"children":[{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":13431},{"krate":0,"index":13501},{"krate":0,"index":13500},{"krate":0,"index":13498},{"krate":0,"index":13496},{"krate":0,"index":13493},{"krate":0,"index":13489},{"krate":0,"index":13490},{"krate":0,"index":13486},{"krate":0,"index":13487},{"krate":0,"index":13480},{"krate":0,"index":13435},{"krate":0,"index":823},{"krate":0,"index":13503},{"krate":0,"index":13571},{"krate":0,"index":13570},{"krate":0,"index":13568},{"krate":0,"index":13565},{"krate":0,"index":13561},{"krate":0,"index":13562},{"krate":0,"index":13558},{"krate":0,"index":13559},{"krate":0,"index":13552},{"krate":0,"index":13507},{"krate":0,"index":827},{"krate":0,"index":13573},{"krate":0,"index":13639},{"krate":0,"index":13638},{"krate":0,"index":13636},{"krate":0,"index":13633},{"krate":0,"index":13634},{"krate":0,"index":13630},{"krate":0,"index":13628},{"krate":0,"index":13625},{"krate":0,"index":13626},{"krate":0,"index":13623},{"krate":0,"index":13617},{"krate":0,"index":13578},{"krate":0,"index":13641},{"krate":0,"index":13680},{"krate":0,"index":13679},{"krate":0,"index":13677},{"krate":0,"index":13673},{"krate":0,"index":13674},{"krate":0,"index":13670},{"krate":0,"index":13671},{"krate":0,"index":13662},{"krate":0,"index":13667},{"krate":0,"index":830},{"krate":0,"index":13682},{"krate":0,"index":13720},{"krate":0,"index":13718},{"krate":0,"index":13714},{"krate":0,"index":13715},{"krate":0,"index":13711},{"krate":0,"index":13712},{"krate":0,"index":13703},{"krate":0,"index":13708},{"krate":0,"index":832},{"krate":0,"index":13722},{"krate":0,"index":13749},{"krate":0,"index":13747},{"krate":0,"index":13744},{"krate":0,"index":13745},{"krate":0,"index":13741},{"krate":0,"index":13737},{"krate":0,"index":13738},{"krate":0,"index":13729},{"krate":0,"index":13734},{"krate":0,"index":13751},{"krate":0,"index":13817},{"krate":0,"index":13816},{"krate":0,"index":13814},{"krate":0,"index":13811},{"krate":0,"index":13812},{"krate":0,"index":13808},{"krate":0,"index":13806},{"krate":0,"index":13803},{"krate":0,"index":13804},{"krate":0,"index":13801},{"krate":0,"index":13795},{"krate":0,"index":13756},{"krate":0,"index":13819},{"krate":0,"index":13891},{"krate":0,"index":13890},{"krate":0,"index":13888},{"krate":0,"index":13885},{"krate":0,"index":13886},{"krate":0,"index":13882},{"krate":0,"index":13880},{"krate":0,"index":13876},{"krate":0,"index":13877},{"krate":0,"index":13870},{"krate":0,"index":13864},{"krate":0,"index":13825},{"krate":0,"index":13893},{"krate":0,"index":13975},{"krate":0,"index":13974},{"krate":0,"index":13972},{"krate":0,"index":13969},{"krate":0,"index":13970},{"krate":0,"index":13966},{"krate":0,"index":13964},{"krate":0,"index":13961},{"krate":0,"index":13962},{"krate":0,"index":13959},{"krate":0,"index":13953},{"krate":0,"index":13906},{"krate":0,"index":834},{"krate":0,"index":13977},{"krate":0,"index":14115},{"krate":0,"index":14114},{"krate":0,"index":14112},{"krate":0,"index":14109},{"krate":0,"index":14110},{"krate":0,"index":14106},{"krate":0,"index":14104},{"krate":0,"index":14100},{"krate":0,"index":14101},{"krate":0,"index":14070},{"krate":0,"index":14064},{"krate":0,"index":13993},{"krate":0,"index":836},{"krate":0,"index":14117},{"krate":0,"index":14203},{"krate":0,"index":14202},{"krate":0,"index":14200},{"krate":0,"index":14197},{"krate":0,"index":14198},{"krate":0,"index":14194},{"krate":0,"index":14192},{"krate":0,"index":14189},{"krate":0,"index":14190},{"krate":0,"index":14187},{"krate":0,"index":14181},{"krate":0,"index":14132},{"krate":0,"index":14205},{"krate":0,"index":14269},{"krate":0,"index":14228},{"krate":0,"index":14227},{"krate":0,"index":14223},{"krate":0,"index":14224},{"krate":0,"index":14220},{"krate":0,"index":14221},{"krate":0,"index":14218},{"krate":0,"index":14212},{"krate":0,"index":14210},{"krate":0,"index":14207},{"krate":0,"index":14275},{"krate":0,"index":14282},{"krate":0,"index":14284},{"krate":0,"index":14286},{"krate":0,"index":14288},{"krate":0,"index":14290},{"krate":0,"index":14299},{"krate":0,"index":14302},{"krate":0,"index":14304},{"krate":0,"index":14307},{"krate":0,"index":14309},{"krate":0,"index":14312},{"krate":0,"index":14314},{"krate":0,"index":14317},{"krate":0,"index":14319},{"krate":0,"index":14322},{"krate":0,"index":14325},{"krate":0,"index":14348},{"krate":0,"index":14412},{"krate":0,"index":14371},{"krate":0,"index":14370},{"krate":0,"index":14366},{"krate":0,"index":14367},{"krate":0,"index":14363},{"krate":0,"index":14364},{"krate":0,"index":14361},{"krate":0,"index":14355},{"krate":0,"index":14353},{"krate":0,"index":14350},{"krate":0,"index":14418},{"krate":0,"index":14430},{"krate":0,"index":14432},{"krate":0,"index":14434},{"krate":0,"index":14436},{"krate":0,"index":14438},{"krate":0,"index":14452},{"krate":0,"index":14455},{"krate":0,"index":14457},{"krate":0,"index":14460},{"krate":0,"index":14462},{"krate":0,"index":14465},{"krate":0,"index":14467},{"krate":0,"index":14470},{"krate":0,"index":14472},{"krate":0,"index":14475},{"krate":0,"index":14478},{"krate":0,"index":848},{"krate":0,"index":14516},{"krate":0,"index":14590},{"krate":0,"index":14589},{"krate":0,"index":14587},{"krate":0,"index":14584},{"krate":0,"index":14585},{"krate":0,"index":14581},{"krate":0,"index":14579},{"krate":0,"index":14576},{"krate":0,"index":14577},{"krate":0,"index":14574},{"krate":0,"index":14568},{"krate":0,"index":14525},{"krate":0,"index":14592},{"krate":0,"index":14639},{"krate":0,"index":14638},{"krate":0,"index":14636},{"krate":0,"index":14633},{"krate":0,"index":14634},{"krate":0,"index":14630},{"krate":0,"index":14626},{"krate":0,"index":14627},{"krate":0,"index":14620},{"krate":0,"index":14614},{"krate":0,"index":14595},{"krate":0,"index":851},{"krate":0,"index":854},{"krate":0,"index":856},{"krate":0,"index":14641},{"krate":0,"index":14688},{"krate":0,"index":14687},{"krate":0,"index":14685},{"krate":0,"index":14682},{"krate":0,"index":14683},{"krate":0,"index":14679},{"krate":0,"index":14675},{"krate":0,"index":14676},{"krate":0,"index":14669},{"krate":0,"index":14663},{"krate":0,"index":14644},{"krate":0,"index":858},{"krate":0,"index":863},{"krate":0,"index":14690},{"krate":0,"index":14778},{"krate":0,"index":14776},{"krate":0,"index":14773},{"krate":0,"index":14774},{"krate":0,"index":14770},{"krate":0,"index":14766},{"krate":0,"index":14767},{"krate":0,"index":14760},{"krate":0,"index":14701},{"krate":0,"index":868},{"krate":0,"index":14780},{"krate":0,"index":14875},{"krate":0,"index":14873},{"krate":0,"index":14871},{"krate":0,"index":14868},{"krate":0,"index":14865},{"krate":0,"index":14866},{"krate":0,"index":14862},{"krate":0,"index":14863},{"krate":0,"index":14856},{"krate":0,"index":14801},{"krate":0,"index":14876},{"krate":0,"index":14940},{"krate":0,"index":14899},{"krate":0,"index":14898},{"krate":0,"index":14894},{"krate":0,"index":14895},{"krate":0,"index":14891},{"krate":0,"index":14892},{"krate":0,"index":14889},{"krate":0,"index":14883},{"krate":0,"index":14881},{"krate":0,"index":14878},{"krate":0,"index":14946},{"krate":0,"index":14963},{"krate":0,"index":14965},{"krate":0,"index":14967},{"krate":0,"index":14969},{"krate":0,"index":14971},{"krate":0,"index":14990},{"krate":0,"index":14993},{"krate":0,"index":14995},{"krate":0,"index":14998},{"krate":0,"index":15000},{"krate":0,"index":15003},{"krate":0,"index":15005},{"krate":0,"index":15008},{"krate":0,"index":15010},{"krate":0,"index":15013},{"krate":0,"index":15016},{"krate":0,"index":870},{"krate":0,"index":15069},{"krate":0,"index":15137},{"krate":0,"index":15136},{"krate":0,"index":15134},{"krate":0,"index":15131},{"krate":0,"index":15127},{"krate":0,"index":15128},{"krate":0,"index":15124},{"krate":0,"index":15125},{"krate":0,"index":15118},{"krate":0,"index":15073},{"krate":0,"index":15139},{"krate":0,"index":15206},{"krate":0,"index":15204},{"krate":0,"index":15201},{"krate":0,"index":15197},{"krate":0,"index":15198},{"krate":0,"index":15194},{"krate":0,"index":15195},{"krate":0,"index":15188},{"krate":0,"index":15143},{"krate":0,"index":15208},{"krate":0,"index":15275},{"krate":0,"index":15273},{"krate":0,"index":15270},{"krate":0,"index":15266},{"krate":0,"index":15267},{"krate":0,"index":15263},{"krate":0,"index":15264},{"krate":0,"index":15257},{"krate":0,"index":15212},{"krate":0,"index":15277},{"krate":0,"index":15351},{"krate":0,"index":15350},{"krate":0,"index":15348},{"krate":0,"index":15344},{"krate":0,"index":15345},{"krate":0,"index":15341},{"krate":0,"index":15342},{"krate":0,"index":15338},{"krate":0,"index":15332},{"krate":0,"index":15283},{"krate":0,"index":15353},{"krate":0,"index":15423},{"krate":0,"index":15421},{"krate":0,"index":15417},{"krate":0,"index":15418},{"krate":0,"index":15414},{"krate":0,"index":15415},{"krate":0,"index":15411},{"krate":0,"index":15405},{"krate":0,"index":15358}],"decl_id":null,"docs":" Image related structures.","sig":null,"attributes":[{"value":"/ Image related structures.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":150086,"byte_end":150115,"line_start":1,"line_end":1,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":150116,"byte_end":150119,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An image is a block of GPU memory representing a grid of texels.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":150120,"byte_end":150188,"line_start":3,"line_end":3,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":817},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":150361,"byte_end":150365,"line_start":17,"line_end":17,"column_start":10,"column_end":14},"name":"Size","qualname":"::image::Size","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Dimension size.\n","sig":null,"attributes":[{"value":"/ Dimension size.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":150332,"byte_end":150351,"line_start":16,"line_end":16,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":818},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":150410,"byte_end":150420,"line_start":19,"line_end":19,"column_start":10,"column_end":20},"name":"NumSamples","qualname":"::image::NumSamples","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Number of MSAA samples.\n","sig":null,"attributes":[{"value":"/ Number of MSAA samples.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":150373,"byte_end":150400,"line_start":18,"line_end":18,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":819},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":150453,"byte_end":150458,"line_start":21,"line_end":21,"column_start":10,"column_end":15},"name":"Layer","qualname":"::image::Layer","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Image layer.\n","sig":null,"attributes":[{"value":"/ Image layer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":150427,"byte_end":150443,"line_start":20,"line_end":20,"column_start":1,"column_end":17}}]},{"kind":"Type","id":{"krate":0,"index":820},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":150499,"byte_end":150504,"line_start":23,"line_end":23,"column_start":10,"column_end":15},"name":"Level","qualname":"::image::Level","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Image mipmap level.\n","sig":null,"attributes":[{"value":"/ Image mipmap level.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":150466,"byte_end":150489,"line_start":22,"line_end":22,"column_start":1,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":821},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":150570,"byte_end":150579,"line_start":25,"line_end":25,"column_start":11,"column_end":20},"name":"MAX_LEVEL","qualname":"::image::MAX_LEVEL","value":"Level","parent":null,"children":[],"decl_id":null,"docs":" Maximum accessible mipmap level of an image.\n","sig":null,"attributes":[{"value":"/ Maximum accessible mipmap level of an image.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":150511,"byte_end":150559,"line_start":24,"line_end":24,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":822},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":150638,"byte_end":150653,"line_start":27,"line_end":27,"column_start":10,"column_end":25},"name":"TexelCoordinate","qualname":"::image::TexelCoordinate","value":"i32","parent":null,"children":[],"decl_id":null,"docs":" A texel coordinate in an image.\n","sig":null,"attributes":[{"value":"/ A texel coordinate in an image.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":150593,"byte_end":150628,"line_start":26,"line_end":26,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13431},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":150870,"byte_end":150876,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"Extent","qualname":"::image::Extent","value":"Extent { width, height, depth }","parent":null,"children":[{"krate":0,"index":13432},{"krate":0,"index":13433},{"krate":0,"index":13434}],"decl_id":null,"docs":" Describes the size of an image, which may be up to three dimensional.\n","sig":null,"attributes":[{"value":"/ Describes the size of an image, which may be up to three dimensional.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":150662,"byte_end":150735,"line_start":29,"line_end":29,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":13432},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":150907,"byte_end":150912,"line_start":34,"line_end":34,"column_start":9,"column_end":14},"name":"width","qualname":"::image::Extent::width","value":"u32","parent":{"krate":0,"index":13431},"children":[],"decl_id":null,"docs":" Image width\n","sig":null,"attributes":[{"value":"/ Image width","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":150883,"byte_end":150898,"line_start":33,"line_end":33,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":13433},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":150949,"byte_end":150955,"line_start":36,"line_end":36,"column_start":9,"column_end":15},"name":"height","qualname":"::image::Extent::height","value":"u32","parent":{"krate":0,"index":13431},"children":[],"decl_id":null,"docs":" Image height\n","sig":null,"attributes":[{"value":"/ Image height","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":150924,"byte_end":150940,"line_start":35,"line_end":35,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":13434},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":150992,"byte_end":150997,"line_start":38,"line_end":38,"column_start":9,"column_end":14},"name":"depth","qualname":"::image::Extent::depth","value":"u32","parent":{"krate":0,"index":13431},"children":[],"decl_id":null,"docs":" Image depth.\n","sig":null,"attributes":[{"value":"/ Image depth.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":150967,"byte_end":150983,"line_start":37,"line_end":37,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":151087,"byte_end":151095,"line_start":43,"line_end":43,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Extent>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if one of the dimensions is zero.\n","sig":null,"attributes":[{"value":"/ Return true if one of the dimensions is zero.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":151026,"byte_end":151075,"line_start":42,"line_end":42,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":151246,"byte_end":151254,"line_start":47,"line_end":47,"column_start":12,"column_end":20},"name":"at_level","qualname":"<Extent>::at_level","value":"pub fn at_level(&Self, Level) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the extent at a particular mipmap level.\n","sig":null,"attributes":[{"value":"/ Get the extent at a particular mipmap level.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":151186,"byte_end":151234,"line_start":46,"line_end":46,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":151526,"byte_end":151530,"line_start":55,"line_end":55,"column_start":12,"column_end":16},"name":"rect","qualname":"<Extent>::rect","value":"pub fn rect(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Get a rectangle for the full area of extent.\n","sig":null,"attributes":[{"value":"/ Get a rectangle for the full area of extent.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":151466,"byte_end":151514,"line_start":54,"line_end":54,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":13503},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":152097,"byte_end":152103,"line_start":73,"line_end":73,"column_start":12,"column_end":18},"name":"Offset","qualname":"::image::Offset","value":"Offset { x, y, z }","parent":null,"children":[{"krate":0,"index":13504},{"krate":0,"index":13505},{"krate":0,"index":13506}],"decl_id":null,"docs":" An offset into an `Image` used for image-to-image\n copy operations.  All offsets are in texels, and\n specifying offsets other than 0 for dimensions\n that do not exist is undefined behavior -- for\n example, specifying a `z` offset of `1` in a\n two-dimensional image.\n","sig":null,"attributes":[{"value":"/ An offset into an `Image` used for image-to-image","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":151687,"byte_end":151740,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ copy operations.  All offsets are in texels, and","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":151741,"byte_end":151793,"line_start":66,"line_end":66,"column_start":1,"column_end":53}},{"value":"/ specifying offsets other than 0 for dimensions","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":151794,"byte_end":151844,"line_start":67,"line_end":67,"column_start":1,"column_end":51}},{"value":"/ that do not exist is undefined behavior -- for","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":151845,"byte_end":151895,"line_start":68,"line_end":68,"column_start":1,"column_end":51}},{"value":"/ example, specifying a `z` offset of `1` in a","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":151896,"byte_end":151944,"line_start":69,"line_end":69,"column_start":1,"column_end":49}},{"value":"/ two-dimensional image.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":151945,"byte_end":151971,"line_start":70,"line_end":70,"column_start":1,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":13504},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":152132,"byte_end":152133,"line_start":75,"line_end":75,"column_start":9,"column_end":10},"name":"x","qualname":"::image::Offset::x","value":"i32","parent":{"krate":0,"index":13503},"children":[],"decl_id":null,"docs":" X offset.\n","sig":null,"attributes":[{"value":"/ X offset.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":152110,"byte_end":152123,"line_start":74,"line_end":74,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":13505},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":152178,"byte_end":152179,"line_start":77,"line_end":77,"column_start":9,"column_end":10},"name":"y","qualname":"::image::Offset::y","value":"i32","parent":{"krate":0,"index":13503},"children":[],"decl_id":null,"docs":" Y offset.\n","sig":null,"attributes":[{"value":"/ Y offset.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":152156,"byte_end":152169,"line_start":76,"line_end":76,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":13506},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":152224,"byte_end":152225,"line_start":79,"line_end":79,"column_start":9,"column_end":10},"name":"z","qualname":"::image::Offset::z","value":"i32","parent":{"krate":0,"index":13503},"children":[],"decl_id":null,"docs":" Z offset.\n","sig":null,"attributes":[{"value":"/ Z offset.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":152202,"byte_end":152215,"line_start":78,"line_end":78,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":152305,"byte_end":152309,"line_start":84,"line_end":84,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::image::Offset::ZERO","value":"Self","parent":{"krate":0,"index":827},"children":[],"decl_id":null,"docs":" Zero offset shortcut.\n","sig":null,"attributes":[{"value":"/ Zero offset shortcut.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":152265,"byte_end":152290,"line_start":83,"line_end":83,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":152424,"byte_end":152435,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"into_bounds","qualname":"<Offset>::into_bounds","value":"pub fn into_bounds(Self, &Extent) -> Range<Offset>","parent":null,"children":[],"decl_id":null,"docs":" Convert the offset into 2-sided bounds given the extent.\n","sig":null,"attributes":[{"value":"/ Convert the offset into 2-sided bounds given the extent.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":152352,"byte_end":152412,"line_start":86,"line_end":86,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13574},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":152943,"byte_end":152950,"line_start":103,"line_end":103,"column_start":5,"column_end":12},"name":"Optimal","qualname":"::image::Tiling::Optimal","value":"Tiling::Optimal","parent":{"krate":0,"index":13573},"children":[],"decl_id":null,"docs":" Optimal tiling for GPU memory access. Implementation-dependent.\n","sig":null,"attributes":[{"value":"/ Optimal tiling for GPU memory access. Implementation-dependent.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":152871,"byte_end":152938,"line_start":102,"line_end":102,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13576},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":153080,"byte_end":153086,"line_start":106,"line_end":106,"column_start":5,"column_end":11},"name":"Linear","qualname":"::image::Tiling::Linear","value":"Tiling::Linear","parent":{"krate":0,"index":13573},"children":[],"decl_id":null,"docs":" Optimal for CPU read/write. Texels are laid out in row-major order,\n possibly with some padding on each row.\n","sig":null,"attributes":[{"value":"/ Optimal for CPU read/write. Texels are laid out in row-major order,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":152956,"byte_end":153027,"line_start":104,"line_end":104,"column_start":5,"column_end":76}},{"value":"/ possibly with some padding on each row.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":153032,"byte_end":153075,"line_start":105,"line_end":105,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":13573},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":152858,"byte_end":152864,"line_start":101,"line_end":101,"column_start":10,"column_end":16},"name":"Tiling","qualname":"::image::Tiling","value":"pub enum Tiling {\n\n    /// Optimal tiling for GPU memory access. Implementation-dependent.\n    Optimal,\n\n    /// Optimal for CPU read/write. Texels are laid out in row-major order,\n    /// possibly with some padding on each row.\n    Linear,\n}","parent":null,"children":[{"krate":0,"index":13574},{"krate":0,"index":13576}],"decl_id":null,"docs":" Image tiling modes.\n","sig":null,"attributes":[{"value":"/ Image tiling modes.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":152681,"byte_end":152704,"line_start":97,"line_end":97,"column_start":1,"column_end":24}},{"value":"repr(u32)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":152705,"byte_end":152717,"line_start":98,"line_end":98,"column_start":1,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13642},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":153286,"byte_end":153297,"line_start":114,"line_end":114,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::image::CreationError::OutOfMemory","value":"CreationError::OutOfMemory(device::OutOfMemory)","parent":{"krate":0,"index":13641},"children":[],"decl_id":null,"docs":" Out of either host or device memory.\n","sig":null,"attributes":[{"value":"/ Out of either host or device memory.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":153209,"byte_end":153249,"line_start":112,"line_end":112,"column_start":5,"column_end":45}},{"value":"fail(display = \"{}\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":153254,"byte_end":153281,"line_start":113,"line_end":113,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13645},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":153454,"byte_end":153460,"line_start":117,"line_end":117,"column_start":5,"column_end":11},"name":"Format","qualname":"::image::CreationError::Format","value":"CreationError::Format(format::Format)","parent":{"krate":0,"index":13641},"children":[],"decl_id":null,"docs":" The format is not supported by the device.\n","sig":null,"attributes":[{"value":"/ The format is not supported by the device.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":153324,"byte_end":153370,"line_start":115,"line_end":115,"column_start":5,"column_end":51}},{"value":"fail(display = \"Failed to map a given format ({:?}) to the device\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":153375,"byte_end":153449,"line_start":116,"line_end":116,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13648},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":153612,"byte_end":153616,"line_start":120,"line_end":120,"column_start":5,"column_end":9},"name":"Kind","qualname":"::image::CreationError::Kind","value":"CreationError::Kind","parent":{"krate":0,"index":13641},"children":[],"decl_id":null,"docs":" The kind doesn't support a particular operation.\n","sig":null,"attributes":[{"value":"/ The kind doesn't support a particular operation.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":153482,"byte_end":153534,"line_start":118,"line_end":118,"column_start":5,"column_end":57}},{"value":"fail(display = \"The kind doesn't support a particular operation\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":153539,"byte_end":153607,"line_start":119,"line_end":119,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13650},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":153795,"byte_end":153802,"line_start":126,"line_end":126,"column_start":5,"column_end":12},"name":"Samples","qualname":"::image::CreationError::Samples","value":"CreationError::Samples(NumSamples)","parent":{"krate":0,"index":13641},"children":[],"decl_id":null,"docs":" Failed to map a given multisampled kind to the device.\n","sig":null,"attributes":[{"value":"/ Failed to map a given multisampled kind to the device.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":153622,"byte_end":153680,"line_start":121,"line_end":121,"column_start":5,"column_end":63}},{"value":"fail(display = \"Failed to map a given multisampled kind ({}) to the device\",\n       _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":153685,"byte_end":153790,"line_start":122,"line_end":125,"column_start":5,"column_end":7}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13653},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":153947,"byte_end":153951,"line_start":129,"line_end":129,"column_start":5,"column_end":9},"name":"Size","qualname":"::image::CreationError::Size","value":"CreationError::Size(Size)","parent":{"krate":0,"index":13641},"children":[],"decl_id":null,"docs":" Unsupported size in one of the dimensions.\n","sig":null,"attributes":[{"value":"/ Unsupported size in one of the dimensions.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":153820,"byte_end":153866,"line_start":127,"line_end":127,"column_start":5,"column_end":51}},{"value":"fail(display = \"Unsupported size ({}) in one of the dimensions\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":153871,"byte_end":153942,"line_start":128,"line_end":128,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13656},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":154156,"byte_end":154160,"line_start":135,"line_end":135,"column_start":5,"column_end":9},"name":"Data","qualname":"::image::CreationError::Data","value":"CreationError::Data(usize)","parent":{"krate":0,"index":13641},"children":[],"decl_id":null,"docs":" The given data has a different size than the target image slice.\n","sig":null,"attributes":[{"value":"/ The given data has a different size than the target image slice.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":153963,"byte_end":154031,"line_start":130,"line_end":130,"column_start":5,"column_end":73}},{"value":"fail(display =\n       \"The given data has a different size ({}) than the target image slice\",\n       _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":154036,"byte_end":154151,"line_start":131,"line_end":134,"column_start":5,"column_end":7}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13659},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":154345,"byte_end":154350,"line_start":141,"line_end":141,"column_start":5,"column_end":10},"name":"Usage","qualname":"::image::CreationError::Usage","value":"CreationError::Usage(Usage)","parent":{"krate":0,"index":13641},"children":[],"decl_id":null,"docs":" The mentioned usage mode is not supported\n","sig":null,"attributes":[{"value":"/ The mentioned usage mode is not supported","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":154173,"byte_end":154218,"line_start":136,"line_end":136,"column_start":5,"column_end":50}},{"value":"fail(display =\n       \"The expected image usage mode ({:?}) is not supported by a graphic API\",\n       _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":154223,"byte_end":154340,"line_start":137,"line_end":140,"column_start":5,"column_end":7}}]},{"kind":"Enum","id":{"krate":0,"index":13641},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":153189,"byte_end":153202,"line_start":111,"line_end":111,"column_start":10,"column_end":23},"name":"CreationError","qualname":"::image::CreationError","value":"pub enum CreationError {\n\n    /// Out of either host or device memory.\n    #[fail(display = \"{}\", _0)]\n    OutOfMemory(device::OutOfMemory),\n\n    /// The format is not supported by the device.\n    #[fail(display = \"Failed to map a given format ({:?}) to the device\", _0)]\n    Format(format::Format),\n\n    /// The kind doesn't support a particular operation.\n    #[fail(display = \"The kind doesn't support a particular operation\")]\n    Kind,\n\n    /// Failed to map a given multisampled kind to the device.\n    #[fail(display =\n           \"Failed to map a given multisampled kind ({}) to the device\", _0)]\n    Samples(NumSamples),\n\n    /// Unsupported size in one of the dimensions.\n    #[fail(display = \"Unsupported size ({}) in one of the dimensions\", _0)]\n    Size(Size),\n\n    /// The given data has a different size than the target image slice.\n    #[fail(display =\n           \"The given data has a different size ({}) than the target image slice\",\n           _0)]\n    Data(usize),\n\n    /// The mentioned usage mode is not supported\n    #[fail(display =\n           \"The expected image usage mode ({:?}) is not supported by a graphic API\",\n           _0)]\n    Usage(Usage),\n}","parent":null,"children":[{"krate":0,"index":13642},{"krate":0,"index":13645},{"krate":0,"index":13648},{"krate":0,"index":13650},{"krate":0,"index":13653},{"krate":0,"index":13656},{"krate":0,"index":13659}],"decl_id":null,"docs":" Pure image object creation error.\n","sig":null,"attributes":[{"value":"/ Pure image object creation error.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":153091,"byte_end":153128,"line_start":109,"line_end":109,"column_start":1,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13683},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":154790,"byte_end":154795,"line_start":158,"line_end":158,"column_start":5,"column_end":10},"name":"Usage","qualname":"::image::ViewError::Usage","value":"ViewError::Usage(Usage)","parent":{"krate":0,"index":13682},"children":[],"decl_id":null,"docs":" The required usage flag is not present in the image.\n","sig":null,"attributes":[{"value":"/ The required usage flag is not present in the image.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":154619,"byte_end":154675,"line_start":153,"line_end":153,"column_start":5,"column_end":61}},{"value":"fail(display = \"The required usage flag ({:?}) is not present in the image\",\n       _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":154680,"byte_end":154785,"line_start":154,"line_end":157,"column_start":5,"column_end":7}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13686},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":154918,"byte_end":154923,"line_start":161,"line_end":161,"column_start":5,"column_end":10},"name":"Level","qualname":"::image::ViewError::Level","value":"ViewError::Level(Level)","parent":{"krate":0,"index":13682},"children":[],"decl_id":null,"docs":" Selected mip levels doesn't exist.\n","sig":null,"attributes":[{"value":"/ Selected mip levels doesn't exist.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":154808,"byte_end":154846,"line_start":159,"line_end":159,"column_start":5,"column_end":43}},{"value":"fail(display = \"Selected mip level ({}) doesn't exist\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":154851,"byte_end":154913,"line_start":160,"line_end":160,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13689},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":155047,"byte_end":155052,"line_start":164,"line_end":164,"column_start":5,"column_end":10},"name":"Layer","qualname":"::image::ViewError::Layer","value":"ViewError::Layer(LayerError)","parent":{"krate":0,"index":13682},"children":[],"decl_id":null,"docs":" Selected array layer doesn't exist.\n","sig":null,"attributes":[{"value":"/ Selected array layer doesn't exist.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":154936,"byte_end":154975,"line_start":162,"line_end":162,"column_start":5,"column_end":44}},{"value":"fail(display = \"Selected mip layer ({}) doesn't exist\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":154980,"byte_end":155042,"line_start":163,"line_end":163,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13692},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":155237,"byte_end":155246,"line_start":170,"line_end":170,"column_start":5,"column_end":14},"name":"BadFormat","qualname":"::image::ViewError::BadFormat","value":"ViewError::BadFormat(format::Format)","parent":{"krate":0,"index":13682},"children":[],"decl_id":null,"docs":" An incompatible format was requested for the view.\n","sig":null,"attributes":[{"value":"/ An incompatible format was requested for the view.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":155070,"byte_end":155124,"line_start":165,"line_end":165,"column_start":5,"column_end":59}},{"value":"fail(display = \"An incompatible format ({:?}) was requested for the view\",\n       _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":155129,"byte_end":155232,"line_start":166,"line_end":169,"column_start":5,"column_end":7}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13695},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":155383,"byte_end":155390,"line_start":173,"line_end":173,"column_start":5,"column_end":12},"name":"BadKind","qualname":"::image::ViewError::BadKind","value":"ViewError::BadKind(ViewKind)","parent":{"krate":0,"index":13682},"children":[],"decl_id":null,"docs":" Unsupported view kind.\n","sig":null,"attributes":[{"value":"/ Unsupported view kind.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":155268,"byte_end":155294,"line_start":171,"line_end":171,"column_start":5,"column_end":31}},{"value":"fail(display = \"An incompatible kind ({:?}) was requested for the view\",\n       _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":155299,"byte_end":155378,"line_start":172,"line_end":172,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13698},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":155482,"byte_end":155493,"line_start":176,"line_end":176,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::image::ViewError::OutOfMemory","value":"ViewError::OutOfMemory(device::OutOfMemory)","parent":{"krate":0,"index":13682},"children":[],"decl_id":null,"docs":" Out of either Host or Device memory\n","sig":null,"attributes":[{"value":"/ Out of either Host or Device memory","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":155406,"byte_end":155445,"line_start":174,"line_end":174,"column_start":5,"column_end":44}},{"value":"fail(display = \"{}\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":155450,"byte_end":155477,"line_start":175,"line_end":175,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13701},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":155626,"byte_end":155637,"line_start":179,"line_end":179,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::image::ViewError::Unsupported","value":"ViewError::Unsupported","parent":{"krate":0,"index":13682},"children":[],"decl_id":null,"docs":" The backend refused for some reason.\n","sig":null,"attributes":[{"value":"/ The backend refused for some reason.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":155520,"byte_end":155560,"line_start":177,"line_end":177,"column_start":5,"column_end":45}},{"value":"fail(display = \"The backend refused for some reason\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":155565,"byte_end":155621,"line_start":178,"line_end":178,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":13682},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":154603,"byte_end":154612,"line_start":152,"line_end":152,"column_start":10,"column_end":19},"name":"ViewError","qualname":"::image::ViewError","value":"pub enum ViewError {\n\n    /// The required usage flag is not present in the image.\n    #[fail(display =\n           \"The required usage flag ({:?}) is not present in the image\", _0)]\n    Usage(Usage),\n\n    /// Selected mip levels doesn't exist.\n    #[fail(display = \"Selected mip level ({}) doesn't exist\", _0)]\n    Level(Level),\n\n    /// Selected array layer doesn't exist.\n    #[fail(display = \"Selected mip layer ({}) doesn't exist\", _0)]\n    Layer(LayerError),\n\n    /// An incompatible format was requested for the view.\n    #[fail(display =\n           \"An incompatible format ({:?}) was requested for the view\", _0)]\n    BadFormat(format::Format),\n\n    /// Unsupported view kind.\n    #[fail(display = \"An incompatible kind ({:?}) was requested for the view\",\n           _0)]\n    BadKind(ViewKind),\n\n    /// Out of either Host or Device memory\n    #[fail(display = \"{}\", _0)]\n    OutOfMemory(device::OutOfMemory),\n\n    /// The backend refused for some reason.\n    #[fail(display = \"The backend refused for some reason\")]\n    Unsupported,\n}","parent":null,"children":[{"krate":0,"index":13683},{"krate":0,"index":13686},{"krate":0,"index":13689},{"krate":0,"index":13692},{"krate":0,"index":13695},{"krate":0,"index":13698},{"krate":0,"index":13701}],"decl_id":null,"docs":" Error creating an `ImageView`.\n","sig":null,"attributes":[{"value":"/ Error creating an `ImageView`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":154514,"byte_end":154548,"line_start":150,"line_end":150,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13723},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":156083,"byte_end":156094,"line_start":196,"line_end":196,"column_start":5,"column_end":16},"name":"NotExpected","qualname":"::image::LayerError::NotExpected","value":"LayerError::NotExpected(Kind)","parent":{"krate":0,"index":13722},"children":[],"decl_id":null,"docs":" The source image kind doesn't support array slices.\n","sig":null,"attributes":[{"value":"/ The source image kind doesn't support array slices.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":155914,"byte_end":155969,"line_start":191,"line_end":191,"column_start":5,"column_end":60}},{"value":"fail(display = \"The source image kind ({:?}) doesn't support array slices\",\n       _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":155974,"byte_end":156078,"line_start":192,"line_end":195,"column_start":5,"column_end":7}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13726},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":156271,"byte_end":156282,"line_start":202,"line_end":202,"column_start":5,"column_end":16},"name":"OutOfBounds","qualname":"::image::LayerError::OutOfBounds","value":"LayerError::OutOfBounds(Range<Layer>)","parent":{"krate":0,"index":13722},"children":[],"decl_id":null,"docs":" Selected layer is outside of the provided range.\n","sig":null,"attributes":[{"value":"/ Selected layer is outside of the provided range.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":156106,"byte_end":156158,"line_start":197,"line_end":197,"column_start":5,"column_end":57}},{"value":"fail(display = \"Selected layers ({:?}) are outside of the provided range\",\n       _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":156163,"byte_end":156266,"line_start":198,"line_end":201,"column_start":5,"column_end":7}}]},{"kind":"Enum","id":{"krate":0,"index":13722},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":155897,"byte_end":155907,"line_start":190,"line_end":190,"column_start":10,"column_end":20},"name":"LayerError","qualname":"::image::LayerError","value":"pub enum LayerError {\n\n    /// The source image kind doesn't support array slices.\n    #[fail(display =\n           \"The source image kind ({:?}) doesn't support array slices\", _0)]\n    NotExpected(Kind),\n\n    /// Selected layer is outside of the provided range.\n    #[fail(display =\n           \"Selected layers ({:?}) are outside of the provided range\", _0)]\n    OutOfBounds(Range<Layer>),\n}","parent":null,"children":[{"krate":0,"index":13723},{"krate":0,"index":13726}],"decl_id":null,"docs":" An error associated with selected image layer.\n","sig":null,"attributes":[{"value":"/ An error associated with selected image layer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":155786,"byte_end":155836,"line_start":188,"line_end":188,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13752},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":156771,"byte_end":156778,"line_start":214,"line_end":214,"column_start":5,"column_end":12},"name":"Nearest","qualname":"::image::Filter::Nearest","value":"Filter::Nearest","parent":{"krate":0,"index":13751},"children":[],"decl_id":null,"docs":" Selects a single texel from the current mip level and uses its value.","sig":null,"attributes":[{"value":"/ Selects a single texel from the current mip level and uses its value.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":156620,"byte_end":156693,"line_start":211,"line_end":211,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":156698,"byte_end":156701,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Mip filtering selects the filtered value from one level.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":156706,"byte_end":156766,"line_start":213,"line_end":213,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13754},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":157000,"byte_end":157006,"line_start":219,"line_end":219,"column_start":5,"column_end":11},"name":"Linear","qualname":"::image::Filter::Linear","value":"Filter::Linear","parent":{"krate":0,"index":13751},"children":[],"decl_id":null,"docs":" Selects multiple texels and calculates the value via multivariate interpolation.\n     * 1D: Linear interpolation\n     * 2D/Cube: Bilinear interpolation\n     * 3D: Trilinear interpolation\n","sig":null,"attributes":[{"value":"/ Selects multiple texels and calculates the value via multivariate interpolation.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":156784,"byte_end":156868,"line_start":215,"line_end":215,"column_start":5,"column_end":89}},{"value":"/     * 1D: Linear interpolation","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":156873,"byte_end":156907,"line_start":216,"line_end":216,"column_start":5,"column_end":39}},{"value":"/     * 2D/Cube: Bilinear interpolation","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":156912,"byte_end":156953,"line_start":217,"line_end":217,"column_start":5,"column_end":46}},{"value":"/     * 3D: Trilinear interpolation","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":156958,"byte_end":156995,"line_start":218,"line_end":218,"column_start":5,"column_end":42}}]},{"kind":"Enum","id":{"krate":0,"index":13751},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":156607,"byte_end":156613,"line_start":210,"line_end":210,"column_start":10,"column_end":16},"name":"Filter","qualname":"::image::Filter","value":"pub enum Filter {\n\n    /// Selects a single texel from the current mip level and uses its value.\n    ///\n    /// Mip filtering selects the filtered value from one level.\n    Nearest,\n\n    /// Selects multiple texels and calculates the value via multivariate interpolation.\n    ///     * 1D: Linear interpolation\n    ///     * 2D/Cube: Bilinear interpolation\n    ///     * 3D: Trilinear interpolation\n    Linear,\n}","parent":null,"children":[{"krate":0,"index":13752},{"krate":0,"index":13754}],"decl_id":null,"docs":" How to [filter](https://en.wikipedia.org/wiki/Texture_filtering) the\n image when sampling. They correspond to increasing levels of quality,\n but also cost.\n","sig":null,"attributes":[{"value":"/ How to [filter](https://en.wikipedia.org/wiki/Texture_filtering) the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":156301,"byte_end":156373,"line_start":205,"line_end":205,"column_start":1,"column_end":73}},{"value":"/ image when sampling. They correspond to increasing levels of quality,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":156374,"byte_end":156447,"line_start":206,"line_end":206,"column_start":1,"column_end":74}},{"value":"/ but also cost.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":156448,"byte_end":156466,"line_start":207,"line_end":207,"column_start":1,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13820},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":157263,"byte_end":157266,"line_start":227,"line_end":227,"column_start":5,"column_end":8},"name":"Off","qualname":"::image::Anisotropic::Off","value":"Anisotropic::Off","parent":{"krate":0,"index":13819},"children":[],"decl_id":null,"docs":" Disable anisotropic filtering.\n","sig":null,"attributes":[{"value":"/ Disable anisotropic filtering.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":157224,"byte_end":157258,"line_start":226,"line_end":226,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13822},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":157342,"byte_end":157344,"line_start":229,"line_end":229,"column_start":5,"column_end":7},"name":"On","qualname":"::image::Anisotropic::On","value":"Anisotropic::On(u8)","parent":{"krate":0,"index":13819},"children":[],"decl_id":null,"docs":" Enable anisotropic filtering with the anisotropy clamp value.\n","sig":null,"attributes":[{"value":"/ Enable anisotropic filtering with the anisotropy clamp value.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":157272,"byte_end":157337,"line_start":228,"line_end":228,"column_start":5,"column_end":70}}]},{"kind":"Enum","id":{"krate":0,"index":13819},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":157206,"byte_end":157217,"line_start":225,"line_end":225,"column_start":10,"column_end":21},"name":"Anisotropic","qualname":"::image::Anisotropic","value":"pub enum Anisotropic {\n\n    /// Disable anisotropic filtering.\n    Off,\n\n    /// Enable anisotropic filtering with the anisotropy clamp value.\n    On(u8),\n}","parent":null,"children":[{"krate":0,"index":13820},{"krate":0,"index":13822}],"decl_id":null,"docs":" Anisotropic filtering description for the sampler.\n","sig":null,"attributes":[{"value":"/ Anisotropic filtering description for the sampler.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":157011,"byte_end":157065,"line_start":222,"line_end":222,"column_start":1,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13894},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":157595,"byte_end":157599,"line_start":238,"line_end":238,"column_start":5,"column_end":9},"name":"PosX","qualname":"::image::CubeFace::PosX","value":"CubeFace::PosX","parent":{"krate":0,"index":13893},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":13896},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":157605,"byte_end":157609,"line_start":239,"line_end":239,"column_start":5,"column_end":9},"name":"NegX","qualname":"::image::CubeFace::NegX","value":"CubeFace::NegX","parent":{"krate":0,"index":13893},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":13898},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":157615,"byte_end":157619,"line_start":240,"line_end":240,"column_start":5,"column_end":9},"name":"PosY","qualname":"::image::CubeFace::PosY","value":"CubeFace::PosY","parent":{"krate":0,"index":13893},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":13900},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":157625,"byte_end":157629,"line_start":241,"line_end":241,"column_start":5,"column_end":9},"name":"NegY","qualname":"::image::CubeFace::NegY","value":"CubeFace::NegY","parent":{"krate":0,"index":13893},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":13902},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":157635,"byte_end":157639,"line_start":242,"line_end":242,"column_start":5,"column_end":9},"name":"PosZ","qualname":"::image::CubeFace::PosZ","value":"CubeFace::PosZ","parent":{"krate":0,"index":13893},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":13904},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":157645,"byte_end":157649,"line_start":243,"line_end":243,"column_start":5,"column_end":9},"name":"NegZ","qualname":"::image::CubeFace::NegZ","value":"CubeFace::NegZ","parent":{"krate":0,"index":13893},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":13893},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":157580,"byte_end":157588,"line_start":237,"line_end":237,"column_start":10,"column_end":18},"name":"CubeFace","qualname":"::image::CubeFace","value":"pub enum CubeFace { PosX, NegX, PosY, NegY, PosZ, NegZ, }","parent":null,"children":[{"krate":0,"index":13894},{"krate":0,"index":13896},{"krate":0,"index":13898},{"krate":0,"index":13900},{"krate":0,"index":13902},{"krate":0,"index":13904}],"decl_id":null,"docs":" The face of a cube image to do an operation on.\n","sig":null,"attributes":[{"value":"/ The face of a cube image to do an operation on.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":157353,"byte_end":157404,"line_start":232,"line_end":232,"column_start":1,"column_end":52}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":157405,"byte_end":157427,"line_start":233,"line_end":233,"column_start":1,"column_end":23}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":157559,"byte_end":157570,"line_start":236,"line_end":236,"column_start":1,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":834},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":157738,"byte_end":157748,"line_start":247,"line_end":247,"column_start":11,"column_end":21},"name":"CUBE_FACES","qualname":"::image::CUBE_FACES","value":"[CubeFace; ]","parent":null,"children":[],"decl_id":null,"docs":" A constant array of cube faces in the order they map to the hardware.\n","sig":null,"attributes":[{"value":"/ A constant array of cube faces in the order they map to the hardware.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":157654,"byte_end":157727,"line_start":246,"line_end":246,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13978},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":158232,"byte_end":158234,"line_start":263,"line_end":263,"column_start":5,"column_end":7},"name":"D1","qualname":"::image::Kind::D1","value":"Kind::D1(Size, Layer)","parent":{"krate":0,"index":13977},"children":[],"decl_id":null,"docs":" A single one-dimensional row of texels.\n","sig":null,"attributes":[{"value":"/ A single one-dimensional row of texels.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":158184,"byte_end":158227,"line_start":262,"line_end":262,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13982},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":158284,"byte_end":158286,"line_start":265,"line_end":265,"column_start":5,"column_end":7},"name":"D2","qualname":"::image::Kind::D2","value":"Kind::D2(Size, Size, Layer, NumSamples)","parent":{"krate":0,"index":13977},"children":[],"decl_id":null,"docs":" Two-dimensional image.\n","sig":null,"attributes":[{"value":"/ Two-dimensional image.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":158253,"byte_end":158279,"line_start":264,"line_end":264,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13988},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":158349,"byte_end":158351,"line_start":267,"line_end":267,"column_start":5,"column_end":7},"name":"D3","qualname":"::image::Kind::D3","value":"Kind::D3(Size, Size, Size)","parent":{"krate":0,"index":13977},"children":[],"decl_id":null,"docs":" Volumetric image.\n","sig":null,"attributes":[{"value":"/ Volumetric image.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":158323,"byte_end":158344,"line_start":266,"line_end":266,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":13977},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":158173,"byte_end":158177,"line_start":261,"line_end":261,"column_start":10,"column_end":14},"name":"Kind","qualname":"::image::Kind","value":"pub enum Kind {\n\n    /// A single one-dimensional row of texels.\n    D1(Size, Layer),\n\n    /// Two-dimensional image.\n    D2(Size, Size, Layer, NumSamples),\n\n    /// Volumetric image.\n    D3(Size, Size, Size),\n}","parent":null,"children":[{"krate":0,"index":13978},{"krate":0,"index":13982},{"krate":0,"index":13988}],"decl_id":null,"docs":" Specifies the dimensionality of an image to be allocated,\n along with the number of mipmap layers and MSAA samples\n if applicable.\n","sig":null,"attributes":[{"value":"/ Specifies the dimensionality of an image to be allocated,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":157892,"byte_end":157953,"line_start":256,"line_end":256,"column_start":1,"column_end":62}},{"value":"/ along with the number of mipmap layers and MSAA samples","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":157954,"byte_end":158013,"line_start":257,"line_end":257,"column_start":1,"column_end":60}},{"value":"/ if applicable.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":158014,"byte_end":158032,"line_start":258,"line_end":258,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":158427,"byte_end":158433,"line_start":272,"line_end":272,"column_start":12,"column_end":18},"name":"extent","qualname":"<Kind>::extent","value":"pub fn extent(&Self) -> Extent","parent":null,"children":[],"decl_id":null,"docs":" Get the image extent.\n","sig":null,"attributes":[{"value":"/ Get the image extent.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":158390,"byte_end":158415,"line_start":271,"line_end":271,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":158972,"byte_end":158984,"line_start":293,"line_end":293,"column_start":12,"column_end":24},"name":"level_extent","qualname":"<Kind>::level_extent","value":"pub fn level_extent(&Self, Level) -> Extent","parent":null,"children":[],"decl_id":null,"docs":" Get the extent of a particular mipmap level.\n","sig":null,"attributes":[{"value":"/ Get the extent of a particular mipmap level.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":158912,"byte_end":158960,"line_start":292,"line_end":292,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":159685,"byte_end":159695,"line_start":317,"line_end":317,"column_start":12,"column_end":22},"name":"num_levels","qualname":"<Kind>::num_levels","value":"pub fn num_levels(&Self) -> Level","parent":null,"children":[],"decl_id":null,"docs":" Count the number of mipmap levels.\n","sig":null,"attributes":[{"value":"/ Count the number of mipmap levels.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":159635,"byte_end":159673,"line_start":316,"line_end":316,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":160269,"byte_end":160279,"line_start":335,"line_end":335,"column_start":12,"column_end":22},"name":"num_layers","qualname":"<Kind>::num_layers","value":"pub fn num_layers(&Self) -> Layer","parent":null,"children":[],"decl_id":null,"docs":" Return the number of layers in an array type.","sig":null,"attributes":[{"value":"/ Return the number of layers in an array type.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":160151,"byte_end":160200,"line_start":332,"line_end":332,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":160205,"byte_end":160208,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ Each cube face counts as separate layer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":160213,"byte_end":160257,"line_start":334,"line_end":334,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":160491,"byte_end":160502,"line_start":343,"line_end":343,"column_start":12,"column_end":23},"name":"num_samples","qualname":"<Kind>::num_samples","value":"pub fn num_samples(&Self) -> NumSamples","parent":null,"children":[],"decl_id":null,"docs":" Return the number of MSAA samples for the kind.\n","sig":null,"attributes":[{"value":"/ Return the number of MSAA samples for the kind.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":160428,"byte_end":160479,"line_start":342,"line_end":342,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14118},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":160927,"byte_end":160929,"line_start":357,"line_end":357,"column_start":5,"column_end":7},"name":"D1","qualname":"::image::ViewKind::D1","value":"ViewKind::D1","parent":{"krate":0,"index":14117},"children":[],"decl_id":null,"docs":" A single one-dimensional row of texels.\n","sig":null,"attributes":[{"value":"/ A single one-dimensional row of texels.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":160879,"byte_end":160922,"line_start":356,"line_end":356,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14120},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":161130,"byte_end":161137,"line_start":361,"line_end":361,"column_start":5,"column_end":12},"name":"D1Array","qualname":"::image::ViewKind::D1Array","value":"ViewKind::D1Array","parent":{"krate":0,"index":14117},"children":[],"decl_id":null,"docs":" An array of rows of texels. Equivalent to `D2` except that texels\n in different rows are not sampled, so filtering will be constrained\n to a single row of texels at a time.\n","sig":null,"attributes":[{"value":"/ An array of rows of texels. Equivalent to `D2` except that texels","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":160935,"byte_end":161004,"line_start":358,"line_end":358,"column_start":5,"column_end":74}},{"value":"/ in different rows are not sampled, so filtering will be constrained","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":161009,"byte_end":161080,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ to a single row of texels at a time.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":161085,"byte_end":161125,"line_start":360,"line_end":360,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14122},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":161208,"byte_end":161210,"line_start":363,"line_end":363,"column_start":5,"column_end":7},"name":"D2","qualname":"::image::ViewKind::D2","value":"ViewKind::D2","parent":{"krate":0,"index":14117},"children":[],"decl_id":null,"docs":" A traditional 2D image, with rows arranged contiguously.\n","sig":null,"attributes":[{"value":"/ A traditional 2D image, with rows arranged contiguously.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":161143,"byte_end":161203,"line_start":362,"line_end":362,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14124},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":161337,"byte_end":161344,"line_start":366,"line_end":366,"column_start":5,"column_end":12},"name":"D2Array","qualname":"::image::ViewKind::D2Array","value":"ViewKind::D2Array","parent":{"krate":0,"index":14117},"children":[],"decl_id":null,"docs":" An array of 2D images. Equivalent to `D3` except that texels in\n a different depth level are not sampled.\n","sig":null,"attributes":[{"value":"/ An array of 2D images. Equivalent to `D3` except that texels in","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":161216,"byte_end":161283,"line_start":364,"line_end":364,"column_start":5,"column_end":72}},{"value":"/ a different depth level are not sampled.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":161288,"byte_end":161332,"line_start":365,"line_end":365,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14126},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":161416,"byte_end":161418,"line_start":368,"line_end":368,"column_start":5,"column_end":7},"name":"D3","qualname":"::image::ViewKind::D3","value":"ViewKind::D3","parent":{"krate":0,"index":14117},"children":[],"decl_id":null,"docs":" A volume image, with each 2D layer arranged contiguously.\n","sig":null,"attributes":[{"value":"/ A volume image, with each 2D layer arranged contiguously.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":161350,"byte_end":161411,"line_start":367,"line_end":367,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14128},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":161483,"byte_end":161487,"line_start":370,"line_end":370,"column_start":5,"column_end":9},"name":"Cube","qualname":"::image::ViewKind::Cube","value":"ViewKind::Cube","parent":{"krate":0,"index":14117},"children":[],"decl_id":null,"docs":" A set of 6 2D images, one for each face of a cube.\n","sig":null,"attributes":[{"value":"/ A set of 6 2D images, one for each face of a cube.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":161424,"byte_end":161478,"line_start":369,"line_end":369,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14130},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":161526,"byte_end":161535,"line_start":372,"line_end":372,"column_start":5,"column_end":14},"name":"CubeArray","qualname":"::image::ViewKind::CubeArray","value":"ViewKind::CubeArray","parent":{"krate":0,"index":14117},"children":[],"decl_id":null,"docs":" An array of Cube images.\n","sig":null,"attributes":[{"value":"/ An array of Cube images.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":161493,"byte_end":161521,"line_start":371,"line_end":371,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":14117},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":160864,"byte_end":160872,"line_start":355,"line_end":355,"column_start":10,"column_end":18},"name":"ViewKind","qualname":"::image::ViewKind","value":"pub enum ViewKind {\n\n    /// A single one-dimensional row of texels.\n    D1,\n\n    /// An array of rows of texels. Equivalent to `D2` except that texels\n    /// in different rows are not sampled, so filtering will be constrained\n    /// to a single row of texels at a time.\n    D1Array,\n\n    /// A traditional 2D image, with rows arranged contiguously.\n    D2,\n\n    /// An array of 2D images. Equivalent to `D3` except that texels in\n    /// a different depth level are not sampled.\n    D2Array,\n\n    /// A volume image, with each 2D layer arranged contiguously.\n    D3,\n\n    /// A set of 6 2D images, one for each face of a cube.\n    Cube,\n\n    /// An array of Cube images.\n    CubeArray,\n}","parent":null,"children":[{"krate":0,"index":14118},{"krate":0,"index":14120},{"krate":0,"index":14122},{"krate":0,"index":14124},{"krate":0,"index":14126},{"krate":0,"index":14128},{"krate":0,"index":14130}],"decl_id":null,"docs":" Specifies the kind/dimensionality of an image view.\n","sig":null,"attributes":[{"value":"/ Specifies the kind/dimensionality of an image view.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":160668,"byte_end":160723,"line_start":352,"line_end":352,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":14205},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":161685,"byte_end":161701,"line_start":378,"line_end":378,"column_start":16,"column_end":32},"name":"ViewCapabilities","qualname":"::image::ViewCapabilities","value":"ViewCapabilities {  }","parent":null,"children":[{"krate":0,"index":14206}],"decl_id":null,"docs":" Capabilities to create views into an image.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":14291},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":161785,"byte_end":161799,"line_start":380,"line_end":380,"column_start":15,"column_end":29},"name":"MUTABLE_FORMAT","qualname":"::image::ViewCapabilities::MUTABLE_FORMAT","value":"ViewCapabilities","parent":{"krate":0,"index":14290},"children":[],"decl_id":null,"docs":" Support creation of views with different formats.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":14292},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":161900,"byte_end":161909,"line_start":382,"line_end":382,"column_start":15,"column_end":24},"name":"KIND_CUBE","qualname":"::image::ViewCapabilities::KIND_CUBE","value":"ViewCapabilities","parent":{"krate":0,"index":14290},"children":[],"decl_id":null,"docs":" Support creation of `Cube` and `CubeArray` kinds of views.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":14293},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":162000,"byte_end":162013,"line_start":384,"line_end":384,"column_start":15,"column_end":28},"name":"KIND_2D_ARRAY","qualname":"::image::ViewCapabilities::KIND_2D_ARRAY","value":"ViewCapabilities","parent":{"krate":0,"index":14290},"children":[],"decl_id":null,"docs":" Support creation of `D2Array` kind of view.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14348},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":162284,"byte_end":162289,"line_start":393,"line_end":393,"column_start":16,"column_end":21},"name":"Usage","qualname":"::image::Usage","value":"Usage {  }","parent":null,"children":[{"krate":0,"index":14349}],"decl_id":null,"docs":" TODO: Find out if TRANSIENT_ATTACHMENT + INPUT_ATTACHMENT\n are applicable on backends other than Vulkan. --AP\n Image usage flags\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":14439},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":162363,"byte_end":162375,"line_start":395,"line_end":395,"column_start":15,"column_end":27},"name":"TRANSFER_SRC","qualname":"::image::Usage::TRANSFER_SRC","value":"Usage","parent":{"krate":0,"index":14438},"children":[],"decl_id":null,"docs":" The image is used as a transfer source.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":14440},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":162454,"byte_end":162466,"line_start":397,"line_end":397,"column_start":15,"column_end":27},"name":"TRANSFER_DST","qualname":"::image::Usage::TRANSFER_DST","value":"Usage","parent":{"krate":0,"index":14438},"children":[],"decl_id":null,"docs":" The image is used as a transfer destination.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":14441},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":162627,"byte_end":162634,"line_start":399,"line_end":399,"column_start":15,"column_end":22},"name":"SAMPLED","qualname":"::image::Usage::SAMPLED","value":"Usage","parent":{"krate":0,"index":14438},"children":[],"decl_id":null,"docs":" The image is a [sampled image](https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-sampledimage)\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":14442},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":162795,"byte_end":162802,"line_start":401,"line_end":401,"column_start":15,"column_end":22},"name":"STORAGE","qualname":"::image::Usage::STORAGE","value":"Usage","parent":{"krate":0,"index":14438},"children":[],"decl_id":null,"docs":" The image is a [storage image](https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-storageimage)\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":14443},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":162921,"byte_end":162937,"line_start":403,"line_end":403,"column_start":15,"column_end":31},"name":"COLOR_ATTACHMENT","qualname":"::image::Usage::COLOR_ATTACHMENT","value":"Usage","parent":{"krate":0,"index":14438},"children":[],"decl_id":null,"docs":" The image is used as a color attachment -- that is, color input to a rendering pass.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":14444},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":163013,"byte_end":163037,"line_start":405,"line_end":405,"column_start":15,"column_end":39},"name":"DEPTH_STENCIL_ATTACHMENT","qualname":"::image::Usage::DEPTH_STENCIL_ATTACHMENT","value":"Usage","parent":{"krate":0,"index":14438},"children":[],"decl_id":null,"docs":" The image is used as a depth attachment.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":14445},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":163072,"byte_end":163092,"line_start":407,"line_end":407,"column_start":15,"column_end":35},"name":"TRANSIENT_ATTACHMENT","qualname":"::image::Usage::TRANSIENT_ATTACHMENT","value":"Usage","parent":{"krate":0,"index":14438},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":14446},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":163127,"byte_end":163143,"line_start":409,"line_end":409,"column_start":15,"column_end":31},"name":"INPUT_ATTACHMENT","qualname":"::image::Usage::INPUT_ATTACHMENT","value":"Usage","parent":{"krate":0,"index":14438},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":163258,"byte_end":163270,"line_start":416,"line_end":416,"column_start":12,"column_end":24},"name":"can_transfer","qualname":"<Usage>::can_transfer","value":"pub fn can_transfer(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this image can be used in transfer operations.\n","sig":null,"attributes":[{"value":"/ Returns true if this image can be used in transfer operations.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":163180,"byte_end":163246,"line_start":415,"line_end":415,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":163433,"byte_end":163443,"line_start":421,"line_end":421,"column_start":12,"column_end":22},"name":"can_target","qualname":"<Usage>::can_target","value":"pub fn can_target(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this image can be used as a target.\n","sig":null,"attributes":[{"value":"/ Returns true if this image can be used as a target.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":163366,"byte_end":163421,"line_start":420,"line_end":420,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14517},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":163946,"byte_end":163950,"line_start":433,"line_end":433,"column_start":5,"column_end":9},"name":"Tile","qualname":"::image::WrapMode::Tile","value":"WrapMode::Tile","parent":{"krate":0,"index":14516},"children":[],"decl_id":null,"docs":" Tile the image, that is, sample the coordinate modulo `1.0`, so\n addressing the image beyond an edge will \"wrap\" back from the\n other edge.\n","sig":null,"attributes":[{"value":"/ Tile the image, that is, sample the coordinate modulo `1.0`, so","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":163784,"byte_end":163851,"line_start":430,"line_end":430,"column_start":5,"column_end":72}},{"value":"/ addressing the image beyond an edge will \"wrap\" back from the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":163856,"byte_end":163921,"line_start":431,"line_end":431,"column_start":5,"column_end":70}},{"value":"/ other edge.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":163926,"byte_end":163941,"line_start":432,"line_end":432,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14519},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":164032,"byte_end":164038,"line_start":435,"line_end":435,"column_start":5,"column_end":11},"name":"Mirror","qualname":"::image::WrapMode::Mirror","value":"WrapMode::Mirror","parent":{"krate":0,"index":14516},"children":[],"decl_id":null,"docs":" Mirror the image. Like tile, but uses abs(coord) before the modulo.\n","sig":null,"attributes":[{"value":"/ Mirror the image. Like tile, but uses abs(coord) before the modulo.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":163956,"byte_end":164027,"line_start":434,"line_end":434,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14521},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":164113,"byte_end":164118,"line_start":437,"line_end":437,"column_start":5,"column_end":10},"name":"Clamp","qualname":"::image::WrapMode::Clamp","value":"WrapMode::Clamp","parent":{"krate":0,"index":14516},"children":[],"decl_id":null,"docs":" Clamp the image to the value at `0.0` or `1.0` respectively.\n","sig":null,"attributes":[{"value":"/ Clamp the image to the value at `0.0` or `1.0` respectively.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":164044,"byte_end":164108,"line_start":436,"line_end":436,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14523},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":164150,"byte_end":164156,"line_start":439,"line_end":439,"column_start":5,"column_end":11},"name":"Border","qualname":"::image::WrapMode::Border","value":"WrapMode::Border","parent":{"krate":0,"index":14516},"children":[],"decl_id":null,"docs":" Use border color.\n","sig":null,"attributes":[{"value":"/ Use border color.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":164124,"byte_end":164145,"line_start":438,"line_end":438,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":14516},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":163769,"byte_end":163777,"line_start":429,"line_end":429,"column_start":10,"column_end":18},"name":"WrapMode","qualname":"::image::WrapMode","value":"pub enum WrapMode {\n\n    /// Tile the image, that is, sample the coordinate modulo `1.0`, so\n    /// addressing the image beyond an edge will \"wrap\" back from the\n    /// other edge.\n    Tile,\n\n    /// Mirror the image. Like tile, but uses abs(coord) before the modulo.\n    Mirror,\n\n    /// Clamp the image to the value at `0.0` or `1.0` respectively.\n    Clamp,\n\n    /// Use border color.\n    Border,\n}","parent":null,"children":[{"krate":0,"index":14517},{"krate":0,"index":14519},{"krate":0,"index":14521},{"krate":0,"index":14523}],"decl_id":null,"docs":" Specifies how image coordinates outside the range `[0, 1]` are handled.\n","sig":null,"attributes":[{"value":"/ Specifies how image coordinates outside the range `[0, 1]` are handled.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":163553,"byte_end":163628,"line_start":426,"line_end":426,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":14592},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":164448,"byte_end":164451,"line_start":447,"line_end":447,"column_start":12,"column_end":15},"name":"Lod","qualname":"::image::Lod","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper for the LOD level of an image.\n The LOD is stored in base-16 fixed point format. That allows\n deriving Hash and Eq for it safely.\n","sig":null,"attributes":[{"value":"/ A wrapper for the LOD level of an image.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":164161,"byte_end":164205,"line_start":442,"line_end":442,"column_start":1,"column_end":45}},{"value":"/ The LOD is stored in base-16 fixed point format. That allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":164206,"byte_end":164270,"line_start":443,"line_end":443,"column_start":1,"column_end":65}},{"value":"/ deriving Hash and Eq for it safely.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":164271,"byte_end":164310,"line_start":444,"line_end":444,"column_start":1,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":852},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":164502,"byte_end":164506,"line_start":451,"line_end":451,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::image::Lod::ZERO","value":"Self","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" Zero LOD.\n","sig":null,"attributes":[{"value":"/ Zero LOD.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":164474,"byte_end":164487,"line_start":450,"line_end":450,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":853},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":164558,"byte_end":164561,"line_start":453,"line_end":453,"column_start":15,"column_end":18},"name":"MAX","qualname":"::image::Lod::MAX","value":"Self","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" Maximum LOD.\n","sig":null,"attributes":[{"value":"/ Maximum LOD.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":164527,"byte_end":164543,"line_start":452,"line_end":452,"column_start":5,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":14641},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":165012,"byte_end":165023,"line_start":471,"line_end":471,"column_start":12,"column_end":23},"name":"PackedColor","qualname":"::image::PackedColor","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper for an RGBA color with 8 bits per texel, encoded as a u32.\n","sig":null,"attributes":[{"value":"/ A wrapper for an RGBA color with 8 bits per texel, encoded as a u32.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":164802,"byte_end":164874,"line_start":468,"line_end":468,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":14643},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":165024,"byte_end":165031,"line_start":471,"line_end":471,"column_start":24,"column_end":31},"name":"0","qualname":"::image::PackedColor::0","value":"u32","parent":{"krate":0,"index":14641},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14690},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":165958,"byte_end":165969,"line_start":501,"line_end":501,"column_start":12,"column_end":23},"name":"SamplerInfo","qualname":"::image::SamplerInfo","value":"SamplerInfo { min_filter, mag_filter, mip_filter, wrap_mode, lod_bias, lod_range, comparison, border, normalized, anisotropic }","parent":null,"children":[{"krate":0,"index":14691},{"krate":0,"index":14692},{"krate":0,"index":14693},{"krate":0,"index":14694},{"krate":0,"index":14695},{"krate":0,"index":14696},{"krate":0,"index":14697},{"krate":0,"index":14698},{"krate":0,"index":14699},{"krate":0,"index":14700}],"decl_id":null,"docs":" Specifies how to sample from an image.  These are all the parameters\n available that alter how the GPU goes from a coordinate in an image\n to producing an actual value from the texture, including filtering/\n scaling, wrap mode, etc.\n","sig":null,"attributes":[{"value":"/ Specifies how to sample from an image.  These are all the parameters","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":165550,"byte_end":165622,"line_start":494,"line_end":494,"column_start":1,"column_end":73}},{"value":"/ available that alter how the GPU goes from a coordinate in an image","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":165623,"byte_end":165694,"line_start":495,"line_end":495,"column_start":1,"column_end":72}},{"value":"/ to producing an actual value from the texture, including filtering/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":165695,"byte_end":165766,"line_start":496,"line_end":496,"column_start":1,"column_end":72}},{"value":"/ scaling, wrap mode, etc.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":165767,"byte_end":165795,"line_start":497,"line_end":497,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":14691},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":166023,"byte_end":166033,"line_start":503,"line_end":503,"column_start":9,"column_end":19},"name":"min_filter","qualname":"::image::SamplerInfo::min_filter","value":"image::Filter","parent":{"krate":0,"index":14690},"children":[],"decl_id":null,"docs":" Minification filter method to use.\n","sig":null,"attributes":[{"value":"/ Minification filter method to use.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":165976,"byte_end":166014,"line_start":502,"line_end":502,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":14692},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":166095,"byte_end":166105,"line_start":505,"line_end":505,"column_start":9,"column_end":19},"name":"mag_filter","qualname":"::image::SamplerInfo::mag_filter","value":"image::Filter","parent":{"krate":0,"index":14690},"children":[],"decl_id":null,"docs":" Magnification filter method to use.\n","sig":null,"attributes":[{"value":"/ Magnification filter method to use.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":166047,"byte_end":166086,"line_start":504,"line_end":504,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":14693},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":166157,"byte_end":166167,"line_start":507,"line_end":507,"column_start":9,"column_end":19},"name":"mip_filter","qualname":"::image::SamplerInfo::mip_filter","value":"image::Filter","parent":{"krate":0,"index":14690},"children":[],"decl_id":null,"docs":" Mip filter method to use.\n","sig":null,"attributes":[{"value":"/ Mip filter method to use.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":166119,"byte_end":166148,"line_start":506,"line_end":506,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":14694},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":166279,"byte_end":166288,"line_start":510,"line_end":510,"column_start":9,"column_end":18},"name":"wrap_mode","qualname":"::image::SamplerInfo::wrap_mode","value":"(image::WrapMode, image::WrapMode, image::WrapMode)","parent":{"krate":0,"index":14690},"children":[],"decl_id":null,"docs":" Wrapping mode for each of the U, V, and W axis (S, T, and R in OpenGL\n speak).\n","sig":null,"attributes":[{"value":"/ Wrapping mode for each of the U, V, and W axis (S, T, and R in OpenGL","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":166181,"byte_end":166254,"line_start":508,"line_end":508,"column_start":5,"column_end":78}},{"value":"/ speak).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":166259,"byte_end":166270,"line_start":509,"line_end":509,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":14695},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":166514,"byte_end":166522,"line_start":514,"line_end":514,"column_start":9,"column_end":17},"name":"lod_bias","qualname":"::image::SamplerInfo::lod_bias","value":"image::Lod","parent":{"krate":0,"index":14690},"children":[],"decl_id":null,"docs":" This bias is added to every computed mipmap level (N + lod_bias). For\n example, if it would select mipmap level 2 and lod_bias is 1, it will\n use mipmap level 3.\n","sig":null,"attributes":[{"value":"/ This bias is added to every computed mipmap level (N + lod_bias). For","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":166326,"byte_end":166399,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/ example, if it would select mipmap level 2 and lod_bias is 1, it will","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":166404,"byte_end":166477,"line_start":512,"line_end":512,"column_start":5,"column_end":78}},{"value":"/ use mipmap level 3.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":166482,"byte_end":166505,"line_start":513,"line_end":513,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":14696},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":166602,"byte_end":166611,"line_start":516,"line_end":516,"column_start":9,"column_end":18},"name":"lod_range","qualname":"::image::SamplerInfo::lod_range","value":"std::ops::Range<image::Lod>","parent":{"krate":0,"index":14690},"children":[],"decl_id":null,"docs":" This range is used to clamp LOD level used for sampling.\n","sig":null,"attributes":[{"value":"/ This range is used to clamp LOD level used for sampling.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":166533,"byte_end":166593,"line_start":515,"line_end":515,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":14697},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":166689,"byte_end":166699,"line_start":518,"line_end":518,"column_start":9,"column_end":19},"name":"comparison","qualname":"::image::SamplerInfo::comparison","value":"std::option::Option<pso::output_merger::Comparison>","parent":{"krate":0,"index":14690},"children":[],"decl_id":null,"docs":" Comparison mode, used primary for a shadow map.\n","sig":null,"attributes":[{"value":"/ Comparison mode, used primary for a shadow map.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":166629,"byte_end":166680,"line_start":517,"line_end":517,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":14698},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":166803,"byte_end":166809,"line_start":520,"line_end":520,"column_start":9,"column_end":15},"name":"border","qualname":"::image::SamplerInfo::border","value":"image::PackedColor","parent":{"krate":0,"index":14690},"children":[],"decl_id":null,"docs":" Border color is used when one of the wrap modes is set to border.\n","sig":null,"attributes":[{"value":"/ Border color is used when one of the wrap modes is set to border.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":166725,"byte_end":166794,"line_start":519,"line_end":519,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":14699},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":166898,"byte_end":166908,"line_start":522,"line_end":522,"column_start":9,"column_end":19},"name":"normalized","qualname":"::image::SamplerInfo::normalized","value":"bool","parent":{"krate":0,"index":14690},"children":[],"decl_id":null,"docs":" Specifies whether the texture coordinates are normalized.\n","sig":null,"attributes":[{"value":"/ Specifies whether the texture coordinates are normalized.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":166828,"byte_end":166889,"line_start":521,"line_end":521,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":14700},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":166955,"byte_end":166966,"line_start":524,"line_end":524,"column_start":9,"column_end":20},"name":"anisotropic","qualname":"::image::SamplerInfo::anisotropic","value":"image::Anisotropic","parent":{"krate":0,"index":14690},"children":[],"decl_id":null,"docs":" Anisotropic filtering.\n","sig":null,"attributes":[{"value":"/ Anisotropic filtering.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":166920,"byte_end":166946,"line_start":523,"line_end":523,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":167168,"byte_end":167171,"line_start":530,"line_end":530,"column_start":12,"column_end":15},"name":"new","qualname":"<SamplerInfo>::new","value":"pub fn new(Filter, WrapMode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new sampler description with a given filter method for all filtering operations\n and a wrapping mode, using no LOD modifications.\n","sig":null,"attributes":[{"value":"/ Create a new sampler description with a given filter method for all filtering operations","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":167007,"byte_end":167099,"line_start":528,"line_end":528,"column_start":5,"column_end":97}},{"value":"/ and a wrapping mode, using no LOD modifications.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":167104,"byte_end":167156,"line_start":529,"line_end":529,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14781},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":168306,"byte_end":168313,"line_start":558,"line_end":558,"column_start":5,"column_end":12},"name":"General","qualname":"::image::Layout::General","value":"Layout::General","parent":{"krate":0,"index":14780},"children":[],"decl_id":null,"docs":" General purpose, no restrictions on usage.\n","sig":null,"attributes":[{"value":"/ General purpose, no restrictions on usage.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":168255,"byte_end":168301,"line_start":557,"line_end":557,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14783},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":168385,"byte_end":168407,"line_start":560,"line_end":560,"column_start":5,"column_end":27},"name":"ColorAttachmentOptimal","qualname":"::image::Layout::ColorAttachmentOptimal","value":"Layout::ColorAttachmentOptimal","parent":{"krate":0,"index":14780},"children":[],"decl_id":null,"docs":" Must only be used as a color attachment in a framebuffer.\n","sig":null,"attributes":[{"value":"/ Must only be used as a color attachment in a framebuffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":168319,"byte_end":168380,"line_start":559,"line_end":559,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14785},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":168479,"byte_end":168508,"line_start":562,"line_end":562,"column_start":5,"column_end":34},"name":"DepthStencilAttachmentOptimal","qualname":"::image::Layout::DepthStencilAttachmentOptimal","value":"Layout::DepthStencilAttachmentOptimal","parent":{"krate":0,"index":14780},"children":[],"decl_id":null,"docs":" Must only be used as a depth attachment in a framebuffer.\n","sig":null,"attributes":[{"value":"/ Must only be used as a depth attachment in a framebuffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":168413,"byte_end":168474,"line_start":561,"line_end":561,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14787},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":168643,"byte_end":168670,"line_start":565,"line_end":565,"column_start":5,"column_end":32},"name":"DepthStencilReadOnlyOptimal","qualname":"::image::Layout::DepthStencilReadOnlyOptimal","value":"Layout::DepthStencilReadOnlyOptimal","parent":{"krate":0,"index":14780},"children":[],"decl_id":null,"docs":" Must only be used as a depth attachment in a framebuffer,\n or as a read-only depth or stencil buffer in a shader.\n","sig":null,"attributes":[{"value":"/ Must only be used as a depth attachment in a framebuffer,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":168514,"byte_end":168575,"line_start":563,"line_end":563,"column_start":5,"column_end":66}},{"value":"/ or as a read-only depth or stencil buffer in a shader.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":168580,"byte_end":168638,"line_start":564,"line_end":564,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14789},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":168736,"byte_end":168757,"line_start":567,"line_end":567,"column_start":5,"column_end":26},"name":"ShaderReadOnlyOptimal","qualname":"::image::Layout::ShaderReadOnlyOptimal","value":"Layout::ShaderReadOnlyOptimal","parent":{"krate":0,"index":14780},"children":[],"decl_id":null,"docs":" Must only be used as a read-only image in a shader.\n","sig":null,"attributes":[{"value":"/ Must only be used as a read-only image in a shader.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":168676,"byte_end":168731,"line_start":566,"line_end":566,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14791},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":168827,"byte_end":168845,"line_start":569,"line_end":569,"column_start":5,"column_end":23},"name":"TransferSrcOptimal","qualname":"::image::Layout::TransferSrcOptimal","value":"Layout::TransferSrcOptimal","parent":{"krate":0,"index":14780},"children":[],"decl_id":null,"docs":" Must only be used as the source for a transfer command.\n","sig":null,"attributes":[{"value":"/ Must only be used as the source for a transfer command.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":168763,"byte_end":168822,"line_start":568,"line_end":568,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14793},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":168920,"byte_end":168938,"line_start":571,"line_end":571,"column_start":5,"column_end":23},"name":"TransferDstOptimal","qualname":"::image::Layout::TransferDstOptimal","value":"Layout::TransferDstOptimal","parent":{"krate":0,"index":14780},"children":[],"decl_id":null,"docs":" Must only be used as the destination for a transfer command.\n","sig":null,"attributes":[{"value":"/ Must only be used as the destination for a transfer command.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":168851,"byte_end":168915,"line_start":570,"line_end":570,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14795},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":169202,"byte_end":169211,"line_start":576,"line_end":576,"column_start":5,"column_end":14},"name":"Undefined","qualname":"::image::Layout::Undefined","value":"Layout::Undefined","parent":{"krate":0,"index":14780},"children":[],"decl_id":null,"docs":" No layout, does not support device access.  Only valid as a\n source layout when transforming data to a specific destination\n layout or initializing data.  Does NOT guarentee that the contents\n of the source buffer are preserved.\n","sig":null,"attributes":[{"value":"/ No layout, does not support device access.  Only valid as a","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":168944,"byte_end":169007,"line_start":572,"line_end":572,"column_start":5,"column_end":68}},{"value":"/ source layout when transforming data to a specific destination","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":169012,"byte_end":169078,"line_start":573,"line_end":573,"column_start":5,"column_end":71}},{"value":"/ layout or initializing data.  Does NOT guarentee that the contents","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":169083,"byte_end":169153,"line_start":574,"line_end":574,"column_start":5,"column_end":75}},{"value":"/ of the source buffer are preserved.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":169158,"byte_end":169197,"line_start":575,"line_end":575,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14797},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":169359,"byte_end":169373,"line_start":579,"line_end":579,"column_start":5,"column_end":19},"name":"Preinitialized","qualname":"::image::Layout::Preinitialized","value":"Layout::Preinitialized","parent":{"krate":0,"index":14780},"children":[],"decl_id":null,"docs":" Like `Undefined`, but does guarentee that the contents of the source\n buffer are preserved.\n","sig":null,"attributes":[{"value":"/ Like `Undefined`, but does guarentee that the contents of the source","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":169252,"byte_end":169324,"line_start":577,"line_end":577,"column_start":5,"column_end":77}},{"value":"/ buffer are preserved.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":169329,"byte_end":169354,"line_start":578,"line_end":578,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14799},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":169455,"byte_end":169462,"line_start":581,"line_end":581,"column_start":5,"column_end":12},"name":"Present","qualname":"::image::Layout::Present","value":"Layout::Present","parent":{"krate":0,"index":14780},"children":[],"decl_id":null,"docs":" The layout that an image must be in to be presented to the display.\n","sig":null,"attributes":[{"value":"/ The layout that an image must be in to be presented to the display.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":169379,"byte_end":169450,"line_start":580,"line_end":580,"column_start":5,"column_end":76}}]},{"kind":"Enum","id":{"krate":0,"index":14780},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":168242,"byte_end":168248,"line_start":556,"line_end":556,"column_start":10,"column_end":16},"name":"Layout","qualname":"::image::Layout","value":"pub enum Layout {\n\n    /// General purpose, no restrictions on usage.\n    General,\n\n    /// Must only be used as a color attachment in a framebuffer.\n    ColorAttachmentOptimal,\n\n    /// Must only be used as a depth attachment in a framebuffer.\n    DepthStencilAttachmentOptimal,\n\n    /// Must only be used as a depth attachment in a framebuffer,\n    /// or as a read-only depth or stencil buffer in a shader.\n    DepthStencilReadOnlyOptimal,\n\n    /// Must only be used as a read-only image in a shader.\n    ShaderReadOnlyOptimal,\n\n    /// Must only be used as the source for a transfer command.\n    TransferSrcOptimal,\n\n    /// Must only be used as the destination for a transfer command.\n    TransferDstOptimal,\n\n    /// No layout, does not support device access.  Only valid as a\n    /// source layout when transforming data to a specific destination\n    /// layout or initializing data.  Does NOT guarentee that the contents\n    /// of the source buffer are preserved.\n    Undefined,\n\n    /// Like `Undefined`, but does guarentee that the contents of the source\n    /// buffer are preserved.\n    Preinitialized,\n\n    /// The layout that an image must be in to be presented to the display.\n    Present,\n}","parent":null,"children":[{"krate":0,"index":14781},{"krate":0,"index":14783},{"krate":0,"index":14785},{"krate":0,"index":14787},{"krate":0,"index":14789},{"krate":0,"index":14791},{"krate":0,"index":14793},{"krate":0,"index":14795},{"krate":0,"index":14797},{"krate":0,"index":14799}],"decl_id":null,"docs":" Specifies options for how memory for an image is arranged.\n These are hints to the GPU driver and may or may not have actual\n performance effects, but describe constraints on how the data\n may be used that a program *must* obey. They do not specify\n how channel values or such are laid out in memory; the actual\n image data is considered opaque.","sig":null,"attributes":[{"value":"/ Specifies options for how memory for an image is arranged.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":167612,"byte_end":167674,"line_start":546,"line_end":546,"column_start":1,"column_end":63}},{"value":"/ These are hints to the GPU driver and may or may not have actual","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":167675,"byte_end":167743,"line_start":547,"line_end":547,"column_start":1,"column_end":69}},{"value":"/ performance effects, but describe constraints on how the data","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":167744,"byte_end":167809,"line_start":548,"line_end":548,"column_start":1,"column_end":66}},{"value":"/ may be used that a program *must* obey. They do not specify","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":167810,"byte_end":167873,"line_start":549,"line_end":549,"column_start":1,"column_end":64}},{"value":"/ how channel values or such are laid out in memory; the actual","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":167874,"byte_end":167939,"line_start":550,"line_end":550,"column_start":1,"column_end":66}},{"value":"/ image data is considered opaque.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":167940,"byte_end":167976,"line_start":551,"line_end":551,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":167977,"byte_end":167980,"line_start":552,"line_end":552,"column_start":1,"column_end":4}},{"value":"/ Details may be found in [the Vulkan spec](https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#resources-image-layouts)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":167981,"byte_end":168118,"line_start":553,"line_end":553,"column_start":1,"column_end":138}}]},{"kind":"Struct","id":{"krate":0,"index":14876},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":169639,"byte_end":169645,"line_start":587,"line_end":587,"column_start":16,"column_end":22},"name":"Access","qualname":"::image::Access","value":"Access {  }","parent":null,"children":[{"krate":0,"index":14877}],"decl_id":null,"docs":" Bitflags to describe how memory in an image or buffer can be accessed.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":14972},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":169745,"byte_end":169766,"line_start":589,"line_end":589,"column_start":15,"column_end":36},"name":"INPUT_ATTACHMENT_READ","qualname":"::image::Access::INPUT_ATTACHMENT_READ","value":"Access","parent":{"krate":0,"index":14971},"children":[],"decl_id":null,"docs":" Read access to an input attachment from within a fragment shader.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":14973},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":169891,"byte_end":169902,"line_start":591,"line_end":591,"column_start":15,"column_end":26},"name":"SHADER_READ","qualname":"::image::Access::SHADER_READ","value":"Access","parent":{"krate":0,"index":14971},"children":[],"decl_id":null,"docs":" Read-only state for SRV access, or combine with `SHADER_WRITE` to have r/w access to UAV.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":14974},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":170035,"byte_end":170047,"line_start":594,"line_end":594,"column_start":15,"column_end":27},"name":"SHADER_WRITE","qualname":"::image::Access::SHADER_WRITE","value":"Access","parent":{"krate":0,"index":14971},"children":[],"decl_id":null,"docs":" Writeable state for UAV access.\n Combine with `SHADER_READ` to have r/w access to UAV.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":14975},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":170149,"byte_end":170170,"line_start":596,"line_end":596,"column_start":15,"column_end":36},"name":"COLOR_ATTACHMENT_READ","qualname":"::image::Access::COLOR_ATTACHMENT_READ","value":"Access","parent":{"krate":0,"index":14971},"children":[],"decl_id":null,"docs":" Read state but can only be combined with `COLOR_ATTACHMENT_WRITE`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":14976},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":170272,"byte_end":170294,"line_start":598,"line_end":598,"column_start":15,"column_end":37},"name":"COLOR_ATTACHMENT_WRITE","qualname":"::image::Access::COLOR_ATTACHMENT_WRITE","value":"Access","parent":{"krate":0,"index":14971},"children":[],"decl_id":null,"docs":" Write-only state but can be combined with `COLOR_ATTACHMENT_READ`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":14977},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":170405,"byte_end":170434,"line_start":600,"line_end":600,"column_start":15,"column_end":44},"name":"DEPTH_STENCIL_ATTACHMENT_READ","qualname":"::image::Access::DEPTH_STENCIL_ATTACHMENT_READ","value":"Access","parent":{"krate":0,"index":14971},"children":[],"decl_id":null,"docs":" Read access to a depth/stencil attachment in a depth or stencil operation.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":14978},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":170546,"byte_end":170576,"line_start":602,"line_end":602,"column_start":15,"column_end":45},"name":"DEPTH_STENCIL_ATTACHMENT_WRITE","qualname":"::image::Access::DEPTH_STENCIL_ATTACHMENT_WRITE","value":"Access","parent":{"krate":0,"index":14971},"children":[],"decl_id":null,"docs":" Write access to a depth/stencil attachment in a depth or stencil operation.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":14979},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":170659,"byte_end":170672,"line_start":604,"line_end":604,"column_start":15,"column_end":28},"name":"TRANSFER_READ","qualname":"::image::Access::TRANSFER_READ","value":"Access","parent":{"krate":0,"index":14971},"children":[],"decl_id":null,"docs":" Read access to the buffer in a copy operation.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":14980},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":170756,"byte_end":170770,"line_start":606,"line_end":606,"column_start":15,"column_end":29},"name":"TRANSFER_WRITE","qualname":"::image::Access::TRANSFER_WRITE","value":"Access","parent":{"krate":0,"index":14971},"children":[],"decl_id":null,"docs":" Write access to the buffer in a copy operation.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":14981},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":170879,"byte_end":170888,"line_start":608,"line_end":608,"column_start":15,"column_end":24},"name":"HOST_READ","qualname":"::image::Access::HOST_READ","value":"Access","parent":{"krate":0,"index":14971},"children":[],"decl_id":null,"docs":" Read access for raw memory to be accessed by the host system (ie, CPU).\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":14982},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":170988,"byte_end":170998,"line_start":610,"line_end":610,"column_start":15,"column_end":25},"name":"HOST_WRITE","qualname":"::image::Access::HOST_WRITE","value":"Access","parent":{"krate":0,"index":14971},"children":[],"decl_id":null,"docs":" Write access for raw memory to be accessed by the host system.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":14983},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":171216,"byte_end":171227,"line_start":614,"line_end":614,"column_start":15,"column_end":26},"name":"MEMORY_READ","qualname":"::image::Access::MEMORY_READ","value":"Access","parent":{"krate":0,"index":14971},"children":[],"decl_id":null,"docs":" Read access for memory to be accessed by a non-specific entity.  This may\n be the host system, or it may be something undefined or specified by an\n extension.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":14984},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":171329,"byte_end":171341,"line_start":616,"line_end":616,"column_start":15,"column_end":27},"name":"MEMORY_WRITE","qualname":"::image::Access::MEMORY_WRITE","value":"Access","parent":{"krate":0,"index":14971},"children":[],"decl_id":null,"docs":" Write access for memory to be accessed by a non-specific entity.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":870},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":171438,"byte_end":171443,"line_start":621,"line_end":621,"column_start":10,"column_end":15},"name":"State","qualname":"::image::State","value":"(Access, Layout)","parent":null,"children":[],"decl_id":null,"docs":" Image state, combining access methods and the image's layout.\n","sig":null,"attributes":[{"value":"/ Image state, combining access methods and the image's layout.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":171363,"byte_end":171428,"line_start":620,"line_end":620,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":15069},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":171642,"byte_end":171653,"line_start":626,"line_end":626,"column_start":12,"column_end":23},"name":"Subresource","qualname":"::image::Subresource","value":"Subresource { aspects, level, layer }","parent":null,"children":[{"krate":0,"index":15070},{"krate":0,"index":15071},{"krate":0,"index":15072}],"decl_id":null,"docs":" Selector of a concrete subresource in an image.\n","sig":null,"attributes":[{"value":"/ Selector of a concrete subresource in an image.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":171465,"byte_end":171516,"line_start":623,"line_end":623,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15070},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":171710,"byte_end":171717,"line_start":628,"line_end":628,"column_start":9,"column_end":16},"name":"aspects","qualname":"::image::Subresource::aspects","value":"format::Aspects","parent":{"krate":0,"index":15069},"children":[],"decl_id":null,"docs":" Included aspects: color/depth/stencil\n","sig":null,"attributes":[{"value":"/ Included aspects: color/depth/stencil","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":171660,"byte_end":171701,"line_start":627,"line_end":627,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":15071},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":171774,"byte_end":171779,"line_start":630,"line_end":630,"column_start":9,"column_end":14},"name":"level","qualname":"::image::Subresource::level","value":"u8","parent":{"krate":0,"index":15069},"children":[],"decl_id":null,"docs":" Selected mipmap level\n","sig":null,"attributes":[{"value":"/ Selected mipmap level","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":171740,"byte_end":171765,"line_start":629,"line_end":629,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":15072},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":171825,"byte_end":171830,"line_start":632,"line_end":632,"column_start":9,"column_end":14},"name":"layer","qualname":"::image::Subresource::layer","value":"u16","parent":{"krate":0,"index":15069},"children":[],"decl_id":null,"docs":" Selected array level\n","sig":null,"attributes":[{"value":"/ Selected array level","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":171792,"byte_end":171816,"line_start":631,"line_end":631,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":15139},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":172028,"byte_end":172045,"line_start":638,"line_end":638,"column_start":12,"column_end":29},"name":"SubresourceLayers","qualname":"::image::SubresourceLayers","value":"SubresourceLayers { aspects, level, layers }","parent":null,"children":[{"krate":0,"index":15140},{"krate":0,"index":15141},{"krate":0,"index":15142}],"decl_id":null,"docs":" A subset of resource layers contained within an image's level.\n","sig":null,"attributes":[{"value":"/ A subset of resource layers contained within an image's level.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":171842,"byte_end":171908,"line_start":635,"line_end":635,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":15140},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":172102,"byte_end":172109,"line_start":640,"line_end":640,"column_start":9,"column_end":16},"name":"aspects","qualname":"::image::SubresourceLayers::aspects","value":"format::Aspects","parent":{"krate":0,"index":15139},"children":[],"decl_id":null,"docs":" Included aspects: color/depth/stencil\n","sig":null,"attributes":[{"value":"/ Included aspects: color/depth/stencil","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":172052,"byte_end":172093,"line_start":639,"line_end":639,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":15141},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":172166,"byte_end":172171,"line_start":642,"line_end":642,"column_start":9,"column_end":14},"name":"level","qualname":"::image::SubresourceLayers::level","value":"u8","parent":{"krate":0,"index":15139},"children":[],"decl_id":null,"docs":" Selected mipmap level\n","sig":null,"attributes":[{"value":"/ Selected mipmap level","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":172132,"byte_end":172157,"line_start":641,"line_end":641,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":15142},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":172218,"byte_end":172224,"line_start":644,"line_end":644,"column_start":9,"column_end":15},"name":"layers","qualname":"::image::SubresourceLayers::layers","value":"std::ops::Range<u16>","parent":{"krate":0,"index":15139},"children":[],"decl_id":null,"docs":" Included array levels\n","sig":null,"attributes":[{"value":"/ Included array levels","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":172184,"byte_end":172209,"line_start":643,"line_end":643,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":15208},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":172415,"byte_end":172431,"line_start":650,"line_end":650,"column_start":12,"column_end":28},"name":"SubresourceRange","qualname":"::image::SubresourceRange","value":"SubresourceRange { aspects, levels, layers }","parent":null,"children":[{"krate":0,"index":15209},{"krate":0,"index":15210},{"krate":0,"index":15211}],"decl_id":null,"docs":" A subset of resources contained within an image.\n","sig":null,"attributes":[{"value":"/ A subset of resources contained within an image.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":172243,"byte_end":172295,"line_start":647,"line_end":647,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":15209},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":172488,"byte_end":172495,"line_start":652,"line_end":652,"column_start":9,"column_end":16},"name":"aspects","qualname":"::image::SubresourceRange::aspects","value":"format::Aspects","parent":{"krate":0,"index":15208},"children":[],"decl_id":null,"docs":" Included aspects: color/depth/stencil\n","sig":null,"attributes":[{"value":"/ Included aspects: color/depth/stencil","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":172438,"byte_end":172479,"line_start":651,"line_end":651,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":15210},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":172553,"byte_end":172559,"line_start":654,"line_end":654,"column_start":9,"column_end":15},"name":"levels","qualname":"::image::SubresourceRange::levels","value":"std::ops::Range<u8>","parent":{"krate":0,"index":15208},"children":[],"decl_id":null,"docs":" Included mipmap levels\n","sig":null,"attributes":[{"value":"/ Included mipmap levels","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":172518,"byte_end":172544,"line_start":653,"line_end":653,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":15211},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":172613,"byte_end":172619,"line_start":656,"line_end":656,"column_start":9,"column_end":15},"name":"layers","qualname":"::image::SubresourceRange::layers","value":"std::ops::Range<u16>","parent":{"krate":0,"index":15208},"children":[],"decl_id":null,"docs":" Included array levels\n","sig":null,"attributes":[{"value":"/ Included array levels","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":172579,"byte_end":172604,"line_start":655,"line_end":655,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":15277},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":172792,"byte_end":172808,"line_start":662,"line_end":662,"column_start":12,"column_end":28},"name":"FormatProperties","qualname":"::image::FormatProperties","value":"FormatProperties { max_extent, max_levels, max_layers, sample_count_mask, max_resource_size }","parent":null,"children":[{"krate":0,"index":15278},{"krate":0,"index":15279},{"krate":0,"index":15280},{"krate":0,"index":15281},{"krate":0,"index":15282}],"decl_id":null,"docs":" Image format properties.\n","sig":null,"attributes":[{"value":"/ Image format properties.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":172638,"byte_end":172666,"line_start":659,"line_end":659,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":15278},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":172843,"byte_end":172853,"line_start":664,"line_end":664,"column_start":9,"column_end":19},"name":"max_extent","qualname":"::image::FormatProperties::max_extent","value":"image::Extent","parent":{"krate":0,"index":15277},"children":[],"decl_id":null,"docs":" Maximum extent.\n","sig":null,"attributes":[{"value":"/ Maximum extent.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":172815,"byte_end":172834,"line_start":663,"line_end":663,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":15279},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":172908,"byte_end":172918,"line_start":666,"line_end":666,"column_start":9,"column_end":19},"name":"max_levels","qualname":"::image::FormatProperties::max_levels","value":"u8","parent":{"krate":0,"index":15277},"children":[],"decl_id":null,"docs":" Max number of mipmap levels.\n","sig":null,"attributes":[{"value":"/ Max number of mipmap levels.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":172867,"byte_end":172899,"line_start":665,"line_end":665,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":15280},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":172971,"byte_end":172981,"line_start":668,"line_end":668,"column_start":9,"column_end":19},"name":"max_layers","qualname":"::image::FormatProperties::max_layers","value":"u16","parent":{"krate":0,"index":15277},"children":[],"decl_id":null,"docs":" Max number of array layers.\n","sig":null,"attributes":[{"value":"/ Max number of array layers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":172931,"byte_end":172962,"line_start":667,"line_end":667,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":15281},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":173043,"byte_end":173060,"line_start":670,"line_end":670,"column_start":9,"column_end":26},"name":"sample_count_mask","qualname":"::image::FormatProperties::sample_count_mask","value":"u8","parent":{"krate":0,"index":15277},"children":[],"decl_id":null,"docs":" Bit mask of supported sample counts.\n","sig":null,"attributes":[{"value":"/ Bit mask of supported sample counts.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":172994,"byte_end":173034,"line_start":669,"line_end":669,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":15282},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":173129,"byte_end":173146,"line_start":672,"line_end":672,"column_start":9,"column_end":26},"name":"max_resource_size","qualname":"::image::FormatProperties::max_resource_size","value":"usize","parent":{"krate":0,"index":15277},"children":[],"decl_id":null,"docs":" Maximum size of the resource in bytes.\n","sig":null,"attributes":[{"value":"/ Maximum size of the resource in bytes.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":173078,"byte_end":173120,"line_start":671,"line_end":671,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":15353},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":173319,"byte_end":173339,"line_start":678,"line_end":678,"column_start":12,"column_end":32},"name":"SubresourceFootprint","qualname":"::image::SubresourceFootprint","value":"SubresourceFootprint { slice, row_pitch, array_pitch, depth_pitch }","parent":null,"children":[{"krate":0,"index":15354},{"krate":0,"index":15355},{"krate":0,"index":15356},{"krate":0,"index":15357}],"decl_id":null,"docs":" Footprint of a subresource in memory.\n","sig":null,"attributes":[{"value":"/ Footprint of a subresource in memory.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":173158,"byte_end":173199,"line_start":675,"line_end":675,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":15354},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":173398,"byte_end":173403,"line_start":680,"line_end":680,"column_start":9,"column_end":14},"name":"slice","qualname":"::image::SubresourceFootprint::slice","value":"std::ops::Range<u64>","parent":{"krate":0,"index":15353},"children":[],"decl_id":null,"docs":" Byte slice occupied by the subresource.\n","sig":null,"attributes":[{"value":"/ Byte slice occupied by the subresource.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":173346,"byte_end":173389,"line_start":679,"line_end":679,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":15355},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":173467,"byte_end":173476,"line_start":682,"line_end":682,"column_start":9,"column_end":18},"name":"row_pitch","qualname":"::image::SubresourceFootprint::row_pitch","value":"u64","parent":{"krate":0,"index":15353},"children":[],"decl_id":null,"docs":" Byte distance between rows.\n","sig":null,"attributes":[{"value":"/ Byte distance between rows.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":173427,"byte_end":173458,"line_start":681,"line_end":681,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":15356},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":173541,"byte_end":173552,"line_start":684,"line_end":684,"column_start":9,"column_end":20},"name":"array_pitch","qualname":"::image::SubresourceFootprint::array_pitch","value":"u64","parent":{"krate":0,"index":15353},"children":[],"decl_id":null,"docs":" Byte distance between array layers.\n","sig":null,"attributes":[{"value":"/ Byte distance between array layers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":173493,"byte_end":173532,"line_start":683,"line_end":683,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":15357},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":173617,"byte_end":173628,"line_start":686,"line_end":686,"column_start":9,"column_end":20},"name":"depth_pitch","qualname":"::image::SubresourceFootprint::depth_pitch","value":"u64","parent":{"krate":0,"index":15353},"children":[],"decl_id":null,"docs":" Byte distance between depth slices.\n","sig":null,"attributes":[{"value":"/ Byte distance between depth slices.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":173569,"byte_end":173608,"line_start":685,"line_end":685,"column_start":5,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":871},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mapping","qualname":"::mapping","value":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","parent":null,"children":[{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":15425},{"krate":0,"index":15453},{"krate":0,"index":15452},{"krate":0,"index":15450},{"krate":0,"index":15447},{"krate":0,"index":15448},{"krate":0,"index":15443},{"krate":0,"index":15444},{"krate":0,"index":15435},{"krate":0,"index":15440},{"krate":0,"index":877},{"krate":0,"index":15455},{"krate":0,"index":15462},{"krate":0,"index":879},{"krate":0,"index":884},{"krate":0,"index":15467},{"krate":0,"index":15475},{"krate":0,"index":890},{"krate":0,"index":895},{"krate":0,"index":901}],"decl_id":null,"docs":" Memory mapping\n","sig":null,"attributes":[{"value":"deny(missing_docs, missing_copy_implementations)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":173644,"byte_end":173696,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/ Memory mapping","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":173698,"byte_end":173716,"line_start":3,"line_end":3,"column_start":1,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":15426},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":173974,"byte_end":173985,"line_start":14,"line_end":14,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::mapping::Error::OutOfMemory","value":"Error::OutOfMemory(device::OutOfMemory)","parent":{"krate":0,"index":15425},"children":[],"decl_id":null,"docs":" Out of either host or device memory.\n","sig":null,"attributes":[{"value":"/ Out of either host or device memory.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":173897,"byte_end":173937,"line_start":12,"line_end":12,"column_start":5,"column_end":45}},{"value":"fail(display = \"{}\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":173942,"byte_end":173969,"line_start":13,"line_end":13,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":15429},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":174170,"byte_end":174183,"line_start":17,"line_end":17,"column_start":5,"column_end":18},"name":"InvalidAccess","qualname":"::mapping::Error::InvalidAccess","value":"Error::InvalidAccess","parent":{"krate":0,"index":15425},"children":[],"decl_id":null,"docs":" The requested mapping access did not match the expected usage.\n","sig":null,"attributes":[{"value":"/ The requested mapping access did not match the expected usage.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":174012,"byte_end":174078,"line_start":15,"line_end":15,"column_start":5,"column_end":71}},{"value":"fail(display =\n       \"The requested mapping access did not match the expected usage\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":174083,"byte_end":174165,"line_start":16,"line_end":16,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":15431},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":174333,"byte_end":174344,"line_start":20,"line_end":20,"column_start":5,"column_end":16},"name":"OutOfBounds","qualname":"::mapping::Error::OutOfBounds","value":"Error::OutOfBounds","parent":{"krate":0,"index":15425},"children":[],"decl_id":null,"docs":" The requested mapping range is outside of the resource.\n","sig":null,"attributes":[{"value":"/ The requested mapping range is outside of the resource.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":174189,"byte_end":174248,"line_start":18,"line_end":18,"column_start":5,"column_end":64}},{"value":"fail(display = \"The requested mapping range is outside of the resource\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":174253,"byte_end":174328,"line_start":19,"line_end":19,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":15433},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":174480,"byte_end":174493,"line_start":23,"line_end":23,"column_start":5,"column_end":18},"name":"MappingFailed","qualname":"::mapping::Error::MappingFailed","value":"Error::MappingFailed","parent":{"krate":0,"index":15425},"children":[],"decl_id":null,"docs":" Failed to map memory range.\n","sig":null,"attributes":[{"value":"/ Failed to map memory range.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":174350,"byte_end":174381,"line_start":21,"line_end":21,"column_start":5,"column_end":36}},{"value":"fail(display =\n       \"Unable to allocate an appropriately sized contiguous virtual address\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":174386,"byte_end":174475,"line_start":22,"line_end":22,"column_start":5,"column_end":94}}]},{"kind":"Enum","id":{"krate":0,"index":15425},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":173885,"byte_end":173890,"line_start":11,"line_end":11,"column_start":10,"column_end":15},"name":"Error","qualname":"::mapping::Error","value":"pub enum Error {\n\n    /// Out of either host or device memory.\n    #[fail(display = \"{}\", _0)]\n    OutOfMemory(device::OutOfMemory),\n\n    /// The requested mapping access did not match the expected usage.\n    #[fail(display =\n           \"The requested mapping access did not match the expected usage\")]\n    InvalidAccess,\n\n    /// The requested mapping range is outside of the resource.\n    #[fail(display =\n           \"The requested mapping range is outside of the resource\")]\n    OutOfBounds,\n\n    /// Failed to map memory range.\n    #[fail(display =\n           \"Unable to allocate an appropriately sized contiguous virtual address\")]\n    MappingFailed,\n}","parent":null,"children":[{"krate":0,"index":15426},{"krate":0,"index":15429},{"krate":0,"index":15431},{"krate":0,"index":15433}],"decl_id":null,"docs":" Error accessing a mapping.\n","sig":null,"attributes":[{"value":"/ Error accessing a mapping.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":173794,"byte_end":173824,"line_start":9,"line_end":9,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":15455},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":174681,"byte_end":174687,"line_start":34,"line_end":34,"column_start":12,"column_end":18},"name":"Reader","qualname":"::mapping::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":15459},{"krate":0,"index":15460},{"krate":0,"index":15461}],"decl_id":null,"docs":" Mapping reader\n","sig":null,"attributes":[{"value":"/ Mapping reader","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":174634,"byte_end":174652,"line_start":32,"line_end":32,"column_start":1,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":15467},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":175349,"byte_end":175355,"line_start":57,"line_end":57,"column_start":12,"column_end":18},"name":"Writer","qualname":"::mapping::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":15471},{"krate":0,"index":15472},{"krate":0,"index":15473},{"krate":0,"index":15474}],"decl_id":null,"docs":" Mapping writer.\n Currently is not possible to make write-only slice so while it is technically possible\n to read from Writer, it will lead to an undefined behavior. Please do not read from it.\n","sig":null,"attributes":[{"value":"/ Mapping writer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":175118,"byte_end":175137,"line_start":53,"line_end":53,"column_start":1,"column_end":20}},{"value":"/ Currently is not possible to make write-only slice so while it is technically possible","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":175138,"byte_end":175228,"line_start":54,"line_end":54,"column_start":1,"column_end":91}},{"value":"/ to read from Writer, it will lead to an undefined behavior. Please do not read from it.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":175229,"byte_end":175320,"line_start":55,"line_end":55,"column_start":1,"column_end":92}}]},{"kind":"Mod","id":{"krate":0,"index":906},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"memory","qualname":"::memory","value":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":15480},{"krate":0,"index":15481},{"krate":0,"index":15482},{"krate":0,"index":15483},{"krate":0,"index":15484},{"krate":0,"index":15485},{"krate":0,"index":15486},{"krate":0,"index":15487},{"krate":0,"index":15488},{"krate":0,"index":15489},{"krate":0,"index":15490},{"krate":0,"index":15491},{"krate":0,"index":15492},{"krate":0,"index":15495},{"krate":0,"index":15498},{"krate":0,"index":15501},{"krate":0,"index":15504},{"krate":0,"index":15507},{"krate":0,"index":15510},{"krate":0,"index":15513},{"krate":0,"index":15516},{"krate":0,"index":15519},{"krate":0,"index":15522},{"krate":0,"index":15525},{"krate":0,"index":15528},{"krate":0,"index":15531},{"krate":0,"index":15534},{"krate":0,"index":15537},{"krate":0,"index":15540},{"krate":0,"index":15543},{"krate":0,"index":15546},{"krate":0,"index":15549},{"krate":0,"index":15552},{"krate":0,"index":15555},{"krate":0,"index":15558},{"krate":0,"index":15561},{"krate":0,"index":15564},{"krate":0,"index":15567},{"krate":0,"index":15570},{"krate":0,"index":15573},{"krate":0,"index":15576},{"krate":0,"index":15579},{"krate":0,"index":15582},{"krate":0,"index":15585},{"krate":0,"index":15588},{"krate":0,"index":917},{"krate":0,"index":920},{"krate":0,"index":15591},{"krate":0,"index":15655},{"krate":0,"index":15614},{"krate":0,"index":15613},{"krate":0,"index":15609},{"krate":0,"index":15610},{"krate":0,"index":15606},{"krate":0,"index":15607},{"krate":0,"index":15604},{"krate":0,"index":15598},{"krate":0,"index":15596},{"krate":0,"index":15593},{"krate":0,"index":15661},{"krate":0,"index":15670},{"krate":0,"index":15672},{"krate":0,"index":15674},{"krate":0,"index":15676},{"krate":0,"index":15678},{"krate":0,"index":15689},{"krate":0,"index":15692},{"krate":0,"index":15694},{"krate":0,"index":15697},{"krate":0,"index":15699},{"krate":0,"index":15702},{"krate":0,"index":15704},{"krate":0,"index":15707},{"krate":0,"index":15709},{"krate":0,"index":15712},{"krate":0,"index":15715},{"krate":0,"index":15744},{"krate":0,"index":15808},{"krate":0,"index":15767},{"krate":0,"index":15766},{"krate":0,"index":15762},{"krate":0,"index":15763},{"krate":0,"index":15759},{"krate":0,"index":15760},{"krate":0,"index":15757},{"krate":0,"index":15751},{"krate":0,"index":15749},{"krate":0,"index":15746},{"krate":0,"index":15814},{"krate":0,"index":15819},{"krate":0,"index":15821},{"krate":0,"index":15823},{"krate":0,"index":15825},{"krate":0,"index":15827},{"krate":0,"index":15834},{"krate":0,"index":15837},{"krate":0,"index":15839},{"krate":0,"index":15842},{"krate":0,"index":15844},{"krate":0,"index":15847},{"krate":0,"index":15849},{"krate":0,"index":15852},{"krate":0,"index":15854},{"krate":0,"index":15857},{"krate":0,"index":15860},{"krate":0,"index":15877},{"krate":0,"index":15900},{"krate":0,"index":15896},{"krate":0,"index":924},{"krate":0,"index":15904},{"krate":0,"index":15911},{"krate":0,"index":15910},{"krate":0,"index":15908}],"decl_id":null,"docs":" Types to describe the properties of memory allocated for gfx resources.\n","sig":null,"attributes":[{"value":"/ Types to describe the properties of memory allocated for gfx resources.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":175959,"byte_end":176034,"line_start":1,"line_end":1,"column_start":1,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":915},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":176422,"byte_end":176425,"line_start":12,"line_end":12,"column_start":18,"column_end":21},"name":"Pod","qualname":"::memory::Pod","value":"Pod: Copy","parent":null,"children":[],"decl_id":null,"docs":" A trait for plain-old-data types.","sig":null,"attributes":[{"value":"/ A trait for plain-old-data types.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":176109,"byte_end":176146,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":176147,"byte_end":176150,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ A POD type does not have invalid bit patterns and can be safely","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":176151,"byte_end":176218,"line_start":8,"line_end":8,"column_start":1,"column_end":68}},{"value":"/ created from arbitrary bit pattern.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":176219,"byte_end":176258,"line_start":9,"line_end":9,"column_start":1,"column_end":40}},{"value":"/ The `Pod` trait is implemented for standard integer and floating point numbers as well as","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":176259,"byte_end":176352,"line_start":10,"line_end":10,"column_start":1,"column_end":94}},{"value":"/ common arrays of them (for example `[f32; 2]`).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":176353,"byte_end":176404,"line_start":11,"line_end":11,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":920},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":176891,"byte_end":176901,"line_start":27,"line_end":27,"column_start":8,"column_end":18},"name":"cast_slice","qualname":"::memory::cast_slice","value":"pub fn cast_slice<A: Pod, B: Pod>(&[A]) -> &[B]","parent":null,"children":[],"decl_id":null,"docs":" Cast a slice from one POD type to another.\n","sig":null,"attributes":[{"value":"/ Cast a slice from one POD type to another.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":176837,"byte_end":176883,"line_start":26,"line_end":26,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":15591},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":177333,"byte_end":177343,"line_start":39,"line_end":39,"column_start":16,"column_end":26},"name":"Properties","qualname":"::memory::Properties","value":"Properties {  }","parent":null,"children":[{"krate":0,"index":15592}],"decl_id":null,"docs":" Memory property flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":15679},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":177409,"byte_end":177421,"line_start":41,"line_end":41,"column_start":15,"column_end":27},"name":"DEVICE_LOCAL","qualname":"::memory::Properties::DEVICE_LOCAL","value":"Properties","parent":{"krate":0,"index":15678},"children":[],"decl_id":null,"docs":" Device local memory on the GPU.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":15680},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":177585,"byte_end":177596,"line_start":46,"line_end":46,"column_start":15,"column_end":26},"name":"CPU_VISIBLE","qualname":"::memory::Properties::CPU_VISIBLE","value":"Properties","parent":{"krate":0,"index":15678},"children":[],"decl_id":null,"docs":" Host visible memory can be accessed by the CPU.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":15681},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":177723,"byte_end":177731,"line_start":51,"line_end":51,"column_start":15,"column_end":23},"name":"COHERENT","qualname":"::memory::Properties::COHERENT","value":"Properties","parent":{"krate":0,"index":15678},"children":[],"decl_id":null,"docs":" CPU-GPU coherent.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":15682},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":177795,"byte_end":177805,"line_start":54,"line_end":54,"column_start":15,"column_end":25},"name":"CPU_CACHED","qualname":"::memory::Properties::CPU_CACHED","value":"Properties","parent":{"krate":0,"index":15678},"children":[],"decl_id":null,"docs":" Cached memory by the CPU\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":15683},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":177947,"byte_end":177963,"line_start":58,"line_end":58,"column_start":15,"column_end":31},"name":"LAZILY_ALLOCATED","qualname":"::memory::Properties::LAZILY_ALLOCATED","value":"Properties","parent":{"krate":0,"index":15678},"children":[],"decl_id":null,"docs":" Memory that may be lazily allocated as needed on the GPU\n and *must not* be visible to the CPU.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15744},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":178109,"byte_end":178121,"line_start":65,"line_end":65,"column_start":16,"column_end":28},"name":"Dependencies","qualname":"::memory::Dependencies","value":"Dependencies {  }","parent":null,"children":[{"krate":0,"index":15745}],"decl_id":null,"docs":" Barrier dependency flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":15828},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":178212,"byte_end":178221,"line_start":67,"line_end":67,"column_start":15,"column_end":24},"name":"BY_REGION","qualname":"::memory::Dependencies::BY_REGION","value":"Dependencies","parent":{"krate":0,"index":15827},"children":[],"decl_id":null,"docs":" Specifies the memory dependency to be framebuffer-local.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":15880},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":178754,"byte_end":178764,"line_start":81,"line_end":81,"column_start":5,"column_end":15},"name":"AllBuffers","qualname":"::memory::Barrier::AllBuffers","value":"Barrier::AllBuffers(Range<buffer::Access>)","parent":{"krate":0,"index":15877},"children":[],"decl_id":null,"docs":" Applies the given access flags to all buffers in the range.\n","sig":null,"attributes":[{"value":"/ Applies the given access flags to all buffers in the range.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":178686,"byte_end":178749,"line_start":80,"line_end":80,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":15883},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":178860,"byte_end":178869,"line_start":83,"line_end":83,"column_start":5,"column_end":14},"name":"AllImages","qualname":"::memory::Barrier::AllImages","value":"Barrier::AllImages(Range<image::Access>)","parent":{"krate":0,"index":15877},"children":[],"decl_id":null,"docs":" Applies the given access flags to all images in the range.\n","sig":null,"attributes":[{"value":"/ Applies the given access flags to all images in the range.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":178793,"byte_end":178855,"line_start":82,"line_end":82,"column_start":5,"column_end":67}}]},{"kind":"StructVariant","id":{"krate":0,"index":15886},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":178955,"byte_end":178961,"line_start":85,"line_end":85,"column_start":5,"column_end":11},"name":"Buffer","qualname":"::memory::Barrier::Buffer","value":"Barrier::Buffer { states, target, families, range }","parent":{"krate":0,"index":15877},"children":[],"decl_id":null,"docs":" A memory barrier that defines access to a buffer.\n","sig":null,"attributes":[{"value":"/ A memory barrier that defines access to a buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":178897,"byte_end":178950,"line_start":84,"line_end":84,"column_start":5,"column_end":58}}]},{"kind":"StructVariant","id":{"krate":0,"index":15891},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":179618,"byte_end":179623,"line_start":97,"line_end":97,"column_start":5,"column_end":10},"name":"Image","qualname":"::memory::Barrier::Image","value":"Barrier::Image { states, target, families, range }","parent":{"krate":0,"index":15877},"children":[],"decl_id":null,"docs":" A memory barrier that defines access to (a subset of) an image.\n","sig":null,"attributes":[{"value":"/ A memory barrier that defines access to (a subset of) an image.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":179546,"byte_end":179613,"line_start":96,"line_end":96,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":15877},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":178656,"byte_end":178663,"line_start":79,"line_end":79,"column_start":10,"column_end":17},"name":"Barrier","qualname":"::memory::Barrier","value":"pub enum Barrier<'a, B: Backend> {\n\n    /// Applies the given access flags to all buffers in the range.\n    AllBuffers(Range<buffer::Access>),\n\n    /// Applies the given access flags to all images in the range.\n    AllImages(Range<image::Access>),\n\n    /// A memory barrier that defines access to a buffer.\n    Buffer {\n        /// The access flags controlling the buffer.\n        states: Range<buffer::State>,\n        /// The buffer the barrier controls.\n        target: &'a B::Buffer,\n        /// The source and destination Queue family IDs, for a [queue family ownership transfer](https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-queue-transfers)\n        /// Can be `None` to indicate no ownership transfer.\n        families: Option<Range<queue::QueueFamilyId>>,\n        /// Range of the buffer the barrier applies to.\n        range: Range<Option<u64>>,\n    },\n\n    /// A memory barrier that defines access to (a subset of) an image.\n    Image {\n        /// The access flags controlling the image.\n        states: Range<image::State>,\n        /// The image the barrier controls.\n        target: &'a B::Image,\n        /// The source and destination Queue family IDs, for a [queue family ownership transfer](https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-queue-transfers)\n        /// Can be `None` to indicate no ownership transfer.\n        families: Option<Range<queue::QueueFamilyId>>,\n        /// A `SubresourceRange` that defines which section of an image the barrier applies to.\n        range: image::SubresourceRange,\n    },\n}","parent":null,"children":[{"krate":0,"index":15880},{"krate":0,"index":15883},{"krate":0,"index":15886},{"krate":0,"index":15891}],"decl_id":null,"docs":" A [memory barrier](https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-memory-barriers)\n type for either buffers or images.\n","sig":null,"attributes":[{"value":"/ A [memory barrier](https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-memory-barriers)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":178438,"byte_end":178560,"line_start":75,"line_end":75,"column_start":1,"column_end":123}},{"value":"/ type for either buffers or images.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":178561,"byte_end":178599,"line_start":76,"line_end":76,"column_start":1,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":178600,"byte_end":178622,"line_start":77,"line_end":77,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":180369,"byte_end":180381,"line_start":112,"line_end":112,"column_start":12,"column_end":24},"name":"whole_buffer","qualname":"<Barrier>::whole_buffer","value":"pub fn whole_buffer(&'a B::Buffer, Range<buffer::State>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a barrier for the whole buffer between the given states.\n","sig":null,"attributes":[{"value":"/ Create a barrier for the whole buffer between the given states.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":180290,"byte_end":180357,"line_start":111,"line_end":111,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":15904},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":180695,"byte_end":180707,"line_start":124,"line_end":124,"column_start":12,"column_end":24},"name":"Requirements","qualname":"::memory::Requirements","value":"Requirements { size, alignment, type_mask }","parent":null,"children":[{"krate":0,"index":15905},{"krate":0,"index":15906},{"krate":0,"index":15907}],"decl_id":null,"docs":" Memory requirements for a certain resource (buffer/image).\n","sig":null,"attributes":[{"value":"/ Memory requirements for a certain resource (buffer/image).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":180591,"byte_end":180653,"line_start":122,"line_end":122,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":15905},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":180746,"byte_end":180750,"line_start":126,"line_end":126,"column_start":9,"column_end":13},"name":"size","qualname":"::memory::Requirements::size","value":"u64","parent":{"krate":0,"index":15904},"children":[],"decl_id":null,"docs":" Size in the memory.\n","sig":null,"attributes":[{"value":"/ Size in the memory.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":180714,"byte_end":180737,"line_start":125,"line_end":125,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":15906},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":180791,"byte_end":180800,"line_start":128,"line_end":128,"column_start":9,"column_end":18},"name":"alignment","qualname":"::memory::Requirements::alignment","value":"u64","parent":{"krate":0,"index":15904},"children":[],"decl_id":null,"docs":" Memory alignment.\n","sig":null,"attributes":[{"value":"/ Memory alignment.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":180761,"byte_end":180782,"line_start":127,"line_end":127,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":15907},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":180847,"byte_end":180856,"line_start":130,"line_end":130,"column_start":9,"column_end":18},"name":"type_mask","qualname":"::memory::Requirements::type_mask","value":"u64","parent":{"krate":0,"index":15904},"children":[],"decl_id":null,"docs":" Supported memory types.\n","sig":null,"attributes":[{"value":"/ Supported memory types.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":180811,"byte_end":180838,"line_start":129,"line_end":129,"column_start":5,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":928},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pass","qualname":"::pass","value":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","parent":null,"children":[{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":15913},{"krate":0,"index":15980},{"krate":0,"index":15978},{"krate":0,"index":15976},{"krate":0,"index":15973},{"krate":0,"index":15970},{"krate":0,"index":15971},{"krate":0,"index":15967},{"krate":0,"index":15968},{"krate":0,"index":15961},{"krate":0,"index":15920},{"krate":0,"index":15981},{"krate":0,"index":16044},{"krate":0,"index":16042},{"krate":0,"index":16040},{"krate":0,"index":16037},{"krate":0,"index":16034},{"krate":0,"index":16035},{"krate":0,"index":16031},{"krate":0,"index":16032},{"krate":0,"index":16025},{"krate":0,"index":15986},{"krate":0,"index":935},{"krate":0,"index":16045},{"krate":0,"index":16111},{"krate":0,"index":16109},{"krate":0,"index":16107},{"krate":0,"index":16104},{"krate":0,"index":16101},{"krate":0,"index":16102},{"krate":0,"index":16097},{"krate":0,"index":16098},{"krate":0,"index":16091},{"krate":0,"index":16048},{"krate":0,"index":936},{"krate":0,"index":16112},{"krate":0,"index":16182},{"krate":0,"index":16180},{"krate":0,"index":16177},{"krate":0,"index":16173},{"krate":0,"index":16174},{"krate":0,"index":16167},{"krate":0,"index":16118},{"krate":0,"index":941},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":16184},{"krate":0,"index":16246},{"krate":0,"index":16244},{"krate":0,"index":16242},{"krate":0,"index":16239},{"krate":0,"index":16235},{"krate":0,"index":16236},{"krate":0,"index":16229},{"krate":0,"index":16190},{"krate":0,"index":16247},{"krate":0,"index":16307},{"krate":0,"index":16305},{"krate":0,"index":16302},{"krate":0,"index":16296},{"krate":0,"index":16251},{"krate":0,"index":16309},{"krate":0,"index":16316},{"krate":0,"index":946},{"krate":0,"index":16319},{"krate":0,"index":16324},{"krate":0,"index":947},{"krate":0,"index":951},{"krate":0,"index":955},{"krate":0,"index":958}],"decl_id":null,"docs":" RenderPass handling.\n","sig":null,"attributes":[{"value":"/ RenderPass handling.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":180866,"byte_end":180890,"line_start":1,"line_end":1,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":15914},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":181259,"byte_end":181263,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Load","qualname":"::pass::AttachmentLoadOp::Load","value":"AttachmentLoadOp::Load","parent":{"krate":0,"index":15913},"children":[],"decl_id":null,"docs":" Preserve existing content in the attachment.\n","sig":null,"attributes":[{"value":"/ Preserve existing content in the attachment.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":181206,"byte_end":181254,"line_start":10,"line_end":10,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":15916},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":181299,"byte_end":181304,"line_start":13,"line_end":13,"column_start":5,"column_end":10},"name":"Clear","qualname":"::pass::AttachmentLoadOp::Clear","value":"AttachmentLoadOp::Clear","parent":{"krate":0,"index":15913},"children":[],"decl_id":null,"docs":" Clear the attachment.\n","sig":null,"attributes":[{"value":"/ Clear the attachment.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":181269,"byte_end":181294,"line_start":12,"line_end":12,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":15918},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":181356,"byte_end":181364,"line_start":15,"line_end":15,"column_start":5,"column_end":13},"name":"DontCare","qualname":"::pass::AttachmentLoadOp::DontCare","value":"AttachmentLoadOp::DontCare","parent":{"krate":0,"index":15913},"children":[],"decl_id":null,"docs":" Attachment content will be undefined.\n","sig":null,"attributes":[{"value":"/ Attachment content will be undefined.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":181310,"byte_end":181351,"line_start":14,"line_end":14,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":15913},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":181183,"byte_end":181199,"line_start":9,"line_end":9,"column_start":10,"column_end":26},"name":"AttachmentLoadOp","qualname":"::pass::AttachmentLoadOp","value":"pub enum AttachmentLoadOp {\n\n    /// Preserve existing content in the attachment.\n    Load,\n\n    /// Clear the attachment.\n    Clear,\n\n    /// Attachment content will be undefined.\n    DontCare,\n}","parent":null,"children":[{"krate":0,"index":15914},{"krate":0,"index":15916},{"krate":0,"index":15918}],"decl_id":null,"docs":" Specifies the operation which will be applied at the beginning of a subpass.\n","sig":null,"attributes":[{"value":"/ Specifies the operation which will be applied at the beginning of a subpass.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":180979,"byte_end":181059,"line_start":6,"line_end":6,"column_start":1,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":15982},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":181581,"byte_end":181586,"line_start":23,"line_end":23,"column_start":5,"column_end":10},"name":"Store","qualname":"::pass::AttachmentStoreOp::Store","value":"AttachmentStoreOp::Store","parent":{"krate":0,"index":15981},"children":[],"decl_id":null,"docs":" Content written to the attachment will be preserved.\n","sig":null,"attributes":[{"value":"/ Content written to the attachment will be preserved.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":181520,"byte_end":181576,"line_start":22,"line_end":22,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":15984},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":181638,"byte_end":181646,"line_start":25,"line_end":25,"column_start":5,"column_end":13},"name":"DontCare","qualname":"::pass::AttachmentStoreOp::DontCare","value":"AttachmentStoreOp::DontCare","parent":{"krate":0,"index":15981},"children":[],"decl_id":null,"docs":" Attachment content will be undefined.\n","sig":null,"attributes":[{"value":"/ Attachment content will be undefined.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":181592,"byte_end":181633,"line_start":24,"line_end":24,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":15981},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":181496,"byte_end":181513,"line_start":21,"line_end":21,"column_start":10,"column_end":27},"name":"AttachmentStoreOp","qualname":"::pass::AttachmentStoreOp","value":"pub enum AttachmentStoreOp {\n\n    /// Content written to the attachment will be preserved.\n    Store,\n\n    /// Attachment content will be undefined.\n    DontCare,\n}","parent":null,"children":[{"krate":0,"index":15982},{"krate":0,"index":15984}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":181369,"byte_end":181372,"line_start":18,"line_end":18,"column_start":1,"column_end":4}}]},{"kind":"Type","id":{"krate":0,"index":935},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":181695,"byte_end":181711,"line_start":29,"line_end":29,"column_start":10,"column_end":26},"name":"AttachmentLayout","qualname":"::pass::AttachmentLayout","value":"image::Layout","parent":null,"children":[],"decl_id":null,"docs":" Image layout of an attachment.\n","sig":null,"attributes":[{"value":"/ Image layout of an attachment.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":181651,"byte_end":181685,"line_start":28,"line_end":28,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":16045},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":181882,"byte_end":181895,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"AttachmentOps","qualname":"::pass::AttachmentOps","value":"AttachmentOps { load, store }","parent":null,"children":[{"krate":0,"index":16046},{"krate":0,"index":16047}],"decl_id":null,"docs":" Attachment operations.\n","sig":null,"attributes":[{"value":"/ Attachment operations.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":181730,"byte_end":181756,"line_start":31,"line_end":31,"column_start":1,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":16046},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":182026,"byte_end":182030,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"name":"load","qualname":"::pass::AttachmentOps::load","value":"pass::AttachmentLoadOp","parent":{"krate":0,"index":16045},"children":[],"decl_id":null,"docs":" Indicates how the data of the attachment will be loaded at first usage at\n the beginning of the subpass.\n","sig":null,"attributes":[{"value":"/ Indicates how the data of the attachment will be loaded at first usage at","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":181902,"byte_end":181979,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ the beginning of the subpass.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":181984,"byte_end":182017,"line_start":36,"line_end":36,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":16047},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":182148,"byte_end":182153,"line_start":39,"line_end":39,"column_start":9,"column_end":14},"name":"store","qualname":"::pass::AttachmentOps::store","value":"pass::AttachmentStoreOp","parent":{"krate":0,"index":16045},"children":[],"decl_id":null,"docs":" Whether or not data from the store operation will be preserved after the subpass.\n","sig":null,"attributes":[{"value":"/ Whether or not data from the store operation will be preserved after the subpass.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":182054,"byte_end":182139,"line_start":38,"line_end":38,"column_start":5,"column_end":90}}]},{"kind":"Const","id":{"krate":0,"index":937},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":182269,"byte_end":182278,"line_start":44,"line_end":44,"column_start":15,"column_end":24},"name":"DONT_CARE","qualname":"::pass::AttachmentOps::DONT_CARE","value":"Self","parent":{"krate":0,"index":936},"children":[],"decl_id":null,"docs":" Specifies `DontCare` for both load and store op.\n","sig":null,"attributes":[{"value":"/ Specifies `DontCare` for both load and store op.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":182202,"byte_end":182254,"line_start":43,"line_end":43,"column_start":5,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":938},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":182474,"byte_end":182482,"line_start":50,"line_end":50,"column_start":15,"column_end":23},"name":"PRESERVE","qualname":"::pass::AttachmentOps::PRESERVE","value":"Self","parent":{"krate":0,"index":936},"children":[],"decl_id":null,"docs":" Specifies `Load` for load op and `Store` for store op.\n","sig":null,"attributes":[{"value":"/ Specifies `Load` for load op and `Store` for store op.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":182401,"byte_end":182459,"line_start":49,"line_end":49,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":182667,"byte_end":182670,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<AttachmentOps>::new","value":"pub fn new(AttachmentLoadOp, AttachmentStoreOp) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convenience function to create a new `AttachmentOps`.\n","sig":null,"attributes":[{"value":"/ Convenience function to create a new `AttachmentOps`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":182598,"byte_end":182655,"line_start":55,"line_end":55,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":16112},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":183295,"byte_end":183305,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"Attachment","qualname":"::pass::Attachment","value":"Attachment { format, samples, ops, stencil_ops, layouts }","parent":null,"children":[{"krate":0,"index":16113},{"krate":0,"index":16114},{"krate":0,"index":16115},{"krate":0,"index":16117},{"krate":0,"index":16116}],"decl_id":null,"docs":" An `Attachment` is a description of a resource provided to a render subpass.\n It includes things such as render targets, images that were produced from\n previous subpasses, etc.\n","sig":null,"attributes":[{"value":"/ An `Attachment` is a description of a resource provided to a render subpass.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":182992,"byte_end":183072,"line_start":68,"line_end":68,"column_start":1,"column_end":81}},{"value":"/ It includes things such as render targets, images that were produced from","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":183073,"byte_end":183150,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/ previous subpasses, etc.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":183151,"byte_end":183179,"line_start":70,"line_end":70,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":16113},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":183531,"byte_end":183537,"line_start":79,"line_end":79,"column_start":9,"column_end":15},"name":"format","qualname":"::pass::Attachment::format","value":"std::option::Option<format::Format>","parent":{"krate":0,"index":16112},"children":[],"decl_id":null,"docs":" Attachment format","sig":null,"attributes":[{"value":"/ Attachment format","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":183312,"byte_end":183333,"line_start":74,"line_end":74,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":183338,"byte_end":183341,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ In the most cases `format` is not `None`. It should be only used for","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":183346,"byte_end":183418,"line_start":76,"line_end":76,"column_start":5,"column_end":77}},{"value":"/ creating dummy renderpasses, which are used as placeholder for compatible","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":183423,"byte_end":183500,"line_start":77,"line_end":77,"column_start":5,"column_end":82}},{"value":"/ renderpasses.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":183505,"byte_end":183522,"line_start":78,"line_end":78,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":16114},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":183590,"byte_end":183597,"line_start":81,"line_end":81,"column_start":9,"column_end":16},"name":"samples","qualname":"::pass::Attachment::samples","value":"u8","parent":{"krate":0,"index":16112},"children":[],"decl_id":null,"docs":" Number of samples.\n","sig":null,"attributes":[{"value":"/ Number of samples.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":183559,"byte_end":183581,"line_start":80,"line_end":80,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":16115},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":183678,"byte_end":183681,"line_start":83,"line_end":83,"column_start":9,"column_end":12},"name":"ops","qualname":"::pass::Attachment::ops","value":"pass::AttachmentOps","parent":{"krate":0,"index":16112},"children":[],"decl_id":null,"docs":" Load and store operations of the attachment\n","sig":null,"attributes":[{"value":"/ Load and store operations of the attachment","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":183622,"byte_end":183669,"line_start":82,"line_end":82,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":16117},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":183849,"byte_end":183860,"line_start":86,"line_end":86,"column_start":9,"column_end":20},"name":"stencil_ops","qualname":"::pass::Attachment::stencil_ops","value":"pass::AttachmentOps","parent":{"krate":0,"index":16112},"children":[],"decl_id":null,"docs":" Load and store operations of the stencil aspect, if any\n","sig":null,"attributes":[{"value":"/ Load and store operations of the stencil aspect, if any","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":183702,"byte_end":183761,"line_start":84,"line_end":84,"column_start":5,"column_end":64}},{"value":"serde(default = \"AttachmentOps::whatever\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":183796,"byte_end":183838,"line_start":85,"line_end":85,"column_start":35,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":16116},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":183944,"byte_end":183951,"line_start":88,"line_end":88,"column_start":9,"column_end":16},"name":"layouts","qualname":"::pass::Attachment::layouts","value":"std::ops::Range<image::Layout>","parent":{"krate":0,"index":16112},"children":[],"decl_id":null,"docs":" Initial and final image layouts of the renderpass.\n","sig":null,"attributes":[{"value":"/ Initial and final image layouts of the renderpass.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":183881,"byte_end":183935,"line_start":87,"line_end":87,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":184175,"byte_end":184185,"line_start":94,"line_end":94,"column_start":12,"column_end":22},"name":"has_clears","qualname":"<Attachment>::has_clears","value":"pub fn has_clears(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this attachment has some clear operations. This is useful\n when starting a render pass, since there has to be a clear value provided.\n","sig":null,"attributes":[{"value":"/ Returns true if this attachment has some clear operations. This is useful","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":184003,"byte_end":184080,"line_start":92,"line_end":92,"column_start":5,"column_end":82}},{"value":"/ when starting a render pass, since there has to be a clear value provided.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":184085,"byte_end":184163,"line_start":93,"line_end":93,"column_start":5,"column_end":83}}]},{"kind":"Type","id":{"krate":0,"index":943},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":184382,"byte_end":184394,"line_start":100,"line_end":100,"column_start":10,"column_end":22},"name":"AttachmentId","qualname":"::pass::AttachmentId","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Index of an attachment within a framebuffer/renderpass,\n","sig":null,"attributes":[{"value":"/ Index of an attachment within a framebuffer/renderpass,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":184313,"byte_end":184372,"line_start":99,"line_end":99,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":944},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":184480,"byte_end":184493,"line_start":102,"line_end":102,"column_start":10,"column_end":23},"name":"AttachmentRef","qualname":"::pass::AttachmentRef","value":"(AttachmentId, AttachmentLayout)","parent":null,"children":[],"decl_id":null,"docs":" Reference to an attachment by index and expected image layout.\n","sig":null,"attributes":[{"value":"/ Reference to an attachment by index and expected image layout.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":184404,"byte_end":184470,"line_start":101,"line_end":101,"column_start":1,"column_end":67}}]},{"kind":"Const","id":{"krate":0,"index":945},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":184613,"byte_end":184630,"line_start":104,"line_end":104,"column_start":11,"column_end":28},"name":"ATTACHMENT_UNUSED","qualname":"::pass::ATTACHMENT_UNUSED","value":"AttachmentId","parent":null,"children":[],"decl_id":null,"docs":" An AttachmentId that can be used instead of providing an attachment.\n","sig":null,"attributes":[{"value":"/ An AttachmentId that can be used instead of providing an attachment.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":184530,"byte_end":184602,"line_start":103,"line_end":103,"column_start":1,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16185},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":184967,"byte_end":184975,"line_start":112,"line_end":112,"column_start":5,"column_end":13},"name":"External","qualname":"::pass::SubpassRef::External","value":"SubpassRef::External","parent":{"krate":0,"index":16184},"children":[],"decl_id":null,"docs":" The subpass depends on something that was submitted to the\n queue before or after the render pass began.\n","sig":null,"attributes":[{"value":"/ The subpass depends on something that was submitted to the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":184847,"byte_end":184909,"line_start":110,"line_end":110,"column_start":5,"column_end":67}},{"value":"/ queue before or after the render pass began.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":184914,"byte_end":184962,"line_start":111,"line_end":111,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16187},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":185215,"byte_end":185219,"line_start":117,"line_end":117,"column_start":5,"column_end":9},"name":"Pass","qualname":"::pass::SubpassRef::Pass","value":"SubpassRef::Pass(usize)","parent":{"krate":0,"index":16184},"children":[],"decl_id":null,"docs":" The subpass depends on another subpass with the given index,\n which must be less than or equal to the index of the current\n subpass. The index here refers to the corresponding\n `SubpassId` of a `Subpass`.\n","sig":null,"attributes":[{"value":"/ The subpass depends on another subpass with the given index,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":184981,"byte_end":185045,"line_start":113,"line_end":113,"column_start":5,"column_end":69}},{"value":"/ which must be less than or equal to the index of the current","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":185050,"byte_end":185114,"line_start":114,"line_end":114,"column_start":5,"column_end":69}},{"value":"/ subpass. The index here refers to the corresponding","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":185119,"byte_end":185174,"line_start":115,"line_end":115,"column_start":5,"column_end":60}},{"value":"/ `SubpassId` of a `Subpass`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":185179,"byte_end":185210,"line_start":116,"line_end":116,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":16184},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":184830,"byte_end":184840,"line_start":109,"line_end":109,"column_start":10,"column_end":20},"name":"SubpassRef","qualname":"::pass::SubpassRef","value":"pub enum SubpassRef {\n\n    /// The subpass depends on something that was submitted to the\n    /// queue before or after the render pass began.\n    External,\n\n    /// The subpass depends on another subpass with the given index,\n    /// which must be less than or equal to the index of the current\n    /// subpass. The index here refers to the corresponding\n    /// `SubpassId` of a `Subpass`.\n    Pass(usize),\n}","parent":null,"children":[{"krate":0,"index":16185},{"krate":0,"index":16187}],"decl_id":null,"docs":" Which other subpasses a particular subpass depends on.\n","sig":null,"attributes":[{"value":"/ Which other subpasses a particular subpass depends on.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":184652,"byte_end":184710,"line_start":106,"line_end":106,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":16247},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":185564,"byte_end":185581,"line_start":126,"line_end":126,"column_start":12,"column_end":29},"name":"SubpassDependency","qualname":"::pass::SubpassDependency","value":"SubpassDependency { passes, stages, accesses }","parent":null,"children":[{"krate":0,"index":16248},{"krate":0,"index":16249},{"krate":0,"index":16250}],"decl_id":null,"docs":" Expresses a dependency between multiple subpasses. This is used\n both to describe a source or destination subpass; data either\n explicitly passes from this subpass to the next or from another\n subpass into this one.\n","sig":null,"attributes":[{"value":"/ Expresses a dependency between multiple subpasses. This is used","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":185231,"byte_end":185298,"line_start":120,"line_end":120,"column_start":1,"column_end":68}},{"value":"/ both to describe a source or destination subpass; data either","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":185299,"byte_end":185364,"line_start":121,"line_end":121,"column_start":1,"column_end":66}},{"value":"/ explicitly passes from this subpass to the next or from another","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":185365,"byte_end":185432,"line_start":122,"line_end":122,"column_start":1,"column_end":68}},{"value":"/ subpass into this one.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":185433,"byte_end":185459,"line_start":123,"line_end":123,"column_start":1,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":16248},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":185637,"byte_end":185643,"line_start":128,"line_end":128,"column_start":9,"column_end":15},"name":"passes","qualname":"::pass::SubpassDependency::passes","value":"std::ops::Range<pass::SubpassRef>","parent":{"krate":0,"index":16247},"children":[],"decl_id":null,"docs":" Other subpasses this one depends on.\n","sig":null,"attributes":[{"value":"/ Other subpasses this one depends on.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":185588,"byte_end":185628,"line_start":127,"line_end":127,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":16249},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":185727,"byte_end":185733,"line_start":130,"line_end":130,"column_start":9,"column_end":15},"name":"stages","qualname":"::pass::SubpassDependency::stages","value":"std::ops::Range<pso::PipelineStage>","parent":{"krate":0,"index":16247},"children":[],"decl_id":null,"docs":" Other pipeline stages this subpass depends on.\n","sig":null,"attributes":[{"value":"/ Other pipeline stages this subpass depends on.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":185668,"byte_end":185718,"line_start":129,"line_end":129,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":16250},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":185816,"byte_end":185824,"line_start":132,"line_end":132,"column_start":9,"column_end":17},"name":"accesses","qualname":"::pass::SubpassDependency::accesses","value":"std::ops::Range<image::Access>","parent":{"krate":0,"index":16247},"children":[],"decl_id":null,"docs":" Resource accesses this subpass depends on.\n","sig":null,"attributes":[{"value":"/ Resource accesses this subpass depends on.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":185761,"byte_end":185807,"line_start":131,"line_end":131,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":16309},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":185933,"byte_end":185944,"line_start":137,"line_end":137,"column_start":12,"column_end":23},"name":"SubpassDesc","qualname":"::pass::SubpassDesc","value":"SubpassDesc { colors, depth_stencil, inputs, resolves, preserves }","parent":null,"children":[{"krate":0,"index":16311},{"krate":0,"index":16312},{"krate":0,"index":16313},{"krate":0,"index":16314},{"krate":0,"index":16315}],"decl_id":null,"docs":" Description of a subpass for renderpass creation.\n","sig":null,"attributes":[{"value":"/ Description of a subpass for renderpass creation.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":185851,"byte_end":185904,"line_start":135,"line_end":135,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":16311},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":186016,"byte_end":186022,"line_start":139,"line_end":139,"column_start":9,"column_end":15},"name":"colors","qualname":"::pass::SubpassDesc::colors","value":"&'a [(usize, image::Layout)]","parent":{"krate":0,"index":16309},"children":[],"decl_id":null,"docs":" Which attachments will be used as color buffers.\n","sig":null,"attributes":[{"value":"/ Which attachments will be used as color buffers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":185955,"byte_end":186007,"line_start":138,"line_end":138,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":16312},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":186118,"byte_end":186131,"line_start":141,"line_end":141,"column_start":9,"column_end":22},"name":"depth_stencil","qualname":"::pass::SubpassDesc::depth_stencil","value":"std::option::Option<&'a (usize, image::Layout)>","parent":{"krate":0,"index":16309},"children":[],"decl_id":null,"docs":" Which attachments will be used as depth/stencil buffers.\n","sig":null,"attributes":[{"value":"/ Which attachments will be used as depth/stencil buffers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":186049,"byte_end":186109,"line_start":140,"line_end":140,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":16313},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":186229,"byte_end":186235,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"name":"inputs","qualname":"::pass::SubpassDesc::inputs","value":"&'a [(usize, image::Layout)]","parent":{"krate":0,"index":16309},"children":[],"decl_id":null,"docs":" Which attachments will be used as input attachments.\n","sig":null,"attributes":[{"value":"/ Which attachments will be used as input attachments.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":186164,"byte_end":186220,"line_start":142,"line_end":142,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":16314},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":186605,"byte_end":186613,"line_start":149,"line_end":149,"column_start":9,"column_end":17},"name":"resolves","qualname":"::pass::SubpassDesc::resolves","value":"&'a [(usize, image::Layout)]","parent":{"krate":0,"index":16309},"children":[],"decl_id":null,"docs":" Which attachments will be used as resolve destinations.","sig":null,"attributes":[{"value":"/ Which attachments will be used as resolve destinations.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":186262,"byte_end":186321,"line_start":144,"line_end":144,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":186326,"byte_end":186329,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ The number of resolve attachments may be zero or equal to the number of color attachments.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":186334,"byte_end":186428,"line_start":146,"line_end":146,"column_start":5,"column_end":99}},{"value":"/ At the end of a subpass the color attachment will be resolved to the corresponding","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":186433,"byte_end":186519,"line_start":147,"line_end":147,"column_start":5,"column_end":91}},{"value":"/ resolve attachment. The resolve attachment must not be multisampled.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":186524,"byte_end":186596,"line_start":148,"line_end":148,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":16315},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":186765,"byte_end":186774,"line_start":152,"line_end":152,"column_start":9,"column_end":18},"name":"preserves","qualname":"::pass::SubpassDesc::preserves","value":"&'a [usize]","parent":{"krate":0,"index":16309},"children":[],"decl_id":null,"docs":" Attachments that are not used by the subpass but must be preserved to be\n passed on to subsequent passes.\n","sig":null,"attributes":[{"value":"/ Attachments that are not used by the subpass but must be preserved to be","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":186640,"byte_end":186716,"line_start":150,"line_end":150,"column_start":5,"column_end":81}},{"value":"/ passed on to subsequent passes.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":186721,"byte_end":186756,"line_start":151,"line_end":151,"column_start":5,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":946},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":186832,"byte_end":186841,"line_start":156,"line_end":156,"column_start":10,"column_end":19},"name":"SubpassId","qualname":"::pass::SubpassId","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Index of a subpass.\n","sig":null,"attributes":[{"value":"/ Index of a subpass.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":186799,"byte_end":186822,"line_start":155,"line_end":155,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":16319},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":186913,"byte_end":186920,"line_start":160,"line_end":160,"column_start":12,"column_end":19},"name":"Subpass","qualname":"::pass::Subpass","value":"Subpass { index, main_pass }","parent":null,"children":[{"krate":0,"index":16322},{"krate":0,"index":16323}],"decl_id":null,"docs":" A sub-pass borrow of a pass.\n","sig":null,"attributes":[{"value":"/ A sub-pass borrow of a pass.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":186852,"byte_end":186884,"line_start":158,"line_end":158,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":16322},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":186976,"byte_end":186981,"line_start":162,"line_end":162,"column_start":9,"column_end":14},"name":"index","qualname":"::pass::Subpass::index","value":"usize","parent":{"krate":0,"index":16319},"children":[],"decl_id":null,"docs":" Index of the subpass\n","sig":null,"attributes":[{"value":"/ Index of the subpass","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":186943,"byte_end":186967,"line_start":161,"line_end":161,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":16323},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":187028,"byte_end":187037,"line_start":164,"line_end":164,"column_start":9,"column_end":18},"name":"main_pass","qualname":"::pass::Subpass::main_pass","value":"&'a <B as Backend>::RenderPass","parent":{"krate":0,"index":16319},"children":[],"decl_id":null,"docs":" Main pass borrow.\n","sig":null,"attributes":[{"value":"/ Main pass borrow.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":186998,"byte_end":187019,"line_start":163,"line_end":163,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":961},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pool","qualname":"::pool","value":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","parent":null,"children":[{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":22920},{"krate":0,"index":16328},{"krate":0,"index":16392},{"krate":0,"index":16351},{"krate":0,"index":16350},{"krate":0,"index":16346},{"krate":0,"index":16347},{"krate":0,"index":16343},{"krate":0,"index":16344},{"krate":0,"index":16341},{"krate":0,"index":16335},{"krate":0,"index":16333},{"krate":0,"index":16330},{"krate":0,"index":16398},{"krate":0,"index":16404},{"krate":0,"index":16406},{"krate":0,"index":16408},{"krate":0,"index":16410},{"krate":0,"index":16412},{"krate":0,"index":16420},{"krate":0,"index":16423},{"krate":0,"index":16425},{"krate":0,"index":16428},{"krate":0,"index":16430},{"krate":0,"index":16433},{"krate":0,"index":16435},{"krate":0,"index":16438},{"krate":0,"index":16440},{"krate":0,"index":16443},{"krate":0,"index":16446},{"krate":0,"index":976},{"krate":0,"index":16466},{"krate":0,"index":16471},{"krate":0,"index":984},{"krate":0,"index":997}],"decl_id":null,"docs":" Command pools\n","sig":null,"attributes":[{"value":"/ Command pools","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":187538,"byte_end":187555,"line_start":1,"line_end":1,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":16328},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":187972,"byte_end":187994,"line_start":21,"line_end":21,"column_start":16,"column_end":38},"name":"CommandPoolCreateFlags","qualname":"::pool::CommandPoolCreateFlags","value":"CommandPoolCreateFlags {  }","parent":null,"children":[{"krate":0,"index":16329}],"decl_id":null,"docs":" Command pool creation flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":16413},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":188124,"byte_end":188133,"line_start":24,"line_end":24,"column_start":15,"column_end":24},"name":"TRANSIENT","qualname":"::pool::CommandPoolCreateFlags::TRANSIENT","value":"CommandPoolCreateFlags","parent":{"krate":0,"index":16412},"children":[],"decl_id":null,"docs":" Indicates short-lived command buffers.\n Memory optimization hint for implementations.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":16414},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":188215,"byte_end":188231,"line_start":26,"line_end":26,"column_start":15,"column_end":31},"name":"RESET_INDIVIDUAL","qualname":"::pool::CommandPoolCreateFlags::RESET_INDIVIDUAL","value":"CommandPoolCreateFlags","parent":{"krate":0,"index":16412},"children":[],"decl_id":null,"docs":" Allow command buffers to be reset individually.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":976},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":188341,"byte_end":188355,"line_start":31,"line_end":31,"column_start":11,"column_end":25},"name":"RawCommandPool","qualname":"::pool::RawCommandPool","value":"RawCommandPool<B: Backend>: fmt::Debug + Any + Send + Sync","parent":null,"children":[{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":982}],"decl_id":null,"docs":" The allocated command buffers are associated with the creating command queue.\n","sig":null,"attributes":[{"value":"/ The allocated command buffers are associated with the creating command queue.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":188249,"byte_end":188330,"line_start":30,"line_end":30,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":188612,"byte_end":188617,"line_start":35,"line_end":35,"column_start":15,"column_end":20},"name":"reset","qualname":"::pool::RawCommandPool::reset","value":"pub unsafe fn reset(&mut Self, bool)","parent":{"krate":0,"index":976},"children":[],"decl_id":null,"docs":" Reset the command pool and the corresponding command buffers.","sig":null,"attributes":[{"value":"/ Reset the command pool and the corresponding command buffers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":188406,"byte_end":188471,"line_start":32,"line_end":32,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":188476,"byte_end":188479,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Synchronization: You may _not_ free the pool if a command buffer is still in use (pool memory still in use)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":188484,"byte_end":188597,"line_start":34,"line_end":34,"column_start":5,"column_end":118}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":188720,"byte_end":188732,"line_start":38,"line_end":38,"column_start":8,"column_end":20},"name":"allocate_one","qualname":"::pool::RawCommandPool::allocate_one","value":"pub fn allocate_one(&mut Self, RawLevel) -> B::CommandBuffer","parent":{"krate":0,"index":976},"children":[],"decl_id":null,"docs":" Allocate a single command buffers from the pool.\n","sig":null,"attributes":[{"value":"/ Allocate a single command buffers from the pool.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":188660,"byte_end":188712,"line_start":37,"line_end":37,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":188900,"byte_end":188912,"line_start":43,"line_end":43,"column_start":8,"column_end":20},"name":"allocate_vec","qualname":"::pool::RawCommandPool::allocate_vec","value":"pub fn allocate_vec(&mut Self, usize, RawLevel) -> Vec<B::CommandBuffer>","parent":{"krate":0,"index":976},"children":[],"decl_id":null,"docs":" Allocate new command buffers from the pool.\n","sig":null,"attributes":[{"value":"/ Allocate new command buffers from the pool.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":188845,"byte_end":188892,"line_start":42,"line_end":42,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":189129,"byte_end":189133,"line_start":48,"line_end":48,"column_start":15,"column_end":19},"name":"free","qualname":"::pool::RawCommandPool::free","value":"pub unsafe fn free<I>(&mut Self, I) where I: IntoIterator<Item =\nB::CommandBuffer>","parent":{"krate":0,"index":976},"children":[],"decl_id":null,"docs":" Free command buffers which are allocated from this pool.\n","sig":null,"attributes":[{"value":"/ Free command buffers which are allocated from this pool.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":189054,"byte_end":189114,"line_start":47,"line_end":47,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":16466},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":189567,"byte_end":189578,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"CommandPool","qualname":"::pool::CommandPool","value":"CommandPool {  }","parent":null,"children":[{"krate":0,"index":16469},{"krate":0,"index":16470}],"decl_id":null,"docs":" Strong-typed command pool.","sig":null,"attributes":[{"value":"/ Strong-typed command pool.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":189223,"byte_end":189253,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":189254,"byte_end":189257,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This a safer wrapper around `RawCommandPool` which ensures that only **one**","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":189258,"byte_end":189338,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ command buffer is recorded at the same time from the current queue.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":189339,"byte_end":189410,"line_start":56,"line_end":56,"column_start":1,"column_end":72}},{"value":"/ Command buffers are stored internally and can only be obtained via a strong-typed","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":189411,"byte_end":189496,"line_start":57,"line_end":57,"column_start":1,"column_end":86}},{"value":"/ `CommandBuffer` wrapper for encoding.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":189497,"byte_end":189538,"line_start":58,"line_end":58,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":189969,"byte_end":189972,"line_start":73,"line_end":73,"column_start":19,"column_end":22},"name":"new","qualname":"<CommandPool<B, C>>::new","value":"pub unsafe fn new(B::CommandPool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create typed command pool from raw.","sig":null,"attributes":[{"value":"/ Create typed command pool from raw.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":189701,"byte_end":189740,"line_start":66,"line_end":66,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":189745,"byte_end":189748,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":189753,"byte_end":189765,"line_start":68,"line_end":68,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":189770,"byte_end":189773,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ `<C as Capability>::supported_by(queue_type)` must return true","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":189778,"byte_end":189844,"line_start":70,"line_end":70,"column_start":5,"column_end":71}},{"value":"/ for `queue_type` being the type of queues from family this `raw` pool is associated with.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":189849,"byte_end":189942,"line_start":71,"line_end":71,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":189947,"byte_end":189950,"line_start":72,"line_end":72,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":190312,"byte_end":190317,"line_start":83,"line_end":83,"column_start":19,"column_end":24},"name":"reset","qualname":"<CommandPool<B, C>>::reset","value":"pub unsafe fn reset(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Reset the command pool and the corresponding command buffers.","sig":null,"attributes":[{"value":"/ Reset the command pool and the corresponding command buffers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":190102,"byte_end":190167,"line_start":80,"line_end":80,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":190172,"byte_end":190175,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Synchronization: You may _not_ free the pool if a command buffer is still in use (pool memory still in use)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":190180,"byte_end":190293,"line_start":82,"line_end":82,"column_start":5,"column_end":118}}]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":190479,"byte_end":190501,"line_start":88,"line_end":88,"column_start":12,"column_end":34},"name":"acquire_command_buffer","qualname":"<CommandPool<B, C>>::acquire_command_buffer","value":"pub fn acquire_command_buffer<S: Shot>(&mut Self) -> CommandBuffer<B, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Allocates a new primary command buffer from the pool.\n","sig":null,"attributes":[{"value":"/ Allocates a new primary command buffer from the pool.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":190410,"byte_end":190467,"line_start":87,"line_end":87,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":190741,"byte_end":190773,"line_start":94,"line_end":94,"column_start":12,"column_end":44},"name":"acquire_secondary_command_buffer","qualname":"<CommandPool<B, C>>::acquire_secondary_command_buffer","value":"pub fn acquire_secondary_command_buffer<S: Shot>(&mut Self)\n-> SecondaryCommandBuffer<B, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Allocates a new secondary command buffer from the pool.\n","sig":null,"attributes":[{"value":"/ Allocates a new secondary command buffer from the pool.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":190670,"byte_end":190729,"line_start":93,"line_end":93,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":191042,"byte_end":191046,"line_start":100,"line_end":100,"column_start":19,"column_end":23},"name":"free","qualname":"<CommandPool<B, C>>::free","value":"pub unsafe fn free<I>(&mut Self, I) where I: IntoIterator,\nI::Item: IntoRawCommandBuffer<B, C>","parent":null,"children":[],"decl_id":null,"docs":" Free the given iterator of command buffers from the pool.\n","sig":null,"attributes":[{"value":"/ Free the given iterator of command buffers from the pool.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":190962,"byte_end":191023,"line_start":99,"line_end":99,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":191322,"byte_end":191330,"line_start":110,"line_end":110,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<CommandPool<B, C>>::into_raw","value":"pub fn into_raw(Self) -> B::CommandPool","parent":null,"children":[],"decl_id":null,"docs":" Downgrade a typed command pool to untyped one.\n","sig":null,"attributes":[{"value":"/ Downgrade a typed command pool to untyped one.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":191260,"byte_end":191310,"line_start":109,"line_end":109,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":191516,"byte_end":191546,"line_start":117,"line_end":117,"column_start":12,"column_end":42},"name":"acquire_subpass_command_buffer","qualname":"<CommandPool<B, C>>::acquire_subpass_command_buffer","value":"pub fn acquire_subpass_command_buffer<S: Shot>(&mut Self)\n-> SubpassCommandBuffer<B, S>","parent":null,"children":[],"decl_id":null,"docs":" Allocates a new subpass command buffer from the pool.\n","sig":null,"attributes":[{"value":"/ Allocates a new subpass command buffer from the pool.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":191447,"byte_end":191504,"line_start":116,"line_end":116,"column_start":5,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":1002},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pso","qualname":"::pso","value":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","parent":null,"children":[{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1023},{"krate":0,"index":1043},{"krate":0,"index":1074},{"krate":0,"index":1086},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":19591},{"krate":0,"index":19617},{"krate":0,"index":19615},{"krate":0,"index":19611},{"krate":0,"index":19612},{"krate":0,"index":19603},{"krate":0,"index":19608},{"krate":0,"index":1125},{"krate":0,"index":19619},{"krate":0,"index":19683},{"krate":0,"index":19642},{"krate":0,"index":19641},{"krate":0,"index":19637},{"krate":0,"index":19638},{"krate":0,"index":19634},{"krate":0,"index":19635},{"krate":0,"index":19632},{"krate":0,"index":19626},{"krate":0,"index":19624},{"krate":0,"index":19621},{"krate":0,"index":19689},{"krate":0,"index":19708},{"krate":0,"index":19710},{"krate":0,"index":19712},{"krate":0,"index":19714},{"krate":0,"index":19716},{"krate":0,"index":19737},{"krate":0,"index":19740},{"krate":0,"index":19742},{"krate":0,"index":19745},{"krate":0,"index":19747},{"krate":0,"index":19750},{"krate":0,"index":19752},{"krate":0,"index":19755},{"krate":0,"index":19757},{"krate":0,"index":19760},{"krate":0,"index":19763},{"krate":0,"index":19822},{"krate":0,"index":19886},{"krate":0,"index":19845},{"krate":0,"index":19844},{"krate":0,"index":19840},{"krate":0,"index":19841},{"krate":0,"index":19837},{"krate":0,"index":19838},{"krate":0,"index":19835},{"krate":0,"index":19829},{"krate":0,"index":19827},{"krate":0,"index":19824},{"krate":0,"index":19892},{"krate":0,"index":19904},{"krate":0,"index":19906},{"krate":0,"index":19908},{"krate":0,"index":19910},{"krate":0,"index":19912},{"krate":0,"index":19926},{"krate":0,"index":19929},{"krate":0,"index":19931},{"krate":0,"index":19934},{"krate":0,"index":19936},{"krate":0,"index":19939},{"krate":0,"index":19941},{"krate":0,"index":19944},{"krate":0,"index":19946},{"krate":0,"index":19949},{"krate":0,"index":19952},{"krate":0,"index":19990},{"krate":0,"index":20068},{"krate":0,"index":20067},{"krate":0,"index":20065},{"krate":0,"index":20062},{"krate":0,"index":20063},{"krate":0,"index":20059},{"krate":0,"index":20056},{"krate":0,"index":20057},{"krate":0,"index":20050},{"krate":0,"index":20003},{"krate":0,"index":1127},{"krate":0,"index":1129},{"krate":0,"index":20070},{"krate":0,"index":20076},{"krate":0,"index":1131},{"krate":0,"index":20080},{"krate":0,"index":20144},{"krate":0,"index":20103},{"krate":0,"index":20102},{"krate":0,"index":20098},{"krate":0,"index":20099},{"krate":0,"index":20095},{"krate":0,"index":20096},{"krate":0,"index":20093},{"krate":0,"index":20087},{"krate":0,"index":20085},{"krate":0,"index":20082},{"krate":0,"index":20150},{"krate":0,"index":20156},{"krate":0,"index":20158},{"krate":0,"index":20160},{"krate":0,"index":20162},{"krate":0,"index":20164},{"krate":0,"index":20172},{"krate":0,"index":20175},{"krate":0,"index":20177},{"krate":0,"index":20180},{"krate":0,"index":20182},{"krate":0,"index":20185},{"krate":0,"index":20187},{"krate":0,"index":20190},{"krate":0,"index":20192},{"krate":0,"index":20195},{"krate":0,"index":20198},{"krate":0,"index":20218},{"krate":0,"index":20229},{"krate":0,"index":20233},{"krate":0,"index":20238},{"krate":0,"index":20236},{"krate":0,"index":20240},{"krate":0,"index":20247},{"krate":0,"index":20244},{"krate":0,"index":1135},{"krate":0,"index":1137},{"krate":0,"index":20250},{"krate":0,"index":20255},{"krate":0,"index":20253},{"krate":0,"index":1139},{"krate":0,"index":1141},{"krate":0,"index":20257},{"krate":0,"index":20259},{"krate":0,"index":20261},{"krate":0,"index":20266},{"krate":0,"index":1144},{"krate":0,"index":1146},{"krate":0,"index":20270},{"krate":0,"index":20356},{"krate":0,"index":20354},{"krate":0,"index":20351},{"krate":0,"index":20346},{"krate":0,"index":20348},{"krate":0,"index":20342},{"krate":0,"index":20339},{"krate":0,"index":20333},{"krate":0,"index":20335},{"krate":0,"index":20326},{"krate":0,"index":20319},{"krate":0,"index":20277},{"krate":0,"index":1150},{"krate":0,"index":1156}],"decl_id":null,"docs":" Raw Pipeline State Objects","sig":null,"attributes":[{"value":"/ Raw Pipeline State Objects","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":191726,"byte_end":191756,"line_start":1,"line_end":1,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":191757,"byte_end":191760,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains items used to create and manage Pipelines.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":191761,"byte_end":191828,"line_start":3,"line_end":3,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":16475},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\compute.rs","byte_start":204706,"byte_end":204725,"line_start":8,"line_end":8,"column_start":12,"column_end":31},"name":"ComputePipelineDesc","qualname":"::pso::compute::ComputePipelineDesc","value":"ComputePipelineDesc { shader, layout, flags, parent }","parent":null,"children":[{"krate":0,"index":16478},{"krate":0,"index":16479},{"krate":0,"index":16480},{"krate":0,"index":16481}],"decl_id":null,"docs":" A description of the data needed to construct a compute pipeline.\n","sig":null,"attributes":[{"value":"/ A description of the data needed to construct a compute pipeline.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\compute.rs","byte_start":204608,"byte_end":204677,"line_start":6,"line_end":6,"column_start":1,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":16478},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\compute.rs","byte_start":204814,"byte_end":204820,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"name":"shader","qualname":"::pso::compute::ComputePipelineDesc::shader","value":"pso::EntryPoint<'a, B>","parent":{"krate":0,"index":16475},"children":[],"decl_id":null,"docs":" The shader entry point that performs the computation.\n","sig":null,"attributes":[{"value":"/ The shader entry point that performs the computation.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\compute.rs","byte_start":204748,"byte_end":204805,"line_start":9,"line_end":9,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":16479},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\compute.rs","byte_start":204874,"byte_end":204880,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"name":"layout","qualname":"::pso::compute::ComputePipelineDesc::layout","value":"&'a <B as Backend>::PipelineLayout","parent":{"krate":0,"index":16475},"children":[],"decl_id":null,"docs":" Pipeline layout.\n","sig":null,"attributes":[{"value":"/ Pipeline layout.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\compute.rs","byte_start":204845,"byte_end":204865,"line_start":11,"line_end":11,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":16480},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\compute.rs","byte_start":204968,"byte_end":204973,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"flags","qualname":"::pso::compute::ComputePipelineDesc::flags","value":"pso::PipelineCreationFlags","parent":{"krate":0,"index":16475},"children":[],"decl_id":null,"docs":" Any flags necessary for the pipeline creation.\n","sig":null,"attributes":[{"value":"/ Any flags necessary for the pipeline creation.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\compute.rs","byte_start":204909,"byte_end":204959,"line_start":13,"line_end":13,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":16481},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\compute.rs","byte_start":205055,"byte_end":205061,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"name":"parent","qualname":"::pso::compute::ComputePipelineDesc::parent","value":"pso::BasePipeline<'a, <B as Backend>::ComputePipeline>","parent":{"krate":0,"index":16475},"children":[],"decl_id":null,"docs":" The parent pipeline to this one, if any.\n","sig":null,"attributes":[{"value":"/ The parent pipeline to this one, if any.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\compute.rs","byte_start":205002,"byte_end":205046,"line_start":15,"line_end":15,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\compute.rs","byte_start":205208,"byte_end":205211,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<ComputePipelineDesc>::new","value":"pub fn new(EntryPoint, &'a B::PipelineLayout) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty PSO descriptor.\n","sig":null,"attributes":[{"value":"/ Create a new empty PSO descriptor.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\compute.rs","byte_start":205158,"byte_end":205196,"line_start":20,"line_end":20,"column_start":5,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":1031},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":206806,"byte_end":206824,"line_start":29,"line_end":29,"column_start":10,"column_end":28},"name":"DescriptorSetIndex","qualname":"::pso::descriptor::DescriptorSetIndex","value":"u16","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":206793,"byte_end":206796,"line_start":28,"line_end":28,"column_start":1,"column_end":4}}]},{"kind":"Type","id":{"krate":0,"index":1032},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":206845,"byte_end":206862,"line_start":31,"line_end":31,"column_start":10,"column_end":27},"name":"DescriptorBinding","qualname":"::pso::descriptor::DescriptorBinding","value":"u32","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":206832,"byte_end":206835,"line_start":30,"line_end":30,"column_start":1,"column_end":4}}]},{"kind":"Type","id":{"krate":0,"index":1033},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":206883,"byte_end":206903,"line_start":33,"line_end":33,"column_start":10,"column_end":30},"name":"DescriptorArrayIndex","qualname":"::pso::descriptor::DescriptorArrayIndex","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":206870,"byte_end":206873,"line_start":32,"line_end":32,"column_start":1,"column_end":4}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16487},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":207376,"byte_end":207383,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"name":"Sampler","qualname":"::pso::descriptor::DescriptorType::Sampler","value":"DescriptorType::Sampler","parent":{"krate":0,"index":16486},"children":[],"decl_id":null,"docs":" Controls filtering parameters for sampling from images.\n","sig":null,"attributes":[{"value":"/ Controls filtering parameters for sampling from images.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":207312,"byte_end":207371,"line_start":42,"line_end":42,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16490},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":207401,"byte_end":207421,"line_start":45,"line_end":45,"column_start":5,"column_end":25},"name":"CombinedImageSampler","qualname":"::pso::descriptor::DescriptorType::CombinedImageSampler","value":"DescriptorType::CombinedImageSampler","parent":{"krate":0,"index":16486},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":207393,"byte_end":207396,"line_start":44,"line_end":44,"column_start":5,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16493},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":207547,"byte_end":207559,"line_start":48,"line_end":48,"column_start":5,"column_end":17},"name":"SampledImage","qualname":"::pso::descriptor::DescriptorType::SampledImage","value":"DescriptorType::SampledImage","parent":{"krate":0,"index":16486},"children":[],"decl_id":null,"docs":" Allows sampling (filtered loading) from associated image memory.\n Usually combined with a `Sampler`.\n","sig":null,"attributes":[{"value":"/ Allows sampling (filtered loading) from associated image memory.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":207431,"byte_end":207499,"line_start":46,"line_end":46,"column_start":5,"column_end":73}},{"value":"/ Usually combined with a `Sampler`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":207504,"byte_end":207542,"line_start":47,"line_end":47,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16496},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":207652,"byte_end":207664,"line_start":50,"line_end":50,"column_start":5,"column_end":17},"name":"StorageImage","qualname":"::pso::descriptor::DescriptorType::StorageImage","value":"DescriptorType::StorageImage","parent":{"krate":0,"index":16486},"children":[],"decl_id":null,"docs":" Allows atomic operations, (non-filtered) loads and stores on image memory.\n","sig":null,"attributes":[{"value":"/ Allows atomic operations, (non-filtered) loads and stores on image memory.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":207569,"byte_end":207647,"line_start":49,"line_end":49,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16499},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":207711,"byte_end":207729,"line_start":52,"line_end":52,"column_start":5,"column_end":23},"name":"UniformTexelBuffer","qualname":"::pso::descriptor::DescriptorType::UniformTexelBuffer","value":"DescriptorType::UniformTexelBuffer","parent":{"krate":0,"index":16486},"children":[],"decl_id":null,"docs":" Read-only, formatted buffer.\n","sig":null,"attributes":[{"value":"/ Read-only, formatted buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":207674,"byte_end":207706,"line_start":51,"line_end":51,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16502},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":207777,"byte_end":207795,"line_start":54,"line_end":54,"column_start":5,"column_end":23},"name":"StorageTexelBuffer","qualname":"::pso::descriptor::DescriptorType::StorageTexelBuffer","value":"DescriptorType::StorageTexelBuffer","parent":{"krate":0,"index":16486},"children":[],"decl_id":null,"docs":" Read-Write, formatted buffer.\n","sig":null,"attributes":[{"value":"/ Read-Write, formatted buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":207739,"byte_end":207772,"line_start":53,"line_end":53,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16505},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":207843,"byte_end":207856,"line_start":56,"line_end":56,"column_start":5,"column_end":18},"name":"UniformBuffer","qualname":"::pso::descriptor::DescriptorType::UniformBuffer","value":"DescriptorType::UniformBuffer","parent":{"krate":0,"index":16486},"children":[],"decl_id":null,"docs":" Read-only, structured buffer.\n","sig":null,"attributes":[{"value":"/ Read-only, structured buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":207805,"byte_end":207838,"line_start":55,"line_end":55,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16508},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":207905,"byte_end":207918,"line_start":58,"line_end":58,"column_start":5,"column_end":18},"name":"StorageBuffer","qualname":"::pso::descriptor::DescriptorType::StorageBuffer","value":"DescriptorType::StorageBuffer","parent":{"krate":0,"index":16486},"children":[],"decl_id":null,"docs":" Read-Write, structured buffer.\n","sig":null,"attributes":[{"value":"/ Read-Write, structured buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":207866,"byte_end":207900,"line_start":57,"line_end":57,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16511},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":208153,"byte_end":208173,"line_start":62,"line_end":62,"column_start":5,"column_end":25},"name":"UniformBufferDynamic","qualname":"::pso::descriptor::DescriptorType::UniformBufferDynamic","value":"DescriptorType::UniformBufferDynamic","parent":{"krate":0,"index":16486},"children":[],"decl_id":null,"docs":" A uniform buffer that can be bound with an offset into its memory with minimal performance impact,\n usually used to store pieces of \"uniform\" data that change per draw call rather than\n per render pass.\n","sig":null,"attributes":[{"value":"/ A uniform buffer that can be bound with an offset into its memory with minimal performance impact,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":207928,"byte_end":208030,"line_start":59,"line_end":59,"column_start":5,"column_end":107}},{"value":"/ usually used to store pieces of \"uniform\" data that change per draw call rather than","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":208035,"byte_end":208123,"line_start":60,"line_end":60,"column_start":5,"column_end":93}},{"value":"/ per render pass.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":208128,"byte_end":208148,"line_start":61,"line_end":61,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16514},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":208191,"byte_end":208211,"line_start":64,"line_end":64,"column_start":5,"column_end":25},"name":"StorageBufferDynamic","qualname":"::pso::descriptor::DescriptorType::StorageBufferDynamic","value":"DescriptorType::StorageBufferDynamic","parent":{"krate":0,"index":16486},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":208183,"byte_end":208186,"line_start":63,"line_end":63,"column_start":5,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16517},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":208297,"byte_end":208312,"line_start":66,"line_end":66,"column_start":5,"column_end":20},"name":"InputAttachment","qualname":"::pso::descriptor::DescriptorType::InputAttachment","value":"DescriptorType::InputAttachment","parent":{"krate":0,"index":16486},"children":[],"decl_id":null,"docs":" Allows unfiltered loads of pixel local data in the fragment shader.\n","sig":null,"attributes":[{"value":"/ Allows unfiltered loads of pixel local data in the fragment shader.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":208221,"byte_end":208292,"line_start":65,"line_end":65,"column_start":5,"column_end":76}}]},{"kind":"Enum","id":{"krate":0,"index":16486},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":207291,"byte_end":207305,"line_start":41,"line_end":41,"column_start":10,"column_end":24},"name":"DescriptorType","qualname":"::pso::descriptor::DescriptorType","value":"pub enum DescriptorType {\n\n    /// Controls filtering parameters for sampling from images.\n    Sampler = ,\n\n    ///\n    CombinedImageSampler = ,\n\n    /// Allows sampling (filtered loading) from associated image memory.\n    /// Usually combined with a `Sampler`.\n    SampledImage = ,\n\n    /// Allows atomic operations, (non-filtered) loads and stores on image memory.\n    StorageImage = ,\n\n    /// Read-only, formatted buffer.\n    UniformTexelBuffer = ,\n\n    /// Read-Write, formatted buffer.\n    StorageTexelBuffer = ,\n\n    /// Read-only, structured buffer.\n    UniformBuffer = ,\n\n    /// Read-Write, structured buffer.\n    StorageBuffer = ,\n\n    /// A uniform buffer that can be bound with an offset into its memory with minimal performance impact,\n    /// usually used to store pieces of \"uniform\" data that change per draw call rather than\n    /// per render pass.\n    UniformBufferDynamic = ,\n\n    ///\n    StorageBufferDynamic = ,\n\n    /// Allows unfiltered loads of pixel local data in the fragment shader.\n    InputAttachment = ,\n}","parent":null,"children":[{"krate":0,"index":16487},{"krate":0,"index":16490},{"krate":0,"index":16493},{"krate":0,"index":16496},{"krate":0,"index":16499},{"krate":0,"index":16502},{"krate":0,"index":16505},{"krate":0,"index":16508},{"krate":0,"index":16511},{"krate":0,"index":16514},{"krate":0,"index":16517}],"decl_id":null,"docs":" DOC TODO: Grasping and remembering the differences between these\n       types is a tough task. We might be able to come up with better names?\n       Or even use tuples to describe functionality instead of coming up with fancy names.\n","sig":null,"attributes":[{"value":"/ DOC TODO: Grasping and remembering the differences between these","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":206914,"byte_end":206982,"line_start":35,"line_end":35,"column_start":1,"column_end":69}},{"value":"/       types is a tough task. We might be able to come up with better names?","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":206983,"byte_end":207062,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/       Or even use tuples to describe functionality instead of coming up with fancy names.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":207063,"byte_end":207156,"line_start":37,"line_end":37,"column_start":1,"column_end":94}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":207157,"byte_end":207167,"line_start":38,"line_end":38,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":16597},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":209062,"byte_end":209088,"line_start":83,"line_end":83,"column_start":12,"column_end":38},"name":"DescriptorSetLayoutBinding","qualname":"::pso::descriptor::DescriptorSetLayoutBinding","value":"DescriptorSetLayoutBinding { binding, ty, count, stage_flags, immutable_samplers }","parent":null,"children":[{"krate":0,"index":16598},{"krate":0,"index":16599},{"krate":0,"index":16600},{"krate":0,"index":16601},{"krate":0,"index":16602}],"decl_id":null,"docs":" Information about the contents of and in which stages descriptors may be bound to a descriptor\n set at a certain binding point. Multiple `DescriptorSetLayoutBinding`s are assembled into\n a `DescriptorSetLayout`, which is then allocated into a `DescriptorSet` using a\n [`DescriptorPool`].","sig":null,"attributes":[{"value":"/ Information about the contents of and in which stages descriptors may be bound to a descriptor","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":208322,"byte_end":208420,"line_start":69,"line_end":69,"column_start":1,"column_end":99}},{"value":"/ set at a certain binding point. Multiple `DescriptorSetLayoutBinding`s are assembled into","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":208421,"byte_end":208514,"line_start":70,"line_end":70,"column_start":1,"column_end":94}},{"value":"/ a `DescriptorSetLayout`, which is then allocated into a `DescriptorSet` using a","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":208515,"byte_end":208598,"line_start":71,"line_end":71,"column_start":1,"column_end":84}},{"value":"/ [`DescriptorPool`].","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":208599,"byte_end":208622,"line_start":72,"line_end":72,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":208623,"byte_end":208626,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ A descriptor set consists of multiple binding points.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":208627,"byte_end":208684,"line_start":74,"line_end":74,"column_start":1,"column_end":58}},{"value":"/ Each binding point contains one or multiple descriptors of a certain type.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":208685,"byte_end":208763,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/ The binding point is only valid for the pipelines stages specified.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":208764,"byte_end":208835,"line_start":76,"line_end":76,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":208836,"byte_end":208839,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The binding _must_ match with the corresponding shader interface.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":208840,"byte_end":208909,"line_start":78,"line_end":78,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":208910,"byte_end":208913,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ [`DescriptorPool`]: trait.DescriptorPool.html","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":208914,"byte_end":208963,"line_start":80,"line_end":80,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":16598},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":209134,"byte_end":209141,"line_start":85,"line_end":85,"column_start":9,"column_end":16},"name":"binding","qualname":"::pso::descriptor::DescriptorSetLayoutBinding::binding","value":"u32","parent":{"krate":0,"index":16597},"children":[],"decl_id":null,"docs":" Descriptor bindings range.\n","sig":null,"attributes":[{"value":"/ Descriptor bindings range.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":209095,"byte_end":209125,"line_start":84,"line_end":84,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":16599},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":209209,"byte_end":209211,"line_start":87,"line_end":87,"column_start":9,"column_end":11},"name":"ty","qualname":"::pso::descriptor::DescriptorSetLayoutBinding::ty","value":"pso::descriptor::DescriptorType","parent":{"krate":0,"index":16597},"children":[],"decl_id":null,"docs":" Type of the bound descriptors.\n","sig":null,"attributes":[{"value":"/ Type of the bound descriptors.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":209166,"byte_end":209200,"line_start":86,"line_end":86,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":16600},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":209407,"byte_end":209412,"line_start":92,"line_end":92,"column_start":9,"column_end":14},"name":"count","qualname":"::pso::descriptor::DescriptorSetLayoutBinding::count","value":"usize","parent":{"krate":0,"index":16597},"children":[],"decl_id":null,"docs":" Number of descriptors in the array.","sig":null,"attributes":[{"value":"/ Number of descriptors in the array.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":209233,"byte_end":209272,"line_start":88,"line_end":88,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":209277,"byte_end":209280,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ *Note*: If count is zero, the binding point is reserved","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":209285,"byte_end":209344,"line_start":90,"line_end":90,"column_start":5,"column_end":64}},{"value":"/ and can't be accessed from any shader stages.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":209349,"byte_end":209398,"line_start":91,"line_end":91,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":16601},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":209473,"byte_end":209484,"line_start":94,"line_end":94,"column_start":9,"column_end":20},"name":"stage_flags","qualname":"::pso::descriptor::DescriptorSetLayoutBinding::stage_flags","value":"pso::ShaderStageFlags","parent":{"krate":0,"index":16597},"children":[],"decl_id":null,"docs":" Valid shader stages.\n","sig":null,"attributes":[{"value":"/ Valid shader stages.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":209440,"byte_end":209464,"line_start":93,"line_end":93,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":16602},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":209567,"byte_end":209585,"line_start":96,"line_end":96,"column_start":9,"column_end":27},"name":"immutable_samplers","qualname":"::pso::descriptor::DescriptorSetLayoutBinding::immutable_samplers","value":"bool","parent":{"krate":0,"index":16597},"children":[],"decl_id":null,"docs":" Use the associated list of immutable samplers.\n","sig":null,"attributes":[{"value":"/ Use the associated list of immutable samplers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":209508,"byte_end":209558,"line_start":95,"line_end":95,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":16662},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":209743,"byte_end":209762,"line_start":102,"line_end":102,"column_start":12,"column_end":31},"name":"DescriptorRangeDesc","qualname":"::pso::descriptor::DescriptorRangeDesc","value":"DescriptorRangeDesc { ty, count }","parent":null,"children":[{"krate":0,"index":16663},{"krate":0,"index":16664}],"decl_id":null,"docs":" Set of descriptors of a specific type.\n","sig":null,"attributes":[{"value":"/ Set of descriptors of a specific type.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":209596,"byte_end":209638,"line_start":99,"line_end":99,"column_start":1,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":16663},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":209813,"byte_end":209815,"line_start":104,"line_end":104,"column_start":9,"column_end":11},"name":"ty","qualname":"::pso::descriptor::DescriptorRangeDesc::ty","value":"pso::descriptor::DescriptorType","parent":{"krate":0,"index":16662},"children":[],"decl_id":null,"docs":" Type of the stored descriptors.\n","sig":null,"attributes":[{"value":"/ Type of the stored descriptors.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":209769,"byte_end":209804,"line_start":103,"line_end":103,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":16664},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":209866,"byte_end":209871,"line_start":106,"line_end":106,"column_start":9,"column_end":14},"name":"count","qualname":"::pso::descriptor::DescriptorRangeDesc::count","value":"usize","parent":{"krate":0,"index":16662},"children":[],"decl_id":null,"docs":" Amount of space.\n","sig":null,"attributes":[{"value":"/ Amount of space.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":209837,"byte_end":209857,"line_start":105,"line_end":105,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16720},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":210197,"byte_end":210212,"line_start":115,"line_end":115,"column_start":5,"column_end":20},"name":"OutOfHostMemory","qualname":"::pso::descriptor::AllocationError::OutOfHostMemory","value":"AllocationError::OutOfHostMemory","parent":{"krate":0,"index":16719},"children":[],"decl_id":null,"docs":" Memory allocation on the host side failed.\n This could be caused by a lack of memory or pool fragmentation.\n","sig":null,"attributes":[{"value":"/ Memory allocation on the host side failed.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":210018,"byte_end":210064,"line_start":112,"line_end":112,"column_start":5,"column_end":51}},{"value":"/ This could be caused by a lack of memory or pool fragmentation.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":210069,"byte_end":210136,"line_start":113,"line_end":113,"column_start":5,"column_end":72}},{"value":"fail(display = \"Host memory allocation failed.\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":210141,"byte_end":210192,"line_start":114,"line_end":114,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16722},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":210399,"byte_end":210416,"line_start":119,"line_end":119,"column_start":5,"column_end":22},"name":"OutOfDeviceMemory","qualname":"::pso::descriptor::AllocationError::OutOfDeviceMemory","value":"AllocationError::OutOfDeviceMemory","parent":{"krate":0,"index":16719},"children":[],"decl_id":null,"docs":" Memory allocation on the host side failed.\n This could be caused by a lack of memory or pool fragmentation.\n","sig":null,"attributes":[{"value":"/ Memory allocation on the host side failed.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":210218,"byte_end":210264,"line_start":116,"line_end":116,"column_start":5,"column_end":51}},{"value":"/ This could be caused by a lack of memory or pool fragmentation.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":210269,"byte_end":210336,"line_start":117,"line_end":117,"column_start":5,"column_end":72}},{"value":"fail(display = \"Device memory allocation failed.\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":210341,"byte_end":210394,"line_start":118,"line_end":118,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16724},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":210630,"byte_end":210645,"line_start":123,"line_end":123,"column_start":5,"column_end":20},"name":"OutOfPoolMemory","qualname":"::pso::descriptor::AllocationError::OutOfPoolMemory","value":"AllocationError::OutOfPoolMemory","parent":{"krate":0,"index":16719},"children":[],"decl_id":null,"docs":" Memory allocation failed as there is not enough in the pool.\n This could be caused by too many descriptor sets being created.\n","sig":null,"attributes":[{"value":"/ Memory allocation failed as there is not enough in the pool.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":210422,"byte_end":210486,"line_start":120,"line_end":120,"column_start":5,"column_end":69}},{"value":"/ This could be caused by too many descriptor sets being created.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":210491,"byte_end":210558,"line_start":121,"line_end":121,"column_start":5,"column_end":72}},{"value":"fail(display = \"Descriptor pool memory allocation failed.\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":210563,"byte_end":210625,"line_start":122,"line_end":122,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16726},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":210767,"byte_end":210781,"line_start":126,"line_end":126,"column_start":5,"column_end":19},"name":"FragmentedPool","qualname":"::pso::descriptor::AllocationError::FragmentedPool","value":"AllocationError::FragmentedPool","parent":{"krate":0,"index":16719},"children":[],"decl_id":null,"docs":" Memory allocation failed due to pool fragmentation.\n","sig":null,"attributes":[{"value":"/ Memory allocation failed due to pool fragmentation.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":210651,"byte_end":210706,"line_start":124,"line_end":124,"column_start":5,"column_end":60}},{"value":"fail(display = \"Descriptor pool is fragmented.\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":210711,"byte_end":210762,"line_start":125,"line_end":125,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16728},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":210940,"byte_end":210958,"line_start":129,"line_end":129,"column_start":5,"column_end":23},"name":"IncompatibleLayout","qualname":"::pso::descriptor::AllocationError::IncompatibleLayout","value":"AllocationError::IncompatibleLayout","parent":{"krate":0,"index":16719},"children":[],"decl_id":null,"docs":" Descriptor set allocation failed as the layout is incompatible with the pool.\n","sig":null,"attributes":[{"value":"/ Descriptor set allocation failed as the layout is incompatible with the pool.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":210787,"byte_end":210868,"line_start":127,"line_end":127,"column_start":5,"column_end":86}},{"value":"fail(display = \"Descriptor layout incompatible with pool.\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":210873,"byte_end":210935,"line_start":128,"line_end":128,"column_start":5,"column_end":67}}]},{"kind":"Enum","id":{"krate":0,"index":16719},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":209996,"byte_end":210011,"line_start":111,"line_end":111,"column_start":10,"column_end":25},"name":"AllocationError","qualname":"::pso::descriptor::AllocationError","value":"pub enum AllocationError {\n\n    /// Memory allocation on the host side failed.\n    /// This could be caused by a lack of memory or pool fragmentation.\n    #[fail(display = \"Host memory allocation failed.\")]\n    OutOfHostMemory,\n\n    /// Memory allocation on the host side failed.\n    /// This could be caused by a lack of memory or pool fragmentation.\n    #[fail(display = \"Device memory allocation failed.\")]\n    OutOfDeviceMemory,\n\n    /// Memory allocation failed as there is not enough in the pool.\n    /// This could be caused by too many descriptor sets being created.\n    #[fail(display = \"Descriptor pool memory allocation failed.\")]\n    OutOfPoolMemory,\n\n    /// Memory allocation failed due to pool fragmentation.\n    #[fail(display = \"Descriptor pool is fragmented.\")]\n    FragmentedPool,\n\n    /// Descriptor set allocation failed as the layout is incompatible with the pool.\n    #[fail(display = \"Descriptor layout incompatible with pool.\")]\n    IncompatibleLayout,\n}","parent":null,"children":[{"krate":0,"index":16720},{"krate":0,"index":16722},{"krate":0,"index":16724},{"krate":0,"index":16726},{"krate":0,"index":16728}],"decl_id":null,"docs":" An error allocating descriptor sets from a pool.\n","sig":null,"attributes":[{"value":"/ An error allocating descriptor sets from a pool.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":209883,"byte_end":209935,"line_start":109,"line_end":109,"column_start":1,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":1034},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":211063,"byte_end":211077,"line_start":133,"line_end":133,"column_start":11,"column_end":25},"name":"DescriptorPool","qualname":"::pso::descriptor::DescriptorPool","value":"DescriptorPool<B: Backend>: Send + Sync + fmt::Debug","parent":null,"children":[{"krate":0,"index":1036},{"krate":0,"index":1038},{"krate":0,"index":1040},{"krate":0,"index":1042}],"decl_id":null,"docs":" A descriptor pool is a collection of memory from which descriptor sets are allocated.\n","sig":null,"attributes":[{"value":"/ A descriptor pool is a collection of memory from which descriptor sets are allocated.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":210963,"byte_end":211052,"line_start":132,"line_end":132,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":211718,"byte_end":211730,"line_start":145,"line_end":145,"column_start":15,"column_end":27},"name":"allocate_set","qualname":"::pso::descriptor::DescriptorPool::allocate_set","value":"pub unsafe fn allocate_set(&mut Self, &B::DescriptorSetLayout)\n-> Result<B::DescriptorSet, AllocationError>","parent":{"krate":0,"index":1034},"children":[],"decl_id":null,"docs":" Allocate a descriptor set from the pool.","sig":null,"attributes":[{"value":"/ Allocate a descriptor set from the pool.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":211122,"byte_end":211166,"line_start":134,"line_end":134,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":211171,"byte_end":211174,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ The descriptor set will be allocated from the pool according to the corresponding set layout. However,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":211179,"byte_end":211285,"line_start":136,"line_end":136,"column_start":5,"column_end":111}},{"value":"/ specific descriptors must still be written to the set before use using a [`DescriptorSetWrite`] or","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":211290,"byte_end":211392,"line_start":137,"line_end":137,"column_start":5,"column_end":107}},{"value":"/ [`DescriptorSetCopy`].","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":211397,"byte_end":211423,"line_start":138,"line_end":138,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":211428,"byte_end":211431,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Descriptors will become invalid once the pool is reset. Usage of invalidated descriptor sets results","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":211436,"byte_end":211540,"line_start":140,"line_end":140,"column_start":5,"column_end":109}},{"value":"/ in undefined behavior.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":211545,"byte_end":211571,"line_start":141,"line_end":141,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":211576,"byte_end":211579,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ [`DescriptorSetWrite`]: struct.DescriptorSetWrite.html","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":211584,"byte_end":211642,"line_start":143,"line_end":143,"column_start":5,"column_end":63}},{"value":"/ [`DescriptorSetCopy`]: struct.DescriptorSetCopy.html","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":211647,"byte_end":211703,"line_start":144,"line_end":144,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":212705,"byte_end":212718,"line_start":166,"line_end":166,"column_start":15,"column_end":28},"name":"allocate_sets","qualname":"::pso::descriptor::DescriptorPool::allocate_sets","value":"pub unsafe fn allocate_sets<I>(&mut Self, I, &mut Vec<B::DescriptorSet>)\n-> Result<(), AllocationError> where I: IntoIterator,\nI::Item: Borrow<B::DescriptorSetLayout>","parent":{"krate":0,"index":1034},"children":[],"decl_id":null,"docs":" Allocate one or multiple descriptor sets from the pool.","sig":null,"attributes":[{"value":"/ Allocate one or multiple descriptor sets from the pool.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":211991,"byte_end":212050,"line_start":154,"line_end":154,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":212055,"byte_end":212058,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The descriptor set will be allocated from the pool according to the corresponding set layout. However,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":212063,"byte_end":212169,"line_start":156,"line_end":156,"column_start":5,"column_end":111}},{"value":"/ specific descriptors must still be written to the set before use using a [`DescriptorSetWrite`] or","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":212174,"byte_end":212276,"line_start":157,"line_end":157,"column_start":5,"column_end":107}},{"value":"/ [`DescriptorSetCopy`].","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":212281,"byte_end":212307,"line_start":158,"line_end":158,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":212312,"byte_end":212315,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Each descriptor set will be allocated from the pool according to the corresponding set layout.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":212320,"byte_end":212418,"line_start":160,"line_end":160,"column_start":5,"column_end":103}},{"value":"/ Descriptors will become invalid once the pool is reset. Usage of invalidated descriptor sets results","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":212423,"byte_end":212527,"line_start":161,"line_end":161,"column_start":5,"column_end":109}},{"value":"/ in undefined behavior.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":212532,"byte_end":212558,"line_start":162,"line_end":162,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":212563,"byte_end":212566,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ [`DescriptorSetWrite`]: struct.DescriptorSetWrite.html","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":212571,"byte_end":212629,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/ [`DescriptorSetCopy`]: struct.DescriptorSetCopy.html","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":212634,"byte_end":212690,"line_start":165,"line_end":165,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":213354,"byte_end":213363,"line_start":189,"line_end":189,"column_start":15,"column_end":24},"name":"free_sets","qualname":"::pso::descriptor::DescriptorPool::free_sets","value":"pub unsafe fn free_sets<I>(&mut Self, I) where I: IntoIterator<Item =\nB::DescriptorSet>","parent":{"krate":0,"index":1034},"children":[],"decl_id":null,"docs":" Free the given descriptor sets provided as an iterator.\n","sig":null,"attributes":[{"value":"/ Free the given descriptor sets provided as an iterator.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":213280,"byte_end":213339,"line_start":188,"line_end":188,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":213763,"byte_end":213768,"line_start":197,"line_end":197,"column_start":15,"column_end":20},"name":"reset","qualname":"::pso::descriptor::DescriptorPool::reset","value":"pub unsafe fn reset(&mut Self)","parent":{"krate":0,"index":1034},"children":[],"decl_id":null,"docs":" Resets a descriptor pool, releasing all resources from all the descriptor sets\n allocated from it and freeing the descriptor sets. Invalidates all descriptor\n sets allocated from the pool; trying to use one after the pool has been reset\n is undefined behavior.\n","sig":null,"attributes":[{"value":"/ Resets a descriptor pool, releasing all resources from all the descriptor sets","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":213463,"byte_end":213545,"line_start":193,"line_end":193,"column_start":5,"column_end":87}},{"value":"/ allocated from it and freeing the descriptor sets. Invalidates all descriptor","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":213550,"byte_end":213631,"line_start":194,"line_end":194,"column_start":5,"column_end":86}},{"value":"/ sets allocated from the pool; trying to use one after the pool has been reset","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":213636,"byte_end":213717,"line_start":195,"line_end":195,"column_start":5,"column_end":86}},{"value":"/ is undefined behavior.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":213722,"byte_end":213748,"line_start":196,"line_end":196,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":16749},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":213980,"byte_end":213998,"line_start":204,"line_end":204,"column_start":12,"column_end":30},"name":"DescriptorSetWrite","qualname":"::pso::descriptor::DescriptorSetWrite","value":"DescriptorSetWrite { set, binding, array_offset, descriptors }","parent":null,"children":[{"krate":0,"index":16753},{"krate":0,"index":16754},{"krate":0,"index":16755},{"krate":0,"index":16756}],"decl_id":null,"docs":" Writes the actual descriptors to be bound into a descriptor set. Should be provided\n to the `write_descriptor_sets` method of a `Device`.\n","sig":null,"attributes":[{"value":"/ Writes the actual descriptors to be bound into a descriptor set. Should be provided","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":213784,"byte_end":213871,"line_start":200,"line_end":200,"column_start":1,"column_end":88}},{"value":"/ to the `write_descriptor_sets` method of a `Device`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":213872,"byte_end":213928,"line_start":201,"line_end":201,"column_start":1,"column_end":57}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":213929,"byte_end":213951,"line_start":202,"line_end":202,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":16753},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":214098,"byte_end":214101,"line_start":209,"line_end":209,"column_start":9,"column_end":12},"name":"set","qualname":"::pso::descriptor::DescriptorSetWrite::set","value":"&'a <B as Backend>::DescriptorSet","parent":{"krate":0,"index":16749},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":16754},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":214377,"byte_end":214384,"line_start":214,"line_end":214,"column_start":9,"column_end":16},"name":"binding","qualname":"::pso::descriptor::DescriptorSetWrite::binding","value":"u32","parent":{"krate":0,"index":16749},"children":[],"decl_id":null,"docs":" *Note*: when there is more descriptors provided than\n array elements left in the specified binding starting\n at specified, offset, the updates are spilled onto\n the next binding (starting with offset 0), and so on.\n","sig":null,"attributes":[{"value":"/ *Note*: when there is more descriptors provided than","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":214129,"byte_end":214185,"line_start":210,"line_end":210,"column_start":5,"column_end":61}},{"value":"/ array elements left in the specified binding starting","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":214190,"byte_end":214247,"line_start":211,"line_end":211,"column_start":5,"column_end":62}},{"value":"/ at specified, offset, the updates are spilled onto","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":214252,"byte_end":214306,"line_start":212,"line_end":212,"column_start":5,"column_end":59}},{"value":"/ the next binding (starting with offset 0), and so on.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":214311,"byte_end":214368,"line_start":213,"line_end":213,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":16755},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":214413,"byte_end":214425,"line_start":215,"line_end":215,"column_start":9,"column_end":21},"name":"array_offset","qualname":"::pso::descriptor::DescriptorSetWrite::array_offset","value":"usize","parent":{"krate":0,"index":16749},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":16756},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":214457,"byte_end":214468,"line_start":216,"line_end":216,"column_start":9,"column_end":20},"name":"descriptors","qualname":"::pso::descriptor::DescriptorSetWrite::descriptors","value":"WI","parent":{"krate":0,"index":16749},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":16765},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":214769,"byte_end":214776,"line_start":226,"line_end":226,"column_start":5,"column_end":12},"name":"Sampler","qualname":"::pso::descriptor::Descriptor::Sampler","value":"Descriptor::Sampler(&'a B::Sampler)","parent":{"krate":0,"index":16762},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":16768},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":214798,"byte_end":214803,"line_start":227,"line_end":227,"column_start":5,"column_end":10},"name":"Image","qualname":"::pso::descriptor::Descriptor::Image","value":"Descriptor::Image(&'a B::ImageView, Layout)","parent":{"krate":0,"index":16762},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":16772},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":214835,"byte_end":214855,"line_start":228,"line_end":228,"column_start":5,"column_end":25},"name":"CombinedImageSampler","qualname":"::pso::descriptor::Descriptor::CombinedImageSampler","value":"Descriptor::CombinedImageSampler(&'a B::ImageView, Layout, &'a B::Sampler)","parent":{"krate":0,"index":16762},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":16777},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":214903,"byte_end":214909,"line_start":229,"line_end":229,"column_start":5,"column_end":11},"name":"Buffer","qualname":"::pso::descriptor::Descriptor::Buffer","value":"Descriptor::Buffer(&'a B::Buffer, Range<Option<Offset>>)","parent":{"krate":0,"index":16762},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":16781},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":214953,"byte_end":214971,"line_start":230,"line_end":230,"column_start":5,"column_end":23},"name":"UniformTexelBuffer","qualname":"::pso::descriptor::Descriptor::UniformTexelBuffer","value":"Descriptor::UniformTexelBuffer(&'a B::BufferView)","parent":{"krate":0,"index":16762},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":16784},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":214996,"byte_end":215014,"line_start":231,"line_end":231,"column_start":5,"column_end":23},"name":"StorageTexelBuffer","qualname":"::pso::descriptor::Descriptor::StorageTexelBuffer","value":"Descriptor::StorageTexelBuffer(&'a B::BufferView)","parent":{"krate":0,"index":16762},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":16762},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":214736,"byte_end":214746,"line_start":225,"line_end":225,"column_start":10,"column_end":20},"name":"Descriptor","qualname":"::pso::descriptor::Descriptor","value":"pub enum Descriptor<'a, B: Backend> {\n    Sampler(&'a B::Sampler),\n    Image(&'a B::ImageView, Layout),\n    CombinedImageSampler(&'a B::ImageView, Layout, &'a B::Sampler),\n    Buffer(&'a B::Buffer, Range<Option<Offset>>),\n    UniformTexelBuffer(&'a B::BufferView),\n    StorageTexelBuffer(&'a B::BufferView),\n}","parent":null,"children":[{"krate":0,"index":16765},{"krate":0,"index":16768},{"krate":0,"index":16772},{"krate":0,"index":16777},{"krate":0,"index":16781},{"krate":0,"index":16784}],"decl_id":null,"docs":" A handle to a specific shader resource that can be bound for use in a `DescriptorSet`.\n Usually provided in a [`DescriptorSetWrite`]","sig":null,"attributes":[{"value":"/ A handle to a specific shader resource that can be bound for use in a `DescriptorSet`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":214477,"byte_end":214567,"line_start":219,"line_end":219,"column_start":1,"column_end":91}},{"value":"/ Usually provided in a [`DescriptorSetWrite`]","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":214568,"byte_end":214616,"line_start":220,"line_end":220,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":214617,"byte_end":214620,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ [`DescriptorSetWrite`]: struct.DescriptorSetWrite.html","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":214621,"byte_end":214679,"line_start":222,"line_end":222,"column_start":1,"column_end":59}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":214680,"byte_end":214702,"line_start":223,"line_end":223,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":16795},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":215258,"byte_end":215275,"line_start":238,"line_end":238,"column_start":12,"column_end":29},"name":"DescriptorSetCopy","qualname":"::pso::descriptor::DescriptorSetCopy","value":"DescriptorSetCopy { src_set, src_binding, src_array_offset, dst_set, dst_binding, dst_array_offset, count }","parent":null,"children":[{"krate":0,"index":16798},{"krate":0,"index":16799},{"krate":0,"index":16800},{"krate":0,"index":16801},{"krate":0,"index":16802},{"krate":0,"index":16803},{"krate":0,"index":16804}],"decl_id":null,"docs":" Copies a range of descriptors to be bound from one descriptor set to another Should be\n provided to the `copy_descriptor_sets` method of a `Device`.\n","sig":null,"attributes":[{"value":"/ Copies a range of descriptors to be bound from one descriptor set to another Should be","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":215038,"byte_end":215128,"line_start":234,"line_end":234,"column_start":1,"column_end":91}},{"value":"/ provided to the `copy_descriptor_sets` method of a `Device`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":215129,"byte_end":215193,"line_start":235,"line_end":235,"column_start":1,"column_end":65}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":215194,"byte_end":215216,"line_start":236,"line_end":236,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":16798},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":215302,"byte_end":215309,"line_start":239,"line_end":239,"column_start":9,"column_end":16},"name":"src_set","qualname":"::pso::descriptor::DescriptorSetCopy::src_set","value":"&'a <B as Backend>::DescriptorSet","parent":{"krate":0,"index":16795},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":16799},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":215341,"byte_end":215352,"line_start":240,"line_end":240,"column_start":9,"column_end":20},"name":"src_binding","qualname":"::pso::descriptor::DescriptorSetCopy::src_binding","value":"u32","parent":{"krate":0,"index":16795},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":16800},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":215381,"byte_end":215397,"line_start":241,"line_end":241,"column_start":9,"column_end":25},"name":"src_array_offset","qualname":"::pso::descriptor::DescriptorSetCopy::src_array_offset","value":"usize","parent":{"krate":0,"index":16795},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":16801},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":215429,"byte_end":215436,"line_start":242,"line_end":242,"column_start":9,"column_end":16},"name":"dst_set","qualname":"::pso::descriptor::DescriptorSetCopy::dst_set","value":"&'a <B as Backend>::DescriptorSet","parent":{"krate":0,"index":16795},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":16802},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":215468,"byte_end":215479,"line_start":243,"line_end":243,"column_start":9,"column_end":20},"name":"dst_binding","qualname":"::pso::descriptor::DescriptorSetCopy::dst_binding","value":"u32","parent":{"krate":0,"index":16795},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":16803},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":215508,"byte_end":215524,"line_start":244,"line_end":244,"column_start":9,"column_end":25},"name":"dst_array_offset","qualname":"::pso::descriptor::DescriptorSetCopy::dst_array_offset","value":"usize","parent":{"krate":0,"index":16795},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":16804},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":215556,"byte_end":215561,"line_start":245,"line_end":245,"column_start":9,"column_end":14},"name":"count","qualname":"::pso::descriptor::DescriptorSetCopy::count","value":"usize","parent":{"krate":0,"index":16795},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16816},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":215640,"byte_end":215665,"line_start":250,"line_end":250,"column_start":16,"column_end":41},"name":"DescriptorPoolCreateFlags","qualname":"::pso::descriptor::DescriptorPoolCreateFlags","value":"DescriptorPoolCreateFlags {  }","parent":null,"children":[{"krate":0,"index":16817}],"decl_id":null,"docs":" Descriptor pool creation flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":16853},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":215794,"byte_end":215813,"line_start":253,"line_end":253,"column_start":15,"column_end":34},"name":"FREE_DESCRIPTOR_SET","qualname":"::pso::descriptor::DescriptorPoolCreateFlags::FREE_DESCRIPTOR_SET","value":"DescriptorPoolCreateFlags","parent":{"krate":0,"index":16852},"children":[],"decl_id":null,"docs":" Specifies that descriptor sets are allowed to be freed from the pool\n individually.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16902},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":216351,"byte_end":216355,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Rect","qualname":"::pso::graphics::Rect","value":"Rect { x, y, w, h }","parent":null,"children":[{"krate":0,"index":16903},{"krate":0,"index":16904},{"krate":0,"index":16905},{"krate":0,"index":16906}],"decl_id":null,"docs":" A simple struct describing a rect with integer coordinates.\n","sig":null,"attributes":[{"value":"/ A simple struct describing a rect with integer coordinates.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":216154,"byte_end":216217,"line_start":10,"line_end":10,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":16903},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":216386,"byte_end":216387,"line_start":15,"line_end":15,"column_start":9,"column_end":10},"name":"x","qualname":"::pso::graphics::Rect::x","value":"i16","parent":{"krate":0,"index":16902},"children":[],"decl_id":null,"docs":" X position.\n","sig":null,"attributes":[{"value":"/ X position.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":216362,"byte_end":216377,"line_start":14,"line_end":14,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":16904},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":216422,"byte_end":216423,"line_start":17,"line_end":17,"column_start":9,"column_end":10},"name":"y","qualname":"::pso::graphics::Rect::y","value":"i16","parent":{"krate":0,"index":16902},"children":[],"decl_id":null,"docs":" Y position.\n","sig":null,"attributes":[{"value":"/ Y position.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":216398,"byte_end":216413,"line_start":16,"line_end":16,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":16905},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":216453,"byte_end":216454,"line_start":19,"line_end":19,"column_start":9,"column_end":10},"name":"w","qualname":"::pso::graphics::Rect::w","value":"i16","parent":{"krate":0,"index":16902},"children":[],"decl_id":null,"docs":" Width.\n","sig":null,"attributes":[{"value":"/ Width.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":216434,"byte_end":216444,"line_start":18,"line_end":18,"column_start":5,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":16906},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":216485,"byte_end":216486,"line_start":21,"line_end":21,"column_start":9,"column_end":10},"name":"h","qualname":"::pso::graphics::Rect::h","value":"i16","parent":{"krate":0,"index":16902},"children":[],"decl_id":null,"docs":" Height.\n","sig":null,"attributes":[{"value":"/ Height.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":216465,"byte_end":216476,"line_start":20,"line_end":20,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":16990},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":216669,"byte_end":216678,"line_start":27,"line_end":27,"column_start":12,"column_end":21},"name":"ClearRect","qualname":"::pso::graphics::ClearRect","value":"ClearRect { rect, layers }","parent":null,"children":[{"krate":0,"index":16991},{"krate":0,"index":16992}],"decl_id":null,"docs":" A simple struct describing a rect with integer coordinates.\n","sig":null,"attributes":[{"value":"/ A simple struct describing a rect with integer coordinates.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":216496,"byte_end":216559,"line_start":24,"line_end":24,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":16991},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":216708,"byte_end":216712,"line_start":29,"line_end":29,"column_start":9,"column_end":13},"name":"rect","qualname":"::pso::graphics::ClearRect::rect","value":"pso::graphics::Rect","parent":{"krate":0,"index":16990},"children":[],"decl_id":null,"docs":" 2D region.\n","sig":null,"attributes":[{"value":"/ 2D region.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":216685,"byte_end":216699,"line_start":28,"line_end":28,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":16992},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":216749,"byte_end":216755,"line_start":31,"line_end":31,"column_start":9,"column_end":15},"name":"layers","qualname":"::pso::graphics::ClearRect::layers","value":"std::ops::Range<u16>","parent":{"krate":0,"index":16990},"children":[],"decl_id":null,"docs":" Layer range.\n","sig":null,"attributes":[{"value":"/ Layer range.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":216724,"byte_end":216740,"line_start":30,"line_end":30,"column_start":5,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":17050},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":216951,"byte_end":216959,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"Viewport","qualname":"::pso::graphics::Viewport","value":"Viewport { rect, depth }","parent":null,"children":[{"krate":0,"index":17051},{"krate":0,"index":17052}],"decl_id":null,"docs":" A viewport, generally equating to a window on a display.\n","sig":null,"attributes":[{"value":"/ A viewport, generally equating to a window on a display.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":216781,"byte_end":216841,"line_start":34,"line_end":34,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":17051},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":217003,"byte_end":217007,"line_start":39,"line_end":39,"column_start":9,"column_end":13},"name":"rect","qualname":"::pso::graphics::Viewport::rect","value":"pso::graphics::Rect","parent":{"krate":0,"index":17050},"children":[],"decl_id":null,"docs":" The viewport boundaries.\n","sig":null,"attributes":[{"value":"/ The viewport boundaries.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":216966,"byte_end":216994,"line_start":38,"line_end":38,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":17052},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":217058,"byte_end":217063,"line_start":41,"line_end":41,"column_start":9,"column_end":14},"name":"depth","qualname":"::pso::graphics::Viewport::depth","value":"std::ops::Range<f32>","parent":{"krate":0,"index":17050},"children":[],"decl_id":null,"docs":" The viewport depth limits.\n","sig":null,"attributes":[{"value":"/ The viewport depth limits.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":217019,"byte_end":217049,"line_start":40,"line_end":40,"column_start":5,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":1063},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":217120,"byte_end":217130,"line_start":45,"line_end":45,"column_start":10,"column_end":20},"name":"ColorValue","qualname":"::pso::graphics::ColorValue","value":"[f32; ]","parent":null,"children":[],"decl_id":null,"docs":" A single RGBA float color.\n","sig":null,"attributes":[{"value":"/ A single RGBA float color.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":217080,"byte_end":217110,"line_start":44,"line_end":44,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":1065},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":217198,"byte_end":217208,"line_start":47,"line_end":47,"column_start":10,"column_end":20},"name":"DepthValue","qualname":"::pso::graphics::DepthValue","value":"f32","parent":null,"children":[],"decl_id":null,"docs":" A single depth value from a depth buffer.\n","sig":null,"attributes":[{"value":"/ A single depth value from a depth buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":217143,"byte_end":217188,"line_start":46,"line_end":46,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":1066},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":217267,"byte_end":217279,"line_start":49,"line_end":49,"column_start":10,"column_end":22},"name":"StencilValue","qualname":"::pso::graphics::StencilValue","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" A single value from a stencil buffer.\n","sig":null,"attributes":[{"value":"/ A single value from a stencil buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":217216,"byte_end":217257,"line_start":48,"line_end":48,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":17110},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":217783,"byte_end":217800,"line_start":62,"line_end":62,"column_start":12,"column_end":29},"name":"GraphicsShaderSet","qualname":"::pso::graphics::GraphicsShaderSet","value":"GraphicsShaderSet { vertex, hull, domain, geometry, fragment }","parent":null,"children":[{"krate":0,"index":17113},{"krate":0,"index":17114},{"krate":0,"index":17115},{"krate":0,"index":17116},{"krate":0,"index":17117}],"decl_id":null,"docs":" A complete set of shaders to build a graphics pipeline.","sig":null,"attributes":[{"value":"/ A complete set of shaders to build a graphics pipeline.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":217288,"byte_end":217347,"line_start":51,"line_end":51,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":217348,"byte_end":217351,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ All except the vertex shader are optional; omitting them","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":217352,"byte_end":217412,"line_start":53,"line_end":53,"column_start":1,"column_end":61}},{"value":"/ passes through the inputs without change.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":217413,"byte_end":217458,"line_start":54,"line_end":54,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":217459,"byte_end":217462,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ If a fragment shader is omitted, the results of fragment","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":217463,"byte_end":217523,"line_start":56,"line_end":56,"column_start":1,"column_end":61}},{"value":"/ processing are undefined. Specifically, any fragment color","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":217524,"byte_end":217586,"line_start":57,"line_end":57,"column_start":1,"column_end":63}},{"value":"/ outputs are considered to have undefined values, and the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":217587,"byte_end":217647,"line_start":58,"line_end":58,"column_start":1,"column_end":61}},{"value":"/ fragment depth is considered to be unmodified. This can","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":217648,"byte_end":217707,"line_start":59,"line_end":59,"column_start":1,"column_end":60}},{"value":"/ be useful for depth-only rendering.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":217708,"byte_end":217747,"line_start":60,"line_end":60,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":17113},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":217878,"byte_end":217884,"line_start":64,"line_end":64,"column_start":9,"column_end":15},"name":"vertex","qualname":"::pso::graphics::GraphicsShaderSet::vertex","value":"pso::EntryPoint<'a, B>","parent":{"krate":0,"index":17110},"children":[],"decl_id":null,"docs":" A shader that outputs a vertex in a model.\n","sig":null,"attributes":[{"value":"/ A shader that outputs a vertex in a model.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":217823,"byte_end":217869,"line_start":63,"line_end":63,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":17114},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":218146,"byte_end":218150,"line_start":69,"line_end":69,"column_start":9,"column_end":13},"name":"hull","qualname":"::pso::graphics::GraphicsShaderSet::hull","value":"std::option::Option<pso::EntryPoint<'a, B>>","parent":{"krate":0,"index":17110},"children":[],"decl_id":null,"docs":" A hull shader takes in an input patch (values representing\n a small portion of a shape, which may be actual geometry or may\n be parameters for creating geometry) and produces one or more\n output patches.\n","sig":null,"attributes":[{"value":"/ A hull shader takes in an input patch (values representing","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":217909,"byte_end":217971,"line_start":65,"line_end":65,"column_start":5,"column_end":67}},{"value":"/ a small portion of a shape, which may be actual geometry or may","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":217976,"byte_end":218043,"line_start":66,"line_end":66,"column_start":5,"column_end":72}},{"value":"/ be parameters for creating geometry) and produces one or more","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":218048,"byte_end":218113,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/ output patches.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":218118,"byte_end":218137,"line_start":68,"line_end":68,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":17115},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":218317,"byte_end":218323,"line_start":72,"line_end":72,"column_start":9,"column_end":15},"name":"domain","qualname":"::pso::graphics::GraphicsShaderSet::domain","value":"std::option::Option<pso::EntryPoint<'a, B>>","parent":{"krate":0,"index":17110},"children":[],"decl_id":null,"docs":" A shader that takes in domains produced from a hull shader's output\n patches and computes actual vertex positions.\n","sig":null,"attributes":[{"value":"/ A shader that takes in domains produced from a hull shader's output","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":218183,"byte_end":218254,"line_start":70,"line_end":70,"column_start":5,"column_end":76}},{"value":"/ patches and computes actual vertex positions.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":218259,"byte_end":218308,"line_start":71,"line_end":71,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":17116},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":218459,"byte_end":218467,"line_start":75,"line_end":75,"column_start":9,"column_end":17},"name":"geometry","qualname":"::pso::graphics::GraphicsShaderSet::geometry","value":"std::option::Option<pso::EntryPoint<'a, B>>","parent":{"krate":0,"index":17110},"children":[],"decl_id":null,"docs":" A shader that takes given input vertexes and outputs zero\n or more output vertexes.\n","sig":null,"attributes":[{"value":"/ A shader that takes given input vertexes and outputs zero","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":218356,"byte_end":218417,"line_start":73,"line_end":73,"column_start":5,"column_end":66}},{"value":"/ or more output vertexes.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":218422,"byte_end":218450,"line_start":74,"line_end":74,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":17117},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":218651,"byte_end":218659,"line_start":79,"line_end":79,"column_start":9,"column_end":17},"name":"fragment","qualname":"::pso::graphics::GraphicsShaderSet::fragment","value":"std::option::Option<pso::EntryPoint<'a, B>>","parent":{"krate":0,"index":17110},"children":[],"decl_id":null,"docs":" A shader that outputs a value for a fragment.\n Usually this value is a color that is then displayed as a\n pixel on a screen.\n","sig":null,"attributes":[{"value":"/ A shader that outputs a value for a fragment.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":218500,"byte_end":218549,"line_start":76,"line_end":76,"column_start":5,"column_end":54}},{"value":"/ Usually this value is a color that is then displayed as a","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":218554,"byte_end":218615,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/ pixel on a screen.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":218620,"byte_end":218642,"line_start":78,"line_end":78,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":17126},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":218839,"byte_end":218850,"line_start":85,"line_end":85,"column_start":12,"column_end":23},"name":"BakedStates","qualname":"::pso::graphics::BakedStates","value":"BakedStates { viewport, scissor, blend_color, depth_bounds }","parent":null,"children":[{"krate":0,"index":17127},{"krate":0,"index":17128},{"krate":0,"index":17129},{"krate":0,"index":17130}],"decl_id":null,"docs":" Baked-in pipeline states.\n","sig":null,"attributes":[{"value":"/ Baked-in pipeline states.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":218691,"byte_end":218720,"line_start":82,"line_end":82,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":17127},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":218911,"byte_end":218919,"line_start":87,"line_end":87,"column_start":9,"column_end":17},"name":"viewport","qualname":"::pso::graphics::BakedStates::viewport","value":"std::option::Option<pso::graphics::Viewport>","parent":{"krate":0,"index":17126},"children":[],"decl_id":null,"docs":" Static viewport. TODO: multiple viewports\n","sig":null,"attributes":[{"value":"/ Static viewport. TODO: multiple viewports","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":218857,"byte_end":218902,"line_start":86,"line_end":86,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":17128},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":218995,"byte_end":219002,"line_start":89,"line_end":89,"column_start":9,"column_end":16},"name":"scissor","qualname":"::pso::graphics::BakedStates::scissor","value":"std::option::Option<pso::graphics::Rect>","parent":{"krate":0,"index":17126},"children":[],"decl_id":null,"docs":" Static scissor. TODO: multiple scissors\n","sig":null,"attributes":[{"value":"/ Static scissor. TODO: multiple scissors","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":218943,"byte_end":218986,"line_start":88,"line_end":88,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":17129},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":219063,"byte_end":219074,"line_start":91,"line_end":91,"column_start":9,"column_end":20},"name":"blend_color","qualname":"::pso::graphics::BakedStates::blend_color","value":"std::option::Option<[f32; 4]>","parent":{"krate":0,"index":17126},"children":[],"decl_id":null,"docs":" Static blend constant color.\n","sig":null,"attributes":[{"value":"/ Static blend constant color.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":219022,"byte_end":219054,"line_start":90,"line_end":90,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":17130},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":219133,"byte_end":219145,"line_start":93,"line_end":93,"column_start":9,"column_end":21},"name":"depth_bounds","qualname":"::pso::graphics::BakedStates::depth_bounds","value":"std::option::Option<std::ops::Range<f32>>","parent":{"krate":0,"index":17126},"children":[],"decl_id":null,"docs":" Static depth bounds.\n","sig":null,"attributes":[{"value":"/ Static depth bounds.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":219100,"byte_end":219124,"line_start":92,"line_end":92,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":17194},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":219295,"byte_end":219315,"line_start":99,"line_end":99,"column_start":12,"column_end":32},"name":"GraphicsPipelineDesc","qualname":"::pso::graphics::GraphicsPipelineDesc","value":"GraphicsPipelineDesc { shaders, rasterizer, vertex_buffers, attributes, input_assembler, blender, depth_stencil, multisampling, baked_states, layout, subpass, flags, parent }","parent":null,"children":[{"krate":0,"index":17197},{"krate":0,"index":17198},{"krate":0,"index":17199},{"krate":0,"index":17200},{"krate":0,"index":17201},{"krate":0,"index":17202},{"krate":0,"index":17203},{"krate":0,"index":17204},{"krate":0,"index":17205},{"krate":0,"index":17206},{"krate":0,"index":17207},{"krate":0,"index":17208},{"krate":0,"index":17209}],"decl_id":null,"docs":" A description of all the settings that can be altered\n when creating a graphics pipeline.\n","sig":null,"attributes":[{"value":"/ A description of all the settings that can be altered","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":219170,"byte_end":219227,"line_start":96,"line_end":96,"column_start":1,"column_end":58}},{"value":"/ when creating a graphics pipeline.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":219228,"byte_end":219266,"line_start":97,"line_end":97,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":17197},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":219401,"byte_end":219408,"line_start":101,"line_end":101,"column_start":9,"column_end":16},"name":"shaders","qualname":"::pso::graphics::GraphicsPipelineDesc::shaders","value":"pso::graphics::GraphicsShaderSet<'a, B>","parent":{"krate":0,"index":17194},"children":[],"decl_id":null,"docs":" A set of graphics shaders to use for the pipeline.\n","sig":null,"attributes":[{"value":"/ A set of graphics shaders to use for the pipeline.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":219338,"byte_end":219392,"line_start":100,"line_end":100,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":17198},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":219469,"byte_end":219479,"line_start":103,"line_end":103,"column_start":9,"column_end":19},"name":"rasterizer","qualname":"::pso::graphics::GraphicsPipelineDesc::rasterizer","value":"pso::graphics::Rasterizer","parent":{"krate":0,"index":17194},"children":[],"decl_id":null,"docs":" Rasterizer setup\n","sig":null,"attributes":[{"value":"/ Rasterizer setup","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":219440,"byte_end":219460,"line_start":102,"line_end":102,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":17199},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":219529,"byte_end":219543,"line_start":105,"line_end":105,"column_start":9,"column_end":23},"name":"vertex_buffers","qualname":"::pso::graphics::GraphicsPipelineDesc::vertex_buffers","value":"std::vec::Vec<pso::input_assembler::VertexBufferDesc>","parent":{"krate":0,"index":17194},"children":[],"decl_id":null,"docs":" Vertex buffers (IA)\n","sig":null,"attributes":[{"value":"/ Vertex buffers (IA)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":219497,"byte_end":219520,"line_start":104,"line_end":104,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":17200},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":219607,"byte_end":219617,"line_start":107,"line_end":107,"column_start":9,"column_end":19},"name":"attributes","qualname":"::pso::graphics::GraphicsPipelineDesc::attributes","value":"std::vec::Vec<pso::input_assembler::AttributeDesc>","parent":{"krate":0,"index":17194},"children":[],"decl_id":null,"docs":" Vertex attributes (IA)\n","sig":null,"attributes":[{"value":"/ Vertex attributes (IA)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":219572,"byte_end":219598,"line_start":106,"line_end":106,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":17201},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":219765,"byte_end":219780,"line_start":110,"line_end":110,"column_start":9,"column_end":24},"name":"input_assembler","qualname":"::pso::graphics::GraphicsPipelineDesc::input_assembler","value":"pso::input_assembler::InputAssemblerDesc","parent":{"krate":0,"index":17194},"children":[],"decl_id":null,"docs":" Input assembler attributes, describes how\n vertices are assembled into primitives (such as triangles).\n","sig":null,"attributes":[{"value":"/ Input assembler attributes, describes how","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":219643,"byte_end":219688,"line_start":108,"line_end":108,"column_start":5,"column_end":50}},{"value":"/ vertices are assembled into primitives (such as triangles).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":219693,"byte_end":219756,"line_start":109,"line_end":109,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":17202},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":219875,"byte_end":219882,"line_start":112,"line_end":112,"column_start":9,"column_end":16},"name":"blender","qualname":"::pso::graphics::GraphicsPipelineDesc::blender","value":"pso::graphics::BlendDesc","parent":{"krate":0,"index":17194},"children":[],"decl_id":null,"docs":" Description of how blend operations should be performed.\n","sig":null,"attributes":[{"value":"/ Description of how blend operations should be performed.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":219806,"byte_end":219866,"line_start":111,"line_end":111,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":17203},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":219931,"byte_end":219944,"line_start":114,"line_end":114,"column_start":9,"column_end":22},"name":"depth_stencil","qualname":"::pso::graphics::GraphicsPipelineDesc::depth_stencil","value":"pso::output_merger::DepthStencilDesc","parent":{"krate":0,"index":17194},"children":[],"decl_id":null,"docs":" Depth stencil (DSV)\n","sig":null,"attributes":[{"value":"/ Depth stencil (DSV)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":219899,"byte_end":219922,"line_start":113,"line_end":113,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":17204},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":219995,"byte_end":220008,"line_start":116,"line_end":116,"column_start":9,"column_end":22},"name":"multisampling","qualname":"::pso::graphics::GraphicsPipelineDesc::multisampling","value":"std::option::Option<pso::graphics::Multisampling>","parent":{"krate":0,"index":17194},"children":[],"decl_id":null,"docs":" Multisampling.\n","sig":null,"attributes":[{"value":"/ Multisampling.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":219968,"byte_end":219986,"line_start":115,"line_end":115,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":17205},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":220073,"byte_end":220085,"line_start":118,"line_end":118,"column_start":9,"column_end":21},"name":"baked_states","qualname":"::pso::graphics::GraphicsPipelineDesc::baked_states","value":"pso::graphics::BakedStates","parent":{"krate":0,"index":17194},"children":[],"decl_id":null,"docs":" Static pipeline states.\n","sig":null,"attributes":[{"value":"/ Static pipeline states.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":220037,"byte_end":220064,"line_start":117,"line_end":117,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":17206},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":220133,"byte_end":220139,"line_start":120,"line_end":120,"column_start":9,"column_end":15},"name":"layout","qualname":"::pso::graphics::GraphicsPipelineDesc::layout","value":"&'a <B as Backend>::PipelineLayout","parent":{"krate":0,"index":17194},"children":[],"decl_id":null,"docs":" Pipeline layout.\n","sig":null,"attributes":[{"value":"/ Pipeline layout.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":220104,"byte_end":220124,"line_start":119,"line_end":119,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":17207},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":220227,"byte_end":220234,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"name":"subpass","qualname":"::pso::graphics::GraphicsPipelineDesc::subpass","value":"pass::Subpass<'a, B>","parent":{"krate":0,"index":17194},"children":[],"decl_id":null,"docs":" Subpass in which the pipeline can be executed.\n","sig":null,"attributes":[{"value":"/ Subpass in which the pipeline can be executed.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":220168,"byte_end":220218,"line_start":121,"line_end":121,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":17208},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":220328,"byte_end":220333,"line_start":124,"line_end":124,"column_start":9,"column_end":14},"name":"flags","qualname":"::pso::graphics::GraphicsPipelineDesc::flags","value":"pso::PipelineCreationFlags","parent":{"krate":0,"index":17194},"children":[],"decl_id":null,"docs":" Options that may be set to alter pipeline properties.\n","sig":null,"attributes":[{"value":"/ Options that may be set to alter pipeline properties.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":220262,"byte_end":220319,"line_start":123,"line_end":123,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":17209},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":220438,"byte_end":220444,"line_start":127,"line_end":127,"column_start":9,"column_end":15},"name":"parent","qualname":"::pso::graphics::GraphicsPipelineDesc::parent","value":"pso::BasePipeline<'a, <B as Backend>::GraphicsPipeline>","parent":{"krate":0,"index":17194},"children":[],"decl_id":null,"docs":" The parent pipeline, which may be\n `BasePipeline::None`.\n","sig":null,"attributes":[{"value":"/ The parent pipeline, which may be","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":220362,"byte_end":220399,"line_start":125,"line_end":125,"column_start":5,"column_end":42}},{"value":"/ `BasePipeline::None`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":220404,"byte_end":220429,"line_start":126,"line_end":126,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":220593,"byte_end":220596,"line_start":132,"line_end":132,"column_start":12,"column_end":15},"name":"new","qualname":"<GraphicsPipelineDesc>::new","value":"pub fn new(GraphicsShaderSet, Primitive, Rasterizer, &'a B::PipelineLayout,\n           pass::Subpass) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty PSO descriptor.\n","sig":null,"attributes":[{"value":"/ Create a new empty PSO descriptor.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":220543,"byte_end":220581,"line_start":131,"line_end":131,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":17215},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":221604,"byte_end":221609,"line_start":163,"line_end":163,"column_start":5,"column_end":10},"name":"Point","qualname":"::pso::graphics::PolygonMode::Point","value":"PolygonMode::Point","parent":{"krate":0,"index":17214},"children":[],"decl_id":null,"docs":" Rasterize as a point.\n","sig":null,"attributes":[{"value":"/ Rasterize as a point.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":221574,"byte_end":221599,"line_start":162,"line_end":162,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":17217},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":221665,"byte_end":221669,"line_start":165,"line_end":165,"column_start":5,"column_end":9},"name":"Line","qualname":"::pso::graphics::PolygonMode::Line","value":"PolygonMode::Line(State<f32>)","parent":{"krate":0,"index":17214},"children":[],"decl_id":null,"docs":" Rasterize as a line with the given width.\n","sig":null,"attributes":[{"value":"/ Rasterize as a line with the given width.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":221615,"byte_end":221660,"line_start":164,"line_end":164,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":17220},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":221716,"byte_end":221720,"line_start":167,"line_end":167,"column_start":5,"column_end":9},"name":"Fill","qualname":"::pso::graphics::PolygonMode::Fill","value":"PolygonMode::Fill","parent":{"krate":0,"index":17214},"children":[],"decl_id":null,"docs":" Rasterize as a face.\n","sig":null,"attributes":[{"value":"/ Rasterize as a face.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":221687,"byte_end":221711,"line_start":166,"line_end":166,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":17214},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":221556,"byte_end":221567,"line_start":161,"line_end":161,"column_start":10,"column_end":21},"name":"PolygonMode","qualname":"::pso::graphics::PolygonMode","value":"pub enum PolygonMode {\n\n    /// Rasterize as a point.\n    Point,\n\n    /// Rasterize as a line with the given width.\n    Line(State<f32>),\n\n    /// Rasterize as a face.\n    Fill,\n}","parent":null,"children":[{"krate":0,"index":17215},{"krate":0,"index":17217},{"krate":0,"index":17220}],"decl_id":null,"docs":" Methods for rasterizing polygons, ie, turning the mesh\n into a raster image.\n","sig":null,"attributes":[{"value":"/ Methods for rasterizing polygons, ie, turning the mesh","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":221347,"byte_end":221405,"line_start":157,"line_end":157,"column_start":1,"column_end":59}},{"value":"/ into a raster image.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":221406,"byte_end":221430,"line_start":158,"line_end":158,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":17285},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":222056,"byte_end":222065,"line_start":177,"line_end":177,"column_start":5,"column_end":14},"name":"Clockwise","qualname":"::pso::graphics::FrontFace::Clockwise","value":"FrontFace::Clockwise","parent":{"krate":0,"index":17284},"children":[],"decl_id":null,"docs":" Clockwise winding order.\n","sig":null,"attributes":[{"value":"/ Clockwise winding order.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":222023,"byte_end":222051,"line_start":176,"line_end":176,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":17287},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":222112,"byte_end":222128,"line_start":179,"line_end":179,"column_start":5,"column_end":21},"name":"CounterClockwise","qualname":"::pso::graphics::FrontFace::CounterClockwise","value":"FrontFace::CounterClockwise","parent":{"krate":0,"index":17284},"children":[],"decl_id":null,"docs":" Counter-clockwise winding order.\n","sig":null,"attributes":[{"value":"/ Counter-clockwise winding order.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":222071,"byte_end":222107,"line_start":178,"line_end":178,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":17284},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":222007,"byte_end":222016,"line_start":175,"line_end":175,"column_start":10,"column_end":19},"name":"FrontFace","qualname":"::pso::graphics::FrontFace","value":"pub enum FrontFace {\n\n    /// Clockwise winding order.\n    Clockwise,\n\n    /// Counter-clockwise winding order.\n    CounterClockwise,\n}","parent":null,"children":[{"krate":0,"index":17285},{"krate":0,"index":17287}],"decl_id":null,"docs":" The front face winding order of a set of vertices. This is\n the order of vertexes that define which side of a face is\n the \"front\".\n","sig":null,"attributes":[{"value":"/ The front face winding order of a set of vertices. This is","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":221725,"byte_end":221787,"line_start":170,"line_end":170,"column_start":1,"column_end":63}},{"value":"/ the order of vertexes that define which side of a face is","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":221788,"byte_end":221849,"line_start":171,"line_end":171,"column_start":1,"column_end":62}},{"value":"/ the \"front\".","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":221850,"byte_end":221866,"line_start":172,"line_end":172,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":17352},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":222663,"byte_end":222672,"line_start":191,"line_end":191,"column_start":12,"column_end":21},"name":"DepthBias","qualname":"::pso::graphics::DepthBias","value":"DepthBias { const_factor, clamp, slope_factor }","parent":null,"children":[{"krate":0,"index":17353},{"krate":0,"index":17354},{"krate":0,"index":17355}],"decl_id":null,"docs":" A depth bias allows changing the produced depth values\n for fragments slightly but consistently. This permits\n drawing of multiple polygons in the same plane without\n Z-fighting, such as when trying to draw shadows on a wall.","sig":null,"attributes":[{"value":"/ A depth bias allows changing the produced depth values","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":222133,"byte_end":222191,"line_start":182,"line_end":182,"column_start":1,"column_end":59}},{"value":"/ for fragments slightly but consistently. This permits","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":222192,"byte_end":222249,"line_start":183,"line_end":183,"column_start":1,"column_end":58}},{"value":"/ drawing of multiple polygons in the same plane without","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":222250,"byte_end":222308,"line_start":184,"line_end":184,"column_start":1,"column_end":59}},{"value":"/ Z-fighting, such as when trying to draw shadows on a wall.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":222309,"byte_end":222371,"line_start":185,"line_end":185,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":222372,"byte_end":222375,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ For details of the algorithm and equations, see","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":222376,"byte_end":222427,"line_start":187,"line_end":187,"column_start":1,"column_end":52}},{"value":"/ [the Vulkan spec](https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#primsrast-depthbias).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":222428,"byte_end":222538,"line_start":188,"line_end":188,"column_start":1,"column_end":111}}]},{"kind":"Field","id":{"krate":0,"index":17353},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":222738,"byte_end":222750,"line_start":193,"line_end":193,"column_start":9,"column_end":21},"name":"const_factor","qualname":"::pso::graphics::DepthBias::const_factor","value":"f32","parent":{"krate":0,"index":17352},"children":[],"decl_id":null,"docs":" A constant depth value added to each fragment.\n","sig":null,"attributes":[{"value":"/ A constant depth value added to each fragment.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":222679,"byte_end":222729,"line_start":192,"line_end":192,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":17354},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":222822,"byte_end":222827,"line_start":195,"line_end":195,"column_start":9,"column_end":14},"name":"clamp","qualname":"::pso::graphics::DepthBias::clamp","value":"f32","parent":{"krate":0,"index":17352},"children":[],"decl_id":null,"docs":" The minimum or maximum depth bias of a fragment.\n","sig":null,"attributes":[{"value":"/ The minimum or maximum depth bias of a fragment.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":222761,"byte_end":222813,"line_start":194,"line_end":194,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":17355},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":222899,"byte_end":222911,"line_start":197,"line_end":197,"column_start":9,"column_end":21},"name":"slope_factor","qualname":"::pso::graphics::DepthBias::slope_factor","value":"f32","parent":{"krate":0,"index":17352},"children":[],"decl_id":null,"docs":" A constant bias applied to the fragment's slope.\n","sig":null,"attributes":[{"value":"/ A constant bias applied to the fragment's slope.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":222838,"byte_end":222890,"line_start":196,"line_end":196,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":17418},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":223061,"byte_end":223071,"line_start":203,"line_end":203,"column_start":12,"column_end":22},"name":"Rasterizer","qualname":"::pso::graphics::Rasterizer","value":"Rasterizer { polygon_mode, cull_face, front_face, depth_clamping, depth_bias, conservative }","parent":null,"children":[{"krate":0,"index":17419},{"krate":0,"index":17420},{"krate":0,"index":17421},{"krate":0,"index":17422},{"krate":0,"index":17423},{"krate":0,"index":17424}],"decl_id":null,"docs":" Rasterization state.\n","sig":null,"attributes":[{"value":"/ Rasterization state.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":222921,"byte_end":222945,"line_start":200,"line_end":200,"column_start":1,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":17419},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":223123,"byte_end":223135,"line_start":205,"line_end":205,"column_start":9,"column_end":21},"name":"polygon_mode","qualname":"::pso::graphics::Rasterizer::polygon_mode","value":"pso::graphics::PolygonMode","parent":{"krate":0,"index":17418},"children":[],"decl_id":null,"docs":" How to rasterize this primitive.\n","sig":null,"attributes":[{"value":"/ How to rasterize this primitive.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":223078,"byte_end":223114,"line_start":204,"line_end":204,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":17420},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":223195,"byte_end":223204,"line_start":207,"line_end":207,"column_start":9,"column_end":18},"name":"cull_face","qualname":"::pso::graphics::Rasterizer::cull_face","value":"pso::output_merger::Face","parent":{"krate":0,"index":17418},"children":[],"decl_id":null,"docs":" Which face should be culled.\n","sig":null,"attributes":[{"value":"/ Which face should be culled.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":223154,"byte_end":223186,"line_start":206,"line_end":206,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":17421},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":223297,"byte_end":223307,"line_start":209,"line_end":209,"column_start":9,"column_end":19},"name":"front_face","qualname":"::pso::graphics::Rasterizer::front_face","value":"pso::graphics::FrontFace","parent":{"krate":0,"index":17418},"children":[],"decl_id":null,"docs":" Which vertex winding is considered to be the front face for culling.\n","sig":null,"attributes":[{"value":"/ Which vertex winding is considered to be the front face for culling.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":223216,"byte_end":223288,"line_start":208,"line_end":208,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":17422},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":223539,"byte_end":223553,"line_start":213,"line_end":213,"column_start":9,"column_end":23},"name":"depth_clamping","qualname":"::pso::graphics::Rasterizer::depth_clamping","value":"bool","parent":{"krate":0,"index":17418},"children":[],"decl_id":null,"docs":" Whether or not to enable depth clamping; when enabled, instead of\n fragments being omitted when they are outside the bounds of the z-plane,\n they will be clamped to the min or max z value.\n","sig":null,"attributes":[{"value":"/ Whether or not to enable depth clamping; when enabled, instead of","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":223324,"byte_end":223393,"line_start":210,"line_end":210,"column_start":5,"column_end":74}},{"value":"/ fragments being omitted when they are outside the bounds of the z-plane,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":223398,"byte_end":223474,"line_start":211,"line_end":211,"column_start":5,"column_end":81}},{"value":"/ they will be clamped to the min or max z value.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":223479,"byte_end":223530,"line_start":212,"line_end":212,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":17423},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":223635,"byte_end":223645,"line_start":215,"line_end":215,"column_start":9,"column_end":19},"name":"depth_bias","qualname":"::pso::graphics::Rasterizer::depth_bias","value":"std::option::Option<pso::State<pso::graphics::DepthBias>>","parent":{"krate":0,"index":17418},"children":[],"decl_id":null,"docs":" What depth bias, if any, to use for the drawn primitives.\n","sig":null,"attributes":[{"value":"/ What depth bias, if any, to use for the drawn primitives.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":223565,"byte_end":223626,"line_start":214,"line_end":214,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":17424},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":223771,"byte_end":223783,"line_start":217,"line_end":217,"column_start":9,"column_end":21},"name":"conservative","qualname":"::pso::graphics::Rasterizer::conservative","value":"bool","parent":{"krate":0,"index":17418},"children":[],"decl_id":null,"docs":" Controls how triangles will be rasterized depending on their overlap with pixels.\n","sig":null,"attributes":[{"value":"/ Controls how triangles will be rasterized depending on their overlap with pixels.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":223677,"byte_end":223762,"line_start":216,"line_end":216,"column_start":5,"column_end":90}}]},{"kind":"Const","id":{"krate":0,"index":1072},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":223874,"byte_end":223878,"line_start":222,"line_end":222,"column_start":15,"column_end":19},"name":"FILL","qualname":"::pso::graphics::Rasterizer::FILL","value":"Self","parent":{"krate":0,"index":1071},"children":[],"decl_id":null,"docs":" Simple polygon-filling rasterizer state\n","sig":null,"attributes":[{"value":"/ Simple polygon-filling rasterizer state","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":223816,"byte_end":223859,"line_start":221,"line_end":221,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":17491},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":224321,"byte_end":224330,"line_start":235,"line_end":235,"column_start":12,"column_end":21},"name":"BlendDesc","qualname":"::pso::graphics::BlendDesc","value":"BlendDesc { logic_op, targets }","parent":null,"children":[{"krate":0,"index":17492},{"krate":0,"index":17493}],"decl_id":null,"docs":" A description of an equation for how to blend transparent, overlapping fragments.\n","sig":null,"attributes":[{"value":"/ A description of an equation for how to blend transparent, overlapping fragments.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":224117,"byte_end":224202,"line_start":232,"line_end":232,"column_start":1,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":17492},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":224412,"byte_end":224420,"line_start":237,"line_end":237,"column_start":9,"column_end":17},"name":"logic_op","qualname":"::pso::graphics::BlendDesc::logic_op","value":"std::option::Option<pso::graphics::LogicOp>","parent":{"krate":0,"index":17491},"children":[],"decl_id":null,"docs":" The logic operation to apply to the blending equation, if any.\n","sig":null,"attributes":[{"value":"/ The logic operation to apply to the blending equation, if any.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":224337,"byte_end":224403,"line_start":236,"line_end":236,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":17493},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":224511,"byte_end":224518,"line_start":239,"line_end":239,"column_start":9,"column_end":16},"name":"targets","qualname":"::pso::graphics::BlendDesc::targets","value":"std::vec::Vec<pso::output_merger::ColorBlendDesc>","parent":{"krate":0,"index":17491},"children":[],"decl_id":null,"docs":" Which color targets to apply the blending operation to.\n","sig":null,"attributes":[{"value":"/ Which color targets to apply the blending operation to.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":224443,"byte_end":224502,"line_start":238,"line_end":238,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":17554},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":224750,"byte_end":224755,"line_start":247,"line_end":247,"column_start":5,"column_end":10},"name":"Clear","qualname":"::pso::graphics::LogicOp::Clear","value":"LogicOp::Clear","parent":{"krate":0,"index":17553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17557},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":224765,"byte_end":224768,"line_start":248,"line_end":248,"column_start":5,"column_end":8},"name":"And","qualname":"::pso::graphics::LogicOp::And","value":"LogicOp::And","parent":{"krate":0,"index":17553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17560},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":224778,"byte_end":224788,"line_start":249,"line_end":249,"column_start":5,"column_end":15},"name":"AndReverse","qualname":"::pso::graphics::LogicOp::AndReverse","value":"LogicOp::AndReverse","parent":{"krate":0,"index":17553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17563},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":224798,"byte_end":224802,"line_start":250,"line_end":250,"column_start":5,"column_end":9},"name":"Copy","qualname":"::pso::graphics::LogicOp::Copy","value":"LogicOp::Copy","parent":{"krate":0,"index":17553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17566},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":224812,"byte_end":224823,"line_start":251,"line_end":251,"column_start":5,"column_end":16},"name":"AndInverted","qualname":"::pso::graphics::LogicOp::AndInverted","value":"LogicOp::AndInverted","parent":{"krate":0,"index":17553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17569},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":224833,"byte_end":224837,"line_start":252,"line_end":252,"column_start":5,"column_end":9},"name":"NoOp","qualname":"::pso::graphics::LogicOp::NoOp","value":"LogicOp::NoOp","parent":{"krate":0,"index":17553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17572},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":224847,"byte_end":224850,"line_start":253,"line_end":253,"column_start":5,"column_end":8},"name":"Xor","qualname":"::pso::graphics::LogicOp::Xor","value":"LogicOp::Xor","parent":{"krate":0,"index":17553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17575},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":224860,"byte_end":224862,"line_start":254,"line_end":254,"column_start":5,"column_end":7},"name":"Or","qualname":"::pso::graphics::LogicOp::Or","value":"LogicOp::Or","parent":{"krate":0,"index":17553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17578},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":224872,"byte_end":224875,"line_start":255,"line_end":255,"column_start":5,"column_end":8},"name":"Nor","qualname":"::pso::graphics::LogicOp::Nor","value":"LogicOp::Nor","parent":{"krate":0,"index":17553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17581},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":224885,"byte_end":224895,"line_start":256,"line_end":256,"column_start":5,"column_end":15},"name":"Equivalent","qualname":"::pso::graphics::LogicOp::Equivalent","value":"LogicOp::Equivalent","parent":{"krate":0,"index":17553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17584},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":224905,"byte_end":224911,"line_start":257,"line_end":257,"column_start":5,"column_end":11},"name":"Invert","qualname":"::pso::graphics::LogicOp::Invert","value":"LogicOp::Invert","parent":{"krate":0,"index":17553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17587},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":224922,"byte_end":224931,"line_start":258,"line_end":258,"column_start":5,"column_end":14},"name":"OrReverse","qualname":"::pso::graphics::LogicOp::OrReverse","value":"LogicOp::OrReverse","parent":{"krate":0,"index":17553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17590},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":224942,"byte_end":224954,"line_start":259,"line_end":259,"column_start":5,"column_end":17},"name":"CopyInverted","qualname":"::pso::graphics::LogicOp::CopyInverted","value":"LogicOp::CopyInverted","parent":{"krate":0,"index":17553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17593},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":224965,"byte_end":224975,"line_start":260,"line_end":260,"column_start":5,"column_end":15},"name":"OrInverted","qualname":"::pso::graphics::LogicOp::OrInverted","value":"LogicOp::OrInverted","parent":{"krate":0,"index":17553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17596},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":224986,"byte_end":224990,"line_start":261,"line_end":261,"column_start":5,"column_end":9},"name":"Nand","qualname":"::pso::graphics::LogicOp::Nand","value":"LogicOp::Nand","parent":{"krate":0,"index":17553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":17599},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":225001,"byte_end":225004,"line_start":262,"line_end":262,"column_start":5,"column_end":8},"name":"Set","qualname":"::pso::graphics::LogicOp::Set","value":"LogicOp::Set","parent":{"krate":0,"index":17553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":17553},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":224736,"byte_end":224743,"line_start":246,"line_end":246,"column_start":10,"column_end":17},"name":"LogicOp","qualname":"::pso::graphics::LogicOp","value":"pub enum LogicOp {\n    Clear = ,\n    And = ,\n    AndReverse = ,\n    Copy = ,\n    AndInverted = ,\n    NoOp = ,\n    Xor = ,\n    Or = ,\n    Nor = ,\n    Equivalent = ,\n    Invert = ,\n    OrReverse = ,\n    CopyInverted = ,\n    OrInverted = ,\n    Nand = ,\n    Set = ,\n}","parent":null,"children":[{"krate":0,"index":17554},{"krate":0,"index":17557},{"krate":0,"index":17560},{"krate":0,"index":17563},{"krate":0,"index":17566},{"krate":0,"index":17569},{"krate":0,"index":17572},{"krate":0,"index":17575},{"krate":0,"index":17578},{"krate":0,"index":17581},{"krate":0,"index":17584},{"krate":0,"index":17587},{"krate":0,"index":17590},{"krate":0,"index":17593},{"krate":0,"index":17596},{"krate":0,"index":17599}],"decl_id":null,"docs":" Logic operations used for specifying blend equations.\n","sig":null,"attributes":[{"value":"/ Logic operations used for specifying blend equations.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":224544,"byte_end":224601,"line_start":242,"line_end":242,"column_start":1,"column_end":58}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":224704,"byte_end":224726,"line_start":245,"line_end":245,"column_start":1,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":1073},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":225027,"byte_end":225037,"line_start":266,"line_end":266,"column_start":10,"column_end":20},"name":"SampleMask","qualname":"::pso::graphics::SampleMask","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":225014,"byte_end":225017,"line_start":265,"line_end":265,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":17685},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":225096,"byte_end":225109,"line_start":270,"line_end":270,"column_start":12,"column_end":25},"name":"Multisampling","qualname":"::pso::graphics::Multisampling","value":"Multisampling { rasterization_samples, sample_shading, sample_mask, alpha_coverage, alpha_to_one }","parent":null,"children":[{"krate":0,"index":17686},{"krate":0,"index":17687},{"krate":0,"index":17688},{"krate":0,"index":17689},{"krate":0,"index":17690}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":225046,"byte_end":225049,"line_start":268,"line_end":268,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":17686},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":225128,"byte_end":225149,"line_start":272,"line_end":272,"column_start":9,"column_end":30},"name":"rasterization_samples","qualname":"::pso::graphics::Multisampling::rasterization_samples","value":"u8","parent":{"krate":0,"index":17685},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":225116,"byte_end":225119,"line_start":271,"line_end":271,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":17687},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":225186,"byte_end":225200,"line_start":274,"line_end":274,"column_start":9,"column_end":23},"name":"sample_shading","qualname":"::pso::graphics::Multisampling::sample_shading","value":"std::option::Option<f32>","parent":{"krate":0,"index":17685},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":225174,"byte_end":225177,"line_start":273,"line_end":273,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":17688},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":225231,"byte_end":225242,"line_start":276,"line_end":276,"column_start":9,"column_end":20},"name":"sample_mask","qualname":"::pso::graphics::Multisampling::sample_mask","value":"u64","parent":{"krate":0,"index":17685},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":225219,"byte_end":225222,"line_start":275,"line_end":275,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":17689},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":225552,"byte_end":225566,"line_start":280,"line_end":280,"column_start":9,"column_end":23},"name":"alpha_coverage","qualname":"::pso::graphics::Multisampling::alpha_coverage","value":"bool","parent":{"krate":0,"index":17685},"children":[],"decl_id":null,"docs":" Toggles alpha-to-coverage multisampling, which can produce nicer edges\n when many partially-transparent polygons are overlapping.\n See [here]( https://msdn.microsoft.com/en-us/library/windows/desktop/bb205072(v=vs.85).aspx#Alpha_To_Coverage) for a full description.\n","sig":null,"attributes":[{"value":"/ Toggles alpha-to-coverage multisampling, which can produce nicer edges","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":225260,"byte_end":225334,"line_start":277,"line_end":277,"column_start":5,"column_end":79}},{"value":"/ when many partially-transparent polygons are overlapping.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":225339,"byte_end":225400,"line_start":278,"line_end":278,"column_start":5,"column_end":66}},{"value":"/ See [here]( https://msdn.microsoft.com/en-us/library/windows/desktop/bb205072(v=vs.85).aspx#Alpha_To_Coverage) for a full description.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":225405,"byte_end":225543,"line_start":279,"line_end":279,"column_start":5,"column_end":143}}]},{"kind":"Field","id":{"krate":0,"index":17690},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":225590,"byte_end":225602,"line_start":282,"line_end":282,"column_start":9,"column_end":21},"name":"alpha_to_one","qualname":"::pso::graphics::Multisampling::alpha_to_one","value":"bool","parent":{"krate":0,"index":17685},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":225578,"byte_end":225581,"line_start":281,"line_end":281,"column_start":5,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":1077},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":225798,"byte_end":225806,"line_start":8,"line_end":8,"column_start":10,"column_end":18},"name":"Location","qualname":"::pso::input_assembler::Location","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Shader binding location.\n","sig":null,"attributes":[{"value":"/ Shader binding location.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":225760,"byte_end":225788,"line_start":7,"line_end":7,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":1078},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":225853,"byte_end":225864,"line_start":10,"line_end":10,"column_start":10,"column_end":21},"name":"BufferIndex","qualname":"::pso::input_assembler::BufferIndex","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Index of a vertex buffer.\n","sig":null,"attributes":[{"value":"/ Index of a vertex buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":225814,"byte_end":225843,"line_start":9,"line_end":9,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1079},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":225947,"byte_end":225957,"line_start":12,"line_end":12,"column_start":10,"column_end":20},"name":"ElemOffset","qualname":"::pso::input_assembler::ElemOffset","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Offset of an attribute from the start of the buffer, in bytes\n","sig":null,"attributes":[{"value":"/ Offset of an attribute from the start of the buffer, in bytes","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":225872,"byte_end":225937,"line_start":11,"line_end":11,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":1080},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":226020,"byte_end":226030,"line_start":14,"line_end":14,"column_start":10,"column_end":20},"name":"ElemStride","qualname":"::pso::input_assembler::ElemStride","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Offset between attribute values, in bytes\n","sig":null,"attributes":[{"value":"/ Offset between attribute values, in bytes","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":225965,"byte_end":226010,"line_start":13,"line_end":13,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":1081},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":226118,"byte_end":226130,"line_start":16,"line_end":16,"column_start":10,"column_end":22},"name":"InstanceRate","qualname":"::pso::input_assembler::InstanceRate","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Number of instances between each advancement of the vertex buffer.\n","sig":null,"attributes":[{"value":"/ Number of instances between each advancement of the vertex buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":226038,"byte_end":226108,"line_start":15,"line_end":15,"column_start":1,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":17700},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":226422,"byte_end":226428,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Vertex","qualname":"::pso::input_assembler::VertexInputRate::Vertex","value":"VertexInputRate::Vertex","parent":{"krate":0,"index":17699},"children":[],"decl_id":null,"docs":" Advance the buffer after every vertex\n","sig":null,"attributes":[{"value":"/ Advance the buffer after every vertex","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":226376,"byte_end":226417,"line_start":22,"line_end":22,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":17702},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":226482,"byte_end":226490,"line_start":25,"line_end":25,"column_start":5,"column_end":13},"name":"Instance","qualname":"::pso::input_assembler::VertexInputRate::Instance","value":"VertexInputRate::Instance(InstanceRate)","parent":{"krate":0,"index":17699},"children":[],"decl_id":null,"docs":" Advance the buffer after every instance\n","sig":null,"attributes":[{"value":"/ Advance the buffer after every instance","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":226434,"byte_end":226477,"line_start":24,"line_end":24,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":17699},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":226354,"byte_end":226369,"line_start":21,"line_end":21,"column_start":10,"column_end":25},"name":"VertexInputRate","qualname":"::pso::input_assembler::VertexInputRate","value":"pub enum VertexInputRate {\n\n    /// Advance the buffer after every vertex\n    Vertex,\n\n    /// Advance the buffer after every instance\n    Instance(InstanceRate),\n}","parent":null,"children":[{"krate":0,"index":17700},{"krate":0,"index":17702}],"decl_id":null,"docs":" The rate at which to advance input data to shaders for the given buffer\n","sig":null,"attributes":[{"value":"/ The rate at which to advance input data to shaders for the given buffer","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":226138,"byte_end":226213,"line_start":18,"line_end":18,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":226594,"byte_end":226601,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"as_uint","qualname":"<VertexInputRate>::as_uint","value":"pub fn as_uint(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the numeric representation of the rate\n","sig":null,"attributes":[{"value":"/ Get the numeric representation of the rate","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":226536,"byte_end":226582,"line_start":29,"line_end":29,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":17773},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":226934,"byte_end":226941,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"Element","qualname":"::pso::input_assembler::Element","value":"Element { format, offset }","parent":null,"children":[{"krate":0,"index":17775},{"krate":0,"index":17776}],"decl_id":null,"docs":" A struct element descriptor.\n","sig":null,"attributes":[{"value":"/ A struct element descriptor.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":226759,"byte_end":226791,"line_start":38,"line_end":38,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":17775},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":226978,"byte_end":226984,"line_start":43,"line_end":43,"column_start":9,"column_end":15},"name":"format","qualname":"::pso::input_assembler::Element::format","value":"F","parent":{"krate":0,"index":17773},"children":[],"decl_id":null,"docs":" Element format\n","sig":null,"attributes":[{"value":"/ Element format","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":226951,"byte_end":226969,"line_start":42,"line_end":42,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":17776},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":227058,"byte_end":227064,"line_start":45,"line_end":45,"column_start":9,"column_end":15},"name":"offset","qualname":"::pso::input_assembler::Element::offset","value":"u32","parent":{"krate":0,"index":17773},"children":[],"decl_id":null,"docs":" Offset from the beginning of the container, in bytes\n","sig":null,"attributes":[{"value":"/ Offset from the beginning of the container, in bytes","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":226993,"byte_end":227049,"line_start":44,"line_end":44,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":17867},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":227341,"byte_end":227357,"line_start":52,"line_end":52,"column_start":12,"column_end":28},"name":"VertexBufferDesc","qualname":"::pso::input_assembler::VertexBufferDesc","value":"VertexBufferDesc { binding, stride, rate }","parent":null,"children":[{"krate":0,"index":17868},{"krate":0,"index":17869},{"krate":0,"index":17870}],"decl_id":null,"docs":" Vertex buffer description. Notably, completely separate from resource `Descriptor`s\n used in `DescriptorSet`s.\n","sig":null,"attributes":[{"value":"/ Vertex buffer description. Notably, completely separate from resource `Descriptor`s","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":227081,"byte_end":227168,"line_start":48,"line_end":48,"column_start":1,"column_end":88}},{"value":"/ used in `DescriptorSet`s.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":227169,"byte_end":227198,"line_start":49,"line_end":49,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":17868},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":227561,"byte_end":227568,"line_start":56,"line_end":56,"column_start":9,"column_end":16},"name":"binding","qualname":"::pso::input_assembler::VertexBufferDesc::binding","value":"u32","parent":{"krate":0,"index":17867},"children":[],"decl_id":null,"docs":" Binding number of this vertex buffer. This binding number is\n used only for vertex buffers, and is completely separate from\n `Descriptor` and `DescriptorSet` bind points.\n","sig":null,"attributes":[{"value":"/ Binding number of this vertex buffer. This binding number is","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":227364,"byte_end":227428,"line_start":53,"line_end":53,"column_start":5,"column_end":69}},{"value":"/ used only for vertex buffers, and is completely separate from","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":227433,"byte_end":227498,"line_start":54,"line_end":54,"column_start":5,"column_end":70}},{"value":"/ `Descriptor` and `DescriptorSet` bind points.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":227503,"byte_end":227552,"line_start":55,"line_end":55,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":17869},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":227701,"byte_end":227707,"line_start":59,"line_end":59,"column_start":9,"column_end":15},"name":"stride","qualname":"::pso::input_assembler::VertexBufferDesc::stride","value":"u32","parent":{"krate":0,"index":17867},"children":[],"decl_id":null,"docs":" Total container size, in bytes.\n Specifies the byte distance between two consecutive elements.\n","sig":null,"attributes":[{"value":"/ Total container size, in bytes.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":227587,"byte_end":227622,"line_start":57,"line_end":57,"column_start":5,"column_end":40}},{"value":"/ Specifies the byte distance between two consecutive elements.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":227627,"byte_end":227692,"line_start":58,"line_end":58,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":17870},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":227898,"byte_end":227902,"line_start":64,"line_end":64,"column_start":9,"column_end":13},"name":"rate","qualname":"::pso::input_assembler::VertexBufferDesc::rate","value":"pso::input_assembler::VertexInputRate","parent":{"krate":0,"index":17867},"children":[],"decl_id":null,"docs":" The rate at which to advance data for the given buffer","sig":null,"attributes":[{"value":"/ The rate at which to advance data for the given buffer","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":227725,"byte_end":227783,"line_start":60,"line_end":60,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":227788,"byte_end":227791,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ i.e. the rate at which data passed to shaders will get advanced by","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":227796,"byte_end":227866,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ `stride` bytes","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":227871,"byte_end":227889,"line_start":63,"line_end":63,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":17953},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":228187,"byte_end":228200,"line_start":71,"line_end":71,"column_start":12,"column_end":25},"name":"AttributeDesc","qualname":"::pso::input_assembler::AttributeDesc","value":"AttributeDesc { location, binding, element }","parent":null,"children":[{"krate":0,"index":17954},{"krate":0,"index":17955},{"krate":0,"index":17956}],"decl_id":null,"docs":" Vertex attribute description. Notably, completely separate from resource `Descriptor`s\n used in `DescriptorSet`s.\n","sig":null,"attributes":[{"value":"/ Vertex attribute description. Notably, completely separate from resource `Descriptor`s","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":227924,"byte_end":228014,"line_start":67,"line_end":67,"column_start":1,"column_end":91}},{"value":"/ used in `DescriptorSet`s.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":228015,"byte_end":228044,"line_start":68,"line_end":68,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":17954},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":228509,"byte_end":228517,"line_start":76,"line_end":76,"column_start":9,"column_end":17},"name":"location","qualname":"::pso::input_assembler::AttributeDesc::location","value":"u32","parent":{"krate":0,"index":17953},"children":[],"decl_id":null,"docs":" Attribute binding location in the shader. Attribute locations are\n shared between all vertex buffers in a pipeline, meaning that even if the\n data for this attribute comes from a different vertex buffer, it still cannot\n share the same location with another attribute.\n","sig":null,"attributes":[{"value":"/ Attribute binding location in the shader. Attribute locations are","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":228207,"byte_end":228276,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/ shared between all vertex buffers in a pipeline, meaning that even if the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":228281,"byte_end":228358,"line_start":73,"line_end":73,"column_start":5,"column_end":82}},{"value":"/ data for this attribute comes from a different vertex buffer, it still cannot","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":228363,"byte_end":228444,"line_start":74,"line_end":74,"column_start":5,"column_end":86}},{"value":"/ share the same location with another attribute.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":228449,"byte_end":228500,"line_start":75,"line_end":75,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":17955},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":228593,"byte_end":228600,"line_start":78,"line_end":78,"column_start":9,"column_end":16},"name":"binding","qualname":"::pso::input_assembler::AttributeDesc::binding","value":"u32","parent":{"krate":0,"index":17953},"children":[],"decl_id":null,"docs":" Binding number of the associated vertex buffer.\n","sig":null,"attributes":[{"value":"/ Binding number of the associated vertex buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":228533,"byte_end":228584,"line_start":77,"line_end":77,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":17956},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":228662,"byte_end":228669,"line_start":80,"line_end":80,"column_start":9,"column_end":16},"name":"element","qualname":"::pso::input_assembler::AttributeDesc::element","value":"pso::input_assembler::Element<format::Format>","parent":{"krate":0,"index":17953},"children":[],"decl_id":null,"docs":" Attribute element description.\n","sig":null,"attributes":[{"value":"/ Attribute element description.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":228619,"byte_end":228653,"line_start":79,"line_end":79,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":18040},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":229234,"byte_end":229242,"line_start":94,"line_end":94,"column_start":5,"column_end":13},"name":"Disabled","qualname":"::pso::input_assembler::PrimitiveRestart::Disabled","value":"PrimitiveRestart::Disabled","parent":{"krate":0,"index":18039},"children":[],"decl_id":null,"docs":" No primitive restart.\n","sig":null,"attributes":[{"value":"/ No primitive restart.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":229204,"byte_end":229229,"line_start":93,"line_end":93,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":18042},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":229320,"byte_end":229323,"line_start":96,"line_end":96,"column_start":5,"column_end":8},"name":"U16","qualname":"::pso::input_assembler::PrimitiveRestart::U16","value":"PrimitiveRestart::U16","parent":{"krate":0,"index":18039},"children":[],"decl_id":null,"docs":" Primitive restart using a 16-bit index value (`std::u16::MAX`).\n","sig":null,"attributes":[{"value":"/ Primitive restart using a 16-bit index value (`std::u16::MAX`).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":229248,"byte_end":229315,"line_start":95,"line_end":95,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":18044},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":229400,"byte_end":229403,"line_start":98,"line_end":98,"column_start":5,"column_end":8},"name":"U32","qualname":"::pso::input_assembler::PrimitiveRestart::U32","value":"PrimitiveRestart::U32","parent":{"krate":0,"index":18039},"children":[],"decl_id":null,"docs":" Primitive restart using a 32-bit index value (`std::u32::MAX`)\n","sig":null,"attributes":[{"value":"/ Primitive restart using a 32-bit index value (`std::u32::MAX`)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":229329,"byte_end":229395,"line_start":97,"line_end":97,"column_start":5,"column_end":71}}]},{"kind":"Enum","id":{"krate":0,"index":18039},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":229181,"byte_end":229197,"line_start":92,"line_end":92,"column_start":10,"column_end":26},"name":"PrimitiveRestart","qualname":"::pso::input_assembler::PrimitiveRestart","value":"pub enum PrimitiveRestart {\n\n    /// No primitive restart.\n    Disabled,\n\n    /// Primitive restart using a 16-bit index value (`std::u16::MAX`).\n    U16,\n\n    /// Primitive restart using a 32-bit index value (`std::u32::MAX`)\n    U32,\n}","parent":null,"children":[{"krate":0,"index":18040},{"krate":0,"index":18042},{"krate":0,"index":18044}],"decl_id":null,"docs":" Describes whether or not primitive restart is supported for\n an input assembler. Primitive restart is a feature that\n allows a mark to be placed in an index buffer where it is\n is \"broken\" into multiple pieces of geometry.","sig":null,"attributes":[{"value":"/ Describes whether or not primitive restart is supported for","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":228699,"byte_end":228762,"line_start":83,"line_end":83,"column_start":1,"column_end":64}},{"value":"/ an input assembler. Primitive restart is a feature that","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":228763,"byte_end":228822,"line_start":84,"line_end":84,"column_start":1,"column_end":60}},{"value":"/ allows a mark to be placed in an index buffer where it is","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":228823,"byte_end":228884,"line_start":85,"line_end":85,"column_start":1,"column_end":62}},{"value":"/ is \"broken\" into multiple pieces of geometry.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":228885,"byte_end":228934,"line_start":86,"line_end":86,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":228935,"byte_end":228938,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ See <https://www.khronos.org/opengl/wiki/Vertex_Rendering#Primitive_Restart>","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":228939,"byte_end":229019,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ for more detail.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":229020,"byte_end":229040,"line_start":89,"line_end":89,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":18111},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":229599,"byte_end":229617,"line_start":104,"line_end":104,"column_start":12,"column_end":30},"name":"InputAssemblerDesc","qualname":"::pso::input_assembler::InputAssemblerDesc","value":"InputAssemblerDesc { primitive, primitive_restart }","parent":null,"children":[{"krate":0,"index":18112},{"krate":0,"index":18113}],"decl_id":null,"docs":" All the information needed to create an input assembler.\n","sig":null,"attributes":[{"value":"/ All the information needed to create an input assembler.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":229408,"byte_end":229468,"line_start":101,"line_end":101,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":18112},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":229658,"byte_end":229667,"line_start":106,"line_end":106,"column_start":9,"column_end":18},"name":"primitive","qualname":"::pso::input_assembler::InputAssemblerDesc::primitive","value":"Primitive","parent":{"krate":0,"index":18111},"children":[],"decl_id":null,"docs":" Type of the primitive\n","sig":null,"attributes":[{"value":"/ Type of the primitive","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":229624,"byte_end":229649,"line_start":105,"line_end":105,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":18113},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":229733,"byte_end":229750,"line_start":108,"line_end":108,"column_start":9,"column_end":26},"name":"primitive_restart","qualname":"::pso::input_assembler::InputAssemblerDesc::primitive_restart","value":"pso::input_assembler::PrimitiveRestart","parent":{"krate":0,"index":18111},"children":[],"decl_id":null,"docs":" The primitive restart specification.\n","sig":null,"attributes":[{"value":"/ The primitive restart specification.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":229684,"byte_end":229724,"line_start":107,"line_end":107,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":229871,"byte_end":229874,"line_start":113,"line_end":113,"column_start":12,"column_end":15},"name":"new","qualname":"<InputAssemblerDesc>::new","value":"pub fn new(Primitive) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new IA descriptor without primitive restart\n","sig":null,"attributes":[{"value":"/ Create a new IA descriptor without primitive restart","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":229803,"byte_end":229859,"line_start":112,"line_end":112,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":18187},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":230472,"byte_end":230477,"line_start":13,"line_end":13,"column_start":5,"column_end":10},"name":"Never","qualname":"::pso::output_merger::Comparison::Never","value":"Comparison::Never","parent":{"krate":0,"index":18186},"children":[],"decl_id":null,"docs":" `false`\n","sig":null,"attributes":[{"value":"/ `false`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":230456,"byte_end":230467,"line_start":12,"line_end":12,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":18190},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":230503,"byte_end":230507,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Less","qualname":"::pso::output_merger::Comparison::Less","value":"Comparison::Less","parent":{"krate":0,"index":18186},"children":[],"decl_id":null,"docs":" `x < y`\n","sig":null,"attributes":[{"value":"/ `x < y`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":230487,"byte_end":230498,"line_start":14,"line_end":14,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":18193},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":230534,"byte_end":230539,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Equal","qualname":"::pso::output_merger::Comparison::Equal","value":"Comparison::Equal","parent":{"krate":0,"index":18186},"children":[],"decl_id":null,"docs":" `x == y`\n","sig":null,"attributes":[{"value":"/ `x == y`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":230517,"byte_end":230529,"line_start":16,"line_end":16,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":18196},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":230566,"byte_end":230575,"line_start":19,"line_end":19,"column_start":5,"column_end":14},"name":"LessEqual","qualname":"::pso::output_merger::Comparison::LessEqual","value":"Comparison::LessEqual","parent":{"krate":0,"index":18186},"children":[],"decl_id":null,"docs":" `x <= y`\n","sig":null,"attributes":[{"value":"/ `x <= y`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":230549,"byte_end":230561,"line_start":18,"line_end":18,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":18199},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":230601,"byte_end":230608,"line_start":21,"line_end":21,"column_start":5,"column_end":12},"name":"Greater","qualname":"::pso::output_merger::Comparison::Greater","value":"Comparison::Greater","parent":{"krate":0,"index":18186},"children":[],"decl_id":null,"docs":" `x > y`\n","sig":null,"attributes":[{"value":"/ `x > y`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":230585,"byte_end":230596,"line_start":20,"line_end":20,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":18202},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":230635,"byte_end":230643,"line_start":23,"line_end":23,"column_start":5,"column_end":13},"name":"NotEqual","qualname":"::pso::output_merger::Comparison::NotEqual","value":"Comparison::NotEqual","parent":{"krate":0,"index":18186},"children":[],"decl_id":null,"docs":" `x != y`\n","sig":null,"attributes":[{"value":"/ `x != y`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":230618,"byte_end":230630,"line_start":22,"line_end":22,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":18205},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":230670,"byte_end":230682,"line_start":25,"line_end":25,"column_start":5,"column_end":17},"name":"GreaterEqual","qualname":"::pso::output_merger::Comparison::GreaterEqual","value":"Comparison::GreaterEqual","parent":{"krate":0,"index":18186},"children":[],"decl_id":null,"docs":" `x >= y`\n","sig":null,"attributes":[{"value":"/ `x >= y`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":230653,"byte_end":230665,"line_start":24,"line_end":24,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":18208},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":230707,"byte_end":230713,"line_start":27,"line_end":27,"column_start":5,"column_end":11},"name":"Always","qualname":"::pso::output_merger::Comparison::Always","value":"Comparison::Always","parent":{"krate":0,"index":18186},"children":[],"decl_id":null,"docs":" `true`\n","sig":null,"attributes":[{"value":"/ `true`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":230692,"byte_end":230702,"line_start":26,"line_end":26,"column_start":5,"column_end":15}}]},{"kind":"Enum","id":{"krate":0,"index":18186},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":230439,"byte_end":230449,"line_start":11,"line_end":11,"column_start":10,"column_end":20},"name":"Comparison","qualname":"::pso::output_merger::Comparison","value":"pub enum Comparison {\n\n    /// `false`\n    Never = ,\n\n    /// `x < y`\n    Less = ,\n\n    /// `x == y`\n    Equal = ,\n\n    /// `x <= y`\n    LessEqual = ,\n\n    /// `x > y`\n    Greater = ,\n\n    /// `x != y`\n    NotEqual = ,\n\n    /// `x >= y`\n    GreaterEqual = ,\n\n    /// `true`\n    Always = ,\n}","parent":null,"children":[{"krate":0,"index":18187},{"krate":0,"index":18190},{"krate":0,"index":18193},{"krate":0,"index":18196},{"krate":0,"index":18199},{"krate":0,"index":18202},{"krate":0,"index":18205},{"krate":0,"index":18208}],"decl_id":null,"docs":" A pixel-wise comparison function.\n","sig":null,"attributes":[{"value":"/ A pixel-wise comparison function.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":230261,"byte_end":230298,"line_start":8,"line_end":8,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":18286},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":230849,"byte_end":230858,"line_start":33,"line_end":33,"column_start":16,"column_end":25},"name":"ColorMask","qualname":"::pso::output_merger::ColorMask","value":"ColorMask {  }","parent":null,"children":[{"krate":0,"index":18287}],"decl_id":null,"docs":" Target output color mask.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":18376},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":230900,"byte_end":230903,"line_start":35,"line_end":35,"column_start":15,"column_end":18},"name":"RED","qualname":"::pso::output_merger::ColorMask::RED","value":"ColorMask","parent":{"krate":0,"index":18375},"children":[],"decl_id":null,"docs":" Red mask\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":18377},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":230952,"byte_end":230957,"line_start":37,"line_end":37,"column_start":15,"column_end":20},"name":"GREEN","qualname":"::pso::output_merger::ColorMask::GREEN","value":"ColorMask","parent":{"krate":0,"index":18375},"children":[],"decl_id":null,"docs":" Green mask\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":18378},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":231003,"byte_end":231007,"line_start":39,"line_end":39,"column_start":15,"column_end":19},"name":"BLUE","qualname":"::pso::output_merger::ColorMask::BLUE","value":"ColorMask","parent":{"krate":0,"index":18375},"children":[],"decl_id":null,"docs":" Blue mask\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":18379},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":231063,"byte_end":231068,"line_start":41,"line_end":41,"column_start":15,"column_end":20},"name":"ALPHA","qualname":"::pso::output_merger::ColorMask::ALPHA","value":"ColorMask","parent":{"krate":0,"index":18375},"children":[],"decl_id":null,"docs":" Alpha channel mask\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":18380},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":231126,"byte_end":231131,"line_start":43,"line_end":43,"column_start":15,"column_end":20},"name":"COLOR","qualname":"::pso::output_merger::ColorMask::COLOR","value":"ColorMask","parent":{"krate":0,"index":18375},"children":[],"decl_id":null,"docs":" Mask for RGB channels\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":18381},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":231185,"byte_end":231188,"line_start":45,"line_end":45,"column_start":15,"column_end":18},"name":"ALL","qualname":"::pso::output_merger::ColorMask::ALL","value":"ColorMask","parent":{"krate":0,"index":18375},"children":[],"decl_id":null,"docs":" Mask all channels\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":18382},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":231244,"byte_end":231248,"line_start":47,"line_end":47,"column_start":15,"column_end":19},"name":"NONE","qualname":"::pso::output_merger::ColorMask::NONE","value":"ColorMask","parent":{"krate":0,"index":18375},"children":[],"decl_id":null,"docs":" Mask no channels.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":18450},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":231690,"byte_end":231694,"line_start":64,"line_end":64,"column_start":5,"column_end":9},"name":"Zero","qualname":"::pso::output_merger::Factor::Zero","value":"Factor::Zero","parent":{"krate":0,"index":18449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":18453},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":231704,"byte_end":231707,"line_start":65,"line_end":65,"column_start":5,"column_end":8},"name":"One","qualname":"::pso::output_merger::Factor::One","value":"Factor::One","parent":{"krate":0,"index":18449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":18456},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":231717,"byte_end":231725,"line_start":66,"line_end":66,"column_start":5,"column_end":13},"name":"SrcColor","qualname":"::pso::output_merger::Factor::SrcColor","value":"Factor::SrcColor","parent":{"krate":0,"index":18449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":18459},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":231735,"byte_end":231751,"line_start":67,"line_end":67,"column_start":5,"column_end":21},"name":"OneMinusSrcColor","qualname":"::pso::output_merger::Factor::OneMinusSrcColor","value":"Factor::OneMinusSrcColor","parent":{"krate":0,"index":18449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":18462},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":231761,"byte_end":231769,"line_start":68,"line_end":68,"column_start":5,"column_end":13},"name":"DstColor","qualname":"::pso::output_merger::Factor::DstColor","value":"Factor::DstColor","parent":{"krate":0,"index":18449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":18465},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":231779,"byte_end":231795,"line_start":69,"line_end":69,"column_start":5,"column_end":21},"name":"OneMinusDstColor","qualname":"::pso::output_merger::Factor::OneMinusDstColor","value":"Factor::OneMinusDstColor","parent":{"krate":0,"index":18449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":18468},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":231805,"byte_end":231813,"line_start":70,"line_end":70,"column_start":5,"column_end":13},"name":"SrcAlpha","qualname":"::pso::output_merger::Factor::SrcAlpha","value":"Factor::SrcAlpha","parent":{"krate":0,"index":18449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":18471},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":231823,"byte_end":231839,"line_start":71,"line_end":71,"column_start":5,"column_end":21},"name":"OneMinusSrcAlpha","qualname":"::pso::output_merger::Factor::OneMinusSrcAlpha","value":"Factor::OneMinusSrcAlpha","parent":{"krate":0,"index":18449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":18474},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":231849,"byte_end":231857,"line_start":72,"line_end":72,"column_start":5,"column_end":13},"name":"DstAlpha","qualname":"::pso::output_merger::Factor::DstAlpha","value":"Factor::DstAlpha","parent":{"krate":0,"index":18449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":18477},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":231867,"byte_end":231883,"line_start":73,"line_end":73,"column_start":5,"column_end":21},"name":"OneMinusDstAlpha","qualname":"::pso::output_merger::Factor::OneMinusDstAlpha","value":"Factor::OneMinusDstAlpha","parent":{"krate":0,"index":18449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":18480},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":231893,"byte_end":231903,"line_start":74,"line_end":74,"column_start":5,"column_end":15},"name":"ConstColor","qualname":"::pso::output_merger::Factor::ConstColor","value":"Factor::ConstColor","parent":{"krate":0,"index":18449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":18483},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":231914,"byte_end":231932,"line_start":75,"line_end":75,"column_start":5,"column_end":23},"name":"OneMinusConstColor","qualname":"::pso::output_merger::Factor::OneMinusConstColor","value":"Factor::OneMinusConstColor","parent":{"krate":0,"index":18449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":18486},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":231943,"byte_end":231953,"line_start":76,"line_end":76,"column_start":5,"column_end":15},"name":"ConstAlpha","qualname":"::pso::output_merger::Factor::ConstAlpha","value":"Factor::ConstAlpha","parent":{"krate":0,"index":18449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":18489},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":231964,"byte_end":231982,"line_start":77,"line_end":77,"column_start":5,"column_end":23},"name":"OneMinusConstAlpha","qualname":"::pso::output_merger::Factor::OneMinusConstAlpha","value":"Factor::OneMinusConstAlpha","parent":{"krate":0,"index":18449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":18492},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":231993,"byte_end":232009,"line_start":78,"line_end":78,"column_start":5,"column_end":21},"name":"SrcAlphaSaturate","qualname":"::pso::output_merger::Factor::SrcAlphaSaturate","value":"Factor::SrcAlphaSaturate","parent":{"krate":0,"index":18449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":18495},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":232020,"byte_end":232029,"line_start":79,"line_end":79,"column_start":5,"column_end":14},"name":"Src1Color","qualname":"::pso::output_merger::Factor::Src1Color","value":"Factor::Src1Color","parent":{"krate":0,"index":18449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":18498},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":232040,"byte_end":232057,"line_start":80,"line_end":80,"column_start":5,"column_end":22},"name":"OneMinusSrc1Color","qualname":"::pso::output_merger::Factor::OneMinusSrc1Color","value":"Factor::OneMinusSrc1Color","parent":{"krate":0,"index":18449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":18501},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":232068,"byte_end":232077,"line_start":81,"line_end":81,"column_start":5,"column_end":14},"name":"Src1Alpha","qualname":"::pso::output_merger::Factor::Src1Alpha","value":"Factor::Src1Alpha","parent":{"krate":0,"index":18449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":18504},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":232088,"byte_end":232105,"line_start":82,"line_end":82,"column_start":5,"column_end":22},"name":"OneMinusSrc1Alpha","qualname":"::pso::output_merger::Factor::OneMinusSrc1Alpha","value":"Factor::OneMinusSrc1Alpha","parent":{"krate":0,"index":18449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":18449},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":231677,"byte_end":231683,"line_start":63,"line_end":63,"column_start":10,"column_end":16},"name":"Factor","qualname":"::pso::output_merger::Factor","value":"pub enum Factor {\n    Zero = ,\n    One = ,\n    SrcColor = ,\n    OneMinusSrcColor = ,\n    DstColor = ,\n    OneMinusDstColor = ,\n    SrcAlpha = ,\n    OneMinusSrcAlpha = ,\n    DstAlpha = ,\n    OneMinusDstAlpha = ,\n    ConstColor = ,\n    OneMinusConstColor = ,\n    ConstAlpha = ,\n    OneMinusConstAlpha = ,\n    SrcAlphaSaturate = ,\n    Src1Color = ,\n    OneMinusSrc1Color = ,\n    Src1Alpha = ,\n    OneMinusSrc1Alpha = ,\n}","parent":null,"children":[{"krate":0,"index":18450},{"krate":0,"index":18453},{"krate":0,"index":18456},{"krate":0,"index":18459},{"krate":0,"index":18462},{"krate":0,"index":18465},{"krate":0,"index":18468},{"krate":0,"index":18471},{"krate":0,"index":18474},{"krate":0,"index":18477},{"krate":0,"index":18480},{"krate":0,"index":18483},{"krate":0,"index":18486},{"krate":0,"index":18489},{"krate":0,"index":18492},{"krate":0,"index":18495},{"krate":0,"index":18498},{"krate":0,"index":18501},{"krate":0,"index":18504}],"decl_id":null,"docs":" Defines the possible blending factors.\n During blending, the source or destination fragment may be\n multiplied by a factor to produce the final result.\n","sig":null,"attributes":[{"value":"/ Defines the possible blending factors.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":231352,"byte_end":231394,"line_start":57,"line_end":57,"column_start":1,"column_end":43}},{"value":"/ During blending, the source or destination fragment may be","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":231395,"byte_end":231457,"line_start":58,"line_end":58,"column_start":1,"column_end":63}},{"value":"/ multiplied by a factor to produce the final result.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":231458,"byte_end":231513,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":231514,"byte_end":231536,"line_start":60,"line_end":60,"column_start":1,"column_end":23}}]},{"kind":"StructVariant","id":{"krate":0,"index":18605},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":232428,"byte_end":232431,"line_start":92,"line_end":92,"column_start":5,"column_end":8},"name":"Add","qualname":"::pso::output_merger::BlendOp::Add","value":"BlendOp::Add { src, dst }","parent":{"krate":0,"index":18604},"children":[],"decl_id":null,"docs":" Adds source and destination.\n Source and destination are multiplied by factors before addition.\n","sig":null,"attributes":[{"value":"/ Adds source and destination.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":232317,"byte_end":232349,"line_start":90,"line_end":90,"column_start":5,"column_end":37}},{"value":"/ Source and destination are multiplied by factors before addition.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":232354,"byte_end":232423,"line_start":91,"line_end":91,"column_start":5,"column_end":74}}]},{"kind":"StructVariant","id":{"krate":0,"index":18608},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":232586,"byte_end":232589,"line_start":95,"line_end":95,"column_start":5,"column_end":8},"name":"Sub","qualname":"::pso::output_merger::BlendOp::Sub","value":"BlendOp::Sub { src, dst }","parent":{"krate":0,"index":18604},"children":[],"decl_id":null,"docs":" Subtracts destination from source.\n Source and destination are multiplied by factors before subtraction.\n","sig":null,"attributes":[{"value":"/ Subtracts destination from source.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":232466,"byte_end":232504,"line_start":93,"line_end":93,"column_start":5,"column_end":43}},{"value":"/ Source and destination are multiplied by factors before subtraction.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":232509,"byte_end":232581,"line_start":94,"line_end":94,"column_start":5,"column_end":77}}]},{"kind":"StructVariant","id":{"krate":0,"index":18611},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":232744,"byte_end":232750,"line_start":98,"line_end":98,"column_start":5,"column_end":11},"name":"RevSub","qualname":"::pso::output_merger::BlendOp::RevSub","value":"BlendOp::RevSub { src, dst }","parent":{"krate":0,"index":18604},"children":[],"decl_id":null,"docs":" Subtracts source from destination.\n Source and destination are multiplied by factors before subtraction.\n","sig":null,"attributes":[{"value":"/ Subtracts source from destination.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":232624,"byte_end":232662,"line_start":96,"line_end":96,"column_start":5,"column_end":43}},{"value":"/ Source and destination are multiplied by factors before subtraction.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":232667,"byte_end":232739,"line_start":97,"line_end":97,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":18614},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":232849,"byte_end":232852,"line_start":100,"line_end":100,"column_start":5,"column_end":8},"name":"Min","qualname":"::pso::output_merger::BlendOp::Min","value":"BlendOp::Min","parent":{"krate":0,"index":18604},"children":[],"decl_id":null,"docs":" Component-wise minimum value of source and destination.\n","sig":null,"attributes":[{"value":"/ Component-wise minimum value of source and destination.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":232785,"byte_end":232844,"line_start":99,"line_end":99,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":18616},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":232922,"byte_end":232925,"line_start":102,"line_end":102,"column_start":5,"column_end":8},"name":"Max","qualname":"::pso::output_merger::BlendOp::Max","value":"BlendOp::Max","parent":{"krate":0,"index":18604},"children":[],"decl_id":null,"docs":" Component-wise maximum value of source and destination.\n","sig":null,"attributes":[{"value":"/ Component-wise maximum value of source and destination.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":232858,"byte_end":232917,"line_start":101,"line_end":101,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":18604},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":232303,"byte_end":232310,"line_start":89,"line_end":89,"column_start":10,"column_end":17},"name":"BlendOp","qualname":"::pso::output_merger::BlendOp","value":"pub enum BlendOp {\n\n    /// Adds source and destination.\n    /// Source and destination are multiplied by factors before addition.\n    Add {\n        src: Factor,\n        dst: Factor,\n    },\n\n    /// Subtracts destination from source.\n    /// Source and destination are multiplied by factors before subtraction.\n    Sub {\n        src: Factor,\n        dst: Factor,\n    },\n\n    /// Subtracts source from destination.\n    /// Source and destination are multiplied by factors before subtraction.\n    RevSub {\n        src: Factor,\n        dst: Factor,\n    },\n\n    /// Component-wise minimum value of source and destination.\n    Min,\n\n    /// Component-wise maximum value of source and destination.\n    Max,\n}","parent":null,"children":[{"krate":0,"index":18605},{"krate":0,"index":18608},{"krate":0,"index":18611},{"krate":0,"index":18614},{"krate":0,"index":18616}],"decl_id":null,"docs":" Blending operations.\n","sig":null,"attributes":[{"value":"/ Blending operations.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":232115,"byte_end":232139,"line_start":85,"line_end":85,"column_start":1,"column_end":25}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":232140,"byte_end":232162,"line_start":86,"line_end":86,"column_start":1,"column_end":23}}]},{"kind":"Const","id":{"krate":0,"index":1092},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":233014,"byte_end":233021,"line_start":107,"line_end":107,"column_start":15,"column_end":22},"name":"REPLACE","qualname":"::pso::output_merger::BlendOp::REPLACE","value":"Self","parent":{"krate":0,"index":1091},"children":[],"decl_id":null,"docs":" Replace the destination value with the source.\n","sig":null,"attributes":[{"value":"/ Replace the destination value with the source.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":232949,"byte_end":232999,"line_start":106,"line_end":106,"column_start":5,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":1093},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":233168,"byte_end":233171,"line_start":112,"line_end":112,"column_start":15,"column_end":18},"name":"ADD","qualname":"::pso::output_merger::BlendOp::ADD","value":"Self","parent":{"krate":0,"index":1091},"children":[],"decl_id":null,"docs":" Add the source and destination together.\n","sig":null,"attributes":[{"value":"/ Add the source and destination together.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":233109,"byte_end":233153,"line_start":111,"line_end":111,"column_start":5,"column_end":49}}]},{"kind":"Const","id":{"krate":0,"index":1094},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":233325,"byte_end":233330,"line_start":117,"line_end":117,"column_start":15,"column_end":20},"name":"ALPHA","qualname":"::pso::output_merger::BlendOp::ALPHA","value":"Self","parent":{"krate":0,"index":1091},"children":[],"decl_id":null,"docs":" Alpha blend the source and destination together.\n","sig":null,"attributes":[{"value":"/ Alpha blend the source and destination together.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":233258,"byte_end":233310,"line_start":116,"line_end":116,"column_start":5,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":1095},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":233516,"byte_end":233535,"line_start":122,"line_end":122,"column_start":15,"column_end":34},"name":"PREMULTIPLIED_ALPHA","qualname":"::pso::output_merger::BlendOp::PREMULTIPLIED_ALPHA","value":"Self","parent":{"krate":0,"index":1091},"children":[],"decl_id":null,"docs":" Alpha blend a premultiplied-alpha source with the destination.\n","sig":null,"attributes":[{"value":"/ Alpha blend a premultiplied-alpha source with the destination.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":233435,"byte_end":233501,"line_start":121,"line_end":121,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":18812},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":233867,"byte_end":233877,"line_start":132,"line_end":132,"column_start":12,"column_end":22},"name":"BlendState","qualname":"::pso::output_merger::BlendState","value":"BlendState { color, alpha }","parent":null,"children":[{"krate":0,"index":18813},{"krate":0,"index":18814}],"decl_id":null,"docs":" Specifies whether to use blending, and if so,\n which operations to use for color and alpha channels.\n","sig":null,"attributes":[{"value":"/ Specifies whether to use blending, and if so,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":233634,"byte_end":233683,"line_start":128,"line_end":128,"column_start":1,"column_end":50}},{"value":"/ which operations to use for color and alpha channels.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":233684,"byte_end":233741,"line_start":129,"line_end":129,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":18813},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":233947,"byte_end":233952,"line_start":134,"line_end":134,"column_start":9,"column_end":14},"name":"color","qualname":"::pso::output_merger::BlendState::color","value":"pso::output_merger::BlendOp","parent":{"krate":0,"index":18812},"children":[],"decl_id":null,"docs":" The blend operation to use for the color channels.\n","sig":null,"attributes":[{"value":"/ The blend operation to use for the color channels.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":233884,"byte_end":233938,"line_start":133,"line_end":133,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":18814},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":234029,"byte_end":234034,"line_start":136,"line_end":136,"column_start":9,"column_end":14},"name":"alpha","qualname":"::pso::output_merger::BlendState::alpha","value":"pso::output_merger::BlendOp","parent":{"krate":0,"index":18812},"children":[],"decl_id":null,"docs":" The blend operation to use for the alpha channel.\n","sig":null,"attributes":[{"value":"/ The blend operation to use for the alpha channel.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":233967,"byte_end":234020,"line_start":135,"line_end":135,"column_start":5,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":1097},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":234107,"byte_end":234114,"line_start":141,"line_end":141,"column_start":15,"column_end":22},"name":"REPLACE","qualname":"::pso::output_merger::BlendState::REPLACE","value":"Self","parent":{"krate":0,"index":1096},"children":[],"decl_id":null,"docs":" Replace the color.\n","sig":null,"attributes":[{"value":"/ Replace the color.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":234070,"byte_end":234092,"line_start":140,"line_end":140,"column_start":5,"column_end":27}}]},{"kind":"Const","id":{"krate":0,"index":1098},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":234250,"byte_end":234253,"line_start":146,"line_end":146,"column_start":15,"column_end":18},"name":"ADD","qualname":"::pso::output_merger::BlendState::ADD","value":"Self","parent":{"krate":0,"index":1096},"children":[],"decl_id":null,"docs":" Additive blending.\n","sig":null,"attributes":[{"value":"/ Additive blending.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":234213,"byte_end":234235,"line_start":145,"line_end":145,"column_start":5,"column_end":27}}]},{"kind":"Const","id":{"krate":0,"index":1099},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":234387,"byte_end":234395,"line_start":151,"line_end":151,"column_start":15,"column_end":23},"name":"MULTIPLY","qualname":"::pso::output_merger::BlendState::MULTIPLY","value":"Self","parent":{"krate":0,"index":1096},"children":[],"decl_id":null,"docs":" Multiplicative blending.\n","sig":null,"attributes":[{"value":"/ Multiplicative blending.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":234344,"byte_end":234372,"line_start":150,"line_end":150,"column_start":5,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":1100},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":234676,"byte_end":234681,"line_start":162,"line_end":162,"column_start":15,"column_end":20},"name":"ALPHA","qualname":"::pso::output_merger::BlendState::ALPHA","value":"Self","parent":{"krate":0,"index":1096},"children":[],"decl_id":null,"docs":" Alpha blending.\n","sig":null,"attributes":[{"value":"/ Alpha blending.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":234642,"byte_end":234661,"line_start":161,"line_end":161,"column_start":5,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":1101},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":234839,"byte_end":234858,"line_start":167,"line_end":167,"column_start":15,"column_end":34},"name":"PREMULTIPLIED_ALPHA","qualname":"::pso::output_merger::BlendState::PREMULTIPLIED_ALPHA","value":"Self","parent":{"krate":0,"index":1096},"children":[],"decl_id":null,"docs":" Pre-multiplied alpha blending.\n","sig":null,"attributes":[{"value":"/ Pre-multiplied alpha blending.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":234790,"byte_end":234824,"line_start":166,"line_end":166,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":18879},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":235147,"byte_end":235161,"line_start":176,"line_end":176,"column_start":12,"column_end":26},"name":"ColorBlendDesc","qualname":"::pso::output_merger::ColorBlendDesc","value":"ColorBlendDesc { mask, blend }","parent":null,"children":[{"krate":0,"index":18880},{"krate":0,"index":18881}],"decl_id":null,"docs":" PSO color target descriptor.\n","sig":null,"attributes":[{"value":"/ PSO color target descriptor.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":234980,"byte_end":235012,"line_start":173,"line_end":173,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":18880},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":235198,"byte_end":235202,"line_start":178,"line_end":178,"column_start":9,"column_end":13},"name":"mask","qualname":"::pso::output_merger::ColorBlendDesc::mask","value":"pso::output_merger::ColorMask","parent":{"krate":0,"index":18879},"children":[],"decl_id":null,"docs":" Color write mask.\n","sig":null,"attributes":[{"value":"/ Color write mask.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":235168,"byte_end":235189,"line_start":177,"line_end":177,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":18881},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":235256,"byte_end":235261,"line_start":180,"line_end":180,"column_start":9,"column_end":14},"name":"blend","qualname":"::pso::output_merger::ColorBlendDesc::blend","value":"std::option::Option<pso::output_merger::BlendState>","parent":{"krate":0,"index":18879},"children":[],"decl_id":null,"docs":" Blend state, if enabled.\n","sig":null,"attributes":[{"value":"/ Blend state, if enabled.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":235219,"byte_end":235247,"line_start":179,"line_end":179,"column_start":5,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":1103},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":235476,"byte_end":235481,"line_start":186,"line_end":186,"column_start":15,"column_end":20},"name":"EMPTY","qualname":"::pso::output_merger::ColorBlendDesc::EMPTY","value":"Self","parent":{"krate":0,"index":1102},"children":[],"decl_id":null,"docs":" Empty blend descriptor just writes out the color without blending.\n","sig":null,"attributes":[{"value":"/ Empty blend descriptor just writes out the color without blending.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":235312,"byte_end":235382,"line_start":184,"line_end":184,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":18948},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":235732,"byte_end":235741,"line_start":195,"line_end":195,"column_start":12,"column_end":21},"name":"DepthTest","qualname":"::pso::output_merger::DepthTest","value":"DepthTest { fun, write }","parent":null,"children":[{"krate":0,"index":18949},{"krate":0,"index":18950}],"decl_id":null,"docs":" Depth test state.\n","sig":null,"attributes":[{"value":"/ Depth test state.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":235568,"byte_end":235589,"line_start":192,"line_end":192,"column_start":1,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":18949},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":235788,"byte_end":235791,"line_start":197,"line_end":197,"column_start":9,"column_end":12},"name":"fun","qualname":"::pso::output_merger::DepthTest::fun","value":"pso::output_merger::Comparison","parent":{"krate":0,"index":18948},"children":[],"decl_id":null,"docs":" Comparison function to use.\n","sig":null,"attributes":[{"value":"/ Comparison function to use.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":235748,"byte_end":235779,"line_start":196,"line_end":196,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":18950},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":235874,"byte_end":235879,"line_start":199,"line_end":199,"column_start":9,"column_end":14},"name":"write","qualname":"::pso::output_merger::DepthTest::write","value":"bool","parent":{"krate":0,"index":18948},"children":[],"decl_id":null,"docs":" Specify whether to write to the depth buffer or not.\n","sig":null,"attributes":[{"value":"/ Specify whether to write to the depth buffer or not.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":235809,"byte_end":235865,"line_start":198,"line_end":198,"column_start":5,"column_end":61}}]},{"kind":"Const","id":{"krate":0,"index":1105},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":235961,"byte_end":235965,"line_start":204,"line_end":204,"column_start":15,"column_end":19},"name":"FAIL","qualname":"::pso::output_merger::DepthTest::FAIL","value":"Self","parent":{"krate":0,"index":1104},"children":[],"decl_id":null,"docs":" A depth test that always fails.\n","sig":null,"attributes":[{"value":"/ A depth test that always fails.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":235911,"byte_end":235946,"line_start":203,"line_end":203,"column_start":5,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":1106},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":236210,"byte_end":236219,"line_start":211,"line_end":211,"column_start":15,"column_end":24},"name":"PASS_TEST","qualname":"::pso::output_merger::DepthTest::PASS_TEST","value":"Self","parent":{"krate":0,"index":1104},"children":[],"decl_id":null,"docs":" A depth test that always succeeds but doesn't\n write to the depth buffer\n","sig":null,"attributes":[{"value":"/ A depth test that always succeeds but doesn't","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":236051,"byte_end":236100,"line_start":208,"line_end":208,"column_start":5,"column_end":54}},{"value":"/ write to the depth buffer","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":236105,"byte_end":236134,"line_start":209,"line_end":209,"column_start":5,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":1107},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":236409,"byte_end":236419,"line_start":217,"line_end":217,"column_start":15,"column_end":25},"name":"PASS_WRITE","qualname":"::pso::output_merger::DepthTest::PASS_WRITE","value":"Self","parent":{"krate":0,"index":1104},"children":[],"decl_id":null,"docs":" A depth test that always succeeds and writes its result\n to the depth buffer.\n","sig":null,"attributes":[{"value":"/ A depth test that always succeeds and writes its result","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":236306,"byte_end":236365,"line_start":215,"line_end":215,"column_start":5,"column_end":64}},{"value":"/ to the depth buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":236370,"byte_end":236394,"line_start":216,"line_end":216,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":19028},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":236784,"byte_end":236788,"line_start":229,"line_end":229,"column_start":5,"column_end":9},"name":"Keep","qualname":"::pso::output_merger::StencilOp::Keep","value":"StencilOp::Keep","parent":{"krate":0,"index":19027},"children":[],"decl_id":null,"docs":" Keep the current value in the stencil buffer (no change).\n","sig":null,"attributes":[{"value":"/ Keep the current value in the stencil buffer (no change).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":236718,"byte_end":236779,"line_start":228,"line_end":228,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":19031},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":236851,"byte_end":236855,"line_start":231,"line_end":231,"column_start":5,"column_end":9},"name":"Zero","qualname":"::pso::output_merger::StencilOp::Zero","value":"StencilOp::Zero","parent":{"krate":0,"index":19027},"children":[],"decl_id":null,"docs":" Set the value in the stencil buffer to zero.\n","sig":null,"attributes":[{"value":"/ Set the value in the stencil buffer to zero.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":236798,"byte_end":236846,"line_start":230,"line_end":230,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":19034},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":236937,"byte_end":236944,"line_start":233,"line_end":233,"column_start":5,"column_end":12},"name":"Replace","qualname":"::pso::output_merger::StencilOp::Replace","value":"StencilOp::Replace","parent":{"krate":0,"index":19027},"children":[],"decl_id":null,"docs":" Set the stencil buffer value to `reference` from `StencilFace`.\n","sig":null,"attributes":[{"value":"/ Set the stencil buffer value to `reference` from `StencilFace`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":236865,"byte_end":236932,"line_start":232,"line_end":232,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":19037},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":237029,"byte_end":237043,"line_start":235,"line_end":235,"column_start":5,"column_end":19},"name":"IncrementClamp","qualname":"::pso::output_merger::StencilOp::IncrementClamp","value":"StencilOp::IncrementClamp","parent":{"krate":0,"index":19027},"children":[],"decl_id":null,"docs":" Increment the stencil buffer value, clamping to its maximum value.\n","sig":null,"attributes":[{"value":"/ Increment the stencil buffer value, clamping to its maximum value.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":236954,"byte_end":237024,"line_start":234,"line_end":234,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":19040},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":237128,"byte_end":237142,"line_start":237,"line_end":237,"column_start":5,"column_end":19},"name":"DecrementClamp","qualname":"::pso::output_merger::StencilOp::DecrementClamp","value":"StencilOp::DecrementClamp","parent":{"krate":0,"index":19027},"children":[],"decl_id":null,"docs":" Decrement the stencil buffer value, clamping to its minimum value.\n","sig":null,"attributes":[{"value":"/ Decrement the stencil buffer value, clamping to its minimum value.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":237053,"byte_end":237123,"line_start":236,"line_end":236,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":19043},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":237216,"byte_end":237222,"line_start":239,"line_end":239,"column_start":5,"column_end":11},"name":"Invert","qualname":"::pso::output_merger::StencilOp::Invert","value":"StencilOp::Invert","parent":{"krate":0,"index":19027},"children":[],"decl_id":null,"docs":" Bitwise invert the current value in the stencil buffer.\n","sig":null,"attributes":[{"value":"/ Bitwise invert the current value in the stencil buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":237152,"byte_end":237211,"line_start":238,"line_end":238,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":19046},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":237310,"byte_end":237323,"line_start":241,"line_end":241,"column_start":5,"column_end":18},"name":"IncrementWrap","qualname":"::pso::output_merger::StencilOp::IncrementWrap","value":"StencilOp::IncrementWrap","parent":{"krate":0,"index":19027},"children":[],"decl_id":null,"docs":" Increment the stencil buffer value, wrapping around to 0 on overflow.\n","sig":null,"attributes":[{"value":"/ Increment the stencil buffer value, wrapping around to 0 on overflow.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":237232,"byte_end":237305,"line_start":240,"line_end":240,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":19049},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":237427,"byte_end":237440,"line_start":243,"line_end":243,"column_start":5,"column_end":18},"name":"DecrementWrap","qualname":"::pso::output_merger::StencilOp::DecrementWrap","value":"StencilOp::DecrementWrap","parent":{"krate":0,"index":19027},"children":[],"decl_id":null,"docs":" Decrement the stencil buffer value, wrapping around to the maximum value on overflow.\n","sig":null,"attributes":[{"value":"/ Decrement the stencil buffer value, wrapping around to the maximum value on overflow.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":237333,"byte_end":237422,"line_start":242,"line_end":242,"column_start":5,"column_end":94}}]},{"kind":"Enum","id":{"krate":0,"index":19027},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":236702,"byte_end":236711,"line_start":227,"line_end":227,"column_start":10,"column_end":19},"name":"StencilOp","qualname":"::pso::output_merger::StencilOp","value":"pub enum StencilOp {\n\n    /// Keep the current value in the stencil buffer (no change).\n    Keep = ,\n\n    /// Set the value in the stencil buffer to zero.\n    Zero = ,\n\n    /// Set the stencil buffer value to `reference` from `StencilFace`.\n    Replace = ,\n\n    /// Increment the stencil buffer value, clamping to its maximum value.\n    IncrementClamp = ,\n\n    /// Decrement the stencil buffer value, clamping to its minimum value.\n    DecrementClamp = ,\n\n    /// Bitwise invert the current value in the stencil buffer.\n    Invert = ,\n\n    /// Increment the stencil buffer value, wrapping around to 0 on overflow.\n    IncrementWrap = ,\n\n    /// Decrement the stencil buffer value, wrapping around to the maximum value on overflow.\n    DecrementWrap = ,\n}","parent":null,"children":[{"krate":0,"index":19028},{"krate":0,"index":19031},{"krate":0,"index":19034},{"krate":0,"index":19037},{"krate":0,"index":19040},{"krate":0,"index":19043},{"krate":0,"index":19046},{"krate":0,"index":19049}],"decl_id":null,"docs":" The operation to use for stencil masking.\n","sig":null,"attributes":[{"value":"/ The operation to use for stencil masking.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":236504,"byte_end":236549,"line_start":223,"line_end":223,"column_start":1,"column_end":46}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":236550,"byte_end":236561,"line_start":224,"line_end":224,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":19127},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":237646,"byte_end":237657,"line_start":249,"line_end":249,"column_start":12,"column_end":23},"name":"StencilFace","qualname":"::pso::output_merger::StencilFace","value":"StencilFace { fun, op_fail, op_depth_fail, op_pass }","parent":null,"children":[{"krate":0,"index":19128},{"krate":0,"index":19129},{"krate":0,"index":19130},{"krate":0,"index":19131}],"decl_id":null,"docs":" Complete stencil state for a given side of a face.\n","sig":null,"attributes":[{"value":"/ Complete stencil state for a given side of a face.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":237449,"byte_end":237503,"line_start":246,"line_end":246,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":19128},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":237744,"byte_end":237747,"line_start":251,"line_end":251,"column_start":9,"column_end":12},"name":"fun","qualname":"::pso::output_merger::StencilFace::fun","value":"pso::output_merger::Comparison","parent":{"krate":0,"index":19127},"children":[],"decl_id":null,"docs":" Comparison function to use to determine if the stencil test passes.\n","sig":null,"attributes":[{"value":"/ Comparison function to use to determine if the stencil test passes.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":237664,"byte_end":237735,"line_start":250,"line_end":250,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":19129},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":237825,"byte_end":237832,"line_start":253,"line_end":253,"column_start":9,"column_end":16},"name":"op_fail","qualname":"::pso::output_merger::StencilFace::op_fail","value":"pso::output_merger::StencilOp","parent":{"krate":0,"index":19127},"children":[],"decl_id":null,"docs":" What operation to do if the stencil test fails.\n","sig":null,"attributes":[{"value":"/ What operation to do if the stencil test fails.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":237765,"byte_end":237816,"line_start":252,"line_end":252,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":19130},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":237935,"byte_end":237948,"line_start":255,"line_end":255,"column_start":9,"column_end":22},"name":"op_depth_fail","qualname":"::pso::output_merger::StencilFace::op_depth_fail","value":"pso::output_merger::StencilOp","parent":{"krate":0,"index":19127},"children":[],"decl_id":null,"docs":" What operation to do if the stencil test passes but the depth test fails.\n","sig":null,"attributes":[{"value":"/ What operation to do if the stencil test passes but the depth test fails.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":237849,"byte_end":237926,"line_start":254,"line_end":254,"column_start":5,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":19131},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":238039,"byte_end":238046,"line_start":257,"line_end":257,"column_start":9,"column_end":16},"name":"op_pass","qualname":"::pso::output_merger::StencilFace::op_pass","value":"pso::output_merger::StencilOp","parent":{"krate":0,"index":19127},"children":[],"decl_id":null,"docs":" What operation to do if both the depth and stencil test pass.\n","sig":null,"attributes":[{"value":"/ What operation to do if both the depth and stencil test pass.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":237965,"byte_end":238030,"line_start":256,"line_end":256,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":19220},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":238529,"byte_end":238534,"line_start":274,"line_end":274,"column_start":12,"column_end":17},"name":"Sided","qualname":"::pso::output_merger::Sided","value":"Sided { front, back }","parent":null,"children":[{"krate":0,"index":19222},{"krate":0,"index":19223}],"decl_id":null,"docs":" A generic struct holding the properties of two sides of a polygon.\n","sig":null,"attributes":[{"value":"/ A generic struct holding the properties of two sides of a polygon.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":238324,"byte_end":238394,"line_start":271,"line_end":271,"column_start":1,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":19222},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":238590,"byte_end":238595,"line_start":276,"line_end":276,"column_start":9,"column_end":14},"name":"front","qualname":"::pso::output_merger::Sided::front","value":"T","parent":{"krate":0,"index":19220},"children":[],"decl_id":null,"docs":" Information about the front face.\n","sig":null,"attributes":[{"value":"/ Information about the front face.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":238544,"byte_end":238581,"line_start":275,"line_end":275,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":19223},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":238649,"byte_end":238653,"line_start":278,"line_end":278,"column_start":9,"column_end":13},"name":"back","qualname":"::pso::output_merger::Sided::back","value":"T","parent":{"krate":0,"index":19220},"children":[],"decl_id":null,"docs":" Information about the back face.\n","sig":null,"attributes":[{"value":"/ Information about the back face.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":238604,"byte_end":238640,"line_start":277,"line_end":277,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":238797,"byte_end":238800,"line_start":284,"line_end":284,"column_start":12,"column_end":15},"name":"new","qualname":"<Sided<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Sided` structure with both `front` and `back` holding\n the same value.\n","sig":null,"attributes":[{"value":"/ Create a new `Sided` structure with both `front` and `back` holding","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":238690,"byte_end":238761,"line_start":282,"line_end":282,"column_start":5,"column_end":76}},{"value":"/ the same value.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":238766,"byte_end":238785,"line_start":283,"line_end":283,"column_start":5,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":1113},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":239024,"byte_end":239037,"line_start":294,"line_end":294,"column_start":10,"column_end":23},"name":"StencilValues","qualname":"::pso::output_merger::StencilValues","value":"State<Sided<StencilValue>>","parent":null,"children":[],"decl_id":null,"docs":" Pair of stencil values that could be either baked into a graphics pipeline\n or provided dynamically.\n","sig":null,"attributes":[{"value":"/ Pair of stencil values that could be either baked into a graphics pipeline","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":238907,"byte_end":238985,"line_start":292,"line_end":292,"column_start":1,"column_end":79}},{"value":"/ or provided dynamically.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":238986,"byte_end":239014,"line_start":293,"line_end":293,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":19303},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":239421,"byte_end":239432,"line_start":303,"line_end":303,"column_start":12,"column_end":23},"name":"StencilTest","qualname":"::pso::output_merger::StencilTest","value":"StencilTest { faces, read_masks, write_masks, reference_values }","parent":null,"children":[{"krate":0,"index":19304},{"krate":0,"index":19305},{"krate":0,"index":19306},{"krate":0,"index":19307}],"decl_id":null,"docs":" Defines a stencil test. Stencil testing is an operation\n performed to cull fragments;\n the new fragment is tested against the value held in the\n stencil buffer, and if the test fails the fragment is\n discarded.\n","sig":null,"attributes":[{"value":"/ Defines a stencil test. Stencil testing is an operation","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":239069,"byte_end":239128,"line_start":296,"line_end":296,"column_start":1,"column_end":60}},{"value":"/ performed to cull fragments;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":239129,"byte_end":239161,"line_start":297,"line_end":297,"column_start":1,"column_end":33}},{"value":"/ the new fragment is tested against the value held in the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":239162,"byte_end":239222,"line_start":298,"line_end":298,"column_start":1,"column_end":61}},{"value":"/ stencil buffer, and if the test fails the fragment is","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":239223,"byte_end":239280,"line_start":299,"line_end":299,"column_start":1,"column_end":58}},{"value":"/ discarded.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":239281,"byte_end":239295,"line_start":300,"line_end":300,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":19304},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":239481,"byte_end":239486,"line_start":305,"line_end":305,"column_start":9,"column_end":14},"name":"faces","qualname":"::pso::output_merger::StencilTest::faces","value":"pso::output_merger::Sided<pso::output_merger::StencilFace>","parent":{"krate":0,"index":19303},"children":[],"decl_id":null,"docs":" Operations for stencil faces.\n","sig":null,"attributes":[{"value":"/ Operations for stencil faces.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":239439,"byte_end":239472,"line_start":304,"line_end":304,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":19305},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":239661,"byte_end":239671,"line_start":308,"line_end":308,"column_start":9,"column_end":19},"name":"read_masks","qualname":"::pso::output_merger::StencilTest::read_masks","value":"pso::State<pso::output_merger::Sided<u32>>","parent":{"krate":0,"index":19303},"children":[],"decl_id":null,"docs":" Masks that are ANDd with both the stencil buffer value and the reference value when they\n are read before doing the stencil test.\n","sig":null,"attributes":[{"value":"/ Masks that are ANDd with both the stencil buffer value and the reference value when they","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":239512,"byte_end":239604,"line_start":306,"line_end":306,"column_start":5,"column_end":97}},{"value":"/ are read before doing the stencil test.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":239609,"byte_end":239652,"line_start":307,"line_end":307,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":19306},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":239784,"byte_end":239795,"line_start":310,"line_end":310,"column_start":9,"column_end":20},"name":"write_masks","qualname":"::pso::output_merger::StencilTest::write_masks","value":"pso::State<pso::output_merger::Sided<u32>>","parent":{"krate":0,"index":19303},"children":[],"decl_id":null,"docs":" Mask that are ANDd with the stencil value before writing to the stencil buffer.\n","sig":null,"attributes":[{"value":"/ Mask that are ANDd with the stencil value before writing to the stencil buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":239692,"byte_end":239775,"line_start":309,"line_end":309,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":19307},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":239873,"byte_end":239889,"line_start":312,"line_end":312,"column_start":9,"column_end":25},"name":"reference_values","qualname":"::pso::output_merger::StencilTest::reference_values","value":"pso::State<pso::output_merger::Sided<u32>>","parent":{"krate":0,"index":19303},"children":[],"decl_id":null,"docs":" The reference values used for stencil tests.\n","sig":null,"attributes":[{"value":"/ The reference values used for stencil tests.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":239816,"byte_end":239864,"line_start":311,"line_end":311,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":19376},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":240391,"byte_end":240407,"line_start":329,"line_end":329,"column_start":12,"column_end":28},"name":"DepthStencilDesc","qualname":"::pso::output_merger::DepthStencilDesc","value":"DepthStencilDesc { depth, depth_bounds, stencil }","parent":null,"children":[{"krate":0,"index":19377},{"krate":0,"index":19378},{"krate":0,"index":19379}],"decl_id":null,"docs":" PSO depth-stencil target descriptor.\n","sig":null,"attributes":[{"value":"/ PSO depth-stencil target descriptor.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":240216,"byte_end":240256,"line_start":326,"line_end":326,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":19377},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":240458,"byte_end":240463,"line_start":331,"line_end":331,"column_start":9,"column_end":14},"name":"depth","qualname":"::pso::output_merger::DepthStencilDesc::depth","value":"std::option::Option<pso::output_merger::DepthTest>","parent":{"krate":0,"index":19376},"children":[],"decl_id":null,"docs":" Optional depth testing/writing.\n","sig":null,"attributes":[{"value":"/ Optional depth testing/writing.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":240414,"byte_end":240449,"line_start":330,"line_end":330,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":19378},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":240529,"byte_end":240541,"line_start":333,"line_end":333,"column_start":9,"column_end":21},"name":"depth_bounds","qualname":"::pso::output_merger::DepthStencilDesc::depth_bounds","value":"bool","parent":{"krate":0,"index":19376},"children":[],"decl_id":null,"docs":" Enable depth bounds testing.\n","sig":null,"attributes":[{"value":"/ Enable depth bounds testing.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":240488,"byte_end":240520,"line_start":332,"line_end":332,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":19379},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":240585,"byte_end":240592,"line_start":335,"line_end":335,"column_start":9,"column_end":16},"name":"stencil","qualname":"::pso::output_merger::DepthStencilDesc::stencil","value":"std::option::Option<pso::output_merger::StencilTest>","parent":{"krate":0,"index":19376},"children":[],"decl_id":null,"docs":" Stencil test/write.\n","sig":null,"attributes":[{"value":"/ Stencil test/write.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":240553,"byte_end":240576,"line_start":334,"line_end":334,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":240722,"byte_end":240732,"line_start":340,"line_end":340,"column_start":12,"column_end":22},"name":"uses_depth","qualname":"<DepthStencilDesc>::uses_depth","value":"pub fn uses_depth(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the descriptor assumes the depth attachment.\n","sig":null,"attributes":[{"value":"/ Returns true if the descriptor assumes the depth attachment.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":240646,"byte_end":240710,"line_start":339,"line_end":339,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":240888,"byte_end":240900,"line_start":344,"line_end":344,"column_start":12,"column_end":24},"name":"uses_stencil","qualname":"<DepthStencilDesc>::uses_stencil","value":"pub fn uses_stencil(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the descriptor assumes the stencil attachment.\n","sig":null,"attributes":[{"value":"/ Returns true if the descriptor assumes the stencil attachment.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":240810,"byte_end":240876,"line_start":343,"line_end":343,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":19448},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":241065,"byte_end":241069,"line_start":352,"line_end":352,"column_start":16,"column_end":20},"name":"Face","qualname":"::pso::output_merger::Face","value":"Face {  }","parent":null,"children":[{"krate":0,"index":19449}],"decl_id":null,"docs":" Face.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":19534},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":241173,"byte_end":241177,"line_start":354,"line_end":354,"column_start":15,"column_end":19},"name":"NONE","qualname":"::pso::output_merger::Face::NONE","value":"Face","parent":{"krate":0,"index":19533},"children":[],"decl_id":null,"docs":" Empty face. TODO: remove when constexpr are stabilized to use empty()\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":19535},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":241223,"byte_end":241228,"line_start":356,"line_end":356,"column_start":15,"column_end":20},"name":"FRONT","qualname":"::pso::output_merger::Face::FRONT","value":"Face","parent":{"krate":0,"index":19533},"children":[],"decl_id":null,"docs":" Front face.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":19536},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":241273,"byte_end":241277,"line_start":358,"line_end":358,"column_start":15,"column_end":19},"name":"BACK","qualname":"::pso::output_merger::Face::BACK","value":"Face","parent":{"krate":0,"index":19533},"children":[],"decl_id":null,"docs":" Back face.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":19592},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":192306,"byte_end":192311,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"name":"Other","qualname":"::pso::CreationError::Other","value":"CreationError::Other","parent":{"krate":0,"index":19591},"children":[],"decl_id":null,"docs":" Unknown other error.\n","sig":null,"attributes":[{"value":"/ Unknown other error.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":192232,"byte_end":192256,"line_start":19,"line_end":19,"column_start":5,"column_end":29}},{"value":"fail(display = \"Unknown other error\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":192261,"byte_end":192301,"line_start":20,"line_end":20,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":19594},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":192422,"byte_end":192436,"line_start":24,"line_end":24,"column_start":5,"column_end":19},"name":"InvalidSubpass","qualname":"::pso::CreationError::InvalidSubpass","value":"CreationError::InvalidSubpass(pass::SubpassId)","parent":{"krate":0,"index":19591},"children":[],"decl_id":null,"docs":" Invalid subpass (not part of renderpass).\n","sig":null,"attributes":[{"value":"/ Invalid subpass (not part of renderpass).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":192317,"byte_end":192362,"line_start":22,"line_end":22,"column_start":5,"column_end":50}},{"value":"fail(display = \"Invalid subpass index: {}\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":192367,"byte_end":192417,"line_start":23,"line_end":23,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":19597},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":192551,"byte_end":192557,"line_start":27,"line_end":27,"column_start":5,"column_end":11},"name":"Shader","qualname":"::pso::CreationError::Shader","value":"CreationError::Shader(device::ShaderError)","parent":{"krate":0,"index":19591},"children":[],"decl_id":null,"docs":" Shader compilation error.\n","sig":null,"attributes":[{"value":"/ Shader compilation error.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":192459,"byte_end":192488,"line_start":25,"line_end":25,"column_start":5,"column_end":34}},{"value":"fail(display = \"Shader compilation error: {}\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":192493,"byte_end":192546,"line_start":26,"line_end":26,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":19600},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":192662,"byte_end":192673,"line_start":31,"line_end":31,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::pso::CreationError::OutOfMemory","value":"CreationError::OutOfMemory(device::OutOfMemory)","parent":{"krate":0,"index":19591},"children":[],"decl_id":null,"docs":" Out of either host or device memory.\n","sig":null,"attributes":[{"value":"/ Out of either host or device memory.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":192585,"byte_end":192625,"line_start":29,"line_end":29,"column_start":5,"column_end":45}},{"value":"fail(display = \"{}\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":192630,"byte_end":192657,"line_start":30,"line_end":30,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":19591},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":192212,"byte_end":192225,"line_start":18,"line_end":18,"column_start":10,"column_end":23},"name":"CreationError","qualname":"::pso::CreationError","value":"pub enum CreationError {\n\n    /// Unknown other error.\n    #[fail(display = \"Unknown other error\")]\n    Other,\n\n    /// Invalid subpass (not part of renderpass).\n    #[fail(display = \"Invalid subpass index: {}\", _0)]\n    InvalidSubpass(pass::SubpassId),\n\n    /// Shader compilation error.\n    #[fail(display = \"Shader compilation error: {}\", _0)]\n    Shader(device::ShaderError),\n\n    /// Out of either host or device memory.\n    #[fail(display = \"{}\", _0)]\n    OutOfMemory(device::OutOfMemory),\n}","parent":null,"children":[{"krate":0,"index":19592},{"krate":0,"index":19594},{"krate":0,"index":19597},{"krate":0,"index":19600}],"decl_id":null,"docs":" Error types happening upon PSO creation on the device side.\n","sig":null,"attributes":[{"value":"/ Error types happening upon PSO creation on the device side.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":192098,"byte_end":192161,"line_start":16,"line_end":16,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":19619},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":193099,"byte_end":193112,"line_start":46,"line_end":46,"column_start":16,"column_end":29},"name":"PipelineStage","qualname":"::pso::PipelineStage","value":"PipelineStage {  }","parent":null,"children":[{"krate":0,"index":19620}],"decl_id":null,"docs":" Stages of the logical pipeline.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":19717},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":193178,"byte_end":193189,"line_start":48,"line_end":48,"column_start":15,"column_end":26},"name":"TOP_OF_PIPE","qualname":"::pso::PipelineStage::TOP_OF_PIPE","value":"PipelineStage","parent":{"krate":0,"index":19716},"children":[],"decl_id":null,"docs":" Beginning of the command queue.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":19718},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":193250,"byte_end":193263,"line_start":50,"line_end":50,"column_start":15,"column_end":28},"name":"DRAW_INDIRECT","qualname":"::pso::PipelineStage::DRAW_INDIRECT","value":"PipelineStage","parent":{"krate":0,"index":19716},"children":[],"decl_id":null,"docs":" Indirect data consumption.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":19719},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":193322,"byte_end":193334,"line_start":52,"line_end":52,"column_start":15,"column_end":27},"name":"VERTEX_INPUT","qualname":"::pso::PipelineStage::VERTEX_INPUT","value":"PipelineStage","parent":{"krate":0,"index":19716},"children":[],"decl_id":null,"docs":" Vertex data consumption.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":19720},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":193393,"byte_end":193406,"line_start":54,"line_end":54,"column_start":15,"column_end":28},"name":"VERTEX_SHADER","qualname":"::pso::PipelineStage::VERTEX_SHADER","value":"PipelineStage","parent":{"krate":0,"index":19716},"children":[],"decl_id":null,"docs":" Vertex shader execution.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":19721},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":193463,"byte_end":193474,"line_start":56,"line_end":56,"column_start":15,"column_end":26},"name":"HULL_SHADER","qualname":"::pso::PipelineStage::HULL_SHADER","value":"PipelineStage","parent":{"krate":0,"index":19716},"children":[],"decl_id":null,"docs":" Hull shader execution.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":19722},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":193534,"byte_end":193547,"line_start":58,"line_end":58,"column_start":15,"column_end":28},"name":"DOMAIN_SHADER","qualname":"::pso::PipelineStage::DOMAIN_SHADER","value":"PipelineStage","parent":{"krate":0,"index":19716},"children":[],"decl_id":null,"docs":" Domain shader execution.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":19723},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":193609,"byte_end":193624,"line_start":60,"line_end":60,"column_start":15,"column_end":30},"name":"GEOMETRY_SHADER","qualname":"::pso::PipelineStage::GEOMETRY_SHADER","value":"PipelineStage","parent":{"krate":0,"index":19716},"children":[],"decl_id":null,"docs":" Geometry shader execution.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":19724},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":193686,"byte_end":193701,"line_start":62,"line_end":62,"column_start":15,"column_end":30},"name":"FRAGMENT_SHADER","qualname":"::pso::PipelineStage::FRAGMENT_SHADER","value":"PipelineStage","parent":{"krate":0,"index":19716},"children":[],"decl_id":null,"docs":" Fragment shader execution.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":19725},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":193775,"byte_end":193795,"line_start":64,"line_end":64,"column_start":15,"column_end":35},"name":"EARLY_FRAGMENT_TESTS","qualname":"::pso::PipelineStage::EARLY_FRAGMENT_TESTS","value":"PipelineStage","parent":{"krate":0,"index":19716},"children":[],"decl_id":null,"docs":" Stage of early depth and stencil test.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":19726},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":193869,"byte_end":193888,"line_start":66,"line_end":66,"column_start":15,"column_end":34},"name":"LATE_FRAGMENT_TESTS","qualname":"::pso::PipelineStage::LATE_FRAGMENT_TESTS","value":"PipelineStage","parent":{"krate":0,"index":19716},"children":[],"decl_id":null,"docs":" Stage of late depth and stencil test.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":19727},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":193964,"byte_end":193987,"line_start":68,"line_end":68,"column_start":15,"column_end":38},"name":"COLOR_ATTACHMENT_OUTPUT","qualname":"::pso::PipelineStage::COLOR_ATTACHMENT_OUTPUT","value":"PipelineStage","parent":{"krate":0,"index":19716},"children":[],"decl_id":null,"docs":" Stage of final color value calculation.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":19728},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":194049,"byte_end":194063,"line_start":70,"line_end":70,"column_start":15,"column_end":29},"name":"COMPUTE_SHADER","qualname":"::pso::PipelineStage::COMPUTE_SHADER","value":"PipelineStage","parent":{"krate":0,"index":19716},"children":[],"decl_id":null,"docs":" Compute shader execution,\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":19729},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":194132,"byte_end":194140,"line_start":72,"line_end":72,"column_start":15,"column_end":23},"name":"TRANSFER","qualname":"::pso::PipelineStage::TRANSFER","value":"PipelineStage","parent":{"krate":0,"index":19716},"children":[],"decl_id":null,"docs":" Copy/Transfer command execution.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":19730},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":194203,"byte_end":194217,"line_start":74,"line_end":74,"column_start":15,"column_end":29},"name":"BOTTOM_OF_PIPE","qualname":"::pso::PipelineStage::BOTTOM_OF_PIPE","value":"PipelineStage","parent":{"krate":0,"index":19716},"children":[],"decl_id":null,"docs":" End of the command queue.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":19731},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":194323,"byte_end":194327,"line_start":77,"line_end":77,"column_start":15,"column_end":19},"name":"HOST","qualname":"::pso::PipelineStage::HOST","value":"PipelineStage","parent":{"krate":0,"index":19716},"children":[],"decl_id":null,"docs":" Read/Write access from host.\n (Not a real pipeline stage)\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":19822},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":194498,"byte_end":194514,"line_start":84,"line_end":84,"column_start":16,"column_end":32},"name":"ShaderStageFlags","qualname":"::pso::ShaderStageFlags","value":"ShaderStageFlags {  }","parent":null,"children":[{"krate":0,"index":19823}],"decl_id":null,"docs":" Combination of different shader pipeline stages.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":19913},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":194569,"byte_end":194575,"line_start":86,"line_end":86,"column_start":15,"column_end":21},"name":"VERTEX","qualname":"::pso::ShaderStageFlags::VERTEX","value":"ShaderStageFlags","parent":{"krate":0,"index":19912},"children":[],"decl_id":null,"docs":" Vertex shader stage.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":19914},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":194645,"byte_end":194649,"line_start":88,"line_end":88,"column_start":15,"column_end":19},"name":"HULL","qualname":"::pso::ShaderStageFlags::HULL","value":"ShaderStageFlags","parent":{"krate":0,"index":19912},"children":[],"decl_id":null,"docs":" Hull (tessellation) shader stage.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":19915},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":194723,"byte_end":194729,"line_start":90,"line_end":90,"column_start":15,"column_end":21},"name":"DOMAIN","qualname":"::pso::ShaderStageFlags::DOMAIN","value":"ShaderStageFlags","parent":{"krate":0,"index":19912},"children":[],"decl_id":null,"docs":" Domain (tessellation) shader stage.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":19916},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":194788,"byte_end":194796,"line_start":92,"line_end":92,"column_start":15,"column_end":23},"name":"GEOMETRY","qualname":"::pso::ShaderStageFlags::GEOMETRY","value":"ShaderStageFlags","parent":{"krate":0,"index":19912},"children":[],"decl_id":null,"docs":" Geometry shader stage.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":19917},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":194853,"byte_end":194861,"line_start":94,"line_end":94,"column_start":15,"column_end":23},"name":"FRAGMENT","qualname":"::pso::ShaderStageFlags::FRAGMENT","value":"ShaderStageFlags","parent":{"krate":0,"index":19912},"children":[],"decl_id":null,"docs":" Fragment shader stage.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":19918},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":194918,"byte_end":194925,"line_start":96,"line_end":96,"column_start":15,"column_end":22},"name":"COMPUTE","qualname":"::pso::ShaderStageFlags::COMPUTE","value":"ShaderStageFlags","parent":{"krate":0,"index":19912},"children":[],"decl_id":null,"docs":" Compute shader stage.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":19919},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":194998,"byte_end":195006,"line_start":98,"line_end":98,"column_start":15,"column_end":23},"name":"GRAPHICS","qualname":"::pso::ShaderStageFlags::GRAPHICS","value":"ShaderStageFlags","parent":{"krate":0,"index":19912},"children":[],"decl_id":null,"docs":" All graphics pipeline shader stages.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":19920},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":195167,"byte_end":195170,"line_start":101,"line_end":101,"column_start":15,"column_end":18},"name":"ALL","qualname":"::pso::ShaderStageFlags::ALL","value":"ShaderStageFlags","parent":{"krate":0,"index":19912},"children":[],"decl_id":null,"docs":" All shader stages.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":19991},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":195530,"byte_end":195536,"line_start":112,"line_end":112,"column_start":5,"column_end":11},"name":"Vertex","qualname":"::pso::Stage::Vertex","value":"Stage::Vertex","parent":{"krate":0,"index":19990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":19993},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":195542,"byte_end":195546,"line_start":113,"line_end":113,"column_start":5,"column_end":9},"name":"Hull","qualname":"::pso::Stage::Hull","value":"Stage::Hull","parent":{"krate":0,"index":19990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":19995},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":195552,"byte_end":195558,"line_start":114,"line_end":114,"column_start":5,"column_end":11},"name":"Domain","qualname":"::pso::Stage::Domain","value":"Stage::Domain","parent":{"krate":0,"index":19990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":19997},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":195564,"byte_end":195572,"line_start":115,"line_end":115,"column_start":5,"column_end":13},"name":"Geometry","qualname":"::pso::Stage::Geometry","value":"Stage::Geometry","parent":{"krate":0,"index":19990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":19999},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":195578,"byte_end":195586,"line_start":116,"line_end":116,"column_start":5,"column_end":13},"name":"Fragment","qualname":"::pso::Stage::Fragment","value":"Stage::Fragment","parent":{"krate":0,"index":19990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":20001},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":195592,"byte_end":195599,"line_start":117,"line_end":117,"column_start":5,"column_end":12},"name":"Compute","qualname":"::pso::Stage::Compute","value":"Stage::Compute","parent":{"krate":0,"index":19990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":19990},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":195518,"byte_end":195523,"line_start":111,"line_end":111,"column_start":10,"column_end":15},"name":"Stage","qualname":"::pso::Stage","value":"pub enum Stage { Vertex, Hull, Domain, Geometry, Fragment, Compute, }","parent":null,"children":[{"krate":0,"index":19991},{"krate":0,"index":19993},{"krate":0,"index":19995},{"krate":0,"index":19997},{"krate":0,"index":19999},{"krate":0,"index":20001}],"decl_id":null,"docs":" Which program stage this shader represents.\n","sig":null,"attributes":[{"value":"/ Which program stage this shader represents.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":195312,"byte_end":195359,"line_start":106,"line_end":106,"column_start":1,"column_end":48}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":195360,"byte_end":195382,"line_start":107,"line_end":107,"column_start":1,"column_end":23}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":195497,"byte_end":195508,"line_start":110,"line_end":110,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":20070},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":196491,"byte_end":196501,"line_start":148,"line_end":148,"column_start":12,"column_end":22},"name":"EntryPoint","qualname":"::pso::EntryPoint","value":"EntryPoint { entry, module, specialization }","parent":null,"children":[{"krate":0,"index":20073},{"krate":0,"index":20074},{"krate":0,"index":20075}],"decl_id":null,"docs":" Shader entry point.\n","sig":null,"attributes":[{"value":"/ Shader entry point.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":196439,"byte_end":196462,"line_start":146,"line_end":146,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":20073},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":196554,"byte_end":196559,"line_start":150,"line_end":150,"column_start":9,"column_end":14},"name":"entry","qualname":"::pso::EntryPoint::entry","value":"&'a str","parent":{"krate":0,"index":20070},"children":[],"decl_id":null,"docs":" Entry point name.\n","sig":null,"attributes":[{"value":"/ Entry point name.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":196524,"byte_end":196545,"line_start":149,"line_end":149,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":20074},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":196611,"byte_end":196617,"line_start":152,"line_end":152,"column_start":9,"column_end":15},"name":"module","qualname":"::pso::EntryPoint::module","value":"&'a <B as Backend>::ShaderModule","parent":{"krate":0,"index":20070},"children":[],"decl_id":null,"docs":" Shader module reference.\n","sig":null,"attributes":[{"value":"/ Shader module reference.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":196574,"byte_end":196602,"line_start":151,"line_end":151,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":20075},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":196672,"byte_end":196686,"line_start":154,"line_end":154,"column_start":9,"column_end":23},"name":"specialization","qualname":"::pso::EntryPoint::specialization","value":"pso::Specialization<'a>","parent":{"krate":0,"index":20070},"children":[],"decl_id":null,"docs":" Specialization.\n","sig":null,"attributes":[{"value":"/ Specialization.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":196644,"byte_end":196663,"line_start":153,"line_end":153,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":20080},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":197079,"byte_end":197100,"line_start":170,"line_end":170,"column_start":16,"column_end":37},"name":"PipelineCreationFlags","qualname":"::pso::PipelineCreationFlags","value":"PipelineCreationFlags {  }","parent":null,"children":[{"krate":0,"index":20081}],"decl_id":null,"docs":" Pipeline creation flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":20165},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":197221,"byte_end":197241,"line_start":174,"line_end":174,"column_start":15,"column_end":35},"name":"DISABLE_OPTIMIZATION","qualname":"::pso::PipelineCreationFlags::DISABLE_OPTIMIZATION","value":"PipelineCreationFlags","parent":{"krate":0,"index":20164},"children":[],"decl_id":null,"docs":" Disable pipeline optimizations.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":20166},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":197398,"byte_end":197415,"line_start":178,"line_end":178,"column_start":15,"column_end":32},"name":"ALLOW_DERIVATIVES","qualname":"::pso::PipelineCreationFlags::ALLOW_DERIVATIVES","value":"PipelineCreationFlags","parent":{"krate":0,"index":20164},"children":[],"decl_id":null,"docs":" Allow derivatives (children) of the pipeline.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":20221},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":197777,"byte_end":197785,"line_start":189,"line_end":189,"column_start":5,"column_end":13},"name":"Pipeline","qualname":"::pso::BasePipeline::Pipeline","value":"BasePipeline::Pipeline(&'a P)","parent":{"krate":0,"index":20218},"children":[],"decl_id":null,"docs":" Referencing an existing pipeline as parent.\n","sig":null,"attributes":[{"value":"/ Referencing an existing pipeline as parent.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":197725,"byte_end":197772,"line_start":188,"line_end":188,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":20224},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":197935,"byte_end":197940,"line_start":193,"line_end":193,"column_start":5,"column_end":10},"name":"Index","qualname":"::pso::BasePipeline::Index","value":"BasePipeline::Index(usize)","parent":{"krate":0,"index":20218},"children":[],"decl_id":null,"docs":" A pipeline in the same create pipelines call.","sig":null,"attributes":[{"value":"/ A pipeline in the same create pipelines call.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":197798,"byte_end":197847,"line_start":190,"line_end":190,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":197852,"byte_end":197855,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ The index of the parent must be lower than the index of the child.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":197860,"byte_end":197930,"line_start":192,"line_end":192,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":20227},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":197988,"byte_end":197992,"line_start":195,"line_end":195,"column_start":5,"column_end":9},"name":"None","qualname":"::pso::BasePipeline::None","value":"BasePipeline::None","parent":{"krate":0,"index":20218},"children":[],"decl_id":null,"docs":" No parent pipeline exists.\n","sig":null,"attributes":[{"value":"/ No parent pipeline exists.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":197953,"byte_end":197983,"line_start":194,"line_end":194,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":20218},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":197695,"byte_end":197707,"line_start":187,"line_end":187,"column_start":10,"column_end":22},"name":"BasePipeline","qualname":"::pso::BasePipeline","value":"pub enum BasePipeline<'a, P: 'a> {\n\n    /// Referencing an existing pipeline as parent.\n    Pipeline(&'a P),\n\n    /// A pipeline in the same create pipelines call.\n    ///\n    /// The index of the parent must be lower than the index of the child.\n    Index(usize),\n\n    /// No parent pipeline exists.\n    None,\n}","parent":null,"children":[{"krate":0,"index":20221},{"krate":0,"index":20224},{"krate":0,"index":20227}],"decl_id":null,"docs":" A reference to a parent pipeline.  The assumption is that\n a parent and derivative/child pipeline have most settings\n in common, and one may be switched for another more quickly\n than entirely unrelated pipelines would be.\n","sig":null,"attributes":[{"value":"/ A reference to a parent pipeline.  The assumption is that","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":197433,"byte_end":197494,"line_start":182,"line_end":182,"column_start":1,"column_end":62}},{"value":"/ a parent and derivative/child pipeline have most settings","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":197495,"byte_end":197556,"line_start":183,"line_end":183,"column_start":1,"column_end":62}},{"value":"/ in common, and one may be switched for another more quickly","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":197557,"byte_end":197620,"line_start":184,"line_end":184,"column_start":1,"column_end":64}},{"value":"/ than entirely unrelated pipelines would be.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":197621,"byte_end":197668,"line_start":185,"line_end":185,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":20233},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":198579,"byte_end":198601,"line_start":209,"line_end":209,"column_start":12,"column_end":34},"name":"SpecializationConstant","qualname":"::pso::SpecializationConstant","value":"SpecializationConstant { id, range }","parent":null,"children":[{"krate":0,"index":20234},{"krate":0,"index":20235}],"decl_id":null,"docs":" Specialization constant for pipelines.","sig":null,"attributes":[{"value":"/ Specialization constant for pipelines.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":197997,"byte_end":198039,"line_start":198,"line_end":198,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":198040,"byte_end":198043,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ Specialization constants allow for easy configuration of","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":198044,"byte_end":198104,"line_start":200,"line_end":200,"column_start":1,"column_end":61}},{"value":"/ multiple similar pipelines. For example, there may be a","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":198105,"byte_end":198164,"line_start":201,"line_end":201,"column_start":1,"column_end":60}},{"value":"/ boolean exposed to the shader that switches the specularity on/off","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":198165,"byte_end":198235,"line_start":202,"line_end":202,"column_start":1,"column_end":71}},{"value":"/ provided via a specialization constant.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":198236,"byte_end":198279,"line_start":203,"line_end":203,"column_start":1,"column_end":44}},{"value":"/ That would produce separate PSO's for the \"on\" and \"off\" states","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":198280,"byte_end":198347,"line_start":204,"line_end":204,"column_start":1,"column_end":68}},{"value":"/ but they share most of the internal stuff and are fast to produce.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":198348,"byte_end":198418,"line_start":205,"line_end":205,"column_start":1,"column_end":71}},{"value":"/ More importantly, they are fast to execute, since the driver","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":198419,"byte_end":198483,"line_start":206,"line_end":206,"column_start":1,"column_end":65}},{"value":"/ can optimize out the branch on that other PSO creation.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":198484,"byte_end":198543,"line_start":207,"line_end":207,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":20234},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":198658,"byte_end":198660,"line_start":211,"line_end":211,"column_start":9,"column_end":11},"name":"id","qualname":"::pso::SpecializationConstant::id","value":"u32","parent":{"krate":0,"index":20233},"children":[],"decl_id":null,"docs":" Constant identifier in shader source.\n","sig":null,"attributes":[{"value":"/ Constant identifier in shader source.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":198608,"byte_end":198649,"line_start":210,"line_end":210,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":20235},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":198726,"byte_end":198731,"line_start":213,"line_end":213,"column_start":9,"column_end":14},"name":"range","qualname":"::pso::SpecializationConstant::range","value":"std::ops::Range<u16>","parent":{"krate":0,"index":20233},"children":[],"decl_id":null,"docs":" Value to override specialization constant.\n","sig":null,"attributes":[{"value":"/ Value to override specialization constant.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":198671,"byte_end":198717,"line_start":212,"line_end":212,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":20240},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":198825,"byte_end":198839,"line_start":218,"line_end":218,"column_start":12,"column_end":26},"name":"Specialization","qualname":"::pso::Specialization","value":"Specialization { constants, data }","parent":null,"children":[{"krate":0,"index":20242},{"krate":0,"index":20243}],"decl_id":null,"docs":" Specialization information structure.\n","sig":null,"attributes":[{"value":"/ Specialization information structure.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":198748,"byte_end":198789,"line_start":216,"line_end":216,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":20242},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":198878,"byte_end":198887,"line_start":220,"line_end":220,"column_start":9,"column_end":18},"name":"constants","qualname":"::pso::Specialization::constants","value":"std::borrow::Cow<'a, [pso::SpecializationConstant]>","parent":{"krate":0,"index":20240},"children":[],"decl_id":null,"docs":" Constant array.\n","sig":null,"attributes":[{"value":"/ Constant array.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":198850,"byte_end":198869,"line_start":219,"line_end":219,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":20243},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":198950,"byte_end":198954,"line_start":222,"line_end":222,"column_start":9,"column_end":13},"name":"data","qualname":"::pso::Specialization::data","value":"std::borrow::Cow<'a, [u8]>","parent":{"krate":0,"index":20240},"children":[],"decl_id":null,"docs":" Raw data.\n","sig":null,"attributes":[{"value":"/ Raw data.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":198928,"byte_end":198941,"line_start":221,"line_end":221,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":1136},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":199053,"byte_end":199058,"line_start":227,"line_end":227,"column_start":15,"column_end":20},"name":"EMPTY","qualname":"::pso::Specialization::<'_>::EMPTY","value":"Self","parent":{"krate":0,"index":1135},"children":[],"decl_id":null,"docs":" Empty specialization instance.\n","sig":null,"attributes":[{"value":"/ Empty specialization instance.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":199004,"byte_end":199038,"line_start":226,"line_end":226,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":20250},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":199323,"byte_end":199344,"line_start":241,"line_end":241,"column_start":12,"column_end":33},"name":"SpecializationStorage","qualname":"::pso::SpecializationStorage","value":"SpecializationStorage {  }","parent":null,"children":[{"krate":0,"index":20251},{"krate":0,"index":20252}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1139},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":199476,"byte_end":199489,"line_start":248,"line_end":248,"column_start":11,"column_end":24},"name":"SpecConstList","qualname":"::pso::SpecConstList","value":"SpecConstList: Sized","parent":null,"children":[{"krate":0,"index":1140}],"decl_id":null,"docs":" List of specialization constants.\n","sig":null,"attributes":[{"value":"/ List of specialization constants.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":199413,"byte_end":199450,"line_start":246,"line_end":246,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":199506,"byte_end":199510,"line_start":249,"line_end":249,"column_start":8,"column_end":12},"name":"fold","qualname":"::pso::SpecConstList::fold","value":"pub fn fold(Self, &mut SpecializationStorage)","parent":{"krate":0,"index":1139},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":20257},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":199936,"byte_end":199952,"line_start":268,"line_end":268,"column_start":12,"column_end":28},"name":"SpecConstListNil","qualname":"::pso::SpecConstListNil","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":20261},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":199998,"byte_end":200015,"line_start":272,"line_end":272,"column_start":12,"column_end":29},"name":"SpecConstListCons","qualname":"::pso::SpecConstListCons","value":"SpecConstListCons { head, tail }","parent":null,"children":[{"krate":0,"index":20264},{"krate":0,"index":20265}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":20264},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":200032,"byte_end":200036,"line_start":273,"line_end":273,"column_start":9,"column_end":13},"name":"head","qualname":"::pso::SpecConstListCons::head","value":"(u32, H)","parent":{"krate":0,"index":20261},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":20265},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":200056,"byte_end":200060,"line_start":274,"line_end":274,"column_start":9,"column_end":13},"name":"tail","qualname":"::pso::SpecConstListCons::tail","value":"T","parent":{"krate":0,"index":20261},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":20272},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":201105,"byte_end":201111,"line_start":306,"line_end":306,"column_start":5,"column_end":11},"name":"Static","qualname":"::pso::State::Static","value":"State::Static(T)","parent":{"krate":0,"index":20270},"children":[],"decl_id":null,"docs":" Static state that cannot be altered.\n","sig":null,"attributes":[{"value":"/ Static state that cannot be altered.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":201060,"byte_end":201100,"line_start":305,"line_end":305,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":20275},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":201172,"byte_end":201179,"line_start":308,"line_end":308,"column_start":5,"column_end":12},"name":"Dynamic","qualname":"::pso::State::Dynamic","value":"State::Dynamic","parent":{"krate":0,"index":20270},"children":[],"decl_id":null,"docs":" Dynamic state set through a command buffer.\n","sig":null,"attributes":[{"value":"/ Dynamic state set through a command buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":201120,"byte_end":201167,"line_start":307,"line_end":307,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":20270},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":201045,"byte_end":201050,"line_start":304,"line_end":304,"column_start":10,"column_end":15},"name":"State","qualname":"::pso::State","value":"pub enum State<T> {\n\n    /// Static state that cannot be altered.\n    Static(T),\n\n    /// Dynamic state set through a command buffer.\n    Dynamic,\n}","parent":null,"children":[{"krate":0,"index":20272},{"krate":0,"index":20275}],"decl_id":null,"docs":" Pipeline state which may be static or dynamic.\n","sig":null,"attributes":[{"value":"/ Pipeline state which may be static or dynamic.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":200854,"byte_end":200904,"line_start":301,"line_end":301,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":201261,"byte_end":201270,"line_start":313,"line_end":313,"column_start":12,"column_end":21},"name":"static_or","qualname":"<State<T>>::static_or","value":"pub fn static_or(Self, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the static value or a default.\n","sig":null,"attributes":[{"value":"/ Returns the static value or a default.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":201207,"byte_end":201249,"line_start":312,"line_end":312,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":201456,"byte_end":201465,"line_start":321,"line_end":321,"column_start":12,"column_end":21},"name":"is_static","qualname":"<State<T>>::is_static","value":"pub fn is_static(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the state is static.\n","sig":null,"attributes":[{"value":"/ Whether the state is static.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":201412,"byte_end":201444,"line_start":320,"line_end":320,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1154},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":201644,"byte_end":201654,"line_start":329,"line_end":329,"column_start":12,"column_end":22},"name":"is_dynamic","qualname":"<State<T>>::is_dynamic","value":"pub fn is_dynamic(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the state is dynamic.\n","sig":null,"attributes":[{"value":"/ Whether the state is dynamic.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":201599,"byte_end":201632,"line_start":328,"line_end":328,"column_start":5,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":1156},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":203224,"byte_end":203234,"line_start":379,"line_end":379,"column_start":8,"column_end":18},"name":"read_spirv","qualname":"::pso::read_spirv","value":"pub fn read_spirv<R: io::Read + io::Seek>(R) -> io::Result<Vec<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Safely read SPIR-V","sig":null,"attributes":[{"value":"/ Safely read SPIR-V","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":202503,"byte_end":202525,"line_start":360,"line_end":360,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":202526,"byte_end":202529,"line_start":361,"line_end":361,"column_start":1,"column_end":4}},{"value":"/ Converts to native endianness and returns correctly aligned storage without unnecessary","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":202530,"byte_end":202621,"line_start":362,"line_end":362,"column_start":1,"column_end":92}},{"value":"/ copying. Returns an `InvalidData` error if the input is trivially not SPIR-V.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":202622,"byte_end":202703,"line_start":363,"line_end":363,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":202704,"byte_end":202707,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ This function can also be used to convert an already in-memory `&[u8]` to a valid `Vec<u32>`,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":202708,"byte_end":202805,"line_start":365,"line_end":365,"column_start":1,"column_end":98}},{"value":"/ but prefer working with `&[u32]` from the start whenever possible.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":202806,"byte_end":202876,"line_start":366,"line_end":366,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":202877,"byte_end":202880,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":202881,"byte_end":202895,"line_start":368,"line_end":368,"column_start":1,"column_end":15}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":202896,"byte_end":202909,"line_start":369,"line_end":369,"column_start":1,"column_end":14}},{"value":"/ let mut file = std::fs::File::open(\"/path/to/shader.spv\").unwrap();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":202910,"byte_end":202981,"line_start":370,"line_end":370,"column_start":1,"column_end":72}},{"value":"/ let words = gfx_hal::read_spirv(&mut file).unwrap();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":202982,"byte_end":203038,"line_start":371,"line_end":371,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":203039,"byte_end":203046,"line_start":372,"line_end":372,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":203047,"byte_end":203054,"line_start":373,"line_end":373,"column_start":1,"column_end":8}},{"value":"/ const SPIRV: &[u8] = &[","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":203055,"byte_end":203082,"line_start":374,"line_end":374,"column_start":1,"column_end":28}},{"value":"/     0x03, 0x02, 0x23, 0x07, // ...","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":203083,"byte_end":203121,"line_start":375,"line_end":375,"column_start":1,"column_end":39}},{"value":"/ ];","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":203122,"byte_end":203128,"line_start":376,"line_end":376,"column_start":1,"column_end":7}},{"value":"/ let words = gfx_hal::read_spirv(std::io::Cursor::new(&SPIRV[..])).unwrap();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":203129,"byte_end":203208,"line_start":377,"line_end":377,"column_start":1,"column_end":80}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":203209,"byte_end":203216,"line_start":378,"line_end":378,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":1159},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"query","qualname":"::query","value":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","parent":null,"children":[{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":20359},{"krate":0,"index":20384},{"krate":0,"index":20383},{"krate":0,"index":20381},{"krate":0,"index":20373},{"krate":0,"index":20378},{"krate":0,"index":20369},{"krate":0,"index":20370},{"krate":0,"index":20366},{"krate":0,"index":20367},{"krate":0,"index":1163},{"krate":0,"index":20386},{"krate":0,"index":20391},{"krate":0,"index":20395},{"krate":0,"index":20459},{"krate":0,"index":20418},{"krate":0,"index":20417},{"krate":0,"index":20413},{"krate":0,"index":20414},{"krate":0,"index":20410},{"krate":0,"index":20411},{"krate":0,"index":20408},{"krate":0,"index":20402},{"krate":0,"index":20400},{"krate":0,"index":20397},{"krate":0,"index":20465},{"krate":0,"index":20470},{"krate":0,"index":20472},{"krate":0,"index":20474},{"krate":0,"index":20476},{"krate":0,"index":20478},{"krate":0,"index":20485},{"krate":0,"index":20488},{"krate":0,"index":20490},{"krate":0,"index":20493},{"krate":0,"index":20495},{"krate":0,"index":20498},{"krate":0,"index":20500},{"krate":0,"index":20503},{"krate":0,"index":20505},{"krate":0,"index":20508},{"krate":0,"index":20511},{"krate":0,"index":20528},{"krate":0,"index":20592},{"krate":0,"index":20551},{"krate":0,"index":20550},{"krate":0,"index":20546},{"krate":0,"index":20547},{"krate":0,"index":20543},{"krate":0,"index":20544},{"krate":0,"index":20541},{"krate":0,"index":20535},{"krate":0,"index":20533},{"krate":0,"index":20530},{"krate":0,"index":20598},{"krate":0,"index":20606},{"krate":0,"index":20608},{"krate":0,"index":20610},{"krate":0,"index":20612},{"krate":0,"index":20614},{"krate":0,"index":20624},{"krate":0,"index":20627},{"krate":0,"index":20629},{"krate":0,"index":20632},{"krate":0,"index":20634},{"krate":0,"index":20637},{"krate":0,"index":20639},{"krate":0,"index":20642},{"krate":0,"index":20644},{"krate":0,"index":20647},{"krate":0,"index":20650},{"krate":0,"index":20676},{"krate":0,"index":20698},{"krate":0,"index":20696},{"krate":0,"index":20694},{"krate":0,"index":20691},{"krate":0,"index":20688},{"krate":0,"index":20689},{"krate":0,"index":20684},{"krate":0,"index":20685},{"krate":0,"index":20699},{"krate":0,"index":20763},{"krate":0,"index":20722},{"krate":0,"index":20721},{"krate":0,"index":20717},{"krate":0,"index":20718},{"krate":0,"index":20714},{"krate":0,"index":20715},{"krate":0,"index":20712},{"krate":0,"index":20706},{"krate":0,"index":20704},{"krate":0,"index":20701},{"krate":0,"index":20769},{"krate":0,"index":20784},{"krate":0,"index":20786},{"krate":0,"index":20788},{"krate":0,"index":20790},{"krate":0,"index":20792},{"krate":0,"index":20809},{"krate":0,"index":20812},{"krate":0,"index":20814},{"krate":0,"index":20817},{"krate":0,"index":20819},{"krate":0,"index":20822},{"krate":0,"index":20824},{"krate":0,"index":20827},{"krate":0,"index":20829},{"krate":0,"index":20832},{"krate":0,"index":20835}],"decl_id":null,"docs":" Queries are commands that can be submitted to a command buffer to record statistics or\n other useful values as the command buffer is running. They are often intended for profiling\n or other introspection, providing a mechanism for the command buffer to record data about its\n operation as it is running.\n","sig":null,"attributes":[{"value":"/ Queries are commands that can be submitted to a command buffer to record statistics or","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":241295,"byte_end":241385,"line_start":1,"line_end":1,"column_start":1,"column_end":91}},{"value":"/ other useful values as the command buffer is running. They are often intended for profiling","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":241386,"byte_end":241481,"line_start":2,"line_end":2,"column_start":1,"column_end":96}},{"value":"/ or other introspection, providing a mechanism for the command buffer to record data about its","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":241482,"byte_end":241579,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/ operation as it is running.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":241580,"byte_end":241611,"line_start":4,"line_end":4,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":1162},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":241699,"byte_end":241701,"line_start":10,"line_end":10,"column_start":10,"column_end":12},"name":"Id","qualname":"::query::Id","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" A query identifier.\n","sig":null,"attributes":[{"value":"/ A query identifier.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":241666,"byte_end":241689,"line_start":9,"line_end":9,"column_start":1,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":20360},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":241893,"byte_end":241904,"line_start":17,"line_end":17,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::query::CreationError::OutOfMemory","value":"CreationError::OutOfMemory(OutOfMemory)","parent":{"krate":0,"index":20359},"children":[],"decl_id":null,"docs":" Out of either host or device memory.\n","sig":null,"attributes":[{"value":"/ Out of either host or device memory.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":241816,"byte_end":241856,"line_start":15,"line_end":15,"column_start":5,"column_end":45}},{"value":"fail(display = \"{}\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":241861,"byte_end":241888,"line_start":16,"line_end":16,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":20363},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":242015,"byte_end":242026,"line_start":21,"line_end":21,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::query::CreationError::Unsupported","value":"CreationError::Unsupported(Type)","parent":{"krate":0,"index":20359},"children":[],"decl_id":null,"docs":" Query type unsupported.\n","sig":null,"attributes":[{"value":"/ Query type unsupported.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":241924,"byte_end":241951,"line_start":19,"line_end":19,"column_start":5,"column_end":32}},{"value":"fail(display = \"Query type ({:?}) unsupported\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":241956,"byte_end":242010,"line_start":20,"line_end":20,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":20359},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":241796,"byte_end":241809,"line_start":14,"line_end":14,"column_start":10,"column_end":23},"name":"CreationError","qualname":"::query::CreationError","value":"pub enum CreationError {\n\n    /// Out of either host or device memory.\n    #[fail(display = \"{}\", _0)]\n    OutOfMemory(OutOfMemory),\n\n    /// Query type unsupported.\n    #[fail(display = \"Query type ({:?}) unsupported\", _0)]\n    Unsupported(Type),\n}","parent":null,"children":[{"krate":0,"index":20360},{"krate":0,"index":20363}],"decl_id":null,"docs":" Query creation error.\n","sig":null,"attributes":[{"value":"/ Query creation error.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":241710,"byte_end":241735,"line_start":12,"line_end":12,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":20386},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":242367,"byte_end":242372,"line_start":33,"line_end":33,"column_start":12,"column_end":17},"name":"Query","qualname":"::query::Query","value":"Query { pool, id }","parent":null,"children":[{"krate":0,"index":20389},{"krate":0,"index":20390}],"decl_id":null,"docs":" A `Query` object has a particular identifier and saves its results to a given `QueryPool`.\n It is passed as a parameter to the command buffer's query methods.\n","sig":null,"attributes":[{"value":"/ A `Query` object has a particular identifier and saves its results to a given `QueryPool`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":242173,"byte_end":242267,"line_start":30,"line_end":30,"column_start":1,"column_end":95}},{"value":"/ It is passed as a parameter to the command buffer's query methods.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":242268,"byte_end":242338,"line_start":31,"line_end":31,"column_start":1,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":20389},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":242407,"byte_end":242411,"line_start":35,"line_end":35,"column_start":9,"column_end":13},"name":"pool","qualname":"::query::Query::pool","value":"&'a <B as Backend>::QueryPool","parent":{"krate":0,"index":20386},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":242395,"byte_end":242398,"line_start":34,"line_end":34,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":20390},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":242447,"byte_end":242449,"line_start":37,"line_end":37,"column_start":9,"column_end":11},"name":"id","qualname":"::query::Query::id","value":"u32","parent":{"krate":0,"index":20386},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":242435,"byte_end":242438,"line_start":36,"line_end":36,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":20395},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":242580,"byte_end":242592,"line_start":43,"line_end":43,"column_start":16,"column_end":28},"name":"ControlFlags","qualname":"::query::ControlFlags","value":"ControlFlags {  }","parent":null,"children":[{"krate":0,"index":20396}],"decl_id":null,"docs":" Query control flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":20479},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":242761,"byte_end":242768,"line_start":47,"line_end":47,"column_start":15,"column_end":22},"name":"PRECISE","qualname":"::query::ControlFlags::PRECISE","value":"ControlFlags","parent":{"krate":0,"index":20478},"children":[],"decl_id":null,"docs":" Occlusion queries **must** return the exact sampler number.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":20528},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":242907,"byte_end":242918,"line_start":54,"line_end":54,"column_start":16,"column_end":27},"name":"ResultFlags","qualname":"::query::ResultFlags","value":"ResultFlags {  }","parent":null,"children":[{"krate":0,"index":20529}],"decl_id":null,"docs":" Query result flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":20615},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":243023,"byte_end":243030,"line_start":56,"line_end":56,"column_start":15,"column_end":22},"name":"BITS_64","qualname":"::query::ResultFlags::BITS_64","value":"ResultFlags","parent":{"krate":0,"index":20614},"children":[],"decl_id":null,"docs":" Results will be written as an array of 64-bit unsigned integer values.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":20616},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":243146,"byte_end":243150,"line_start":58,"line_end":58,"column_start":15,"column_end":19},"name":"WAIT","qualname":"::query::ResultFlags::WAIT","value":"ResultFlags","parent":{"krate":0,"index":20614},"children":[],"decl_id":null,"docs":" Wait for each query’s status to become available before retrieving its results.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":20617},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":243229,"byte_end":243246,"line_start":60,"line_end":60,"column_start":15,"column_end":32},"name":"WITH_AVAILABILITY","qualname":"::query::ResultFlags::WITH_AVAILABILITY","value":"ResultFlags","parent":{"krate":0,"index":20614},"children":[],"decl_id":null,"docs":" Availability status accompanies the results.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":20618},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":243321,"byte_end":243328,"line_start":62,"line_end":62,"column_start":15,"column_end":22},"name":"PARTIAL","qualname":"::query::ResultFlags::PARTIAL","value":"ResultFlags","parent":{"krate":0,"index":20614},"children":[],"decl_id":null,"docs":" Returning partial results is acceptable.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":20677},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":243569,"byte_end":243578,"line_start":71,"line_end":71,"column_start":5,"column_end":14},"name":"Occlusion","qualname":"::query::Type::Occlusion","value":"Type::Occlusion","parent":{"krate":0,"index":20676},"children":[],"decl_id":null,"docs":" Occlusion query. Count the number of drawn samples between\n the start and end of the query command.\n","sig":null,"attributes":[{"value":"/ Occlusion query. Count the number of drawn samples between","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":243454,"byte_end":243516,"line_start":69,"line_end":69,"column_start":5,"column_end":67}},{"value":"/ the start and end of the query command.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":243521,"byte_end":243564,"line_start":70,"line_end":70,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":20679},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":243749,"byte_end":243767,"line_start":75,"line_end":75,"column_start":5,"column_end":23},"name":"PipelineStatistics","qualname":"::query::Type::PipelineStatistics","value":"Type::PipelineStatistics(PipelineStatistic)","parent":{"krate":0,"index":20676},"children":[],"decl_id":null,"docs":" Pipeline statistic query. Counts the number of pipeline stage\n invocations of the given types between the start and end of\n the query command.\n","sig":null,"attributes":[{"value":"/ Pipeline statistic query. Counts the number of pipeline stage","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":243584,"byte_end":243649,"line_start":72,"line_end":72,"column_start":5,"column_end":70}},{"value":"/ invocations of the given types between the start and end of","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":243654,"byte_end":243717,"line_start":73,"line_end":73,"column_start":5,"column_end":68}},{"value":"/ the query command.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":243722,"byte_end":243744,"line_start":74,"line_end":74,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":20682},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":243902,"byte_end":243911,"line_start":78,"line_end":78,"column_start":5,"column_end":14},"name":"Timestamp","qualname":"::query::Type::Timestamp","value":"Type::Timestamp","parent":{"krate":0,"index":20676},"children":[],"decl_id":null,"docs":" Timestamp query. Timestamps can be recorded to the\n query pool by calling `write_timestamp()`.\n","sig":null,"attributes":[{"value":"/ Timestamp query. Timestamps can be recorded to the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":243792,"byte_end":243846,"line_start":76,"line_end":76,"column_start":5,"column_end":59}},{"value":"/ query pool by calling `write_timestamp()`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":243851,"byte_end":243897,"line_start":77,"line_end":77,"column_start":5,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":20676},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":243443,"byte_end":243447,"line_start":68,"line_end":68,"column_start":10,"column_end":14},"name":"Type","qualname":"::query::Type","value":"pub enum Type {\n\n    /// Occlusion query. Count the number of drawn samples between\n    /// the start and end of the query command.\n    Occlusion,\n\n    /// Pipeline statistic query. Counts the number of pipeline stage\n    /// invocations of the given types between the start and end of\n    /// the query command.\n    PipelineStatistics(PipelineStatistic),\n\n    /// Timestamp query. Timestamps can be recorded to the\n    /// query pool by calling `write_timestamp()`.\n    Timestamp,\n}","parent":null,"children":[{"krate":0,"index":20677},{"krate":0,"index":20679},{"krate":0,"index":20682}],"decl_id":null,"docs":" Type of queries in a query pool.\n","sig":null,"attributes":[{"value":"/ Type of queries in a query pool.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":243346,"byte_end":243382,"line_start":66,"line_end":66,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":20699},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":244042,"byte_end":244059,"line_start":84,"line_end":84,"column_start":16,"column_end":33},"name":"PipelineStatistic","qualname":"::query::PipelineStatistic","value":"PipelineStatistic {  }","parent":null,"children":[{"krate":0,"index":20700}],"decl_id":null,"docs":" Pipeline statistic flags\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":20793},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":244093,"byte_end":244116,"line_start":86,"line_end":86,"column_start":15,"column_end":38},"name":"INPUT_ASSEMBLY_VERTICES","qualname":"::query::PipelineStatistic::INPUT_ASSEMBLY_VERTICES","value":"PipelineStatistic","parent":{"krate":0,"index":20792},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":20794},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":244150,"byte_end":244175,"line_start":88,"line_end":88,"column_start":15,"column_end":40},"name":"INPUT_ASSEMBLY_PRIMITIVES","qualname":"::query::PipelineStatistic::INPUT_ASSEMBLY_PRIMITIVES","value":"PipelineStatistic","parent":{"krate":0,"index":20792},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":20795},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":244209,"byte_end":244234,"line_start":90,"line_end":90,"column_start":15,"column_end":40},"name":"VERTEX_SHADER_INVOCATIONS","qualname":"::query::PipelineStatistic::VERTEX_SHADER_INVOCATIONS","value":"PipelineStatistic","parent":{"krate":0,"index":20792},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":20796},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":244268,"byte_end":244295,"line_start":92,"line_end":92,"column_start":15,"column_end":42},"name":"GEOMETRY_SHADER_INVOCATIONS","qualname":"::query::PipelineStatistic::GEOMETRY_SHADER_INVOCATIONS","value":"PipelineStatistic","parent":{"krate":0,"index":20792},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":20797},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":244329,"byte_end":244355,"line_start":94,"line_end":94,"column_start":15,"column_end":41},"name":"GEOMETRY_SHADER_PRIMITIVES","qualname":"::query::PipelineStatistic::GEOMETRY_SHADER_PRIMITIVES","value":"PipelineStatistic","parent":{"krate":0,"index":20792},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":20798},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":244390,"byte_end":244410,"line_start":96,"line_end":96,"column_start":15,"column_end":35},"name":"CLIPPING_INVOCATIONS","qualname":"::query::PipelineStatistic::CLIPPING_INVOCATIONS","value":"PipelineStatistic","parent":{"krate":0,"index":20792},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":20799},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":244445,"byte_end":244464,"line_start":98,"line_end":98,"column_start":15,"column_end":34},"name":"CLIPPING_PRIMITIVES","qualname":"::query::PipelineStatistic::CLIPPING_PRIMITIVES","value":"PipelineStatistic","parent":{"krate":0,"index":20792},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":20800},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":244499,"byte_end":244526,"line_start":100,"line_end":100,"column_start":15,"column_end":42},"name":"FRAGMENT_SHADER_INVOCATIONS","qualname":"::query::PipelineStatistic::FRAGMENT_SHADER_INVOCATIONS","value":"PipelineStatistic","parent":{"krate":0,"index":20792},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":20801},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":244561,"byte_end":244580,"line_start":102,"line_end":102,"column_start":15,"column_end":34},"name":"HULL_SHADER_PATCHES","qualname":"::query::PipelineStatistic::HULL_SHADER_PATCHES","value":"PipelineStatistic","parent":{"krate":0,"index":20792},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":20802},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":244616,"byte_end":244641,"line_start":104,"line_end":104,"column_start":15,"column_end":40},"name":"DOMAIN_SHADER_INVOCATIONS","qualname":"::query::PipelineStatistic::DOMAIN_SHADER_INVOCATIONS","value":"PipelineStatistic","parent":{"krate":0,"index":20792},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":20803},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":244677,"byte_end":244703,"line_start":106,"line_end":106,"column_start":15,"column_end":41},"name":"COMPUTE_SHADER_INVOCATIONS","qualname":"::query::PipelineStatistic::COMPUTE_SHADER_INVOCATIONS","value":"PipelineStatistic","parent":{"krate":0,"index":20792},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1165},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"queue","qualname":"::queue","value":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1219},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":23032},{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":23044},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":23064},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":23068},{"krate":0,"index":20956},{"krate":0,"index":21023},{"krate":0,"index":21022},{"krate":0,"index":21020},{"krate":0,"index":21017},{"krate":0,"index":21018},{"krate":0,"index":21014},{"krate":0,"index":21015},{"krate":0,"index":21008},{"krate":0,"index":20965},{"krate":0,"index":21025},{"krate":0,"index":21032},{"krate":0,"index":1284},{"krate":0,"index":21037},{"krate":0,"index":21043},{"krate":0,"index":1300}],"decl_id":null,"docs":" Command queues.","sig":null,"attributes":[{"value":"/ Command queues.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":244723,"byte_end":244742,"line_start":1,"line_end":1,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":244743,"byte_end":244746,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Queues are the execution paths of the graphical processing units. These process","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":244747,"byte_end":244830,"line_start":3,"line_end":3,"column_start":1,"column_end":84}},{"value":"/ submitted commands buffers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":244831,"byte_end":244862,"line_start":4,"line_end":4,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":244863,"byte_end":244866,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ There are different types of queues, which can only handle associated command buffers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":244867,"byte_end":244957,"line_start":6,"line_end":6,"column_start":1,"column_end":91}},{"value":"/ `CommandQueue<B, C>` has the capability defined by `C`: graphics, compute and transfer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":244958,"byte_end":245049,"line_start":7,"line_end":7,"column_start":1,"column_end":92}}]},{"kind":"Mod","id":{"krate":0,"index":1166},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"capability","qualname":"::queue::capability","value":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","parent":null,"children":[{"krate":0,"index":1167},{"krate":0,"index":20882},{"krate":0,"index":20883},{"krate":0,"index":20885},{"krate":0,"index":20886},{"krate":0,"index":20888},{"krate":0,"index":20889},{"krate":0,"index":20891},{"krate":0,"index":20892},{"krate":0,"index":20894},{"krate":0,"index":20895},{"krate":0,"index":1168},{"krate":0,"index":1170},{"krate":0,"index":1172},{"krate":0,"index":1174},{"krate":0,"index":1176},{"krate":0,"index":1178},{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1192},{"krate":0,"index":1195},{"krate":0,"index":1197},{"krate":0,"index":1199},{"krate":0,"index":1201},{"krate":0,"index":1203},{"krate":0,"index":1205},{"krate":0,"index":1207},{"krate":0,"index":1209},{"krate":0,"index":1211},{"krate":0,"index":1213},{"krate":0,"index":1215},{"krate":0,"index":1217}],"decl_id":null,"docs":" Type system encoded queue capabilities.\n","sig":null,"attributes":[{"value":"/ Type system encoded queue capabilities.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":251286,"byte_end":251329,"line_start":1,"line_end":1,"column_start":1,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":20882},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":251464,"byte_end":251471,"line_start":6,"line_end":6,"column_start":10,"column_end":17},"name":"General","qualname":"::queue::capability::General","value":"pub enum General { }","parent":null,"children":[],"decl_id":null,"docs":" General capability, supporting graphics, compute and transfer operations.\n","sig":null,"attributes":[{"value":"/ General capability, supporting graphics, compute and transfer operations.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":251360,"byte_end":251437,"line_start":4,"line_end":4,"column_start":1,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":20885},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":251571,"byte_end":251579,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"Graphics","qualname":"::queue::capability::Graphics","value":"pub enum Graphics { }","parent":null,"children":[],"decl_id":null,"docs":" Graphics capability, supporting graphics and transfer operations.\n","sig":null,"attributes":[{"value":"/ Graphics capability, supporting graphics and transfer operations.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":251475,"byte_end":251544,"line_start":7,"line_end":7,"column_start":1,"column_end":70}}]},{"kind":"Enum","id":{"krate":0,"index":20888},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":251677,"byte_end":251684,"line_start":12,"line_end":12,"column_start":10,"column_end":17},"name":"Compute","qualname":"::queue::capability::Compute","value":"pub enum Compute { }","parent":null,"children":[],"decl_id":null,"docs":" Compute capability, supporting compute and transfer operations.\n","sig":null,"attributes":[{"value":"/ Compute capability, supporting compute and transfer operations.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":251583,"byte_end":251650,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Enum","id":{"krate":0,"index":20891},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":251776,"byte_end":251784,"line_start":15,"line_end":15,"column_start":10,"column_end":18},"name":"Transfer","qualname":"::queue::capability::Transfer","value":"pub enum Transfer { }","parent":null,"children":[],"decl_id":null,"docs":" Transfer capability, supporting only transfer operations.\n","sig":null,"attributes":[{"value":"/ Transfer capability, supporting only transfer operations.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":251688,"byte_end":251749,"line_start":13,"line_end":13,"column_start":1,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":20894},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":251851,"byte_end":251868,"line_start":19,"line_end":19,"column_start":10,"column_end":27},"name":"GraphicsOrCompute","qualname":"::queue::capability::GraphicsOrCompute","value":"pub enum GraphicsOrCompute { }","parent":null,"children":[],"decl_id":null,"docs":" Graphics or compute capability.\n","sig":null,"attributes":[{"value":"/ Graphics or compute capability.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":251789,"byte_end":251824,"line_start":17,"line_end":17,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":1168},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":252080,"byte_end":252090,"line_start":24,"line_end":24,"column_start":11,"column_end":21},"name":"Capability","qualname":"::queue::capability::Capability","value":"Capability","parent":null,"children":[{"krate":0,"index":1169}],"decl_id":null,"docs":" A Capability is an object that specifies what kind of operations\n a queue type performs, allowing what types support what queue operations\n to be described at runtime by the type system.\n","sig":null,"attributes":[{"value":"/ A Capability is an object that specifies what kind of operations","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":251873,"byte_end":251941,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/ a queue type performs, allowing what types support what queue operations","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":251942,"byte_end":252018,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ to be described at runtime by the type system.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":252019,"byte_end":252069,"line_start":23,"line_end":23,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":252197,"byte_end":252209,"line_start":27,"line_end":27,"column_start":8,"column_end":20},"name":"supported_by","qualname":"::queue::capability::Capability::supported_by","value":"pub fn supported_by(QueueType) -> bool","parent":{"krate":0,"index":1168},"children":[],"decl_id":null,"docs":" Return true if this type level capability is supported by\n a run-time queue type.\n","sig":null,"attributes":[{"value":"/ Return true if this type level capability is supported by","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":252097,"byte_end":252158,"line_start":25,"line_end":25,"column_start":5,"column_end":66}},{"value":"/ a run-time queue type.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":252163,"byte_end":252189,"line_start":26,"line_end":26,"column_start":5,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":1178},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":253167,"byte_end":253175,"line_start":65,"line_end":65,"column_start":11,"column_end":19},"name":"Supports","qualname":"::queue::capability::Supports","value":"Supports<T>","parent":null,"children":[],"decl_id":null,"docs":" A trait that indicates that a particular type of queue supports\n a particular `Capability`.\n","sig":null,"attributes":[{"value":"/ A trait that indicates that a particular type of queue supports","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":253058,"byte_end":253125,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/ a particular `Capability`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":253126,"byte_end":253156,"line_start":64,"line_end":64,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":1190},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":253647,"byte_end":253652,"line_start":78,"line_end":78,"column_start":11,"column_end":16},"name":"Upper","qualname":"::queue::capability::Upper","value":"Upper","parent":null,"children":[{"krate":0,"index":1191}],"decl_id":null,"docs":" Encoding the minimal capability to support a combination of other capabilities.\n","sig":null,"attributes":[{"value":"/ Encoding the minimal capability to support a combination of other capabilities.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":253553,"byte_end":253636,"line_start":77,"line_end":77,"column_start":1,"column_end":84}}]},{"kind":"Type","id":{"krate":0,"index":1191},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":253711,"byte_end":253717,"line_start":80,"line_end":80,"column_start":10,"column_end":16},"name":"Result","qualname":"::queue::capability::Upper::Result","value":"type Result;","parent":{"krate":0,"index":1190},"children":[],"decl_id":null,"docs":" Resulting minimal required capability.\n","sig":null,"attributes":[{"value":"/ Resulting minimal required capability.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":253659,"byte_end":253701,"line_start":79,"line_end":79,"column_start":5,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":1219},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"family","qualname":"::queue::family","value":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","parent":null,"children":[{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":23014},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":23022},{"krate":0,"index":1232},{"krate":0,"index":20897},{"krate":0,"index":20938},{"krate":0,"index":20937},{"krate":0,"index":20935},{"krate":0,"index":20931},{"krate":0,"index":20932},{"krate":0,"index":20928},{"krate":0,"index":20929},{"krate":0,"index":20925},{"krate":0,"index":20919},{"krate":0,"index":20900},{"krate":0,"index":20940},{"krate":0,"index":20945},{"krate":0,"index":1239},{"krate":0,"index":1243},{"krate":0,"index":20949},{"krate":0,"index":20953},{"krate":0,"index":1248}],"decl_id":null,"docs":" Queue family and groups.\n","sig":null,"attributes":[{"value":"/ Queue family and groups.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":254567,"byte_end":254595,"line_start":1,"line_end":1,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":1232},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":254991,"byte_end":255002,"line_start":14,"line_end":14,"column_start":11,"column_end":22},"name":"QueueFamily","qualname":"::queue::family::QueueFamily","value":"QueueFamily: Debug + Any + Send + Sync","parent":null,"children":[{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238}],"decl_id":null,"docs":" General information about a queue family, available upon adapter discovery.","sig":null,"attributes":[{"value":"/ General information about a queue family, available upon adapter discovery.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":254812,"byte_end":254891,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":254892,"byte_end":254895,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Note that a backend can expose multiple queue families with the same properties.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":254896,"byte_end":254980,"line_start":13,"line_end":13,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1233},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":255075,"byte_end":255085,"line_start":16,"line_end":16,"column_start":8,"column_end":18},"name":"queue_type","qualname":"::queue::family::QueueFamily::queue_type","value":"pub fn queue_type(&Self) -> QueueType","parent":{"krate":0,"index":1232},"children":[],"decl_id":null,"docs":" Returns the type of queues.\n","sig":null,"attributes":[{"value":"/ Returns the type of queues.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":255036,"byte_end":255067,"line_start":15,"line_end":15,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":255181,"byte_end":255191,"line_start":18,"line_end":18,"column_start":8,"column_end":18},"name":"max_queues","qualname":"::queue::family::QueueFamily::max_queues","value":"pub fn max_queues(&Self) -> usize","parent":{"krate":0,"index":1232},"children":[],"decl_id":null,"docs":" Returns maximum number of queues created from this family.\n","sig":null,"attributes":[{"value":"/ Returns maximum number of queues created from this family.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":255111,"byte_end":255173,"line_start":17,"line_end":17,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":255280,"byte_end":255297,"line_start":20,"line_end":20,"column_start":8,"column_end":25},"name":"supports_graphics","qualname":"::queue::family::QueueFamily::supports_graphics","value":"pub fn supports_graphics(&Self) -> bool","parent":{"krate":0,"index":1232},"children":[],"decl_id":null,"docs":" Returns true if the queue supports graphics operations.\n","sig":null,"attributes":[{"value":"/ Returns true if the queue supports graphics operations.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":255213,"byte_end":255272,"line_start":19,"line_end":19,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":255441,"byte_end":255457,"line_start":24,"line_end":24,"column_start":8,"column_end":24},"name":"supports_compute","qualname":"::queue::family::QueueFamily::supports_compute","value":"pub fn supports_compute(&Self) -> bool","parent":{"krate":0,"index":1232},"children":[],"decl_id":null,"docs":" Returns true if the queue supports compute operations.\n","sig":null,"attributes":[{"value":"/ Returns true if the queue supports compute operations.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":255375,"byte_end":255433,"line_start":23,"line_end":23,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":255601,"byte_end":255618,"line_start":28,"line_end":28,"column_start":8,"column_end":25},"name":"supports_transfer","qualname":"::queue::family::QueueFamily::supports_transfer","value":"pub fn supports_transfer(&Self) -> bool","parent":{"krate":0,"index":1232},"children":[],"decl_id":null,"docs":" Returns true if the queue supports transfer operations.\n","sig":null,"attributes":[{"value":"/ Returns true if the queue supports transfer operations.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":255534,"byte_end":255593,"line_start":27,"line_end":27,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":255736,"byte_end":255738,"line_start":32,"line_end":32,"column_start":8,"column_end":10},"name":"id","qualname":"::queue::family::QueueFamily::id","value":"pub fn id(&Self) -> QueueFamilyId","parent":{"krate":0,"index":1232},"children":[],"decl_id":null,"docs":" Returns the queue family ID.\n","sig":null,"attributes":[{"value":"/ Returns the queue family ID.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":255696,"byte_end":255728,"line_start":31,"line_end":31,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":20897},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":255948,"byte_end":255961,"line_start":38,"line_end":38,"column_start":12,"column_end":25},"name":"QueueFamilyId","qualname":"::queue::family::QueueFamilyId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Identifier for a queue family of a physical device.\n","sig":null,"attributes":[{"value":"/ Identifier for a queue family of a physical device.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":255767,"byte_end":255822,"line_start":35,"line_end":35,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":20899},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":255962,"byte_end":255971,"line_start":38,"line_end":38,"column_start":26,"column_end":35},"name":"0","qualname":"::queue::family::QueueFamilyId::0","value":"usize","parent":{"krate":0,"index":20897},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":20940},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":256062,"byte_end":256072,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"QueueGroup","qualname":"::queue::family::QueueGroup","value":"QueueGroup { queues }","parent":null,"children":[{"krate":0,"index":20943},{"krate":0,"index":20944}],"decl_id":null,"docs":" Strong-typed group of queues of the same queue family.\n","sig":null,"attributes":[{"value":"/ Strong-typed group of queues of the same queue family.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":255975,"byte_end":256033,"line_start":40,"line_end":40,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":20944},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":256172,"byte_end":256178,"line_start":45,"line_end":45,"column_start":9,"column_end":15},"name":"queues","qualname":"::queue::family::QueueGroup::queues","value":"std::vec::Vec<queue::CommandQueue<B, C>>","parent":{"krate":0,"index":20940},"children":[],"decl_id":null,"docs":" Command queues created in this family.\n","sig":null,"attributes":[{"value":"/ Command queues created in this family.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":256121,"byte_end":256163,"line_start":44,"line_end":44,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":256305,"byte_end":256311,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"family","qualname":"<QueueGroup<B, C>>::family","value":"pub fn family(&Self) -> QueueFamilyId","parent":null,"children":[],"decl_id":null,"docs":" Return the associated queue family id.\n","sig":null,"attributes":[{"value":"/ Return the associated queue family id.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":256251,"byte_end":256293,"line_start":49,"line_end":49,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":20949},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":257096,"byte_end":257102,"line_start":77,"line_end":77,"column_start":12,"column_end":18},"name":"Queues","qualname":"::queue::family::Queues","value":"","parent":null,"children":[],"decl_id":null,"docs":" Contains a list of all instantiated queues. Conceptually structured as a collection of\n `QueueGroup`s, one for each queue family.\n","sig":null,"attributes":[{"value":"/ Contains a list of all instantiated queues. Conceptually structured as a collection of","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":256931,"byte_end":257021,"line_start":74,"line_end":74,"column_start":1,"column_end":91}},{"value":"/ `QueueGroup`s, one for each queue family.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":257022,"byte_end":257067,"line_start":75,"line_end":75,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1250},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":257406,"byte_end":257410,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"take","qualname":"<Queues<B>>::take","value":"pub fn take<C: Capability>(&mut Self, QueueFamilyId)\n-> Option<QueueGroup<B, C>>","parent":null,"children":[],"decl_id":null,"docs":" Removes the queue family with the passed id from the queue list and\n returns the queue group.","sig":null,"attributes":[{"value":"/ Removes the queue family with the passed id from the queue list and","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":257184,"byte_end":257255,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ returns the queue group.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":257260,"byte_end":257288,"line_start":81,"line_end":81,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":257293,"byte_end":257296,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":257301,"byte_end":257313,"line_start":83,"line_end":83,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":257318,"byte_end":257321,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Panics if the family doesn't expose required queue capabilities.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":257326,"byte_end":257394,"line_start":85,"line_end":85,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":257771,"byte_end":257779,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"take_raw","qualname":"<Queues<B>>::take_raw","value":"pub fn take_raw(&mut Self, QueueFamilyId) -> Option<Vec<B::CommandQueue>>","parent":null,"children":[],"decl_id":null,"docs":" Removes the queue family with the passed id from the queue list and\n returns the command queues.\n","sig":null,"attributes":[{"value":"/ Removes the queue family with the passed id from the queue list and","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":257652,"byte_end":257723,"line_start":93,"line_end":93,"column_start":5,"column_end":76}},{"value":"/ returns the command queues.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":257728,"byte_end":257759,"line_start":94,"line_end":94,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":20957},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":245769,"byte_end":245776,"line_start":32,"line_end":32,"column_start":5,"column_end":12},"name":"General","qualname":"::queue::QueueType::General","value":"QueueType::General","parent":{"krate":0,"index":20956},"children":[],"decl_id":null,"docs":" Supports all operations.\n","sig":null,"attributes":[{"value":"/ Supports all operations.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":245736,"byte_end":245764,"line_start":31,"line_end":31,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":20959},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":245838,"byte_end":245846,"line_start":34,"line_end":34,"column_start":5,"column_end":13},"name":"Graphics","qualname":"::queue::QueueType::Graphics","value":"QueueType::Graphics","parent":{"krate":0,"index":20956},"children":[],"decl_id":null,"docs":" Only supports graphics and transfer operations.\n","sig":null,"attributes":[{"value":"/ Only supports graphics and transfer operations.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":245782,"byte_end":245833,"line_start":33,"line_end":33,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":20961},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":245907,"byte_end":245914,"line_start":36,"line_end":36,"column_start":5,"column_end":12},"name":"Compute","qualname":"::queue::QueueType::Compute","value":"QueueType::Compute","parent":{"krate":0,"index":20956},"children":[],"decl_id":null,"docs":" Only supports compute and transfer operations.\n","sig":null,"attributes":[{"value":"/ Only supports compute and transfer operations.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":245852,"byte_end":245902,"line_start":35,"line_end":35,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":20963},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":245963,"byte_end":245971,"line_start":38,"line_end":38,"column_start":5,"column_end":13},"name":"Transfer","qualname":"::queue::QueueType::Transfer","value":"QueueType::Transfer","parent":{"krate":0,"index":20956},"children":[],"decl_id":null,"docs":" Only supports transfer operations.\n","sig":null,"attributes":[{"value":"/ Only supports transfer operations.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":245920,"byte_end":245958,"line_start":37,"line_end":37,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":20956},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":245720,"byte_end":245729,"line_start":30,"line_end":30,"column_start":10,"column_end":19},"name":"QueueType","qualname":"::queue::QueueType","value":"pub enum QueueType {\n\n    /// Supports all operations.\n    General,\n\n    /// Only supports graphics and transfer operations.\n    Graphics,\n\n    /// Only supports compute and transfer operations.\n    Compute,\n\n    /// Only supports transfer operations.\n    Transfer,\n}","parent":null,"children":[{"krate":0,"index":20957},{"krate":0,"index":20959},{"krate":0,"index":20961},{"krate":0,"index":20963}],"decl_id":null,"docs":" The type of the queue, an enum encompassing `queue::Capability`\n","sig":null,"attributes":[{"value":"/ The type of the queue, an enum encompassing `queue::Capability`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":245535,"byte_end":245602,"line_start":27,"line_end":27,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":21025},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":246052,"byte_end":246062,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"name":"Submission","qualname":"::queue::Submission","value":"Submission { command_buffers, wait_semaphores, signal_semaphores }","parent":null,"children":[{"krate":0,"index":21029},{"krate":0,"index":21030},{"krate":0,"index":21031}],"decl_id":null,"docs":" Submission information for a command queue.\n","sig":null,"attributes":[{"value":"/ Submission information for a command queue.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":245976,"byte_end":246023,"line_start":41,"line_end":41,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":21029},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":246120,"byte_end":246135,"line_start":45,"line_end":45,"column_start":9,"column_end":24},"name":"command_buffers","qualname":"::queue::Submission::command_buffers","value":"Ic","parent":{"krate":0,"index":21025},"children":[],"decl_id":null,"docs":" Command buffers to submit.\n","sig":null,"attributes":[{"value":"/ Command buffers to submit.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":246081,"byte_end":246111,"line_start":44,"line_end":44,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":21030},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":246211,"byte_end":246226,"line_start":47,"line_end":47,"column_start":9,"column_end":24},"name":"wait_semaphores","qualname":"::queue::Submission::wait_semaphores","value":"Iw","parent":{"krate":0,"index":21025},"children":[],"decl_id":null,"docs":" Semaphores to wait being signalled before submission.\n","sig":null,"attributes":[{"value":"/ Semaphores to wait being signalled before submission.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":246145,"byte_end":246202,"line_start":46,"line_end":46,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":21031},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":246338,"byte_end":246355,"line_start":49,"line_end":49,"column_start":9,"column_end":26},"name":"signal_semaphores","qualname":"::queue::Submission::signal_semaphores","value":"Is","parent":{"krate":0,"index":21025},"children":[],"decl_id":null,"docs":" Semaphores to signal after all command buffers in the submission have finished execution.\n","sig":null,"attributes":[{"value":"/ Semaphores to signal after all command buffers in the submission have finished execution.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":246236,"byte_end":246329,"line_start":48,"line_end":48,"column_start":5,"column_end":98}}]},{"kind":"Trait","id":{"krate":0,"index":1284},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":246537,"byte_end":246552,"line_start":54,"line_end":54,"column_start":11,"column_end":26},"name":"RawCommandQueue","qualname":"::queue::RawCommandQueue","value":"RawCommandQueue<B: Backend>: fmt::Debug + Any + Send + Sync","parent":null,"children":[{"krate":0,"index":1286},{"krate":0,"index":1293},{"krate":0,"index":1299}],"decl_id":null,"docs":" `RawCommandQueue` are abstractions to the internal GPU execution engines.\n Commands are executed on the the device by submitting command buffers to queues.\n","sig":null,"attributes":[{"value":"/ `RawCommandQueue` are abstractions to the internal GPU execution engines.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":246364,"byte_end":246441,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ Commands are executed on the the device by submitting command buffers to queues.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":246442,"byte_end":246526,"line_start":53,"line_end":53,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":247107,"byte_end":247113,"line_start":62,"line_end":62,"column_start":15,"column_end":21},"name":"submit","qualname":"::queue::RawCommandQueue::submit","value":"pub unsafe fn submit<'a, T, Ic, S, Iw,\n                     Is>(&mut Self, Submission<Ic, Iw, Is>, Option<&B::Fence>)\nwhere T: 'a + Borrow<B::CommandBuffer>, Ic: IntoIterator<Item = &'a T>,\nS: 'a + Borrow<B::Semaphore>, Iw: IntoIterator<Item =\n(&'a S, pso::PipelineStage)>, Is: IntoIterator<Item = &'a S>","parent":{"krate":0,"index":1284},"children":[],"decl_id":null,"docs":" Submit command buffers to queue for execution.\n `fence` must be in unsignalled state, and will be signalled after all command buffers in the submission have\n finished execution.","sig":null,"attributes":[{"value":"/ Submit command buffers to queue for execution.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":246603,"byte_end":246653,"line_start":55,"line_end":55,"column_start":5,"column_end":55}},{"value":"/ `fence` must be in unsignalled state, and will be signalled after all command buffers in the submission have","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":246658,"byte_end":246770,"line_start":56,"line_end":56,"column_start":5,"column_end":117}},{"value":"/ finished execution.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":246775,"byte_end":246798,"line_start":57,"line_end":57,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":246803,"byte_end":246806,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Unsafe because it's not checked that the queue can process the submitted command buffers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":246811,"byte_end":246904,"line_start":59,"line_end":59,"column_start":5,"column_end":98}},{"value":"/ Trying to submit compute commands to a graphics queue will result in undefined behavior.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":246909,"byte_end":247001,"line_start":60,"line_end":60,"column_start":5,"column_end":97}},{"value":"/ Each queue implements safer wrappers according to their supported functionalities!","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":247006,"byte_end":247092,"line_start":61,"line_end":61,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":247751,"byte_end":247758,"line_start":78,"line_end":78,"column_start":15,"column_end":22},"name":"present","qualname":"::queue::RawCommandQueue::present","value":"pub unsafe fn present<'a, W, Is, S, Iw>(&mut Self, Is, Iw)\n-> Result<Option<Suboptimal>, PresentError> where Self: Sized, W: 'a +\nBorrow<B::Swapchain>, Is: IntoIterator<Item = (&'a W, SwapImageIndex)>,\nS: 'a + Borrow<B::Semaphore>, Iw: IntoIterator<Item = &'a S>","parent":{"krate":0,"index":1284},"children":[],"decl_id":null,"docs":" Presents the result of the queue to the given swapchains, after waiting on all the\n semaphores given in `wait_semaphores`. A given swapchain must not appear in this\n list more than once.","sig":null,"attributes":[{"value":"/ Presents the result of the queue to the given swapchains, after waiting on all the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":247473,"byte_end":247559,"line_start":73,"line_end":73,"column_start":5,"column_end":91}},{"value":"/ semaphores given in `wait_semaphores`. A given swapchain must not appear in this","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":247564,"byte_end":247648,"line_start":74,"line_end":74,"column_start":5,"column_end":89}},{"value":"/ list more than once.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":247653,"byte_end":247677,"line_start":75,"line_end":75,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":247682,"byte_end":247685,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Unsafe for the same reasons as `submit()`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":247690,"byte_end":247736,"line_start":77,"line_end":77,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1299},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":248149,"byte_end":248158,"line_start":91,"line_end":91,"column_start":8,"column_end":17},"name":"wait_idle","qualname":"::queue::RawCommandQueue::wait_idle","value":"pub fn wait_idle(&Self) -> Result<(), HostExecutionError>","parent":{"krate":0,"index":1284},"children":[],"decl_id":null,"docs":" Wait for the queue to idle.\n","sig":null,"attributes":[{"value":"/ Wait for the queue to idle.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":248110,"byte_end":248141,"line_start":90,"line_end":90,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":21037},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":248308,"byte_end":248320,"line_start":96,"line_end":96,"column_start":12,"column_end":24},"name":"CommandQueue","qualname":"::queue::CommandQueue","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stronger-typed and safer `CommandQueue` wraps around `RawCommandQueue`.\n","sig":null,"attributes":[{"value":"/ Stronger-typed and safer `CommandQueue` wraps around `RawCommandQueue`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":248204,"byte_end":248279,"line_start":94,"line_end":94,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1303},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":248649,"byte_end":248652,"line_start":105,"line_end":105,"column_start":19,"column_end":22},"name":"new","qualname":"<CommandQueue<B, C>>::new","value":"pub unsafe fn new(B::CommandQueue) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create typed command queue from raw.","sig":null,"attributes":[{"value":"/ Create typed command queue from raw.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":248428,"byte_end":248468,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":248473,"byte_end":248476,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":248481,"byte_end":248493,"line_start":101,"line_end":101,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":248498,"byte_end":248501,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ `<C as Capability>::supported_by(queue_type)` must return true","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":248506,"byte_end":248572,"line_start":103,"line_end":103,"column_start":5,"column_end":71}},{"value":"/ for `queue_type` being the type this `raw` queue.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":248577,"byte_end":248630,"line_start":104,"line_end":104,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":248791,"byte_end":248797,"line_start":110,"line_end":110,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<CommandQueue<B, C>>::as_raw","value":"pub fn as_raw(&Self) -> &B::CommandQueue","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the raw command queue\n","sig":null,"attributes":[{"value":"/ Get a reference to the raw command queue","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":248735,"byte_end":248779,"line_start":109,"line_end":109,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1305},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":248925,"byte_end":248935,"line_start":115,"line_end":115,"column_start":19,"column_end":29},"name":"as_raw_mut","qualname":"<CommandQueue<B, C>>::as_raw_mut","value":"pub unsafe fn as_raw_mut(&mut Self) -> &mut B::CommandQueue","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the raw command queue\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the raw command queue","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":248854,"byte_end":248906,"line_start":114,"line_end":114,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1306},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":249067,"byte_end":249075,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<CommandQueue<B, C>>::into_raw","value":"pub fn into_raw(Self) -> B::CommandQueue","parent":null,"children":[],"decl_id":null,"docs":" Downgrade a typed command queue to untyped one.\n","sig":null,"attributes":[{"value":"/ Downgrade a typed command queue to untyped one.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":249004,"byte_end":249055,"line_start":119,"line_end":119,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1307},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":249343,"byte_end":249349,"line_start":127,"line_end":127,"column_start":19,"column_end":25},"name":"submit","qualname":"<CommandQueue<B, C>>::submit","value":"pub unsafe fn submit<'a, T, Ic, S, Iw,\n                     Is>(&mut Self, Submission<Ic, Iw, Is>, Option<&B::Fence>)\nwhere T: 'a + Submittable<B, C, Primary>, Ic: IntoIterator<Item = &'a T>,\nS: 'a + Borrow<B::Semaphore>, Iw: IntoIterator<Item =\n(&'a S, pso::PipelineStage)>, Is: IntoIterator<Item = &'a S>","parent":null,"children":[],"decl_id":null,"docs":" Submit command buffers to queue for execution.\n `fence` must be in unsignalled state, and will be signalled after all command buffers in the submission have\n finished execution.\n","sig":null,"attributes":[{"value":"/ Submit command buffers to queue for execution.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":249129,"byte_end":249179,"line_start":124,"line_end":124,"column_start":5,"column_end":55}},{"value":"/ `fence` must be in unsignalled state, and will be signalled after all command buffers in the submission have","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":249184,"byte_end":249296,"line_start":125,"line_end":125,"column_start":5,"column_end":117}},{"value":"/ finished execution.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":249301,"byte_end":249324,"line_start":126,"line_end":126,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1314},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":249849,"byte_end":249874,"line_start":142,"line_end":142,"column_start":19,"column_end":44},"name":"submit_without_semaphores","qualname":"<CommandQueue<B, C>>::submit_without_semaphores","value":"pub unsafe fn submit_without_semaphores<'a, T,\n                                        I>(&mut Self, I, Option<&B::Fence>)\nwhere T: 'a + Submittable<B, C, Primary>, I: IntoIterator<Item = &'a T>","parent":null,"children":[],"decl_id":null,"docs":" Submit command buffers without any semaphore waits or signals.\n","sig":null,"attributes":[{"value":"/ Submit command buffers without any semaphore waits or signals.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":249764,"byte_end":249830,"line_start":141,"line_end":141,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1318},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":250537,"byte_end":250544,"line_start":161,"line_end":161,"column_start":19,"column_end":26},"name":"present","qualname":"<CommandQueue<B, C>>::present","value":"pub unsafe fn present<'a, W, Is, S, Iw>(&mut Self, Is, Iw)\n-> Result<Option<Suboptimal>, PresentError> where W: 'a +\nBorrow<B::Swapchain>, Is: IntoIterator<Item = (&'a W, SwapImageIndex)>,\nS: 'a + Borrow<B::Semaphore>, Iw: IntoIterator<Item = &'a S>","parent":null,"children":[],"decl_id":null,"docs":" Presents the result of the queue to the given swapchains, after waiting on all the\n semaphores given in `wait_semaphores`. A given swapchain must not appear in this\n list more than once.\n","sig":null,"attributes":[{"value":"/ Presents the result of the queue to the given swapchains, after waiting on all the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":250314,"byte_end":250400,"line_start":158,"line_end":158,"column_start":5,"column_end":91}},{"value":"/ semaphores given in `wait_semaphores`. A given swapchain must not appear in this","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":250405,"byte_end":250489,"line_start":159,"line_end":159,"column_start":5,"column_end":89}},{"value":"/ list more than once.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":250494,"byte_end":250518,"line_start":160,"line_end":160,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1324},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":250982,"byte_end":250991,"line_start":176,"line_end":176,"column_start":12,"column_end":21},"name":"wait_idle","qualname":"<CommandQueue<B, C>>::wait_idle","value":"pub fn wait_idle(&Self) -> Result<(), HostExecutionError>","parent":null,"children":[],"decl_id":null,"docs":" Wait for the queue to idle.\n","sig":null,"attributes":[{"value":"/ Wait for the queue to idle.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":250939,"byte_end":250970,"line_start":175,"line_end":175,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1325},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":251150,"byte_end":251159,"line_start":181,"line_end":181,"column_start":19,"column_end":28},"name":"downgrade","qualname":"<CommandQueue<B, C>>::downgrade","value":"pub unsafe fn downgrade<D>(&mut Self) -> &mut CommandQueue<B, D> where\nC: Supports<D>","parent":null,"children":[],"decl_id":null,"docs":" Downgrade a command queue to a lesser capability type.\n","sig":null,"attributes":[{"value":"/ Downgrade a command queue to a lesser capability type.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":251073,"byte_end":251131,"line_start":180,"line_end":180,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":1327},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\range.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"range","qualname":"::range","value":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\range.rs","parent":null,"children":[{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":23074},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1337},{"krate":0,"index":1341},{"krate":0,"index":1345},{"krate":0,"index":1349},{"krate":0,"index":1353}],"decl_id":null,"docs":" Generic range type abstraction that allows\n ranges to be handled a little more generically.\n","sig":null,"attributes":[{"value":"/ Generic range type abstraction that allows","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\range.rs","byte_start":257998,"byte_end":258044,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"/ ranges to be handled a little more generically.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\range.rs","byte_start":258045,"byte_end":258096,"line_start":2,"line_end":2,"column_start":1,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":1333},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\range.rs","byte_start":258252,"byte_end":258260,"line_start":9,"line_end":9,"column_start":11,"column_end":19},"name":"RangeArg","qualname":"::range::RangeArg","value":"RangeArg<T>","parent":null,"children":[{"krate":0,"index":1335},{"krate":0,"index":1336}],"decl_id":null,"docs":" Abstracts the std range types.","sig":null,"attributes":[{"value":"/ Abstracts the std range types.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\range.rs","byte_start":258153,"byte_end":258187,"line_start":6,"line_end":6,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\range.rs","byte_start":258188,"byte_end":258191,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Based upon the nightly `RangeArgument` trait.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\range.rs","byte_start":258192,"byte_end":258241,"line_start":8,"line_end":8,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1335},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\range.rs","byte_start":258300,"byte_end":258305,"line_start":11,"line_end":11,"column_start":8,"column_end":13},"name":"start","qualname":"::range::RangeArg::start","value":"pub fn start(&Self) -> Option<&T>","parent":{"krate":0,"index":1333},"children":[],"decl_id":null,"docs":" Start index bound.\n","sig":null,"attributes":[{"value":"/ Start index bound.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\range.rs","byte_start":258270,"byte_end":258292,"line_start":10,"line_end":10,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1336},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\range.rs","byte_start":258360,"byte_end":258363,"line_start":13,"line_end":13,"column_start":8,"column_end":11},"name":"end","qualname":"::range::RangeArg::end","value":"pub fn end(&Self) -> Option<&T>","parent":{"krate":0,"index":1333},"children":[],"decl_id":null,"docs":" End index bound.\n","sig":null,"attributes":[{"value":"/ End index bound.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\range.rs","byte_start":258332,"byte_end":258352,"line_start":12,"line_end":12,"column_start":5,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":1357},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"window","qualname":"::window","value":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","parent":null,"children":[{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":21047},{"krate":0,"index":21078},{"krate":0,"index":21077},{"krate":0,"index":21075},{"krate":0,"index":21067},{"krate":0,"index":21072},{"krate":0,"index":21063},{"krate":0,"index":21064},{"krate":0,"index":21060},{"krate":0,"index":21061},{"krate":0,"index":1373},{"krate":0,"index":1375},{"krate":0,"index":1377},{"krate":0,"index":1379},{"krate":0,"index":21080},{"krate":0,"index":21149},{"krate":0,"index":21148},{"krate":0,"index":21146},{"krate":0,"index":21142},{"krate":0,"index":21143},{"krate":0,"index":21132},{"krate":0,"index":21126},{"krate":0,"index":21083},{"krate":0,"index":1381},{"krate":0,"index":1383},{"krate":0,"index":21151},{"krate":0,"index":21217},{"krate":0,"index":21215},{"krate":0,"index":21209},{"krate":0,"index":21158},{"krate":0,"index":1385},{"krate":0,"index":1389},{"krate":0,"index":21219},{"krate":0,"index":21245},{"krate":0,"index":21243},{"krate":0,"index":21241},{"krate":0,"index":21238},{"krate":0,"index":21235},{"krate":0,"index":21236},{"krate":0,"index":21232},{"krate":0,"index":21233},{"krate":0,"index":21246},{"krate":0,"index":21310},{"krate":0,"index":21269},{"krate":0,"index":21268},{"krate":0,"index":21264},{"krate":0,"index":21265},{"krate":0,"index":21261},{"krate":0,"index":21262},{"krate":0,"index":21259},{"krate":0,"index":21253},{"krate":0,"index":21251},{"krate":0,"index":21248},{"krate":0,"index":21316},{"krate":0,"index":21324},{"krate":0,"index":21326},{"krate":0,"index":21328},{"krate":0,"index":21330},{"krate":0,"index":21332},{"krate":0,"index":21342},{"krate":0,"index":21345},{"krate":0,"index":21347},{"krate":0,"index":21350},{"krate":0,"index":21352},{"krate":0,"index":21355},{"krate":0,"index":21357},{"krate":0,"index":21360},{"krate":0,"index":21362},{"krate":0,"index":21365},{"krate":0,"index":21368},{"krate":0,"index":21394},{"krate":0,"index":21404},{"krate":0,"index":21402},{"krate":0,"index":1390},{"krate":0,"index":21406},{"krate":0,"index":21408},{"krate":0,"index":21410},{"krate":0,"index":21444},{"krate":0,"index":21443},{"krate":0,"index":21441},{"krate":0,"index":21433},{"krate":0,"index":21438},{"krate":0,"index":21429},{"krate":0,"index":21430},{"krate":0,"index":21426},{"krate":0,"index":21427},{"krate":0,"index":21446},{"krate":0,"index":21476},{"krate":0,"index":21475},{"krate":0,"index":21473},{"krate":0,"index":21465},{"krate":0,"index":21470},{"krate":0,"index":21461},{"krate":0,"index":21462},{"krate":0,"index":21458},{"krate":0,"index":21459},{"krate":0,"index":1395},{"krate":0,"index":21478},{"krate":0,"index":21498},{"krate":0,"index":21497},{"krate":0,"index":21495},{"krate":0,"index":21487},{"krate":0,"index":21492},{"krate":0,"index":21484},{"krate":0,"index":21485},{"krate":0,"index":21481},{"krate":0,"index":21482}],"decl_id":null,"docs":" Windowing system interoperability","sig":null,"attributes":[{"value":"/ Windowing system interoperability","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":259210,"byte_end":259247,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":259248,"byte_end":259251,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Screen presentation (fullscreen or window) of images requires two objects:","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":259252,"byte_end":259330,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":259331,"byte_end":259334,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ * [`Surface`] is the host abstraction of the native screen","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":259335,"byte_end":259397,"line_start":5,"line_end":5,"column_start":1,"column_end":63}},{"value":"/ * [`Swapchain`] is the device abstraction for a surface, containing multiple presentable images","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":259398,"byte_end":259497,"line_start":6,"line_end":6,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":259498,"byte_end":259501,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## Window","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":259502,"byte_end":259515,"line_start":8,"line_end":8,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":259516,"byte_end":259519,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ // DOC TODO","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":259520,"byte_end":259535,"line_start":10,"line_end":10,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":259536,"byte_end":259539,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ## Surface","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":259540,"byte_end":259554,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":259555,"byte_end":259558,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ // DOC TODO","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":259559,"byte_end":259574,"line_start":14,"line_end":14,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":259575,"byte_end":259578,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ## Swapchain","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":259579,"byte_end":259595,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":259596,"byte_end":259599,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The most interesting part of a swapchain are the contained presentable images/backbuffers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":259600,"byte_end":259694,"line_start":18,"line_end":18,"column_start":1,"column_end":95}},{"value":"/ Presentable images are specialized images, which can be presented on the screen. They are","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":259695,"byte_end":259788,"line_start":19,"line_end":19,"column_start":1,"column_end":94}},{"value":"/ 2D color images with optionally associated depth-stencil images.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":259789,"byte_end":259857,"line_start":20,"line_end":20,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":259858,"byte_end":259861,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The common steps for presentation of a frame are acquisition and presentation:","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":259862,"byte_end":259944,"line_start":22,"line_end":22,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":259945,"byte_end":259948,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":259949,"byte_end":259962,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ # extern crate gfx_backend_empty as empty;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":259963,"byte_end":260009,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/ # extern crate gfx_hal;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":260010,"byte_end":260037,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":260038,"byte_end":260055,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/ use gfx_hal::Device;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":260056,"byte_end":260080,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/ # use gfx_hal::{CommandQueue, Graphics, Swapchain};","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":260081,"byte_end":260136,"line_start":29,"line_end":29,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":260137,"byte_end":260140,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # let mut swapchain: empty::Swapchain = return;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":260141,"byte_end":260192,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/ # let device: empty::Device = return;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":260193,"byte_end":260234,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ # let mut present_queue: CommandQueue<empty::Backend, Graphics> = return;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":260235,"byte_end":260312,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ # unsafe {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":260313,"byte_end":260327,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/ let acquisition_semaphore = device.create_semaphore().unwrap();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":260328,"byte_end":260395,"line_start":35,"line_end":35,"column_start":1,"column_end":68}},{"value":"/ let render_semaphore = device.create_semaphore().unwrap();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":260396,"byte_end":260458,"line_start":36,"line_end":36,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":260459,"byte_end":260462,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let (frame, suboptimal) = swapchain.acquire_image(!0, Some(&acquisition_semaphore), None).unwrap();","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":260463,"byte_end":260566,"line_start":38,"line_end":38,"column_start":1,"column_end":104}},{"value":"/ // render the scene..","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":260567,"byte_end":260592,"line_start":39,"line_end":39,"column_start":1,"column_end":26}},{"value":"/ // `render_semaphore` will be signalled once rendering has been finished","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":260593,"byte_end":260669,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/ swapchain.present(&mut present_queue, 0, &[render_semaphore]);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":260670,"byte_end":260736,"line_start":41,"line_end":41,"column_start":1,"column_end":67}},{"value":"/ # }}","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":260737,"byte_end":260745,"line_start":42,"line_end":42,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":260746,"byte_end":260753,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":260754,"byte_end":260757,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Queues need to synchronize with the presentation engine, usually done via signalling a semaphore","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":260758,"byte_end":260858,"line_start":45,"line_end":45,"column_start":1,"column_end":101}},{"value":"/ once a frame is available for rendering and waiting on a separate semaphore until scene rendering","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":260859,"byte_end":260960,"line_start":46,"line_end":46,"column_start":1,"column_end":102}},{"value":"/ has finished.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":260961,"byte_end":260978,"line_start":47,"line_end":47,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":260979,"byte_end":260982,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Recreation","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":260983,"byte_end":261001,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":261002,"byte_end":261005,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ DOC TODO","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":261006,"byte_end":261018,"line_start":51,"line_end":51,"column_start":1,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":21048},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":261484,"byte_end":261495,"line_start":71,"line_end":71,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::window::CreationError::OutOfMemory","value":"CreationError::OutOfMemory(device::OutOfMemory)","parent":{"krate":0,"index":21047},"children":[],"decl_id":null,"docs":" Out of either host or device memory.\n","sig":null,"attributes":[{"value":"/ Out of either host or device memory.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":261407,"byte_end":261447,"line_start":69,"line_end":69,"column_start":5,"column_end":45}},{"value":"fail(display = \"{}\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":261452,"byte_end":261479,"line_start":70,"line_end":70,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":21051},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":261577,"byte_end":261587,"line_start":74,"line_end":74,"column_start":5,"column_end":15},"name":"DeviceLost","qualname":"::window::CreationError::DeviceLost","value":"CreationError::DeviceLost(device::DeviceLost)","parent":{"krate":0,"index":21047},"children":[],"decl_id":null,"docs":" Device is lost\n","sig":null,"attributes":[{"value":"/ Device is lost","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":261522,"byte_end":261540,"line_start":72,"line_end":72,"column_start":5,"column_end":23}},{"value":"fail(display = \"{}\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":261545,"byte_end":261572,"line_start":73,"line_end":73,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":21054},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":261669,"byte_end":261680,"line_start":77,"line_end":77,"column_start":5,"column_end":16},"name":"SurfaceLost","qualname":"::window::CreationError::SurfaceLost","value":"CreationError::SurfaceLost(device::SurfaceLost)","parent":{"krate":0,"index":21047},"children":[],"decl_id":null,"docs":" Surface is lost\n","sig":null,"attributes":[{"value":"/ Surface is lost","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":261613,"byte_end":261632,"line_start":75,"line_end":75,"column_start":5,"column_end":24}},{"value":"fail(display = \"{}\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":261637,"byte_end":261664,"line_start":76,"line_end":76,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":21057},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":261761,"byte_end":261772,"line_start":80,"line_end":80,"column_start":5,"column_end":16},"name":"WindowInUse","qualname":"::window::CreationError::WindowInUse","value":"CreationError::WindowInUse(device::WindowInUse)","parent":{"krate":0,"index":21047},"children":[],"decl_id":null,"docs":" Window in use\n","sig":null,"attributes":[{"value":"/ Window in use","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":261707,"byte_end":261724,"line_start":78,"line_end":78,"column_start":5,"column_end":22}},{"value":"fail(display = \"{}\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":261729,"byte_end":261756,"line_start":79,"line_end":79,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":21047},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":261387,"byte_end":261400,"line_start":68,"line_end":68,"column_start":10,"column_end":23},"name":"CreationError","qualname":"::window::CreationError","value":"pub enum CreationError {\n\n    /// Out of either host or device memory.\n    #[fail(display = \"{}\", _0)]\n    OutOfMemory(device::OutOfMemory),\n\n    /// Device is lost\n    #[fail(display = \"{}\", _0)]\n    DeviceLost(device::DeviceLost),\n\n    /// Surface is lost\n    #[fail(display = \"{}\", _0)]\n    SurfaceLost(device::SurfaceLost),\n\n    /// Window in use\n    #[fail(display = \"{}\", _0)]\n    WindowInUse(device::WindowInUse),\n}","parent":null,"children":[{"krate":0,"index":21048},{"krate":0,"index":21051},{"krate":0,"index":21054},{"krate":0,"index":21057}],"decl_id":null,"docs":" Error occurred during swapchain creation.\n","sig":null,"attributes":[{"value":"/ Error occurred during swapchain creation.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":261281,"byte_end":261326,"line_start":66,"line_end":66,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":21080},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":262695,"byte_end":262703,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"Extent2D","qualname":"::window::Extent2D","value":"Extent2D { width, height }","parent":null,"children":[{"krate":0,"index":21081},{"krate":0,"index":21082}],"decl_id":null,"docs":" An extent describes the size of a rectangle, such as\n a window or texture. It is not used for referring to a\n sub-rectangle; for that see `command::Rect`.\n","sig":null,"attributes":[{"value":"/ An extent describes the size of a rectangle, such as","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":262403,"byte_end":262459,"line_start":107,"line_end":107,"column_start":1,"column_end":57}},{"value":"/ a window or texture. It is not used for referring to a","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":262460,"byte_end":262518,"line_start":108,"line_end":108,"column_start":1,"column_end":59}},{"value":"/ sub-rectangle; for that see `command::Rect`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":262519,"byte_end":262567,"line_start":109,"line_end":109,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":21081},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":262728,"byte_end":262733,"line_start":114,"line_end":114,"column_start":9,"column_end":14},"name":"width","qualname":"::window::Extent2D::width","value":"u32","parent":{"krate":0,"index":21080},"children":[],"decl_id":null,"docs":" Width\n","sig":null,"attributes":[{"value":"/ Width","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":262710,"byte_end":262719,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":21082},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":262771,"byte_end":262777,"line_start":116,"line_end":116,"column_start":9,"column_end":15},"name":"height","qualname":"::window::Extent2D::height","value":"u32","parent":{"krate":0,"index":21080},"children":[],"decl_id":null,"docs":" Height\n","sig":null,"attributes":[{"value":"/ Height","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":262752,"byte_end":262762,"line_start":115,"line_end":115,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":263046,"byte_end":263055,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"to_extent","qualname":"<Extent2D>::to_extent","value":"pub fn to_extent(&Self) -> image::Extent","parent":null,"children":[],"decl_id":null,"docs":" Convert into a regular image extent.\n","sig":null,"attributes":[{"value":"/ Convert into a regular image extent.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":262994,"byte_end":263034,"line_start":129,"line_end":129,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":21151},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":263429,"byte_end":263448,"line_start":143,"line_end":143,"column_start":12,"column_end":31},"name":"SurfaceCapabilities","qualname":"::window::SurfaceCapabilities","value":"SurfaceCapabilities { image_count, current_extent, extents, max_image_layers, usage, composite_alpha }","parent":null,"children":[{"krate":0,"index":21152},{"krate":0,"index":21153},{"krate":0,"index":21154},{"krate":0,"index":21155},{"krate":0,"index":21156},{"krate":0,"index":21157}],"decl_id":null,"docs":" Describes information about what a `Surface`'s properties are.\n Fetch this with `surface.compatibility(device)`.\n","sig":null,"attributes":[{"value":"/ Describes information about what a `Surface`'s properties are.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":263211,"byte_end":263277,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"/ Fetch this with `surface.compatibility(device)`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":263278,"byte_end":263330,"line_start":140,"line_end":140,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":21152},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":263706,"byte_end":263717,"line_start":149,"line_end":149,"column_start":9,"column_end":20},"name":"image_count","qualname":"::window::SurfaceCapabilities::image_count","value":"std::ops::RangeInclusive<u32>","parent":{"krate":0,"index":21151},"children":[],"decl_id":null,"docs":" Number of presentable images supported by the adapter for a swapchain\n created from this surface.","sig":null,"attributes":[{"value":"/ Number of presentable images supported by the adapter for a swapchain","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":263455,"byte_end":263528,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ created from this surface.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":263533,"byte_end":263563,"line_start":145,"line_end":145,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":263568,"byte_end":263571,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ - `image_count.start` must be at least 1.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":263576,"byte_end":263621,"line_start":147,"line_end":147,"column_start":5,"column_end":50}},{"value":"/ - `image_count.end` must be larger or equal to `image_count.start`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":263626,"byte_end":263697,"line_start":148,"line_end":148,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":21153},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":263894,"byte_end":263908,"line_start":154,"line_end":154,"column_start":9,"column_end":23},"name":"current_extent","qualname":"::window::SurfaceCapabilities::current_extent","value":"std::option::Option<window::Extent2D>","parent":{"krate":0,"index":21151},"children":[],"decl_id":null,"docs":" Current extent of the surface.","sig":null,"attributes":[{"value":"/ Current extent of the surface.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":263756,"byte_end":263790,"line_start":151,"line_end":151,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":263795,"byte_end":263798,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ `None` if the surface has no explicit size, depending on the swapchain extent.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":263803,"byte_end":263885,"line_start":153,"line_end":153,"column_start":5,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":21154},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":264033,"byte_end":264040,"line_start":159,"line_end":159,"column_start":9,"column_end":16},"name":"extents","qualname":"::window::SurfaceCapabilities::extents","value":"std::ops::RangeInclusive<window::Extent2D>","parent":{"krate":0,"index":21151},"children":[],"decl_id":null,"docs":" Range of supported extents.","sig":null,"attributes":[{"value":"/ Range of supported extents.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":263933,"byte_end":263964,"line_start":156,"line_end":156,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":263969,"byte_end":263972,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ `current_extent` must be inside this range.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":263977,"byte_end":264024,"line_start":158,"line_end":158,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":21155},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":264180,"byte_end":264196,"line_start":164,"line_end":164,"column_start":9,"column_end":25},"name":"max_image_layers","qualname":"::window::SurfaceCapabilities::max_image_layers","value":"u16","parent":{"krate":0,"index":21151},"children":[],"decl_id":null,"docs":" Maximum number of layers supported for presentable images.","sig":null,"attributes":[{"value":"/ Maximum number of layers supported for presentable images.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":264073,"byte_end":264135,"line_start":161,"line_end":161,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":264140,"byte_end":264143,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Must be at least 1.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":264148,"byte_end":264171,"line_start":163,"line_end":163,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":21156},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":264258,"byte_end":264263,"line_start":167,"line_end":167,"column_start":9,"column_end":14},"name":"usage","qualname":"::window::SurfaceCapabilities::usage","value":"image::Usage","parent":{"krate":0,"index":21151},"children":[],"decl_id":null,"docs":" Supported image usage flags.\n","sig":null,"attributes":[{"value":"/ Supported image usage flags.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":264217,"byte_end":264249,"line_start":166,"line_end":166,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":21157},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":264344,"byte_end":264359,"line_start":170,"line_end":170,"column_start":9,"column_end":24},"name":"composite_alpha","qualname":"::window::SurfaceCapabilities::composite_alpha","value":"window::CompositeAlpha","parent":{"krate":0,"index":21151},"children":[],"decl_id":null,"docs":" A bitmask of supported alpha composition modes.\n","sig":null,"attributes":[{"value":"/ A bitmask of supported alpha composition modes.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":264284,"byte_end":264335,"line_start":169,"line_end":169,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":1385},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":264492,"byte_end":264499,"line_start":175,"line_end":175,"column_start":11,"column_end":18},"name":"Surface","qualname":"::window::Surface","value":"Surface<B: Backend>: fmt::Debug + Any + Send + Sync","parent":null,"children":[{"krate":0,"index":1387},{"krate":0,"index":1388}],"decl_id":null,"docs":" A `Surface` abstracts the surface of a native window, which will be presented\n on the display.\n","sig":null,"attributes":[{"value":"/ A `Surface` abstracts the surface of a native window, which will be presented","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":264380,"byte_end":264461,"line_start":173,"line_end":173,"column_start":1,"column_end":82}},{"value":"/ on the display.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":264462,"byte_end":264481,"line_start":174,"line_end":174,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1387},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":264699,"byte_end":264720,"line_start":183,"line_end":183,"column_start":8,"column_end":29},"name":"supports_queue_family","qualname":"::window::Surface::supports_queue_family","value":"pub fn supports_queue_family(&Self, &B::QueueFamily) -> bool","parent":{"krate":0,"index":1385},"children":[],"decl_id":null,"docs":" Check if the queue family supports presentation to this surface.","sig":null,"attributes":[{"value":"/ Check if the queue family supports presentation to this surface.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":264550,"byte_end":264618,"line_start":176,"line_end":176,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":264623,"byte_end":264626,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":264631,"byte_end":264645,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":264650,"byte_end":264653,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":264658,"byte_end":264671,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":264676,"byte_end":264679,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":264684,"byte_end":264691,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":265125,"byte_end":265138,"line_start":192,"line_end":192,"column_start":8,"column_end":21},"name":"compatibility","qualname":"::window::Surface::compatibility","value":"pub fn compatibility(&Self, &B::PhysicalDevice)\n-> (SurfaceCapabilities, Option<Vec<Format>>, Vec<PresentMode>)","parent":{"krate":0,"index":1385},"children":[],"decl_id":null,"docs":" Query surface capabilities, formats, and present modes for this physical device.","sig":null,"attributes":[{"value":"/ Query surface capabilities, formats, and present modes for this physical device.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":264767,"byte_end":264851,"line_start":185,"line_end":185,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":264856,"byte_end":264859,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Use this function for configuring swapchain creation.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":264864,"byte_end":264921,"line_start":187,"line_end":187,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":264926,"byte_end":264929,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Returns a tuple of surface capabilities and formats.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":264934,"byte_end":264990,"line_start":189,"line_end":189,"column_start":5,"column_end":61}},{"value":"/ If formats are `None` then the surface has no preferred format and the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":264995,"byte_end":265069,"line_start":190,"line_end":190,"column_start":5,"column_end":79}},{"value":"/ application may use any desired format.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":265074,"byte_end":265117,"line_start":191,"line_end":191,"column_start":5,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1389},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":265554,"byte_end":265568,"line_start":204,"line_end":204,"column_start":10,"column_end":24},"name":"SwapImageIndex","qualname":"::window::SwapImageIndex","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Index of an image in the swapchain.","sig":null,"attributes":[{"value":"/ Index of an image in the swapchain.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":265274,"byte_end":265313,"line_start":198,"line_end":198,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":265314,"byte_end":265317,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ The swapchain is a series of one or more images, usually","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":265318,"byte_end":265378,"line_start":200,"line_end":200,"column_start":1,"column_end":61}},{"value":"/ with one being drawn on while the other is displayed by","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":265379,"byte_end":265438,"line_start":201,"line_end":201,"column_start":1,"column_end":60}},{"value":"/ the GPU (aka double-buffering). A `SwapImageIndex` refers","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":265439,"byte_end":265500,"line_start":202,"line_end":202,"column_start":1,"column_end":62}},{"value":"/ to a particular image in the swapchain.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":265501,"byte_end":265544,"line_start":203,"line_end":203,"column_start":1,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":21220},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":265769,"byte_end":265778,"line_start":211,"line_end":211,"column_start":5,"column_end":14},"name":"Immediate","qualname":"::window::PresentMode::Immediate","value":"PresentMode::Immediate","parent":{"krate":0,"index":21219},"children":[],"decl_id":null,"docs":" Don't ever wait for v-sync.\n","sig":null,"attributes":[{"value":"/ Don't ever wait for v-sync.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":265733,"byte_end":265764,"line_start":210,"line_end":210,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":21223},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":265848,"byte_end":265855,"line_start":213,"line_end":213,"column_start":5,"column_end":12},"name":"Mailbox","qualname":"::window::PresentMode::Mailbox","value":"PresentMode::Mailbox","parent":{"krate":0,"index":21219},"children":[],"decl_id":null,"docs":" Wait for v-sync, overwrite the last rendered frame.\n","sig":null,"attributes":[{"value":"/ Wait for v-sync, overwrite the last rendered frame.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":265788,"byte_end":265843,"line_start":212,"line_end":212,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":21226},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":265925,"byte_end":265929,"line_start":215,"line_end":215,"column_start":5,"column_end":9},"name":"Fifo","qualname":"::window::PresentMode::Fifo","value":"PresentMode::Fifo","parent":{"krate":0,"index":21219},"children":[],"decl_id":null,"docs":" Present frames in the same order they are rendered.\n","sig":null,"attributes":[{"value":"/ Present frames in the same order they are rendered.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":265865,"byte_end":265920,"line_start":214,"line_end":214,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":21229},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":266000,"byte_end":266007,"line_start":217,"line_end":217,"column_start":5,"column_end":12},"name":"Relaxed","qualname":"::window::PresentMode::Relaxed","value":"PresentMode::Relaxed","parent":{"krate":0,"index":21219},"children":[],"decl_id":null,"docs":" Don't wait for the next v-sync if we just missed it.\n","sig":null,"attributes":[{"value":"/ Don't wait for the next v-sync if we just missed it.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":265939,"byte_end":265995,"line_start":216,"line_end":216,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":21219},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":265715,"byte_end":265726,"line_start":209,"line_end":209,"column_start":10,"column_end":21},"name":"PresentMode","qualname":"::window::PresentMode","value":"pub enum PresentMode {\n\n    /// Don't ever wait for v-sync.\n    Immediate = ,\n\n    /// Wait for v-sync, overwrite the last rendered frame.\n    Mailbox = ,\n\n    /// Present frames in the same order they are rendered.\n    Fifo = ,\n\n    /// Don't wait for the next v-sync if we just missed it.\n    Relaxed = ,\n}","parent":null,"children":[{"krate":0,"index":21220},{"krate":0,"index":21223},{"krate":0,"index":21226},{"krate":0,"index":21229}],"decl_id":null,"docs":" Specifies the mode regulating how a swapchain presents frames.\n","sig":null,"attributes":[{"value":"/ Specifies the mode regulating how a swapchain presents frames.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":265577,"byte_end":265643,"line_start":206,"line_end":206,"column_start":1,"column_end":67}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":265644,"byte_end":265654,"line_start":207,"line_end":207,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":21246},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":266209,"byte_end":266223,"line_start":224,"line_end":224,"column_start":16,"column_end":30},"name":"CompositeAlpha","qualname":"::window::CompositeAlpha","value":"CompositeAlpha {  }","parent":null,"children":[{"krate":0,"index":21247}],"decl_id":null,"docs":" Specifies how the alpha channel of the images should be handled during\n compositing.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21333},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":266435,"byte_end":266441,"line_start":228,"line_end":228,"column_start":15,"column_end":21},"name":"OPAQUE","qualname":"::window::CompositeAlpha::OPAQUE","value":"CompositeAlpha","parent":{"krate":0,"index":21332},"children":[],"decl_id":null,"docs":" The alpha channel, if it exists, of the images is ignored in the\n compositing process. Instead, the image is treated as if it has a\n constant alpha of 1.0.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21334},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":266714,"byte_end":266727,"line_start":233,"line_end":233,"column_start":15,"column_end":28},"name":"PREMULTIPLIED","qualname":"::window::CompositeAlpha::PREMULTIPLIED","value":"CompositeAlpha","parent":{"krate":0,"index":21332},"children":[],"decl_id":null,"docs":" The alpha channel, if it exists, of the images is respected in the\n compositing process. The non-alpha channels of the image are\n expected to already be multiplied by the alpha channel by the\n application.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21335},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":267131,"byte_end":267145,"line_start":239,"line_end":239,"column_start":15,"column_end":29},"name":"POSTMULTIPLIED","qualname":"::window::CompositeAlpha::POSTMULTIPLIED","value":"CompositeAlpha","parent":{"krate":0,"index":21332},"children":[],"decl_id":null,"docs":" The alpha channel, if it exists, of the images is respected in the\n compositing process. The non-alpha channels of the image are not\n expected to already be multiplied by the alpha channel by the\n application; instead, the compositor will multiply the non-alpha\n channels of the image by the alpha channel during compositing.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21336},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":267599,"byte_end":267606,"line_start":246,"line_end":246,"column_start":15,"column_end":22},"name":"INHERIT","qualname":"::window::CompositeAlpha::INHERIT","value":"CompositeAlpha","parent":{"krate":0,"index":21332},"children":[],"decl_id":null,"docs":" The way in which the presentation engine treats the alpha channel in\n the images is unknown to gfx-hal. Instead, the application is\n responsible for setting the composite alpha blending mode using\n native window system commands. If the application does not set the\n blending mode using native window system commands, then a\n platform-specific default will be used.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21394},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":268098,"byte_end":268113,"line_start":267,"line_end":267,"column_start":12,"column_end":27},"name":"SwapchainConfig","qualname":"::window::SwapchainConfig","value":"SwapchainConfig { present_mode, composite_alpha, format, extent, image_count, image_layers, image_usage }","parent":null,"children":[{"krate":0,"index":21395},{"krate":0,"index":21396},{"krate":0,"index":21397},{"krate":0,"index":21398},{"krate":0,"index":21399},{"krate":0,"index":21400},{"krate":0,"index":21401}],"decl_id":null,"docs":" Contains all the data necessary to create a new `Swapchain`:\n color, depth, and number of images.","sig":null,"attributes":[{"value":"/ Contains all the data necessary to create a new `Swapchain`:","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":267624,"byte_end":267688,"line_start":250,"line_end":250,"column_start":1,"column_end":65}},{"value":"/ color, depth, and number of images.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":267689,"byte_end":267728,"line_start":251,"line_end":251,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":267729,"byte_end":267732,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":267733,"byte_end":267747,"line_start":253,"line_end":253,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":267748,"byte_end":267751,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ This type implements the builder pattern, method calls can be","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":267752,"byte_end":267817,"line_start":255,"line_end":255,"column_start":1,"column_end":66}},{"value":"/ easily chained.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":267818,"byte_end":267837,"line_start":256,"line_end":256,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":267838,"byte_end":267841,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":267842,"byte_end":267855,"line_start":258,"line_end":258,"column_start":1,"column_end":14}},{"value":"/ # extern crate gfx_hal;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":267856,"byte_end":267883,"line_start":259,"line_end":259,"column_start":1,"column_end":28}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":267884,"byte_end":267901,"line_start":260,"line_end":260,"column_start":1,"column_end":18}},{"value":"/ # use gfx_hal::{SwapchainConfig};","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":267902,"byte_end":267939,"line_start":261,"line_end":261,"column_start":1,"column_end":38}},{"value":"/ # use gfx_hal::format::Format;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":267940,"byte_end":267974,"line_start":262,"line_end":262,"column_start":1,"column_end":35}},{"value":"/ let config = SwapchainConfig::new(100, 100, Format::Bgra8Unorm, 2);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":267975,"byte_end":268046,"line_start":263,"line_end":263,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":268047,"byte_end":268054,"line_start":264,"line_end":264,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":268055,"byte_end":268062,"line_start":265,"line_end":265,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21395},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":268151,"byte_end":268163,"line_start":269,"line_end":269,"column_start":9,"column_end":21},"name":"present_mode","qualname":"::window::SwapchainConfig::present_mode","value":"window::PresentMode","parent":{"krate":0,"index":21394},"children":[],"decl_id":null,"docs":" Presentation mode.\n","sig":null,"attributes":[{"value":"/ Presentation mode.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":268120,"byte_end":268142,"line_start":268,"line_end":268,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":21396},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":268218,"byte_end":268233,"line_start":271,"line_end":271,"column_start":9,"column_end":24},"name":"composite_alpha","qualname":"::window::SwapchainConfig::composite_alpha","value":"window::CompositeAlpha","parent":{"krate":0,"index":21394},"children":[],"decl_id":null,"docs":" Alpha composition mode.\n","sig":null,"attributes":[{"value":"/ Alpha composition mode.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":268182,"byte_end":268209,"line_start":270,"line_end":270,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":21397},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":268300,"byte_end":268306,"line_start":273,"line_end":273,"column_start":9,"column_end":15},"name":"format","qualname":"::window::SwapchainConfig::format","value":"format::Format","parent":{"krate":0,"index":21394},"children":[],"decl_id":null,"docs":" Format of the backbuffer images.\n","sig":null,"attributes":[{"value":"/ Format of the backbuffer images.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":268255,"byte_end":268291,"line_start":272,"line_end":272,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":21398},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":268413,"byte_end":268419,"line_start":276,"line_end":276,"column_start":9,"column_end":15},"name":"extent","qualname":"::window::SwapchainConfig::extent","value":"window::Extent2D","parent":{"krate":0,"index":21394},"children":[],"decl_id":null,"docs":" Requested image extent. Must be in\n `SurfaceCapabilities::extents` range.\n","sig":null,"attributes":[{"value":"/ Requested image extent. Must be in","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":268320,"byte_end":268358,"line_start":274,"line_end":274,"column_start":5,"column_end":43}},{"value":"/ `SurfaceCapabilities::extents` range.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":268363,"byte_end":268404,"line_start":275,"line_end":275,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":21399},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":268543,"byte_end":268554,"line_start":279,"line_end":279,"column_start":9,"column_end":20},"name":"image_count","qualname":"::window::SwapchainConfig::image_count","value":"u32","parent":{"krate":0,"index":21394},"children":[],"decl_id":null,"docs":" Number of images in the swapchain. Must be in\n `SurfaceCapabilities::image_count` range.\n","sig":null,"attributes":[{"value":"/ Number of images in the swapchain. Must be in","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":268435,"byte_end":268484,"line_start":277,"line_end":277,"column_start":5,"column_end":54}},{"value":"/ `SurfaceCapabilities::image_count` range.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":268489,"byte_end":268534,"line_start":278,"line_end":278,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":21400},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":268687,"byte_end":268699,"line_start":282,"line_end":282,"column_start":9,"column_end":21},"name":"image_layers","qualname":"::window::SwapchainConfig::image_layers","value":"u16","parent":{"krate":0,"index":21394},"children":[],"decl_id":null,"docs":" Number of image layers. Must be lower or equal to\n `SurfaceCapabilities::max_image_layers`.\n","sig":null,"attributes":[{"value":"/ Number of image layers. Must be lower or equal to","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":268576,"byte_end":268629,"line_start":280,"line_end":280,"column_start":5,"column_end":58}},{"value":"/ `SurfaceCapabilities::max_image_layers`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":268634,"byte_end":268678,"line_start":281,"line_end":281,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":21401},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":268769,"byte_end":268780,"line_start":284,"line_end":284,"column_start":9,"column_end":20},"name":"image_usage","qualname":"::window::SwapchainConfig::image_usage","value":"image::Usage","parent":{"krate":0,"index":21394},"children":[],"decl_id":null,"docs":" Image usage of the backbuffer images.\n","sig":null,"attributes":[{"value":"/ Image usage of the backbuffer images.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":268719,"byte_end":268760,"line_start":283,"line_end":283,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1391},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":268970,"byte_end":268973,"line_start":295,"line_end":295,"column_start":12,"column_end":15},"name":"new","qualname":"<SwapchainConfig>::new","value":"pub fn new(u32, u32, Format, SwapImageIndex) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new default configuration (color images only).","sig":null,"attributes":[{"value":"/ Create a new default configuration (color images only).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":268826,"byte_end":268885,"line_start":288,"line_end":288,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":268890,"byte_end":268893,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":268898,"byte_end":268912,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":268917,"byte_end":268920,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":268925,"byte_end":268938,"line_start":292,"line_end":292,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":268943,"byte_end":268946,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":268951,"byte_end":268958,"line_start":294,"line_end":294,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":269599,"byte_end":269608,"line_start":310,"line_end":310,"column_start":12,"column_end":21},"name":"from_caps","qualname":"<SwapchainConfig>::from_caps","value":"pub fn from_caps(&SurfaceCapabilities, Format, Extent2D) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a swapchain configuration based on the capabilities\n returned from a physical device query. If the surface does not\n specify a current size, default_extent is clamped and used instead.\n","sig":null,"attributes":[{"value":"/ Create a swapchain configuration based on the capabilities","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":269378,"byte_end":269440,"line_start":307,"line_end":307,"column_start":5,"column_end":67}},{"value":"/ returned from a physical device query. If the surface does not","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":269445,"byte_end":269511,"line_start":308,"line_end":308,"column_start":5,"column_end":71}},{"value":"/ specify a current size, default_extent is clamped and used instead.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":269516,"byte_end":269587,"line_start":309,"line_end":309,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1393},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":271118,"byte_end":271127,"line_start":351,"line_end":351,"column_start":12,"column_end":21},"name":"with_mode","qualname":"<SwapchainConfig>::with_mode","value":"pub fn with_mode(Self, PresentMode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the presentation mode.","sig":null,"attributes":[{"value":"/ Specify the presentation mode.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":270999,"byte_end":271033,"line_start":344,"line_end":344,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":271038,"byte_end":271041,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":271046,"byte_end":271060,"line_start":346,"line_end":346,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":271065,"byte_end":271068,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":271073,"byte_end":271086,"line_start":348,"line_end":348,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":271091,"byte_end":271094,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":271099,"byte_end":271106,"line_start":350,"line_end":350,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1394},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":271353,"byte_end":271369,"line_start":363,"line_end":363,"column_start":12,"column_end":28},"name":"with_image_usage","qualname":"<SwapchainConfig>::with_image_usage","value":"pub fn with_image_usage(Self, image::Usage) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the usage of backbuffer images.","sig":null,"attributes":[{"value":"/ Specify the usage of backbuffer images.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":271225,"byte_end":271268,"line_start":356,"line_end":356,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":271273,"byte_end":271276,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":271281,"byte_end":271295,"line_start":358,"line_end":358,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":271300,"byte_end":271303,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":271308,"byte_end":271321,"line_start":360,"line_end":360,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":271326,"byte_end":271329,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":271334,"byte_end":271341,"line_start":362,"line_end":362,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":21406},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":271730,"byte_end":271740,"line_start":374,"line_end":374,"column_start":12,"column_end":22},"name":"Suboptimal","qualname":"::window::Suboptimal","value":"","parent":null,"children":[],"decl_id":null,"docs":" Marker value returned if the swapchain no longer matches the surface properties exactly,\n but can still be used to present to the surface successfully.\n","sig":null,"attributes":[{"value":"/ Marker value returned if the swapchain no longer matches the surface properties exactly,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":271543,"byte_end":271635,"line_start":371,"line_end":371,"column_start":1,"column_end":93}},{"value":"/ but can still be used to present to the surface successfully.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":271636,"byte_end":271701,"line_start":372,"line_end":372,"column_start":1,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":21411},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":271955,"byte_end":271966,"line_start":381,"line_end":381,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::window::AcquireError::OutOfMemory","value":"AcquireError::OutOfMemory(device::OutOfMemory)","parent":{"krate":0,"index":21410},"children":[],"decl_id":null,"docs":" Out of either host or device memory.\n","sig":null,"attributes":[{"value":"/ Out of either host or device memory.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":271878,"byte_end":271918,"line_start":379,"line_end":379,"column_start":5,"column_end":45}},{"value":"fail(display = \"{}\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":271923,"byte_end":271950,"line_start":380,"line_end":380,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":21414},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":272091,"byte_end":272099,"line_start":384,"line_end":384,"column_start":5,"column_end":13},"name":"NotReady","qualname":"::window::AcquireError::NotReady","value":"AcquireError::NotReady","parent":{"krate":0,"index":21410},"children":[],"decl_id":null,"docs":" No image was ready and no timeout was specified.\n","sig":null,"attributes":[{"value":"/ No image was ready and no timeout was specified.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":271993,"byte_end":272045,"line_start":382,"line_end":382,"column_start":5,"column_end":57}},{"value":"fail(display = \"No images ready\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":272050,"byte_end":272086,"line_start":383,"line_end":383,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":21416},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":272246,"byte_end":272253,"line_start":387,"line_end":387,"column_start":5,"column_end":12},"name":"Timeout","qualname":"::window::AcquireError::Timeout","value":"AcquireError::Timeout","parent":{"krate":0,"index":21410},"children":[],"decl_id":null,"docs":" No image was ready after the specified timeout expired.\n","sig":null,"attributes":[{"value":"/ No image was ready after the specified timeout expired.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":272105,"byte_end":272164,"line_start":385,"line_end":385,"column_start":5,"column_end":64}},{"value":"fail(display = \"No images ready after the specified timeout expired\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":272169,"byte_end":272241,"line_start":386,"line_end":386,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":21418},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":272394,"byte_end":272403,"line_start":390,"line_end":390,"column_start":5,"column_end":14},"name":"OutOfDate","qualname":"::window::AcquireError::OutOfDate","value":"AcquireError::OutOfDate","parent":{"krate":0,"index":21410},"children":[],"decl_id":null,"docs":" The swapchain is no longer in sync with the surface, needs to be re-created.\n","sig":null,"attributes":[{"value":"/ The swapchain is no longer in sync with the surface, needs to be re-created.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":272259,"byte_end":272339,"line_start":388,"line_end":388,"column_start":5,"column_end":85}},{"value":"fail(display = \"Swapchain is out of date\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":272344,"byte_end":272389,"line_start":389,"line_end":389,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":21420},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":272510,"byte_end":272521,"line_start":393,"line_end":393,"column_start":5,"column_end":16},"name":"SurfaceLost","qualname":"::window::AcquireError::SurfaceLost","value":"AcquireError::SurfaceLost(device::SurfaceLost)","parent":{"krate":0,"index":21410},"children":[],"decl_id":null,"docs":" The surface was lost, and the swapchain is no longer usable.\n","sig":null,"attributes":[{"value":"/ The surface was lost, and the swapchain is no longer usable.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":272409,"byte_end":272473,"line_start":391,"line_end":391,"column_start":5,"column_end":69}},{"value":"fail(display = \"{}\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":272478,"byte_end":272505,"line_start":392,"line_end":392,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":21423},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":272603,"byte_end":272613,"line_start":396,"line_end":396,"column_start":5,"column_end":15},"name":"DeviceLost","qualname":"::window::AcquireError::DeviceLost","value":"AcquireError::DeviceLost(device::DeviceLost)","parent":{"krate":0,"index":21410},"children":[],"decl_id":null,"docs":" Device is lost\n","sig":null,"attributes":[{"value":"/ Device is lost","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":272548,"byte_end":272566,"line_start":394,"line_end":394,"column_start":5,"column_end":23}},{"value":"fail(display = \"{}\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":272571,"byte_end":272598,"line_start":395,"line_end":395,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":21410},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":271859,"byte_end":271871,"line_start":378,"line_end":378,"column_start":10,"column_end":22},"name":"AcquireError","qualname":"::window::AcquireError","value":"pub enum AcquireError {\n\n    /// Out of either host or device memory.\n    #[fail(display = \"{}\", _0)]\n    OutOfMemory(device::OutOfMemory),\n\n    /// No image was ready and no timeout was specified.\n    #[fail(display = \"No images ready\")]\n    NotReady,\n\n    /// No image was ready after the specified timeout expired.\n    #[fail(display = \"No images ready after the specified timeout expired\")]\n    Timeout,\n\n    /// The swapchain is no longer in sync with the surface, needs to be re-created.\n    #[fail(display = \"Swapchain is out of date\")]\n    OutOfDate,\n\n    /// The surface was lost, and the swapchain is no longer usable.\n    #[fail(display = \"{}\", _0)]\n    SurfaceLost(device::SurfaceLost),\n\n    /// Device is lost\n    #[fail(display = \"{}\", _0)]\n    DeviceLost(device::DeviceLost),\n}","parent":null,"children":[{"krate":0,"index":21411},{"krate":0,"index":21414},{"krate":0,"index":21416},{"krate":0,"index":21418},{"krate":0,"index":21420},{"krate":0,"index":21423}],"decl_id":null,"docs":" Error on acquiring the next image from a swapchain.\n","sig":null,"attributes":[{"value":"/ Error on acquiring the next image from a swapchain.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":271743,"byte_end":271798,"line_start":376,"line_end":376,"column_start":1,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":21447},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":272850,"byte_end":272861,"line_start":404,"line_end":404,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::window::PresentError::OutOfMemory","value":"PresentError::OutOfMemory(device::OutOfMemory)","parent":{"krate":0,"index":21446},"children":[],"decl_id":null,"docs":" Out of either host or device memory.\n","sig":null,"attributes":[{"value":"/ Out of either host or device memory.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":272773,"byte_end":272813,"line_start":402,"line_end":402,"column_start":5,"column_end":45}},{"value":"fail(display = \"{}\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":272818,"byte_end":272845,"line_start":403,"line_end":403,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":21450},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":273023,"byte_end":273032,"line_start":407,"line_end":407,"column_start":5,"column_end":14},"name":"OutOfDate","qualname":"::window::PresentError::OutOfDate","value":"PresentError::OutOfDate","parent":{"krate":0,"index":21446},"children":[],"decl_id":null,"docs":" The swapchain is no longer in sync with the surface, needs to be re-created.\n","sig":null,"attributes":[{"value":"/ The swapchain is no longer in sync with the surface, needs to be re-created.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":272888,"byte_end":272968,"line_start":405,"line_end":405,"column_start":5,"column_end":85}},{"value":"fail(display = \"Swapchain is out of date\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":272973,"byte_end":273018,"line_start":406,"line_end":406,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":21452},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":273139,"byte_end":273150,"line_start":410,"line_end":410,"column_start":5,"column_end":16},"name":"SurfaceLost","qualname":"::window::PresentError::SurfaceLost","value":"PresentError::SurfaceLost(device::SurfaceLost)","parent":{"krate":0,"index":21446},"children":[],"decl_id":null,"docs":" The surface was lost, and the swapchain is no longer usable.\n","sig":null,"attributes":[{"value":"/ The surface was lost, and the swapchain is no longer usable.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":273038,"byte_end":273102,"line_start":408,"line_end":408,"column_start":5,"column_end":69}},{"value":"fail(display = \"{}\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":273107,"byte_end":273134,"line_start":409,"line_end":409,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":21455},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":273232,"byte_end":273242,"line_start":413,"line_end":413,"column_start":5,"column_end":15},"name":"DeviceLost","qualname":"::window::PresentError::DeviceLost","value":"PresentError::DeviceLost(device::DeviceLost)","parent":{"krate":0,"index":21446},"children":[],"decl_id":null,"docs":" Device is lost\n","sig":null,"attributes":[{"value":"/ Device is lost","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":273177,"byte_end":273195,"line_start":411,"line_end":411,"column_start":5,"column_end":23}},{"value":"fail(display = \"{}\", _0)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":273200,"byte_end":273227,"line_start":412,"line_end":412,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":21446},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":272754,"byte_end":272766,"line_start":401,"line_end":401,"column_start":10,"column_end":22},"name":"PresentError","qualname":"::window::PresentError","value":"pub enum PresentError {\n\n    /// Out of either host or device memory.\n    #[fail(display = \"{}\", _0)]\n    OutOfMemory(device::OutOfMemory),\n\n    /// The swapchain is no longer in sync with the surface, needs to be re-created.\n    #[fail(display = \"Swapchain is out of date\")]\n    OutOfDate,\n\n    /// The surface was lost, and the swapchain is no longer usable.\n    #[fail(display = \"{}\", _0)]\n    SurfaceLost(device::SurfaceLost),\n\n    /// Device is lost\n    #[fail(display = \"{}\", _0)]\n    DeviceLost(device::DeviceLost),\n}","parent":null,"children":[{"krate":0,"index":21447},{"krate":0,"index":21450},{"krate":0,"index":21452},{"krate":0,"index":21455}],"decl_id":null,"docs":" Error on acquiring the next image from a swapchain.\n","sig":null,"attributes":[{"value":"/ Error on acquiring the next image from a swapchain.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":272638,"byte_end":272693,"line_start":399,"line_end":399,"column_start":1,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":1395},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":273420,"byte_end":273429,"line_start":418,"line_end":418,"column_start":11,"column_end":20},"name":"Swapchain","qualname":"::window::Swapchain","value":"Swapchain<B: Backend>: fmt::Debug + Any + Send + Sync","parent":null,"children":[{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1403}],"decl_id":null,"docs":" The `Swapchain` is the backend representation of the surface.\n It consists of multiple buffers, which will be presented on the surface.\n","sig":null,"attributes":[{"value":"/ The `Swapchain` is the backend representation of the surface.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":273267,"byte_end":273332,"line_start":416,"line_end":416,"column_start":1,"column_end":66}},{"value":"/ It consists of multiple buffers, which will be presented on the surface.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":273333,"byte_end":273409,"line_start":417,"line_end":417,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1397},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":274066,"byte_end":274079,"line_start":434,"line_end":434,"column_start":15,"column_end":28},"name":"acquire_image","qualname":"::window::Swapchain::acquire_image","value":"pub unsafe fn acquire_image(&mut Self, u64, Option<&B::Semaphore>,\n                            Option<&B::Fence>)\n-> Result<(SwapImageIndex, Option<Suboptimal>), AcquireError>","parent":{"krate":0,"index":1395},"children":[],"decl_id":null,"docs":" Acquire a new swapchain image for rendering. This needs to be called before presenting.","sig":null,"attributes":[{"value":"/ Acquire a new swapchain image for rendering. This needs to be called before presenting.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":273480,"byte_end":273571,"line_start":419,"line_end":419,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":273576,"byte_end":273579,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ May fail according to one of the reasons indicated in `AcquireError` enum.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":273584,"byte_end":273662,"line_start":421,"line_end":421,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":273667,"byte_end":273670,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Synchronization","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":273675,"byte_end":273696,"line_start":423,"line_end":423,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":273701,"byte_end":273704,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ The acquired image will not be immediately available when the function returns.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":273709,"byte_end":273792,"line_start":425,"line_end":425,"column_start":5,"column_end":88}},{"value":"/ Once available the provided [`Semaphore`](../trait.Resources.html#associatedtype.Semaphore)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":273797,"byte_end":273892,"line_start":426,"line_end":426,"column_start":5,"column_end":100}},{"value":"/ and [`Fence`](../trait.Resources.html#associatedtype.Fence) will be signaled.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":273897,"byte_end":273978,"line_start":427,"line_end":427,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":273983,"byte_end":273986,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":273991,"byte_end":274005,"line_start":429,"line_end":429,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":274010,"byte_end":274013,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":274018,"byte_end":274031,"line_start":431,"line_end":431,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":274036,"byte_end":274039,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":274044,"byte_end":274051,"line_start":433,"line_end":433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":274547,"byte_end":274554,"line_start":453,"line_end":453,"column_start":15,"column_end":22},"name":"present","qualname":"::window::Swapchain::present","value":"pub unsafe fn present<'a, C, S,\n                      Iw>(&'a Self, &mut CommandQueue<B, C>, SwapImageIndex,\n                          Iw) -> Result<Option<Suboptimal>, PresentError>\nwhere Self: 'a + Sized + Borrow<B::Swapchain>, C: Capability, S: 'a +\nBorrow<B::Semaphore>, Iw: IntoIterator<Item = &'a S>","parent":{"krate":0,"index":1395},"children":[],"decl_id":null,"docs":" Present one acquired image.","sig":null,"attributes":[{"value":"/ Present one acquired image.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":274275,"byte_end":274306,"line_start":441,"line_end":441,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":274311,"byte_end":274314,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":274319,"byte_end":274331,"line_start":443,"line_end":443,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":274336,"byte_end":274339,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ The passed queue _must_ support presentation on the surface, which is","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":274344,"byte_end":274417,"line_start":445,"line_end":445,"column_start":5,"column_end":78}},{"value":"/ used for creating this swapchain.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":274422,"byte_end":274459,"line_start":446,"line_end":446,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":274464,"byte_end":274467,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":274472,"byte_end":274486,"line_start":448,"line_end":448,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":274491,"byte_end":274494,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":274499,"byte_end":274512,"line_start":450,"line_end":450,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":274517,"byte_end":274520,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":274525,"byte_end":274532,"line_start":452,"line_end":452,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1403},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":275093,"byte_end":275119,"line_start":469,"line_end":469,"column_start":15,"column_end":41},"name":"present_without_semaphores","qualname":"::window::Swapchain::present_without_semaphores","value":"pub unsafe fn present_without_semaphores<'a,\n                                         C>(&'a Self, &mut CommandQueue<B, C>,\n                                            SwapImageIndex)\n-> Result<Option<Suboptimal>, PresentError> where Self: 'a + Sized +\nBorrow<B::Swapchain>, C: Capability","parent":{"krate":0,"index":1395},"children":[],"decl_id":null,"docs":" Present one acquired image without any semaphore synchronization.\n","sig":null,"attributes":[{"value":"/ Present one acquired image without any semaphore synchronization.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":275009,"byte_end":275078,"line_start":468,"line_end":468,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":21479},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":275738,"byte_end":275761,"line_start":487,"line_end":487,"column_start":5,"column_end":28},"name":"UnsupportedWindowHandle","qualname":"::window::InitError::UnsupportedWindowHandle","value":"InitError::UnsupportedWindowHandle","parent":{"krate":0,"index":21478},"children":[],"decl_id":null,"docs":" Window handle is not supported by the backend.\n","sig":null,"attributes":[{"value":"/ Window handle is not supported by the backend.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":275584,"byte_end":275634,"line_start":485,"line_end":485,"column_start":5,"column_end":55}},{"value":"fail(display =\n       \"Backend does not support creating surfaces for this type of window handle\")","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":275639,"byte_end":275733,"line_start":486,"line_end":486,"column_start":5,"column_end":99}}]},{"kind":"Enum","id":{"krate":0,"index":21478},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":275568,"byte_end":275577,"line_start":484,"line_end":484,"column_start":10,"column_end":19},"name":"InitError","qualname":"::window::InitError","value":"pub enum InitError {\n\n    /// Window handle is not supported by the backend.\n    #[fail(display =\n           \"Backend does not support creating surfaces for this type of window handle\")]\n    UnsupportedWindowHandle,\n}","parent":null,"children":[{"krate":0,"index":21479}],"decl_id":null,"docs":" Error occurred during surface creation.\n","sig":null,"attributes":[{"value":"/ Error occurred during surface creation.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":275464,"byte_end":275507,"line_start":482,"line_end":482,"column_start":1,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":1406},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\backend.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"backend","qualname":"::backend","value":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\backend.rs","parent":null,"children":[{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":23106},{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":21500},{"krate":0,"index":21504},{"krate":0,"index":1414},{"krate":0,"index":1418},{"krate":0,"index":1421}],"decl_id":null,"docs":" Functionality only required for backend implementations.\n","sig":null,"attributes":[{"value":"/ Functionality only required for backend implementations.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\backend.rs","byte_start":275766,"byte_end":275826,"line_start":1,"line_end":1,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":21500},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\backend.rs","byte_start":276094,"byte_end":276107,"line_start":15,"line_end":15,"column_start":12,"column_end":25},"name":"RawQueueGroup","qualname":"::backend::RawQueueGroup","value":"RawQueueGroup { family, queues }","parent":null,"children":[{"krate":0,"index":21502},{"krate":0,"index":21503}],"decl_id":null,"docs":" Bare-metal queue group.","sig":null,"attributes":[{"value":"/ Bare-metal queue group.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\backend.rs","byte_start":275980,"byte_end":276007,"line_start":11,"line_end":11,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\backend.rs","byte_start":276008,"byte_end":276011,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Denotes all queues created from one queue family.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\backend.rs","byte_start":276012,"byte_end":276065,"line_start":13,"line_end":13,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":21502},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\backend.rs","byte_start":276130,"byte_end":276136,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"name":"family","qualname":"::backend::RawQueueGroup::family","value":"<B as Backend>::QueueFamily","parent":{"krate":0,"index":21500},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":21503},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\backend.rs","byte_start":276162,"byte_end":276168,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"name":"queues","qualname":"::backend::RawQueueGroup::queues","value":"std::vec::Vec<<B as Backend>::CommandQueue>","parent":{"krate":0,"index":21500},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1416},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\backend.rs","byte_start":276302,"byte_end":276305,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<RawQueueGroup<B>>::new","value":"pub fn new(B::QueueFamily) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new, empty queue group for a queue family.\n","sig":null,"attributes":[{"value":"/ Create a new, empty queue group for a queue family.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\backend.rs","byte_start":276235,"byte_end":276290,"line_start":21,"line_end":21,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1417},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\backend.rs","byte_start":276671,"byte_end":276680,"line_start":36,"line_end":36,"column_start":12,"column_end":21},"name":"add_queue","qualname":"<RawQueueGroup<B>>::add_queue","value":"pub fn add_queue(&mut Self, B::CommandQueue)","parent":null,"children":[],"decl_id":null,"docs":" Add a command queue to the group.","sig":null,"attributes":[{"value":"/ Add a command queue to the group.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\backend.rs","byte_start":276437,"byte_end":276474,"line_start":29,"line_end":29,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\backend.rs","byte_start":276479,"byte_end":276482,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ The queue needs to be created from this queue family.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\backend.rs","byte_start":276487,"byte_end":276544,"line_start":31,"line_end":31,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\backend.rs","byte_start":276549,"byte_end":276552,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\backend.rs","byte_start":276557,"byte_end":276569,"line_start":33,"line_end":33,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\backend.rs","byte_start":276574,"byte_end":276577,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Panics if more command queues are added than exposed by the queue family.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\backend.rs","byte_start":276582,"byte_end":276659,"line_start":35,"line_end":35,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1420},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\backend.rs","byte_start":276906,"byte_end":276909,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<Queues<B>>::new","value":"pub fn new(Vec<RawQueueGroup<B>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new collection of queues.\n","sig":null,"attributes":[{"value":"/ Create a new collection of queues.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\backend.rs","byte_start":276856,"byte_end":276894,"line_start":43,"line_end":43,"column_start":5,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":1421},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\backend.rs","byte_start":277027,"byte_end":277038,"line_start":50,"line_end":50,"column_start":10,"column_end":21},"name":"FastHashMap","qualname":"::backend::FastHashMap","value":"HashMap<K, V, BuildHasherDefault<FxHasher>>","parent":null,"children":[],"decl_id":null,"docs":" Fast hash map used internally.\n","sig":null,"attributes":[{"value":"/ Fast hash map used internally.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\backend.rs","byte_start":276983,"byte_end":277017,"line_start":49,"line_end":49,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":1424},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1463,"byte_end":1474,"line_start":82,"line_end":82,"column_start":10,"column_end":21},"name":"VertexCount","qualname":"::VertexCount","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Draw vertex count.\n","sig":null,"attributes":[{"value":"/ Draw vertex count.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1431,"byte_end":1453,"line_start":81,"line_end":81,"column_start":1,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":1425},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1520,"byte_end":1532,"line_start":84,"line_end":84,"column_start":10,"column_end":22},"name":"VertexOffset","qualname":"::VertexOffset","value":"i32","parent":null,"children":[],"decl_id":null,"docs":" Draw vertex base offset.\n","sig":null,"attributes":[{"value":"/ Draw vertex base offset.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1482,"byte_end":1510,"line_start":83,"line_end":83,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":1426},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1577,"byte_end":1587,"line_start":86,"line_end":86,"column_start":10,"column_end":20},"name":"IndexCount","qualname":"::IndexCount","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Draw number of indices.\n","sig":null,"attributes":[{"value":"/ Draw number of indices.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1540,"byte_end":1567,"line_start":85,"line_end":85,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":1427},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1634,"byte_end":1647,"line_start":88,"line_end":88,"column_start":10,"column_end":23},"name":"InstanceCount","qualname":"::InstanceCount","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Draw number of instances.\n","sig":null,"attributes":[{"value":"/ Draw number of instances.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1595,"byte_end":1624,"line_start":87,"line_end":87,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1428},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1695,"byte_end":1704,"line_start":90,"line_end":90,"column_start":10,"column_end":19},"name":"DrawCount","qualname":"::DrawCount","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Indirect draw calls count.\n","sig":null,"attributes":[{"value":"/ Indirect draw calls count.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1655,"byte_end":1685,"line_start":89,"line_end":89,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":1429},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1755,"byte_end":1764,"line_start":92,"line_end":92,"column_start":10,"column_end":19},"name":"PatchSize","qualname":"::PatchSize","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Number of vertices in a patch\n","sig":null,"attributes":[{"value":"/ Number of vertices in a patch","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1712,"byte_end":1745,"line_start":91,"line_end":91,"column_start":1,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":1430},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1807,"byte_end":1821,"line_start":94,"line_end":94,"column_start":10,"column_end":24},"name":"WorkGroupCount","qualname":"::WorkGroupCount","value":"[u32; ]","parent":null,"children":[],"decl_id":null,"docs":" Number of work groups.\n","sig":null,"attributes":[{"value":"/ Number of work groups.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1771,"byte_end":1797,"line_start":93,"line_end":93,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":1432},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1871,"byte_end":1884,"line_start":97,"line_end":97,"column_start":10,"column_end":23},"name":"AttributeSlot","qualname":"::AttributeSlot","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Slot for an attribute.\n","sig":null,"attributes":[{"value":"/ Slot for an attribute.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1835,"byte_end":1861,"line_start":96,"line_end":96,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":1433},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1939,"byte_end":1957,"line_start":99,"line_end":99,"column_start":10,"column_end":28},"name":"ConstantBufferSlot","qualname":"::ConstantBufferSlot","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Slot for a constant buffer object.\n","sig":null,"attributes":[{"value":"/ Slot for a constant buffer object.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1891,"byte_end":1929,"line_start":98,"line_end":98,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1434},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":2010,"byte_end":2026,"line_start":101,"line_end":101,"column_start":10,"column_end":26},"name":"ResourceViewSlot","qualname":"::ResourceViewSlot","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Slot for a shader resource view.\n","sig":null,"attributes":[{"value":"/ Slot for a shader resource view.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1964,"byte_end":2000,"line_start":100,"line_end":100,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1435},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":2083,"byte_end":2100,"line_start":103,"line_end":103,"column_start":10,"column_end":27},"name":"UnorderedViewSlot","qualname":"::UnorderedViewSlot","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Slot for an unordered access object.\n","sig":null,"attributes":[{"value":"/ Slot for an unordered access object.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":2033,"byte_end":2073,"line_start":102,"line_end":102,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":1436},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":2153,"byte_end":2162,"line_start":105,"line_end":105,"column_start":10,"column_end":19},"name":"ColorSlot","qualname":"::ColorSlot","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Slot for an active color buffer.\n","sig":null,"attributes":[{"value":"/ Slot for an active color buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":2107,"byte_end":2143,"line_start":104,"line_end":104,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1437},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":2202,"byte_end":2213,"line_start":107,"line_end":107,"column_start":10,"column_end":21},"name":"SamplerSlot","qualname":"::SamplerSlot","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Slot for a sampler.\n","sig":null,"attributes":[{"value":"/ Slot for a sampler.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":2169,"byte_end":2192,"line_start":106,"line_end":106,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":21507},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":2552,"byte_end":2560,"line_start":115,"line_end":115,"column_start":16,"column_end":24},"name":"Features","qualname":"::Features","value":"Features {  }","parent":null,"children":[{"krate":0,"index":21508}],"decl_id":null,"docs":" Features that the device supports.\n These only include features of the core interface and not API extensions.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21651},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":2628,"byte_end":2637,"line_start":117,"line_end":117,"column_start":15,"column_end":24},"name":"CORE_MASK","qualname":"::Features::CORE_MASK","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Bit mask of Vulkan Core features.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21652},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":2732,"byte_end":2748,"line_start":119,"line_end":119,"column_start":15,"column_end":31},"name":"PORTABILITY_MASK","qualname":"::Features::PORTABILITY_MASK","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Bit mask of Vulkan Portability features.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21653},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":2928,"byte_end":2948,"line_start":123,"line_end":123,"column_start":15,"column_end":35},"name":"ROBUST_BUFFER_ACCESS","qualname":"::Features::ROBUST_BUFFER_ACCESS","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support for robust buffer access.\n Buffer access by SPIR-V shaders is checked against the buffer/image boundaries.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21654},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":3159,"byte_end":3178,"line_start":126,"line_end":126,"column_start":15,"column_end":34},"name":"FULL_DRAW_INDEX_U32","qualname":"::Features::FULL_DRAW_INDEX_U32","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support the full 32-bit range of indexed for draw calls.\n If not supported, the maximum index value is determined by `Limits::max_draw_index_value`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21655},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":3261,"byte_end":3277,"line_start":128,"line_end":128,"column_start":15,"column_end":31},"name":"IMAGE_CUBE_ARRAY","qualname":"::Features::IMAGE_CUBE_ARRAY","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support cube array image views.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21656},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":3417,"byte_end":3437,"line_start":130,"line_end":130,"column_start":15,"column_end":35},"name":"INDEPENDENT_BLENDING","qualname":"::Features::INDEPENDENT_BLENDING","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support different color blending settings per attachments on graphics pipeline creation.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21657},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":3513,"byte_end":3528,"line_start":132,"line_end":132,"column_start":15,"column_end":30},"name":"GEOMETRY_SHADER","qualname":"::Features::GEOMETRY_SHADER","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support geometry shader.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21658},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":3609,"byte_end":3628,"line_start":134,"line_end":134,"column_start":15,"column_end":34},"name":"TESSELLATION_SHADER","qualname":"::Features::TESSELLATION_SHADER","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support tessellation shaders.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21659},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":3737,"byte_end":3756,"line_start":136,"line_end":136,"column_start":15,"column_end":34},"name":"SAMPLE_RATE_SHADING","qualname":"::Features::SAMPLE_RATE_SHADING","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support per-sample shading and multisample interpolation.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21660},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":3837,"byte_end":3854,"line_start":138,"line_end":138,"column_start":15,"column_end":32},"name":"DUAL_SRC_BLENDING","qualname":"::Features::DUAL_SRC_BLENDING","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support dual source blending.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21661},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":3931,"byte_end":3939,"line_start":140,"line_end":140,"column_start":15,"column_end":23},"name":"LOGIC_OP","qualname":"::Features::LOGIC_OP","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support logic operations.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21662},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":4032,"byte_end":4051,"line_start":142,"line_end":142,"column_start":15,"column_end":34},"name":"MULTI_DRAW_INDIRECT","qualname":"::Features::MULTI_DRAW_INDIRECT","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support multiple draws per indirect call.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21663},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":4223,"byte_end":4251,"line_start":145,"line_end":145,"column_start":15,"column_end":43},"name":"DRAW_INDIRECT_FIRST_INSTANCE","qualname":"::Features::DRAW_INDIRECT_FIRST_INSTANCE","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support indirect drawing with first instance value.\n If not supported the first instance value **must** be 0.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21664},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":4325,"byte_end":4336,"line_start":147,"line_end":147,"column_start":15,"column_end":26},"name":"DEPTH_CLAMP","qualname":"::Features::DEPTH_CLAMP","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support depth clamping.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21665},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":4416,"byte_end":4432,"line_start":149,"line_end":149,"column_start":15,"column_end":31},"name":"DEPTH_BIAS_CLAMP","qualname":"::Features::DEPTH_BIAS_CLAMP","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support depth bias clamping.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21666},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":4515,"byte_end":4536,"line_start":151,"line_end":151,"column_start":15,"column_end":36},"name":"NON_FILL_POLYGON_MODE","qualname":"::Features::NON_FILL_POLYGON_MODE","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support non-fill polygon modes.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21667},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":4614,"byte_end":4626,"line_start":153,"line_end":153,"column_start":15,"column_end":27},"name":"DEPTH_BOUNDS","qualname":"::Features::DEPTH_BOUNDS","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support depth bounds test.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21668},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":4718,"byte_end":4728,"line_start":155,"line_end":155,"column_start":15,"column_end":25},"name":"LINE_WIDTH","qualname":"::Features::LINE_WIDTH","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support lines with width other than 1.0.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21669},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":4822,"byte_end":4832,"line_start":157,"line_end":157,"column_start":15,"column_end":25},"name":"POINT_SIZE","qualname":"::Features::POINT_SIZE","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support points with size greater than 1.0.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21670},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":4924,"byte_end":4936,"line_start":159,"line_end":159,"column_start":15,"column_end":27},"name":"ALPHA_TO_ONE","qualname":"::Features::ALPHA_TO_ONE","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support replacing alpha values with 1.0.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21671},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":5028,"byte_end":5043,"line_start":161,"line_end":161,"column_start":15,"column_end":30},"name":"MULTI_VIEWPORTS","qualname":"::Features::MULTI_VIEWPORTS","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support multiple viewports and scissors.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21672},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":5125,"byte_end":5143,"line_start":163,"line_end":163,"column_start":15,"column_end":33},"name":"SAMPLER_ANISOTROPY","qualname":"::Features::SAMPLER_ANISOTROPY","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support anisotropic filtering.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21673},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":5236,"byte_end":5247,"line_start":165,"line_end":165,"column_start":15,"column_end":26},"name":"FORMAT_ETC2","qualname":"::Features::FORMAT_ETC2","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support ETC2 texture compression formats.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21674},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":5346,"byte_end":5361,"line_start":167,"line_end":167,"column_start":15,"column_end":30},"name":"FORMAT_ASTC_LDR","qualname":"::Features::FORMAT_ASTC_LDR","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support ASTC (LDR) texture compression formats.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21675},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":5452,"byte_end":5461,"line_start":169,"line_end":169,"column_start":15,"column_end":24},"name":"FORMAT_BC","qualname":"::Features::FORMAT_BC","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support BC texture compression formats.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21676},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":5686,"byte_end":5709,"line_start":172,"line_end":172,"column_start":15,"column_end":38},"name":"PRECISE_OCCLUSION_QUERY","qualname":"::Features::PRECISE_OCCLUSION_QUERY","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support precise occlusion queries, returning the actual number of samples.\n If not supported, queries return a non-zero value when at least **one** sample passes.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21677},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":5798,"byte_end":5823,"line_start":174,"line_end":174,"column_start":15,"column_end":40},"name":"PIPELINE_STATISTICS_QUERY","qualname":"::Features::PIPELINE_STATISTICS_QUERY","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support query of pipeline statistics.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21678},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":6075,"byte_end":6100,"line_start":178,"line_end":178,"column_start":15,"column_end":40},"name":"VERTEX_STORES_AND_ATOMICS","qualname":"::Features::VERTEX_STORES_AND_ATOMICS","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support unordered access stores and atomic ops in the vertex, geometry\n and tessellation shader stage.\n If not supported, the shader resources **must** be annotated as read-only.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21679},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":6314,"byte_end":6341,"line_start":181,"line_end":181,"column_start":15,"column_end":42},"name":"FRAGMENT_STORES_AND_ATOMICS","qualname":"::Features::FRAGMENT_STORES_AND_ATOMICS","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support unordered access stores and atomic ops in the fragment shader stage\n If not supported, the shader resources **must** be annotated as read-only.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21680},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":6392,"byte_end":6435,"line_start":183,"line_end":183,"column_start":15,"column_end":58},"name":"SHADER_TESSELLATION_AND_GEOMETRY_POINT_SIZE","qualname":"::Features::SHADER_TESSELLATION_AND_GEOMETRY_POINT_SIZE","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21681},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":6486,"byte_end":6514,"line_start":185,"line_end":185,"column_start":15,"column_end":43},"name":"SHADER_IMAGE_GATHER_EXTENDED","qualname":"::Features::SHADER_IMAGE_GATHER_EXTENDED","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21682},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":6565,"byte_end":6602,"line_start":187,"line_end":187,"column_start":15,"column_end":52},"name":"SHADER_STORAGE_IMAGE_EXTENDED_FORMATS","qualname":"::Features::SHADER_STORAGE_IMAGE_EXTENDED_FORMATS","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21683},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":6653,"byte_end":6685,"line_start":189,"line_end":189,"column_start":15,"column_end":47},"name":"SHADER_STORAGE_IMAGE_MULTISAMPLE","qualname":"::Features::SHADER_STORAGE_IMAGE_MULTISAMPLE","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21684},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":6736,"byte_end":6776,"line_start":191,"line_end":191,"column_start":15,"column_end":55},"name":"SHADER_STORAGE_IMAGE_READ_WITHOUT_FORMAT","qualname":"::Features::SHADER_STORAGE_IMAGE_READ_WITHOUT_FORMAT","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21685},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":6827,"byte_end":6868,"line_start":193,"line_end":193,"column_start":15,"column_end":56},"name":"SHADER_STORAGE_IMAGE_WRITE_WITHOUT_FORMAT","qualname":"::Features::SHADER_STORAGE_IMAGE_WRITE_WITHOUT_FORMAT","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21686},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":6919,"byte_end":6963,"line_start":195,"line_end":195,"column_start":15,"column_end":59},"name":"SHADER_UNIFORM_BUFFER_ARRAY_DYNAMIC_INDEXING","qualname":"::Features::SHADER_UNIFORM_BUFFER_ARRAY_DYNAMIC_INDEXING","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21687},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":7014,"byte_end":7057,"line_start":197,"line_end":197,"column_start":15,"column_end":58},"name":"SHADER_SAMPLED_IMAGE_ARRAY_DYNAMIC_INDEXING","qualname":"::Features::SHADER_SAMPLED_IMAGE_ARRAY_DYNAMIC_INDEXING","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21688},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":7108,"byte_end":7152,"line_start":199,"line_end":199,"column_start":15,"column_end":59},"name":"SHADER_STORAGE_BUFFER_ARRAY_DYNAMIC_INDEXING","qualname":"::Features::SHADER_STORAGE_BUFFER_ARRAY_DYNAMIC_INDEXING","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21689},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":7203,"byte_end":7246,"line_start":201,"line_end":201,"column_start":15,"column_end":58},"name":"SHADER_STORAGE_IMAGE_ARRAY_DYNAMIC_INDEXING","qualname":"::Features::SHADER_STORAGE_IMAGE_ARRAY_DYNAMIC_INDEXING","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21690},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":7297,"byte_end":7317,"line_start":203,"line_end":203,"column_start":15,"column_end":35},"name":"SHADER_CLIP_DISTANCE","qualname":"::Features::SHADER_CLIP_DISTANCE","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21691},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":7368,"byte_end":7388,"line_start":205,"line_end":205,"column_start":15,"column_end":35},"name":"SHADER_CULL_DISTANCE","qualname":"::Features::SHADER_CULL_DISTANCE","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21692},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":7439,"byte_end":7453,"line_start":207,"line_end":207,"column_start":15,"column_end":29},"name":"SHADER_FLOAT64","qualname":"::Features::SHADER_FLOAT64","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21693},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":7504,"byte_end":7516,"line_start":209,"line_end":209,"column_start":15,"column_end":27},"name":"SHADER_INT64","qualname":"::Features::SHADER_INT64","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21694},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":7567,"byte_end":7579,"line_start":211,"line_end":211,"column_start":15,"column_end":27},"name":"SHADER_INT16","qualname":"::Features::SHADER_INT16","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21695},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":7630,"byte_end":7655,"line_start":213,"line_end":213,"column_start":15,"column_end":40},"name":"SHADER_RESOURCE_RESIDENCY","qualname":"::Features::SHADER_RESOURCE_RESIDENCY","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21696},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":7706,"byte_end":7729,"line_start":215,"line_end":215,"column_start":15,"column_end":38},"name":"SHADER_RESOURCE_MIN_LOD","qualname":"::Features::SHADER_RESOURCE_MIN_LOD","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21697},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":7780,"byte_end":7794,"line_start":217,"line_end":217,"column_start":15,"column_end":29},"name":"SPARSE_BINDING","qualname":"::Features::SPARSE_BINDING","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21698},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":7845,"byte_end":7868,"line_start":219,"line_end":219,"column_start":15,"column_end":38},"name":"SPARSE_RESIDENCY_BUFFER","qualname":"::Features::SPARSE_RESIDENCY_BUFFER","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21699},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":7919,"byte_end":7944,"line_start":221,"line_end":221,"column_start":15,"column_end":40},"name":"SPARSE_RESIDENCY_IMAGE_2D","qualname":"::Features::SPARSE_RESIDENCY_IMAGE_2D","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21700},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":7995,"byte_end":8020,"line_start":223,"line_end":223,"column_start":15,"column_end":40},"name":"SPARSE_RESIDENCY_IMAGE_3D","qualname":"::Features::SPARSE_RESIDENCY_IMAGE_3D","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21701},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":8071,"byte_end":8097,"line_start":225,"line_end":225,"column_start":15,"column_end":41},"name":"SPARSE_RESIDENCY_2_SAMPLES","qualname":"::Features::SPARSE_RESIDENCY_2_SAMPLES","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21702},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":8148,"byte_end":8174,"line_start":227,"line_end":227,"column_start":15,"column_end":41},"name":"SPARSE_RESIDENCY_4_SAMPLES","qualname":"::Features::SPARSE_RESIDENCY_4_SAMPLES","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21703},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":8225,"byte_end":8251,"line_start":229,"line_end":229,"column_start":15,"column_end":41},"name":"SPARSE_RESIDENCY_8_SAMPLES","qualname":"::Features::SPARSE_RESIDENCY_8_SAMPLES","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21704},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":8302,"byte_end":8329,"line_start":231,"line_end":231,"column_start":15,"column_end":42},"name":"SPARSE_RESIDENCY_16_SAMPLES","qualname":"::Features::SPARSE_RESIDENCY_16_SAMPLES","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21705},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":8380,"byte_end":8404,"line_start":233,"line_end":233,"column_start":15,"column_end":39},"name":"SPARSE_RESIDENCY_ALIASED","qualname":"::Features::SPARSE_RESIDENCY_ALIASED","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21706},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":8455,"byte_end":8480,"line_start":235,"line_end":235,"column_start":15,"column_end":40},"name":"VARIABLE_MULTISAMPLE_RATE","qualname":"::Features::VARIABLE_MULTISAMPLE_RATE","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21707},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":8531,"byte_end":8548,"line_start":237,"line_end":237,"column_start":15,"column_end":32},"name":"INHERITED_QUERIES","qualname":"::Features::INHERITED_QUERIES","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21708},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":8641,"byte_end":8653,"line_start":240,"line_end":240,"column_start":15,"column_end":27},"name":"TRIANGLE_FAN","qualname":"::Features::TRIANGLE_FAN","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support triangle fan primitive topology.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21709},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":8773,"byte_end":8800,"line_start":242,"line_end":242,"column_start":15,"column_end":42},"name":"SEPARATE_STENCIL_REF_VALUES","qualname":"::Features::SEPARATE_STENCIL_REF_VALUES","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support separate stencil reference values for front and back sides.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21710},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":8914,"byte_end":8927,"line_start":244,"line_end":244,"column_start":15,"column_end":28},"name":"INSTANCE_RATE","qualname":"::Features::INSTANCE_RATE","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support manually specified vertex attribute rates (divisors).\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":21711},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":9021,"byte_end":9041,"line_start":246,"line_end":246,"column_start":15,"column_end":35},"name":"SAMPLER_MIP_LOD_BIAS","qualname":"::Features::SAMPLER_MIP_LOD_BIAS","value":"Features","parent":{"krate":0,"index":21650},"children":[],"decl_id":null,"docs":" Support non-zero mipmap bias on samplers.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21940},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":9253,"byte_end":9259,"line_start":253,"line_end":253,"column_start":12,"column_end":18},"name":"Limits","qualname":"::Limits","value":"Limits { max_image_1d_size, max_image_2d_size, max_image_3d_size, max_image_cube_size, max_image_array_layers, max_texel_elements, max_uniform_buffer_range, max_storage_buffer_range, max_push_constants_size, max_memory_allocation_count, max_sampler_allocation_count, max_bound_descriptor_sets, max_framebuffer_layers, max_per_stage_descriptor_samplers, max_per_stage_descriptor_uniform_buffers, max_per_stage_descriptor_storage_buffers, max_per_stage_descriptor_sampled_images, max_per_stage_descriptor_storage_images, max_per_stage_descriptor_input_attachments, max_per_stage_resources, max_descriptor_set_samplers, max_descriptor_set_uniform_buffers, max_descriptor_set_uniform_buffers_dynamic, max_descriptor_set_storage_buffers, max_descriptor_set_storage_buffers_dynamic, max_descriptor_set_sampled_images, max_descriptor_set_storage_images, max_descriptor_set_input_attachments, max_vertex_input_attributes, max_vertex_input_bindings, max_vertex_input_attribute_offset, max_vertex_input_binding_stride, max_vertex_output_components, max_patch_size, max_geometry_shader_invocations, max_geometry_input_components, max_geometry_output_components, max_geometry_output_vertices, max_geometry_total_output_components, max_fragment_input_components, max_fragment_output_attachments, max_fragment_dual_source_attachments, max_fragment_combined_output_resources, max_compute_shared_memory_size, max_compute_work_group_count, max_compute_work_group_invocations, max_compute_work_group_size, max_draw_indexed_index_value, max_draw_indirect_count, max_sampler_lod_bias, max_sampler_anisotropy, max_viewports, max_viewport_dimensions, max_framebuffer_extent, min_memory_map_alignment, buffer_image_granularity, min_texel_buffer_offset_alignment, min_uniform_buffer_offset_alignment, min_storage_buffer_offset_alignment, framebuffer_color_sample_counts, framebuffer_depth_sample_counts, framebuffer_stencil_sample_counts, max_color_attachments, standard_sample_locations, optimal_buffer_copy_offset_alignment, optimal_buffer_copy_pitch_alignment, non_coherent_atom_size, min_vertex_input_binding_stride_alignment }","parent":null,"children":[{"krate":0,"index":21941},{"krate":0,"index":21942},{"krate":0,"index":21943},{"krate":0,"index":21944},{"krate":0,"index":21945},{"krate":0,"index":21946},{"krate":0,"index":21947},{"krate":0,"index":21948},{"krate":0,"index":21949},{"krate":0,"index":21950},{"krate":0,"index":21951},{"krate":0,"index":21952},{"krate":0,"index":21953},{"krate":0,"index":21954},{"krate":0,"index":21955},{"krate":0,"index":21956},{"krate":0,"index":21957},{"krate":0,"index":21958},{"krate":0,"index":21959},{"krate":0,"index":21960},{"krate":0,"index":21961},{"krate":0,"index":21962},{"krate":0,"index":21963},{"krate":0,"index":21964},{"krate":0,"index":21965},{"krate":0,"index":21966},{"krate":0,"index":21967},{"krate":0,"index":21968},{"krate":0,"index":21969},{"krate":0,"index":21970},{"krate":0,"index":21971},{"krate":0,"index":21972},{"krate":0,"index":21973},{"krate":0,"index":21974},{"krate":0,"index":21975},{"krate":0,"index":21976},{"krate":0,"index":21977},{"krate":0,"index":21978},{"krate":0,"index":21979},{"krate":0,"index":21980},{"krate":0,"index":21981},{"krate":0,"index":21982},{"krate":0,"index":21983},{"krate":0,"index":21984},{"krate":0,"index":21985},{"krate":0,"index":21986},{"krate":0,"index":21987},{"krate":0,"index":21989},{"krate":0,"index":21990},{"krate":0,"index":21991},{"krate":0,"index":21992},{"krate":0,"index":21993},{"krate":0,"index":21994},{"krate":0,"index":21996},{"krate":0,"index":21997},{"krate":0,"index":21998},{"krate":0,"index":21999},{"krate":0,"index":22000},{"krate":0,"index":22001},{"krate":0,"index":22002},{"krate":0,"index":22003},{"krate":0,"index":22004},{"krate":0,"index":22005},{"krate":0,"index":22006},{"krate":0,"index":22007},{"krate":0,"index":22008},{"krate":0,"index":22009},{"krate":0,"index":22010}],"decl_id":null,"docs":" Resource limits of a particular graphics device.\n","sig":null,"attributes":[{"value":"/ Resource limits of a particular graphics device.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":9076,"byte_end":9128,"line_start":250,"line_end":250,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":21941},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":9311,"byte_end":9328,"line_start":255,"line_end":255,"column_start":9,"column_end":26},"name":"max_image_1d_size","qualname":"::Limits::max_image_1d_size","value":"u32","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":" Maximum supported image 1D size.\n","sig":null,"attributes":[{"value":"/ Maximum supported image 1D size.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":9266,"byte_end":9302,"line_start":254,"line_end":254,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":21942},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":9392,"byte_end":9409,"line_start":257,"line_end":257,"column_start":9,"column_end":26},"name":"max_image_2d_size","qualname":"::Limits::max_image_2d_size","value":"u32","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":" Maximum supported image 2D size.\n","sig":null,"attributes":[{"value":"/ Maximum supported image 2D size.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":9347,"byte_end":9383,"line_start":256,"line_end":256,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":21943},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":9473,"byte_end":9490,"line_start":259,"line_end":259,"column_start":9,"column_end":26},"name":"max_image_3d_size","qualname":"::Limits::max_image_3d_size","value":"u32","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":" Maximum supported image 3D size.\n","sig":null,"attributes":[{"value":"/ Maximum supported image 3D size.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":9428,"byte_end":9464,"line_start":258,"line_end":258,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":21944},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":9556,"byte_end":9575,"line_start":261,"line_end":261,"column_start":9,"column_end":28},"name":"max_image_cube_size","qualname":"::Limits::max_image_cube_size","value":"u32","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":" Maximum supported image cube size.\n","sig":null,"attributes":[{"value":"/ Maximum supported image cube size.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":9509,"byte_end":9547,"line_start":260,"line_end":260,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":21945},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":9642,"byte_end":9664,"line_start":263,"line_end":263,"column_start":9,"column_end":31},"name":"max_image_array_layers","qualname":"::Limits::max_image_array_layers","value":"u16","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":" Maximum supporter image array size.\n","sig":null,"attributes":[{"value":"/ Maximum supporter image array size.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":9594,"byte_end":9633,"line_start":262,"line_end":262,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":21946},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":9750,"byte_end":9768,"line_start":265,"line_end":265,"column_start":9,"column_end":27},"name":"max_texel_elements","qualname":"::Limits::max_texel_elements","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":" Maximum number of elements for the BufferView to see.\n","sig":null,"attributes":[{"value":"/ Maximum number of elements for the BufferView to see.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":9684,"byte_end":9741,"line_start":264,"line_end":264,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":21947},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":9793,"byte_end":9817,"line_start":267,"line_end":267,"column_start":9,"column_end":33},"name":"max_uniform_buffer_range","qualname":"::Limits::max_uniform_buffer_range","value":"u64","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":9781,"byte_end":9784,"line_start":266,"line_end":266,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21948},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":9851,"byte_end":9875,"line_start":269,"line_end":269,"column_start":9,"column_end":33},"name":"max_storage_buffer_range","qualname":"::Limits::max_storage_buffer_range","value":"u64","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":9839,"byte_end":9842,"line_start":268,"line_end":268,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21949},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":9909,"byte_end":9932,"line_start":271,"line_end":271,"column_start":9,"column_end":32},"name":"max_push_constants_size","qualname":"::Limits::max_push_constants_size","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":9897,"byte_end":9900,"line_start":270,"line_end":270,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21950},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":9957,"byte_end":9984,"line_start":273,"line_end":273,"column_start":9,"column_end":36},"name":"max_memory_allocation_count","qualname":"::Limits::max_memory_allocation_count","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":9945,"byte_end":9948,"line_start":272,"line_end":272,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21951},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10009,"byte_end":10037,"line_start":275,"line_end":275,"column_start":9,"column_end":37},"name":"max_sampler_allocation_count","qualname":"::Limits::max_sampler_allocation_count","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":9997,"byte_end":10000,"line_start":274,"line_end":274,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21952},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10062,"byte_end":10087,"line_start":277,"line_end":277,"column_start":9,"column_end":34},"name":"max_bound_descriptor_sets","qualname":"::Limits::max_bound_descriptor_sets","value":"u16","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10050,"byte_end":10053,"line_start":276,"line_end":276,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21953},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10130,"byte_end":10152,"line_start":279,"line_end":279,"column_start":9,"column_end":31},"name":"max_framebuffer_layers","qualname":"::Limits::max_framebuffer_layers","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10118,"byte_end":10121,"line_start":278,"line_end":278,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21954},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10177,"byte_end":10210,"line_start":281,"line_end":281,"column_start":9,"column_end":42},"name":"max_per_stage_descriptor_samplers","qualname":"::Limits::max_per_stage_descriptor_samplers","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10165,"byte_end":10168,"line_start":280,"line_end":280,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21955},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10235,"byte_end":10275,"line_start":283,"line_end":283,"column_start":9,"column_end":49},"name":"max_per_stage_descriptor_uniform_buffers","qualname":"::Limits::max_per_stage_descriptor_uniform_buffers","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10223,"byte_end":10226,"line_start":282,"line_end":282,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21956},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10300,"byte_end":10340,"line_start":285,"line_end":285,"column_start":9,"column_end":49},"name":"max_per_stage_descriptor_storage_buffers","qualname":"::Limits::max_per_stage_descriptor_storage_buffers","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10288,"byte_end":10291,"line_start":284,"line_end":284,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21957},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10365,"byte_end":10404,"line_start":287,"line_end":287,"column_start":9,"column_end":48},"name":"max_per_stage_descriptor_sampled_images","qualname":"::Limits::max_per_stage_descriptor_sampled_images","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10353,"byte_end":10356,"line_start":286,"line_end":286,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21958},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10429,"byte_end":10468,"line_start":289,"line_end":289,"column_start":9,"column_end":48},"name":"max_per_stage_descriptor_storage_images","qualname":"::Limits::max_per_stage_descriptor_storage_images","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10417,"byte_end":10420,"line_start":288,"line_end":288,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21959},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10493,"byte_end":10535,"line_start":291,"line_end":291,"column_start":9,"column_end":51},"name":"max_per_stage_descriptor_input_attachments","qualname":"::Limits::max_per_stage_descriptor_input_attachments","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10481,"byte_end":10484,"line_start":290,"line_end":290,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21960},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10560,"byte_end":10583,"line_start":293,"line_end":293,"column_start":9,"column_end":32},"name":"max_per_stage_resources","qualname":"::Limits::max_per_stage_resources","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10548,"byte_end":10551,"line_start":292,"line_end":292,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21961},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10609,"byte_end":10636,"line_start":296,"line_end":296,"column_start":9,"column_end":36},"name":"max_descriptor_set_samplers","qualname":"::Limits::max_descriptor_set_samplers","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10597,"byte_end":10600,"line_start":295,"line_end":295,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21962},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10661,"byte_end":10695,"line_start":298,"line_end":298,"column_start":9,"column_end":43},"name":"max_descriptor_set_uniform_buffers","qualname":"::Limits::max_descriptor_set_uniform_buffers","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10649,"byte_end":10652,"line_start":297,"line_end":297,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21963},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10720,"byte_end":10762,"line_start":300,"line_end":300,"column_start":9,"column_end":51},"name":"max_descriptor_set_uniform_buffers_dynamic","qualname":"::Limits::max_descriptor_set_uniform_buffers_dynamic","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10708,"byte_end":10711,"line_start":299,"line_end":299,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21964},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10787,"byte_end":10821,"line_start":302,"line_end":302,"column_start":9,"column_end":43},"name":"max_descriptor_set_storage_buffers","qualname":"::Limits::max_descriptor_set_storage_buffers","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10775,"byte_end":10778,"line_start":301,"line_end":301,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21965},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10846,"byte_end":10888,"line_start":304,"line_end":304,"column_start":9,"column_end":51},"name":"max_descriptor_set_storage_buffers_dynamic","qualname":"::Limits::max_descriptor_set_storage_buffers_dynamic","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10834,"byte_end":10837,"line_start":303,"line_end":303,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21966},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10913,"byte_end":10946,"line_start":306,"line_end":306,"column_start":9,"column_end":42},"name":"max_descriptor_set_sampled_images","qualname":"::Limits::max_descriptor_set_sampled_images","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10901,"byte_end":10904,"line_start":305,"line_end":305,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21967},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10971,"byte_end":11004,"line_start":308,"line_end":308,"column_start":9,"column_end":42},"name":"max_descriptor_set_storage_images","qualname":"::Limits::max_descriptor_set_storage_images","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":10959,"byte_end":10962,"line_start":307,"line_end":307,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21968},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":11029,"byte_end":11065,"line_start":310,"line_end":310,"column_start":9,"column_end":45},"name":"max_descriptor_set_input_attachments","qualname":"::Limits::max_descriptor_set_input_attachments","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":11017,"byte_end":11020,"line_start":309,"line_end":309,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21969},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":11180,"byte_end":11207,"line_start":313,"line_end":313,"column_start":9,"column_end":36},"name":"max_vertex_input_attributes","qualname":"::Limits::max_vertex_input_attributes","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":" Maximum number of vertex input attributes that can be specified for a graphics pipeline.\n","sig":null,"attributes":[{"value":"/ Maximum number of vertex input attributes that can be specified for a graphics pipeline.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":11079,"byte_end":11171,"line_start":312,"line_end":312,"column_start":5,"column_end":97}}]},{"kind":"Field","id":{"krate":0,"index":21970},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":11343,"byte_end":11368,"line_start":315,"line_end":315,"column_start":9,"column_end":34},"name":"max_vertex_input_bindings","qualname":"::Limits::max_vertex_input_bindings","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":" Maximum number of vertex buffers that can be specified for providing vertex attributes to a graphics pipeline.\n","sig":null,"attributes":[{"value":"/ Maximum number of vertex buffers that can be specified for providing vertex attributes to a graphics pipeline.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":11220,"byte_end":11334,"line_start":314,"line_end":314,"column_start":5,"column_end":119}}]},{"kind":"Field","id":{"krate":0,"index":21971},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":11485,"byte_end":11518,"line_start":317,"line_end":317,"column_start":9,"column_end":42},"name":"max_vertex_input_attribute_offset","qualname":"::Limits::max_vertex_input_attribute_offset","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":" Maximum vertex input attribute offset that can be added to the vertex input binding stride.\n","sig":null,"attributes":[{"value":"/ Maximum vertex input attribute offset that can be added to the vertex input binding stride.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":11381,"byte_end":11476,"line_start":316,"line_end":316,"column_start":5,"column_end":100}}]},{"kind":"Field","id":{"krate":0,"index":21972},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":11628,"byte_end":11659,"line_start":319,"line_end":319,"column_start":9,"column_end":40},"name":"max_vertex_input_binding_stride","qualname":"::Limits::max_vertex_input_binding_stride","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":" Maximum vertex input binding stride that can be specified in a vertex input binding.\n","sig":null,"attributes":[{"value":"/ Maximum vertex input binding stride that can be specified in a vertex input binding.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":11531,"byte_end":11619,"line_start":318,"line_end":318,"column_start":5,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":21973},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":11773,"byte_end":11801,"line_start":321,"line_end":321,"column_start":9,"column_end":37},"name":"max_vertex_output_components","qualname":"::Limits::max_vertex_output_components","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":" Maximum number of components of output variables which can be output by a vertex shader.\n","sig":null,"attributes":[{"value":"/ Maximum number of components of output variables which can be output by a vertex shader.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":11672,"byte_end":11764,"line_start":320,"line_end":320,"column_start":5,"column_end":97}}]},{"kind":"Field","id":{"krate":0,"index":21974},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":11870,"byte_end":11884,"line_start":324,"line_end":324,"column_start":9,"column_end":23},"name":"max_patch_size","qualname":"::Limits::max_patch_size","value":"u8","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":" Maximum number of vertices for each patch.\n","sig":null,"attributes":[{"value":"/ Maximum number of vertices for each patch.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":11815,"byte_end":11861,"line_start":323,"line_end":323,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":21975},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":11913,"byte_end":11944,"line_start":326,"line_end":326,"column_start":9,"column_end":40},"name":"max_geometry_shader_invocations","qualname":"::Limits::max_geometry_shader_invocations","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":11901,"byte_end":11904,"line_start":325,"line_end":325,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21976},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":11969,"byte_end":11998,"line_start":328,"line_end":328,"column_start":9,"column_end":38},"name":"max_geometry_input_components","qualname":"::Limits::max_geometry_input_components","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":11957,"byte_end":11960,"line_start":327,"line_end":327,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21977},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12023,"byte_end":12053,"line_start":330,"line_end":330,"column_start":9,"column_end":39},"name":"max_geometry_output_components","qualname":"::Limits::max_geometry_output_components","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12011,"byte_end":12014,"line_start":329,"line_end":329,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21978},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12078,"byte_end":12106,"line_start":332,"line_end":332,"column_start":9,"column_end":37},"name":"max_geometry_output_vertices","qualname":"::Limits::max_geometry_output_vertices","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12066,"byte_end":12069,"line_start":331,"line_end":331,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21979},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12131,"byte_end":12167,"line_start":334,"line_end":334,"column_start":9,"column_end":45},"name":"max_geometry_total_output_components","qualname":"::Limits::max_geometry_total_output_components","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12119,"byte_end":12122,"line_start":333,"line_end":333,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21980},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12192,"byte_end":12221,"line_start":336,"line_end":336,"column_start":9,"column_end":38},"name":"max_fragment_input_components","qualname":"::Limits::max_fragment_input_components","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12180,"byte_end":12183,"line_start":335,"line_end":335,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21981},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12246,"byte_end":12277,"line_start":338,"line_end":338,"column_start":9,"column_end":40},"name":"max_fragment_output_attachments","qualname":"::Limits::max_fragment_output_attachments","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12234,"byte_end":12237,"line_start":337,"line_end":337,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21982},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12302,"byte_end":12338,"line_start":340,"line_end":340,"column_start":9,"column_end":45},"name":"max_fragment_dual_source_attachments","qualname":"::Limits::max_fragment_dual_source_attachments","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12290,"byte_end":12293,"line_start":339,"line_end":339,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21983},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12363,"byte_end":12401,"line_start":342,"line_end":342,"column_start":9,"column_end":47},"name":"max_fragment_combined_output_resources","qualname":"::Limits::max_fragment_combined_output_resources","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12351,"byte_end":12354,"line_start":341,"line_end":341,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21984},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12427,"byte_end":12457,"line_start":345,"line_end":345,"column_start":9,"column_end":39},"name":"max_compute_shared_memory_size","qualname":"::Limits::max_compute_shared_memory_size","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12415,"byte_end":12418,"line_start":344,"line_end":344,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21985},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12482,"byte_end":12510,"line_start":347,"line_end":347,"column_start":9,"column_end":37},"name":"max_compute_work_group_count","qualname":"::Limits::max_compute_work_group_count","value":"[u32; 3]","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12470,"byte_end":12473,"line_start":346,"line_end":346,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21986},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12544,"byte_end":12578,"line_start":349,"line_end":349,"column_start":9,"column_end":43},"name":"max_compute_work_group_invocations","qualname":"::Limits::max_compute_work_group_invocations","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12532,"byte_end":12535,"line_start":348,"line_end":348,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21987},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12603,"byte_end":12630,"line_start":351,"line_end":351,"column_start":9,"column_end":36},"name":"max_compute_work_group_size","qualname":"::Limits::max_compute_work_group_size","value":"[u32; 3]","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12591,"byte_end":12594,"line_start":350,"line_end":350,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21989},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12659,"byte_end":12687,"line_start":354,"line_end":354,"column_start":9,"column_end":37},"name":"max_draw_indexed_index_value","qualname":"::Limits::max_draw_indexed_index_value","value":"u32","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12647,"byte_end":12650,"line_start":353,"line_end":353,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21990},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12717,"byte_end":12740,"line_start":356,"line_end":356,"column_start":9,"column_end":32},"name":"max_draw_indirect_count","qualname":"::Limits::max_draw_indirect_count","value":"u32","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12705,"byte_end":12708,"line_start":355,"line_end":355,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21991},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12774,"byte_end":12794,"line_start":359,"line_end":359,"column_start":9,"column_end":29},"name":"max_sampler_lod_bias","qualname":"::Limits::max_sampler_lod_bias","value":"f32","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12762,"byte_end":12765,"line_start":358,"line_end":358,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21992},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12855,"byte_end":12877,"line_start":361,"line_end":361,"column_start":9,"column_end":31},"name":"max_sampler_anisotropy","qualname":"::Limits::max_sampler_anisotropy","value":"f32","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":" Maximum degree of sampler anisotropy.\n","sig":null,"attributes":[{"value":"/ Maximum degree of sampler anisotropy.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12805,"byte_end":12846,"line_start":360,"line_end":360,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":21993},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12930,"byte_end":12943,"line_start":364,"line_end":364,"column_start":9,"column_end":22},"name":"max_viewports","qualname":"::Limits::max_viewports","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":" Maximum number of viewports.\n","sig":null,"attributes":[{"value":"/ Maximum number of viewports.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12889,"byte_end":12921,"line_start":363,"line_end":363,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":21994},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12968,"byte_end":12991,"line_start":366,"line_end":366,"column_start":9,"column_end":32},"name":"max_viewport_dimensions","qualname":"::Limits::max_viewport_dimensions","value":"[u32; 2]","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":12956,"byte_end":12959,"line_start":365,"line_end":365,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21996},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":13027,"byte_end":13049,"line_start":368,"line_end":368,"column_start":9,"column_end":31},"name":"max_framebuffer_extent","qualname":"::Limits::max_framebuffer_extent","value":"image::Extent","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":13015,"byte_end":13018,"line_start":367,"line_end":367,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21997},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":13083,"byte_end":13107,"line_start":371,"line_end":371,"column_start":9,"column_end":33},"name":"min_memory_map_alignment","qualname":"::Limits::min_memory_map_alignment","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":13071,"byte_end":13074,"line_start":370,"line_end":370,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21998},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":13132,"byte_end":13156,"line_start":373,"line_end":373,"column_start":9,"column_end":33},"name":"buffer_image_granularity","qualname":"::Limits::buffer_image_granularity","value":"u64","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":13120,"byte_end":13123,"line_start":372,"line_end":372,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":21999},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":13271,"byte_end":13304,"line_start":375,"line_end":375,"column_start":9,"column_end":42},"name":"min_texel_buffer_offset_alignment","qualname":"::Limits::min_texel_buffer_offset_alignment","value":"u64","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":" The alignment of the start of buffer used as a texel buffer, in bytes, non-zero.\n","sig":null,"attributes":[{"value":"/ The alignment of the start of buffer used as a texel buffer, in bytes, non-zero.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":13178,"byte_end":13262,"line_start":374,"line_end":374,"column_start":5,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":22000},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":13428,"byte_end":13463,"line_start":377,"line_end":377,"column_start":9,"column_end":44},"name":"min_uniform_buffer_offset_alignment","qualname":"::Limits::min_uniform_buffer_offset_alignment","value":"u64","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":" The alignment of the start of buffer used for uniform buffer updates, in bytes, non-zero.\n","sig":null,"attributes":[{"value":"/ The alignment of the start of buffer used for uniform buffer updates, in bytes, non-zero.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":13326,"byte_end":13419,"line_start":376,"line_end":376,"column_start":5,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":22001},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":13580,"byte_end":13615,"line_start":379,"line_end":379,"column_start":9,"column_end":44},"name":"min_storage_buffer_offset_alignment","qualname":"::Limits::min_storage_buffer_offset_alignment","value":"u64","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":" The alignment of the start of buffer used as a storage buffer, in bytes, non-zero.\n","sig":null,"attributes":[{"value":"/ The alignment of the start of buffer used as a storage buffer, in bytes, non-zero.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":13485,"byte_end":13571,"line_start":378,"line_end":378,"column_start":5,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":22002},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":13739,"byte_end":13770,"line_start":381,"line_end":381,"column_start":9,"column_end":40},"name":"framebuffer_color_sample_counts","qualname":"::Limits::framebuffer_color_sample_counts","value":"u8","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":" Number of samples supported for color attachments of framebuffers (floating/fixed point).\n","sig":null,"attributes":[{"value":"/ Number of samples supported for color attachments of framebuffers (floating/fixed point).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":13637,"byte_end":13730,"line_start":380,"line_end":380,"column_start":5,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":22003},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":13874,"byte_end":13905,"line_start":383,"line_end":383,"column_start":9,"column_end":40},"name":"framebuffer_depth_sample_counts","qualname":"::Limits::framebuffer_depth_sample_counts","value":"u8","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":" Number of samples supported for depth attachments of framebuffers.\n","sig":null,"attributes":[{"value":"/ Number of samples supported for depth attachments of framebuffers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":13795,"byte_end":13865,"line_start":382,"line_end":382,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":22004},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":14011,"byte_end":14044,"line_start":385,"line_end":385,"column_start":9,"column_end":42},"name":"framebuffer_stencil_sample_counts","qualname":"::Limits::framebuffer_stencil_sample_counts","value":"u8","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":" Number of samples supported for stencil attachments of framebuffers.\n","sig":null,"attributes":[{"value":"/ Number of samples supported for stencil attachments of framebuffers.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":13930,"byte_end":14002,"line_start":384,"line_end":384,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":22005},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":14165,"byte_end":14186,"line_start":387,"line_end":387,"column_start":9,"column_end":30},"name":"max_color_attachments","qualname":"::Limits::max_color_attachments","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":" Maximum number of color attachments that can be used by a subpass in a render pass.\n","sig":null,"attributes":[{"value":"/ Maximum number of color attachments that can be used by a subpass in a render pass.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":14069,"byte_end":14156,"line_start":386,"line_end":386,"column_start":5,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":22006},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":14211,"byte_end":14236,"line_start":389,"line_end":389,"column_start":9,"column_end":34},"name":"standard_sample_locations","qualname":"::Limits::standard_sample_locations","value":"bool","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":14199,"byte_end":14202,"line_start":388,"line_end":388,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":22007},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":14348,"byte_end":14384,"line_start":391,"line_end":391,"column_start":9,"column_end":45},"name":"optimal_buffer_copy_offset_alignment","qualname":"::Limits::optimal_buffer_copy_offset_alignment","value":"u64","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":" The alignment of the start of the buffer used as a GPU copy source, in bytes, non-zero.\n","sig":null,"attributes":[{"value":"/ The alignment of the start of the buffer used as a GPU copy source, in bytes, non-zero.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":14248,"byte_end":14339,"line_start":390,"line_end":390,"column_start":5,"column_end":96}}]},{"kind":"Field","id":{"krate":0,"index":22008},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":14554,"byte_end":14589,"line_start":394,"line_end":394,"column_start":9,"column_end":44},"name":"optimal_buffer_copy_pitch_alignment","qualname":"::Limits::optimal_buffer_copy_pitch_alignment","value":"u64","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":" The alignment of the row pitch of the texture data stored in a buffer that is\n used in a GPU copy operation, in bytes, non-zero.\n","sig":null,"attributes":[{"value":"/ The alignment of the row pitch of the texture data stored in a buffer that is","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":14406,"byte_end":14487,"line_start":392,"line_end":392,"column_start":5,"column_end":86}},{"value":"/ used in a GPU copy operation, in bytes, non-zero.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":14492,"byte_end":14545,"line_start":393,"line_end":393,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":22009},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":14711,"byte_end":14733,"line_start":396,"line_end":396,"column_start":9,"column_end":31},"name":"non_coherent_atom_size","qualname":"::Limits::non_coherent_atom_size","value":"usize","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":" Size and alignment in bytes that bounds concurrent access to host-mapped device memory.\n","sig":null,"attributes":[{"value":"/ Size and alignment in bytes that bounds concurrent access to host-mapped device memory.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":14611,"byte_end":14702,"line_start":395,"line_end":395,"column_start":5,"column_end":96}}]},{"kind":"Field","id":{"krate":0,"index":22010},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":14802,"byte_end":14843,"line_start":399,"line_end":399,"column_start":9,"column_end":50},"name":"min_vertex_input_binding_stride_alignment","qualname":"::Limits::min_vertex_input_binding_stride_alignment","value":"u64","parent":{"krate":0,"index":21940},"children":[],"decl_id":null,"docs":" The alignment of the vertex buffer stride.\n","sig":null,"attributes":[{"value":"/ The alignment of the vertex buffer stride.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":14747,"byte_end":14793,"line_start":398,"line_end":398,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":22212},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":15157,"byte_end":15166,"line_start":409,"line_end":409,"column_start":5,"column_end":14},"name":"PointList","qualname":"::Primitive::PointList","value":"Primitive::PointList","parent":{"krate":0,"index":22211},"children":[],"decl_id":null,"docs":" Each vertex represents a single point.\n","sig":null,"attributes":[{"value":"/ Each vertex represents a single point.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":15110,"byte_end":15152,"line_start":408,"line_end":408,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":22214},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":15352,"byte_end":15360,"line_start":412,"line_end":412,"column_start":5,"column_end":13},"name":"LineList","qualname":"::Primitive::LineList","value":"Primitive::LineList","parent":{"krate":0,"index":22211},"children":[],"decl_id":null,"docs":" Each pair of vertices represent a single line segment. For example, with `[a, b, c, d,\n e]`, `a` and `b` form a line, `c` and `d` form a line, and `e` is discarded.\n","sig":null,"attributes":[{"value":"/ Each pair of vertices represent a single line segment. For example, with `[a, b, c, d,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":15172,"byte_end":15262,"line_start":410,"line_end":410,"column_start":5,"column_end":95}},{"value":"/ e]`, `a` and `b` form a line, `c` and `d` form a line, and `e` is discarded.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":15267,"byte_end":15347,"line_start":411,"line_end":411,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":22216},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":15605,"byte_end":15614,"line_start":416,"line_end":416,"column_start":5,"column_end":14},"name":"LineStrip","qualname":"::Primitive::LineStrip","value":"Primitive::LineStrip","parent":{"krate":0,"index":22211},"children":[],"decl_id":null,"docs":" Every two consecutive vertices represent a single line segment. Visually forms a \"path\" of\n lines, as they are all connected. For example, with `[a, b, c]`, `a` and `b` form a line\n line, and `b` and `c` form a line.\n","sig":null,"attributes":[{"value":"/ Every two consecutive vertices represent a single line segment. Visually forms a \"path\" of","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":15366,"byte_end":15460,"line_start":413,"line_end":413,"column_start":5,"column_end":99}},{"value":"/ lines, as they are all connected. For example, with `[a, b, c]`, `a` and `b` form a line","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":15465,"byte_end":15557,"line_start":414,"line_end":414,"column_start":5,"column_end":97}},{"value":"/ line, and `b` and `c` form a line.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":15562,"byte_end":15600,"line_start":415,"line_end":415,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":22218},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":15789,"byte_end":15801,"line_start":419,"line_end":419,"column_start":5,"column_end":17},"name":"TriangleList","qualname":"::Primitive::TriangleList","value":"Primitive::TriangleList","parent":{"krate":0,"index":22211},"children":[],"decl_id":null,"docs":" Each triplet of vertices represent a single triangle. For example, with `[a, b, c, d, e]`,\n `a`, `b`, and `c` form a triangle, `d` and `e` are discarded.\n","sig":null,"attributes":[{"value":"/ Each triplet of vertices represent a single triangle. For example, with `[a, b, c, d, e]`,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":15620,"byte_end":15714,"line_start":417,"line_end":417,"column_start":5,"column_end":99}},{"value":"/ `a`, `b`, and `c` form a triangle, `d` and `e` are discarded.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":15719,"byte_end":15784,"line_start":418,"line_end":418,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":22220},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":15993,"byte_end":16006,"line_start":422,"line_end":422,"column_start":5,"column_end":18},"name":"TriangleStrip","qualname":"::Primitive::TriangleStrip","value":"Primitive::TriangleStrip","parent":{"krate":0,"index":22211},"children":[],"decl_id":null,"docs":" Every three consecutive vertices represent a single triangle. For example, with `[a, b, c,\n d]`, `a`, `b`, and `c` form a triangle, and `b`, `c`, and `d` form a triangle.\n","sig":null,"attributes":[{"value":"/ Every three consecutive vertices represent a single triangle. For example, with `[a, b, c,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":15807,"byte_end":15901,"line_start":420,"line_end":420,"column_start":5,"column_end":99}},{"value":"/ d]`, `a`, `b`, and `c` form a triangle, and `b`, `c`, and `d` form a triangle.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":15906,"byte_end":15988,"line_start":421,"line_end":421,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":22222},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":16227,"byte_end":16244,"line_start":426,"line_end":426,"column_start":5,"column_end":22},"name":"LineListAdjacency","qualname":"::Primitive::LineListAdjacency","value":"Primitive::LineListAdjacency","parent":{"krate":0,"index":22211},"children":[],"decl_id":null,"docs":" Each quadtruplet of vertices represent a single line segment with adjacency information.\n For example, with `[a, b, c, d]`, `b` and `c` form a line, and `a` and `d` are the adjacent\n vertices.\n","sig":null,"attributes":[{"value":"/ Each quadtruplet of vertices represent a single line segment with adjacency information.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":16012,"byte_end":16104,"line_start":423,"line_end":423,"column_start":5,"column_end":97}},{"value":"/ For example, with `[a, b, c, d]`, `b` and `c` form a line, and `a` and `d` are the adjacent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":16109,"byte_end":16204,"line_start":424,"line_end":424,"column_start":5,"column_end":100}},{"value":"/ vertices.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":16209,"byte_end":16222,"line_start":425,"line_end":425,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":22224},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":16509,"byte_end":16527,"line_start":430,"line_end":430,"column_start":5,"column_end":23},"name":"LineStripAdjacency","qualname":"::Primitive::LineStripAdjacency","value":"Primitive::LineStripAdjacency","parent":{"krate":0,"index":22211},"children":[],"decl_id":null,"docs":" Every four consecutive vertices represent a single line segment with adjacency information.\n For example, with `[a, b, c, d, e]`, `[a, b, c, d]` form a line segment with adjacency, and\n `[b, c, d, e]` form a line segment with adjacency.\n","sig":null,"attributes":[{"value":"/ Every four consecutive vertices represent a single line segment with adjacency information.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":16250,"byte_end":16345,"line_start":427,"line_end":427,"column_start":5,"column_end":100}},{"value":"/ For example, with `[a, b, c, d, e]`, `[a, b, c, d]` form a line segment with adjacency, and","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":16350,"byte_end":16445,"line_start":428,"line_end":428,"column_start":5,"column_end":100}},{"value":"/ `[b, c, d, e]` form a line segment with adjacency.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":16450,"byte_end":16504,"line_start":429,"line_end":429,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":22226},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":16915,"byte_end":16936,"line_start":435,"line_end":435,"column_start":5,"column_end":26},"name":"TriangleListAdjacency","qualname":"::Primitive::TriangleListAdjacency","value":"Primitive::TriangleListAdjacency","parent":{"krate":0,"index":22211},"children":[],"decl_id":null,"docs":" Each sextuplet of vertices represent a single triangle with adjacency information. For\n example, with `[a, b, c, d, e, f]`, `a`, `c`, and `e` form a triangle, and `b`, `d`, and\n `f` are the adjacent vertices, where `b` is adjacent to the edge formed by `a` and `c`, `d`\n is adjacent to the edge `c` and `e`, and `f` is adjacent to the edge `e` and `a`.\n","sig":null,"attributes":[{"value":"/ Each sextuplet of vertices represent a single triangle with adjacency information. For","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":16533,"byte_end":16623,"line_start":431,"line_end":431,"column_start":5,"column_end":95}},{"value":"/ example, with `[a, b, c, d, e, f]`, `a`, `c`, and `e` form a triangle, and `b`, `d`, and","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":16628,"byte_end":16720,"line_start":432,"line_end":432,"column_start":5,"column_end":97}},{"value":"/ `f` are the adjacent vertices, where `b` is adjacent to the edge formed by `a` and `c`, `d`","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":16725,"byte_end":16820,"line_start":433,"line_end":433,"column_start":5,"column_end":100}},{"value":"/ is adjacent to the edge `c` and `e`, and `f` is adjacent to the edge `e` and `a`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":16825,"byte_end":16910,"line_start":434,"line_end":434,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":22228},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":17460,"byte_end":17482,"line_start":442,"line_end":442,"column_start":5,"column_end":27},"name":"TriangleStripAdjacency","qualname":"::Primitive::TriangleStripAdjacency","value":"Primitive::TriangleStripAdjacency","parent":{"krate":0,"index":22211},"children":[],"decl_id":null,"docs":" Every even-numbered vertex (every other starting from the first) represents an additional\n vertex for the triangle strip, while odd-numbered vertices (every other starting from the\n second) represent adjacent vertices. For example, with `[a, b, c, d, e, f, g, h]`, `[a, c,\n e, g]` form a triangle strip, and `[b, d, f, h]` are the adjacent vertices, where `b`, `d`,\n and `f` are adjacent to the first triangle in the strip, and `d`, `f`, and `h` are adjacent\n to the second.\n","sig":null,"attributes":[{"value":"/ Every even-numbered vertex (every other starting from the first) represents an additional","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":16942,"byte_end":17035,"line_start":436,"line_end":436,"column_start":5,"column_end":98}},{"value":"/ vertex for the triangle strip, while odd-numbered vertices (every other starting from the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":17040,"byte_end":17133,"line_start":437,"line_end":437,"column_start":5,"column_end":98}},{"value":"/ second) represent adjacent vertices. For example, with `[a, b, c, d, e, f, g, h]`, `[a, c,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":17138,"byte_end":17232,"line_start":438,"line_end":438,"column_start":5,"column_end":99}},{"value":"/ e, g]` form a triangle strip, and `[b, d, f, h]` are the adjacent vertices, where `b`, `d`,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":17237,"byte_end":17332,"line_start":439,"line_end":439,"column_start":5,"column_end":100}},{"value":"/ and `f` are adjacent to the first triangle in the strip, and `d`, `f`, and `h` are adjacent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":17337,"byte_end":17432,"line_start":440,"line_end":440,"column_start":5,"column_end":100}},{"value":"/ to the second.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":17437,"byte_end":17455,"line_start":441,"line_end":441,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":22230},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":17594,"byte_end":17603,"line_start":445,"line_end":445,"column_start":5,"column_end":14},"name":"PatchList","qualname":"::Primitive::PatchList","value":"Primitive::PatchList(PatchSize)","parent":{"krate":0,"index":22211},"children":[],"decl_id":null,"docs":" Patch list,\n used with shaders capable of producing primitives on their own (tessellation)\n","sig":null,"attributes":[{"value":"/ Patch list,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":17488,"byte_end":17503,"line_start":443,"line_end":443,"column_start":5,"column_end":20}},{"value":"/ used with shaders capable of producing primitives on their own (tessellation)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":17508,"byte_end":17589,"line_start":444,"line_end":444,"column_start":5,"column_end":86}}]},{"kind":"Enum","id":{"krate":0,"index":22211},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":15094,"byte_end":15103,"line_start":407,"line_end":407,"column_start":10,"column_end":19},"name":"Primitive","qualname":"::Primitive","value":"pub enum Primitive {\n\n    /// Each vertex represents a single point.\n    PointList,\n\n    /// Each pair of vertices represent a single line segment. For example, with `[a, b, c, d,\n    /// e]`, `a` and `b` form a line, `c` and `d` form a line, and `e` is discarded.\n    LineList,\n\n    /// Every two consecutive vertices represent a single line segment. Visually forms a \"path\" of\n    /// lines, as they are all connected. For example, with `[a, b, c]`, `a` and `b` form a line\n    /// line, and `b` and `c` form a line.\n    LineStrip,\n\n    /// Each triplet of vertices represent a single triangle. For example, with `[a, b, c, d, e]`,\n    /// `a`, `b`, and `c` form a triangle, `d` and `e` are discarded.\n    TriangleList,\n\n    /// Every three consecutive vertices represent a single triangle. For example, with `[a, b, c,\n    /// d]`, `a`, `b`, and `c` form a triangle, and `b`, `c`, and `d` form a triangle.\n    TriangleStrip,\n\n    /// Each quadtruplet of vertices represent a single line segment with adjacency information.\n    /// For example, with `[a, b, c, d]`, `b` and `c` form a line, and `a` and `d` are the adjacent\n    /// vertices.\n    LineListAdjacency,\n\n    /// Every four consecutive vertices represent a single line segment with adjacency information.\n    /// For example, with `[a, b, c, d, e]`, `[a, b, c, d]` form a line segment with adjacency, and\n    /// `[b, c, d, e]` form a line segment with adjacency.\n    LineStripAdjacency,\n\n    /// Each sextuplet of vertices represent a single triangle with adjacency information. For\n    /// example, with `[a, b, c, d, e, f]`, `a`, `c`, and `e` form a triangle, and `b`, `d`, and\n    /// `f` are the adjacent vertices, where `b` is adjacent to the edge formed by `a` and `c`, `d`\n    /// is adjacent to the edge `c` and `e`, and `f` is adjacent to the edge `e` and `a`.\n    TriangleListAdjacency,\n\n    /// Every even-numbered vertex (every other starting from the first) represents an additional\n    /// vertex for the triangle strip, while odd-numbered vertices (every other starting from the\n    /// second) represent adjacent vertices. For example, with `[a, b, c, d, e, f, g, h]`, `[a, c,\n    /// e, g]` form a triangle strip, and `[b, d, f, h]` are the adjacent vertices, where `b`, `d`,\n    /// and `f` are adjacent to the first triangle in the strip, and `d`, `f`, and `h` are adjacent\n    /// to the second.\n    TriangleStripAdjacency,\n\n    /// Patch list,\n    /// used with shaders capable of producing primitives on their own (tessellation)\n    PatchList(PatchSize),\n}","parent":null,"children":[{"krate":0,"index":22212},{"krate":0,"index":22214},{"krate":0,"index":22216},{"krate":0,"index":22218},{"krate":0,"index":22220},{"krate":0,"index":22222},{"krate":0,"index":22224},{"krate":0,"index":22226},{"krate":0,"index":22228},{"krate":0,"index":22230}],"decl_id":null,"docs":" Describes the type of geometric primitives,\n created from vertex data.\n","sig":null,"attributes":[{"value":"/ Describes the type of geometric primitives,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":14864,"byte_end":14911,"line_start":402,"line_end":402,"column_start":1,"column_end":48}},{"value":"/ created from vertex data.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":14912,"byte_end":14941,"line_start":403,"line_end":403,"column_start":1,"column_end":30}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":15073,"byte_end":15084,"line_start":406,"line_end":406,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":22318},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":17886,"byte_end":17889,"line_start":454,"line_end":454,"column_start":5,"column_end":8},"name":"U16","qualname":"::IndexType::U16","value":"IndexType::U16","parent":{"krate":0,"index":22317},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":22320},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":17895,"byte_end":17898,"line_start":455,"line_end":455,"column_start":5,"column_end":8},"name":"U32","qualname":"::IndexType::U32","value":"IndexType::U32","parent":{"krate":0,"index":22317},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":22317},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":17870,"byte_end":17879,"line_start":453,"line_end":453,"column_start":10,"column_end":19},"name":"IndexType","qualname":"::IndexType","value":"pub enum IndexType { U16, U32, }","parent":null,"children":[{"krate":0,"index":22318},{"krate":0,"index":22320}],"decl_id":null,"docs":" An enum describing the type of an index value in a slice's index buffer\n","sig":null,"attributes":[{"value":"/ An enum describing the type of an index value in a slice's index buffer","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":17619,"byte_end":17694,"line_start":448,"line_end":448,"column_start":1,"column_end":76}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":17695,"byte_end":17717,"line_start":449,"line_end":449,"column_start":1,"column_end":23}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":17849,"byte_end":17860,"line_start":452,"line_end":452,"column_start":1,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":1438},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":18773,"byte_end":18781,"line_start":481,"line_end":481,"column_start":11,"column_end":19},"name":"Instance","qualname":"::Instance","value":"Instance: Any + Send + Sync","parent":null,"children":[{"krate":0,"index":1439},{"krate":0,"index":1440}],"decl_id":null,"docs":" An instantiated backend.","sig":null,"attributes":[{"value":"/ An instantiated backend.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":17903,"byte_end":17931,"line_start":458,"line_end":458,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":17932,"byte_end":17935,"line_start":459,"line_end":459,"column_start":1,"column_end":4}},{"value":"/ Any startup the backend needs to perform will be done when creating the type that implements","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":17936,"byte_end":18032,"line_start":460,"line_end":460,"column_start":1,"column_end":97}},{"value":"/ `Instance`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":18033,"byte_end":18048,"line_start":461,"line_end":461,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":18049,"byte_end":18052,"line_start":462,"line_end":462,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":18053,"byte_end":18067,"line_start":463,"line_end":463,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":18068,"byte_end":18071,"line_start":464,"line_end":464,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":18072,"byte_end":18083,"line_start":465,"line_end":465,"column_start":1,"column_end":12}},{"value":"/ # extern crate gfx_backend_empty;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":18084,"byte_end":18121,"line_start":466,"line_end":466,"column_start":1,"column_end":38}},{"value":"/ # extern crate gfx_hal;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":18122,"byte_end":18149,"line_start":467,"line_end":467,"column_start":1,"column_end":28}},{"value":"/ use gfx_backend_empty as backend;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":18150,"byte_end":18187,"line_start":468,"line_end":468,"column_start":1,"column_end":38}},{"value":"/ use gfx_hal as hal;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":18188,"byte_end":18211,"line_start":469,"line_end":469,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":18212,"byte_end":18215,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ // Create a concrete instance of our backend (this is backend-dependent and may be more","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":18216,"byte_end":18307,"line_start":471,"line_end":471,"column_start":1,"column_end":92}},{"value":"/ // complicated for some backends).","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":18308,"byte_end":18346,"line_start":472,"line_end":472,"column_start":1,"column_end":39}},{"value":"/ let instance = backend::Instance;","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":18347,"byte_end":18384,"line_start":473,"line_end":473,"column_start":1,"column_end":38}},{"value":"/ // We can get a list of the available adapters, which are either physical graphics","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":18385,"byte_end":18471,"line_start":474,"line_end":474,"column_start":1,"column_end":87}},{"value":"/ // devices, or virtual adapters. Because we are using the dummy `empty` backend,","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":18472,"byte_end":18556,"line_start":475,"line_end":475,"column_start":1,"column_end":85}},{"value":"/ // there will be nothing in this list.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":18557,"byte_end":18599,"line_start":476,"line_end":476,"column_start":1,"column_end":43}},{"value":"/ for (idx, adapter) in hal::Instance::enumerate_adapters(&instance).iter().enumerate() {","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":18600,"byte_end":18691,"line_start":477,"line_end":477,"column_start":1,"column_end":92}},{"value":"/     println!(\"Adapter {}: {:?}\", idx, adapter.info);","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":18692,"byte_end":18748,"line_start":478,"line_end":478,"column_start":1,"column_end":57}},{"value":"/ }","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":18749,"byte_end":18754,"line_start":479,"line_end":479,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":18755,"byte_end":18762,"line_start":480,"line_end":480,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":1439},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":18862,"byte_end":18869,"line_start":483,"line_end":483,"column_start":10,"column_end":17},"name":"Backend","qualname":"::Instance::Backend","value":"type Backend: Backend;","parent":{"krate":0,"index":1438},"children":[],"decl_id":null,"docs":" Associated backend type of this instance.\n","sig":null,"attributes":[{"value":"/ Associated backend type of this instance.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":18807,"byte_end":18852,"line_start":482,"line_end":482,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1440},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":18926,"byte_end":18944,"line_start":485,"line_end":485,"column_start":8,"column_end":26},"name":"enumerate_adapters","qualname":"::Instance::enumerate_adapters","value":"pub fn enumerate_adapters(&Self) -> Vec<Adapter<Self::Backend>>","parent":{"krate":0,"index":1438},"children":[],"decl_id":null,"docs":" Return all available adapters.\n","sig":null,"attributes":[{"value":"/ Return all available adapters.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":18884,"byte_end":18918,"line_start":484,"line_end":484,"column_start":5,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":1441},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":19213,"byte_end":19220,"line_start":492,"line_end":492,"column_start":11,"column_end":18},"name":"Backend","qualname":"::Backend","value":"Backend: 'static + Sized + Eq + Clone + Hash + fmt::Debug + Any + Send + Sync","parent":null,"children":[{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469}],"decl_id":null,"docs":" The `Backend` trait wraps together all the types needed\n for a graphics backend. Each backend module, such as OpenGL\n or Metal, will implement this trait with its own concrete types.\n","sig":null,"attributes":[{"value":"/ The `Backend` trait wraps together all the types needed","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":18987,"byte_end":19046,"line_start":488,"line_end":488,"column_start":1,"column_end":60}},{"value":"/ for a graphics backend. Each backend module, such as OpenGL","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":19047,"byte_end":19110,"line_start":489,"line_end":489,"column_start":1,"column_end":64}},{"value":"/ or Metal, will implement this trait with its own concrete types.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":19111,"byte_end":19179,"line_start":490,"line_end":490,"column_start":1,"column_end":69}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":19180,"byte_end":19202,"line_start":491,"line_end":491,"column_start":1,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":1442},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":19348,"byte_end":19362,"line_start":494,"line_end":494,"column_start":10,"column_end":24},"name":"PhysicalDevice","qualname":"::Backend::PhysicalDevice","value":"type PhysicalDevice: PhysicalDevice<Self>;","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1443},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":19395,"byte_end":19401,"line_start":495,"line_end":495,"column_start":10,"column_end":16},"name":"Device","qualname":"::Backend::Device","value":"type Device: Device<Self>;","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1444},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":19427,"byte_end":19434,"line_start":497,"line_end":497,"column_start":10,"column_end":17},"name":"Surface","qualname":"::Backend::Surface","value":"type Surface: Surface<Self>;","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1445},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":19460,"byte_end":19469,"line_start":498,"line_end":498,"column_start":10,"column_end":19},"name":"Swapchain","qualname":"::Backend::Swapchain","value":"type Swapchain: Swapchain<Self>;","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1446},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":19498,"byte_end":19509,"line_start":500,"line_end":500,"column_start":10,"column_end":21},"name":"QueueFamily","qualname":"::Backend::QueueFamily","value":"type QueueFamily: QueueFamily;","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1447},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":19533,"byte_end":19545,"line_start":501,"line_end":501,"column_start":10,"column_end":22},"name":"CommandQueue","qualname":"::Backend::CommandQueue","value":"type CommandQueue: queue::RawCommandQueue<Self>;","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1448},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":19586,"byte_end":19599,"line_start":502,"line_end":502,"column_start":10,"column_end":23},"name":"CommandBuffer","qualname":"::Backend::CommandBuffer","value":"type CommandBuffer: command::RawCommandBuffer<Self>;","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1449},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":19644,"byte_end":19656,"line_start":504,"line_end":504,"column_start":10,"column_end":22},"name":"ShaderModule","qualname":"::Backend::ShaderModule","value":"type ShaderModule: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1450},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":19699,"byte_end":19709,"line_start":505,"line_end":505,"column_start":10,"column_end":20},"name":"RenderPass","qualname":"::Backend::RenderPass","value":"type RenderPass: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1451},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":19752,"byte_end":19763,"line_start":506,"line_end":506,"column_start":10,"column_end":21},"name":"Framebuffer","qualname":"::Backend::Framebuffer","value":"type Framebuffer: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1452},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":19807,"byte_end":19813,"line_start":508,"line_end":508,"column_start":10,"column_end":16},"name":"Memory","qualname":"::Backend::Memory","value":"type Memory: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1453},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":19856,"byte_end":19867,"line_start":509,"line_end":509,"column_start":10,"column_end":21},"name":"CommandPool","qualname":"::Backend::CommandPool","value":"type CommandPool: pool::RawCommandPool<Self>;","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1454},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":19907,"byte_end":19913,"line_start":511,"line_end":511,"column_start":10,"column_end":16},"name":"Buffer","qualname":"::Backend::Buffer","value":"type Buffer: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1455},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":19956,"byte_end":19966,"line_start":512,"line_end":512,"column_start":10,"column_end":20},"name":"BufferView","qualname":"::Backend::BufferView","value":"type BufferView: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1456},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":20009,"byte_end":20014,"line_start":513,"line_end":513,"column_start":10,"column_end":15},"name":"Image","qualname":"::Backend::Image","value":"type Image: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1457},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":20057,"byte_end":20066,"line_start":514,"line_end":514,"column_start":10,"column_end":19},"name":"ImageView","qualname":"::Backend::ImageView","value":"type ImageView: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1458},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":20109,"byte_end":20116,"line_start":515,"line_end":515,"column_start":10,"column_end":17},"name":"Sampler","qualname":"::Backend::Sampler","value":"type Sampler: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1459},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":20160,"byte_end":20175,"line_start":517,"line_end":517,"column_start":10,"column_end":25},"name":"ComputePipeline","qualname":"::Backend::ComputePipeline","value":"type ComputePipeline: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1460},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":20218,"byte_end":20234,"line_start":518,"line_end":518,"column_start":10,"column_end":26},"name":"GraphicsPipeline","qualname":"::Backend::GraphicsPipeline","value":"type GraphicsPipeline: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1461},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":20277,"byte_end":20290,"line_start":519,"line_end":519,"column_start":10,"column_end":23},"name":"PipelineCache","qualname":"::Backend::PipelineCache","value":"type PipelineCache: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1462},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":20333,"byte_end":20347,"line_start":520,"line_end":520,"column_start":10,"column_end":24},"name":"PipelineLayout","qualname":"::Backend::PipelineLayout","value":"type PipelineLayout: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1463},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":20390,"byte_end":20404,"line_start":521,"line_end":521,"column_start":10,"column_end":24},"name":"DescriptorPool","qualname":"::Backend::DescriptorPool","value":"type DescriptorPool: pso::DescriptorPool<Self>;","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1464},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":20442,"byte_end":20455,"line_start":522,"line_end":522,"column_start":10,"column_end":23},"name":"DescriptorSet","qualname":"::Backend::DescriptorSet","value":"type DescriptorSet: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1465},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":20498,"byte_end":20517,"line_start":523,"line_end":523,"column_start":10,"column_end":29},"name":"DescriptorSetLayout","qualname":"::Backend::DescriptorSetLayout","value":"type DescriptorSetLayout: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1466},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":20561,"byte_end":20566,"line_start":525,"line_end":525,"column_start":10,"column_end":15},"name":"Fence","qualname":"::Backend::Fence","value":"type Fence: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1467},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":20609,"byte_end":20618,"line_start":526,"line_end":526,"column_start":10,"column_end":19},"name":"Semaphore","qualname":"::Backend::Semaphore","value":"type Semaphore: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1468},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":20661,"byte_end":20666,"line_start":527,"line_end":527,"column_start":10,"column_end":15},"name":"Event","qualname":"::Backend::Event","value":"type Event: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1469},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":20709,"byte_end":20718,"line_start":528,"line_end":528,"column_start":10,"column_end":19},"name":"QueryPool","qualname":"::Backend::QueryPool","value":"type QueryPool: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":22385},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":20937,"byte_end":20952,"line_start":534,"line_end":534,"column_start":10,"column_end":25},"name":"SubmissionError","qualname":"::SubmissionError","value":"pub enum SubmissionError { }","parent":null,"children":[],"decl_id":null,"docs":" Marks that an error occurred submitting a command to a command buffer.\n","sig":null,"attributes":[{"value":"/ Marks that an error occurred submitting a command to a command buffer.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":20755,"byte_end":20829,"line_start":531,"line_end":531,"column_start":1,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":1474},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":21289,"byte_end":21305,"line_start":549,"line_end":549,"column_start":10,"column_end":26},"name":"SubmissionResult","qualname":"::SubmissionResult","value":"Result<T, SubmissionError>","parent":null,"children":[],"decl_id":null,"docs":" Submission result for DX11 backend.  Currently mostly unused.\n","sig":null,"attributes":[{"value":"/ Submission result for DX11 backend.  Currently mostly unused.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":21214,"byte_end":21279,"line_start":548,"line_end":548,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":22435},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":21522,"byte_end":21525,"line_start":556,"line_end":556,"column_start":12,"column_end":15},"name":"Gpu","qualname":"::Gpu","value":"Gpu { device, queues }","parent":null,"children":[{"krate":0,"index":22437},{"krate":0,"index":22438}],"decl_id":null,"docs":" Represents a combination of a logical device and the\n hardware queues it provides.","sig":null,"attributes":[{"value":"/ Represents a combination of a logical device and the","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":21340,"byte_end":21396,"line_start":551,"line_end":551,"column_start":1,"column_end":57}},{"value":"/ hardware queues it provides.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":21397,"byte_end":21429,"line_start":552,"line_end":552,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":21430,"byte_end":21433,"line_start":553,"line_end":553,"column_start":1,"column_end":4}},{"value":"/ This structure is typically created using an `Adapter`.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":21434,"byte_end":21493,"line_start":554,"line_end":554,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":22437},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":21592,"byte_end":21598,"line_start":558,"line_end":558,"column_start":9,"column_end":15},"name":"device","qualname":"::Gpu::device","value":"<B as Backend>::Device","parent":{"krate":0,"index":22435},"children":[],"decl_id":null,"docs":" Logical device for a given backend.\n","sig":null,"attributes":[{"value":"/ Logical device for a given backend.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":21544,"byte_end":21583,"line_start":557,"line_end":557,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":22438},"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":21672,"byte_end":21678,"line_start":560,"line_end":560,"column_start":9,"column_end":15},"name":"queues","qualname":"::Gpu::queues","value":"queue::family::Queues<B>","parent":{"krate":0,"index":22435},"children":[],"decl_id":null,"docs":" The command queues that the device provides.\n","sig":null,"attributes":[{"value":"/ The command queues that the device provides.","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":21615,"byte_end":21663,"line_start":559,"line_end":559,"column_start":5,"column_end":53}}]}],"impls":[{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":22711,"byte_end":22723,"line_start":25,"line_end":25,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":27265,"byte_end":27272,"line_start":158,"line_end":158,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":29914,"byte_end":29927,"line_start":34,"line_end":34,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":30537,"byte_end":30554,"line_start":55,"line_end":55,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":31207,"byte_end":31212,"line_start":86,"line_end":86,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\compute.rs","byte_start":40641,"byte_end":40654,"line_start":10,"line_end":10,"column_start":59,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":43655,"byte_end":43665,"line_start":59,"line_end":59,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":43772,"byte_end":43782,"line_start":64,"line_end":64,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":43881,"byte_end":43891,"line_start":69,"line_end":69,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":43998,"byte_end":44011,"line_start":75,"line_end":75,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":44553,"byte_end":44573,"line_start":90,"line_end":90,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":45042,"byte_end":45055,"line_start":109,"line_end":109,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":47217,"byte_end":47230,"line_start":175,"line_end":175,"column_start":60,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":52365,"byte_end":52378,"line_start":332,"line_end":332,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":53426,"byte_end":53439,"line_start":364,"line_end":364,"column_start":69,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":55537,"byte_end":55550,"line_start":42,"line_end":42,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":56216,"byte_end":56229,"line_start":70,"line_end":70,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":58160,"byte_end":58188,"line_start":125,"line_end":125,"column_start":34,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":77846,"byte_end":77865,"line_start":49,"line_end":49,"column_start":50,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":398},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":83193,"byte_end":83216,"line_start":244,"line_end":244,"column_start":22,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":416},{"krate":0,"index":421},{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":84735,"byte_end":84758,"line_start":293,"line_end":293,"column_start":32,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":84934,"byte_end":84957,"line_start":300,"line_end":300,"column_start":35,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":85077,"byte_end":85100,"line_start":306,"line_end":306,"column_start":31,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":85499,"byte_end":85525,"line_start":321,"line_end":321,"column_start":22,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":444},{"krate":0,"index":448},{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":87428,"byte_end":87454,"line_start":380,"line_end":380,"column_start":31,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":87816,"byte_end":87836,"line_start":394,"line_end":394,"column_start":27,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":88319,"byte_end":88339,"line_start":409,"line_end":409,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":88923,"byte_end":88943,"line_start":426,"line_end":426,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":89657,"byte_end":89677,"line_start":447,"line_end":447,"column_start":37,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":89877,"byte_end":89897,"line_start":454,"line_end":454,"column_start":40,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":90042,"byte_end":90062,"line_start":460,"line_end":460,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":90261,"byte_end":90281,"line_start":471,"line_end":471,"column_start":48,"column_end":68},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":90417,"byte_end":90437,"line_start":479,"line_end":479,"column_start":50,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":92695,"byte_end":92708,"line_start":62,"line_end":62,"column_start":60,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":517},{"krate":0,"index":519},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":34727,"byte_end":34734,"line_start":48,"line_end":48,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":34853,"byte_end":34862,"line_start":53,"line_end":53,"column_start":15,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":35180,"byte_end":35187,"line_start":64,"line_end":64,"column_start":16,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":35609,"byte_end":35618,"line_start":74,"line_end":74,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":36333,"byte_end":36346,"line_start":91,"line_end":91,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":36595,"byte_end":36608,"line_start":102,"line_end":102,"column_start":9,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":36683,"byte_end":36696,"line_start":106,"line_end":106,"column_start":58,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":36801,"byte_end":36814,"line_start":112,"line_end":112,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":37108,"byte_end":37121,"line_start":121,"line_end":121,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":37557,"byte_end":37570,"line_start":134,"line_end":134,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":37873,"byte_end":37886,"line_start":142,"line_end":142,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":38381,"byte_end":38394,"line_start":158,"line_end":158,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":39875,"byte_end":39888,"line_start":205,"line_end":205,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":97321,"byte_end":97336,"line_start":69,"line_end":69,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":97460,"byte_end":97475,"line_start":75,"line_end":75,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":97981,"byte_end":97996,"line_start":93,"line_end":93,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":98661,"byte_end":98670,"line_start":113,"line_end":113,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":99802,"byte_end":99813,"line_start":149,"line_end":149,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":128435,"byte_end":128445,"line_start":52,"line_end":52,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":130332,"byte_end":130339,"line_start":116,"line_end":116,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":130525,"byte_end":130532,"line_start":121,"line_end":121,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":148881,"byte_end":148887,"line_start":581,"line_end":581,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":151013,"byte_end":151019,"line_start":41,"line_end":41,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":152252,"byte_end":152258,"line_start":82,"line_end":82,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":154397,"byte_end":154410,"line_start":144,"line_end":144,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":831}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":155677,"byte_end":155686,"line_start":182,"line_end":182,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":158379,"byte_end":158383,"line_start":270,"line_end":270,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":843},{"krate":0,"index":846},{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":163168,"byte_end":163173,"line_start":414,"line_end":414,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":849},{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":164464,"byte_end":164467,"line_start":449,"line_end":449,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":852},{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":164607,"byte_end":164610,"line_start":456,"line_end":456,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":164731,"byte_end":164734,"line_start":462,"line_end":462,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":165059,"byte_end":165070,"line_start":473,"line_end":473,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":165288,"byte_end":165299,"line_start":483,"line_end":483,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":166989,"byte_end":167000,"line_start":527,"line_end":527,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":174533,"byte_end":174538,"line_start":26,"line_end":26,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":174853,"byte_end":174859,"line_start":40,"line_end":40,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":175018,"byte_end":175024,"line_start":46,"line_end":46,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":888},{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":175559,"byte_end":175565,"line_start":64,"line_end":64,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":175724,"byte_end":175730,"line_start":70,"line_end":70,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":899},{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":175870,"byte_end":175876,"line_start":77,"line_end":77,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":180269,"byte_end":180276,"line_start":110,"line_end":110,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":182182,"byte_end":182195,"line_start":42,"line_end":42,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":183986,"byte_end":183996,"line_start":91,"line_end":91,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":187092,"byte_end":187099,"line_start":167,"line_end":167,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":187281,"byte_end":187288,"line_start":176,"line_end":176,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":187473,"byte_end":187480,"line_start":182,"line_end":182,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":187519,"byte_end":187526,"line_start":183,"line_end":183,"column_start":29,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":189677,"byte_end":189688,"line_start":65,"line_end":65,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":991},{"krate":0,"index":993},{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":191423,"byte_end":191434,"line_start":115,"line_end":115,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\compute.rs","byte_start":205125,"byte_end":205144,"line_start":19,"line_end":19,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1022}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":220509,"byte_end":220529,"line_start":130,"line_end":130,"column_start":22,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":223799,"byte_end":223809,"line_start":220,"line_end":220,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1072}],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":226514,"byte_end":226529,"line_start":28,"line_end":28,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":229778,"byte_end":229796,"line_start":111,"line_end":111,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":231286,"byte_end":231295,"line_start":51,"line_end":51,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":232935,"byte_end":232942,"line_start":105,"line_end":105,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":234053,"byte_end":234063,"line_start":139,"line_end":139,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":235291,"byte_end":235305,"line_start":183,"line_end":183,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":235895,"byte_end":235904,"line_start":202,"line_end":202,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":238079,"byte_end":238090,"line_start":260,"line_end":260,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1109}],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":238675,"byte_end":238680,"line_start":281,"line_end":281,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":239926,"byte_end":239937,"line_start":315,"line_end":315,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":240623,"byte_end":240639,"line_start":338,"line_end":338,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1117},{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":688,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":192734,"byte_end":192747,"line_start":34,"line_end":34,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1126}],"docs":"","sig":null,"attributes":[]},{"id":695,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":195625,"byte_end":195641,"line_start":120,"line_end":120,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":696,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":196079,"byte_end":196084,"line_start":133,"line_end":133,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":697,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":196742,"byte_end":196752,"line_start":157,"line_end":157,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":700,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":198979,"byte_end":198993,"line_start":225,"line_end":225,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1136}],"docs":"","sig":null,"attributes":[]},{"id":701,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":199184,"byte_end":199198,"line_start":233,"line_end":233,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1138}],"docs":"","sig":null,"attributes":[]},{"id":702,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":199578,"byte_end":199592,"line_start":252,"line_end":252,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":703,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":200091,"byte_end":200107,"line_start":277,"line_end":277,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1145}],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":200201,"byte_end":200218,"line_start":281,"line_end":281,"column_start":30,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1149}],"docs":"","sig":null,"attributes":[]},{"id":707,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":201192,"byte_end":201197,"line_start":311,"line_end":311,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":710,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":242064,"byte_end":242077,"line_start":24,"line_end":24,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":717,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":252256,"byte_end":252263,"line_start":29,"line_end":29,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":718,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":252432,"byte_end":252440,"line_start":37,"line_end":37,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":719,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":252631,"byte_end":252638,"line_start":45,"line_end":45,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":720,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":252828,"byte_end":252836,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":721,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":253206,"byte_end":253207,"line_start":66,"line_end":66,"column_start":25,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":722,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":253239,"byte_end":253246,"line_start":67,"line_end":67,"column_start":29,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":723,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":253277,"byte_end":253284,"line_start":68,"line_end":68,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":724,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":253316,"byte_end":253323,"line_start":69,"line_end":69,"column_start":29,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":725,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":253355,"byte_end":253363,"line_start":70,"line_end":70,"column_start":29,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":726,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":253395,"byte_end":253402,"line_start":71,"line_end":71,"column_start":29,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":727,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":253444,"byte_end":253451,"line_start":73,"line_end":73,"column_start":38,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":728,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":253492,"byte_end":253500,"line_start":74,"line_end":74,"column_start":38,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":729,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":253541,"byte_end":253548,"line_start":75,"line_end":75,"column_start":38,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":732,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":256228,"byte_end":256238,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":733,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":256399,"byte_end":256409,"line_start":55,"line_end":55,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1246}],"docs":"","sig":null,"attributes":[]},{"id":734,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":257168,"byte_end":257174,"line_start":79,"line_end":79,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1250},{"krate":0,"index":1254}],"docs":"","sig":null,"attributes":[]},{"id":737,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":248403,"byte_end":248415,"line_start":98,"line_end":98,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1314},{"krate":0,"index":1318},{"krate":0,"index":1324},{"krate":0,"index":1325}],"docs":"","sig":null,"attributes":[]},{"id":738,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\range.rs","byte_start":258413,"byte_end":258418,"line_start":16,"line_end":16,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1339},{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":739,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\range.rs","byte_start":258583,"byte_end":258590,"line_start":25,"line_end":25,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1343},{"krate":0,"index":1344}],"docs":"","sig":null,"attributes":[]},{"id":740,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\range.rs","byte_start":258742,"byte_end":258751,"line_start":34,"line_end":34,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1347},{"krate":0,"index":1348}],"docs":"","sig":null,"attributes":[]},{"id":741,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\range.rs","byte_start":258905,"byte_end":258914,"line_start":43,"line_end":43,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1351},{"krate":0,"index":1352}],"docs":"","sig":null,"attributes":[]},{"id":744,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":261833,"byte_end":261846,"line_start":83,"line_end":83,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1374}],"docs":"","sig":null,"attributes":[]},{"id":745,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":261984,"byte_end":261997,"line_start":89,"line_end":89,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1376}],"docs":"","sig":null,"attributes":[]},{"id":746,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":262134,"byte_end":262147,"line_start":95,"line_end":95,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1378}],"docs":"","sig":null,"attributes":[]},{"id":747,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":262286,"byte_end":262299,"line_start":101,"line_end":101,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":750,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":262824,"byte_end":262832,"line_start":119,"line_end":119,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1382}],"docs":"","sig":null,"attributes":[]},{"id":751,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":262979,"byte_end":262987,"line_start":128,"line_end":128,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1384}],"docs":"","sig":null,"attributes":[]},{"id":756,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":268804,"byte_end":268819,"line_start":287,"line_end":287,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394}],"docs":"","sig":null,"attributes":[]},{"id":763,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\backend.rs","byte_start":276212,"byte_end":276225,"line_start":20,"line_end":20,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1416},{"krate":0,"index":1417}],"docs":"","sig":null,"attributes":[]},{"id":764,"kind":"Inherent","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\backend.rs","byte_start":276840,"byte_end":276846,"line_start":42,"line_end":42,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":775,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":20979,"byte_end":20994,"line_start":536,"line_end":536,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1471}],"docs":"","sig":null,"attributes":[]},{"id":776,"kind":"Direct","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":21124,"byte_end":21139,"line_start":542,"line_end":542,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1473}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1158,"byte_end":1165,"line_start":61,"line_end":61,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":44}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1175,"byte_end":1181,"line_start":62,"line_end":62,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":78}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1191,"byte_end":1198,"line_start":63,"line_end":63,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":92}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1208,"byte_end":1214,"line_start":64,"line_end":64,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":610}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1224,"byte_end":1229,"line_start":65,"line_end":65,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":776}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1239,"byte_end":1245,"line_start":66,"line_end":66,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":777}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1255,"byte_end":1260,"line_start":67,"line_end":67,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":806}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1270,"byte_end":1277,"line_start":68,"line_end":68,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":871}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1287,"byte_end":1293,"line_start":69,"line_end":69,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":906}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1303,"byte_end":1307,"line_start":70,"line_end":70,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":928}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1317,"byte_end":1321,"line_start":71,"line_end":71,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":961}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1331,"byte_end":1334,"line_start":72,"line_end":72,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1002}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1344,"byte_end":1349,"line_start":73,"line_end":73,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1159}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1359,"byte_end":1364,"line_start":74,"line_end":74,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1165}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":245059,"byte_end":245069,"line_start":9,"line_end":9,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":1166}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":245079,"byte_end":245085,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1219}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1374,"byte_end":1379,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1327}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1389,"byte_end":1395,"line_start":76,"line_end":76,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1357}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":1421,"byte_end":1428,"line_start":79,"line_end":79,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1406}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":22711,"byte_end":22723,"line_start":25,"line_end":25,"column_start":22,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1476},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":23820,"byte_end":23825,"line_start":54,"line_end":54,"column_start":44,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":6838},"to":{"krate":0,"index":62}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":23828,"byte_end":23831,"line_start":54,"line_end":54,"column_start":52,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":2603},"to":{"krate":0,"index":62}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":23834,"byte_end":23838,"line_start":54,"line_end":54,"column_start":58,"column_end":62},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":62}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":23841,"byte_end":23845,"line_start":54,"line_end":54,"column_start":65,"column_end":69},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":62}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\adapter.rs","byte_start":27265,"byte_end":27272,"line_start":158,"line_end":158,"column_start":18,"column_end":25},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":29914,"byte_end":29927,"line_start":34,"line_end":34,"column_start":36,"column_end":49},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1808},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":30537,"byte_end":30554,"line_start":55,"line_end":55,"column_start":36,"column_end":53},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1833},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\buffer.rs","byte_start":31207,"byte_end":31212,"line_start":86,"line_end":86,"column_start":6,"column_end":11},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\compute.rs","byte_start":40641,"byte_end":40654,"line_start":10,"line_end":10,"column_start":59,"column_end":72},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":43655,"byte_end":43665,"line_start":59,"line_end":59,"column_start":20,"column_end":30},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2229},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":43772,"byte_end":43782,"line_start":64,"line_end":64,"column_start":20,"column_end":30},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2229},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":43881,"byte_end":43891,"line_start":69,"line_end":69,"column_start":20,"column_end":30},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2229},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":43998,"byte_end":44011,"line_start":75,"line_end":75,"column_start":27,"column_end":40},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2730},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":44553,"byte_end":44573,"line_start":90,"line_end":90,"column_start":34,"column_end":54},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2742},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":45042,"byte_end":45055,"line_start":109,"line_end":109,"column_start":27,"column_end":40},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2750},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":47217,"byte_end":47230,"line_start":175,"line_end":175,"column_start":60,"column_end":73},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":52365,"byte_end":52378,"line_start":332,"line_end":332,"column_start":50,"column_end":63},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\graphics.rs","byte_start":53426,"byte_end":53439,"line_start":364,"line_end":364,"column_start":69,"column_end":82},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":3137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":55537,"byte_end":55550,"line_start":42,"line_end":42,"column_start":26,"column_end":39},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2730},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":56216,"byte_end":56229,"line_start":70,"line_end":70,"column_start":21,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2750},"to":{"krate":2,"index":6838}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":58160,"byte_end":58188,"line_start":125,"line_end":125,"column_start":34,"column_end":62},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2874},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":58667,"byte_end":58672,"line_start":139,"line_end":139,"column_start":46,"column_end":51},"kind":"SuperTrait","from":{"krate":2,"index":6838},"to":{"krate":0,"index":256}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":58675,"byte_end":58678,"line_start":139,"line_end":139,"column_start":54,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":2603},"to":{"krate":0,"index":256}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":58681,"byte_end":58685,"line_start":139,"line_end":139,"column_start":60,"column_end":64},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":256}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\raw.rs","byte_start":58688,"byte_end":58692,"line_start":139,"line_end":139,"column_start":67,"column_end":71},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":256}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":77846,"byte_end":77865,"line_start":49,"line_end":49,"column_start":50,"column_end":69},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":83193,"byte_end":83216,"line_start":244,"line_end":244,"column_start":22,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2902},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":84735,"byte_end":84758,"line_start":293,"line_end":293,"column_start":32,"column_end":55},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2902},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":84934,"byte_end":84957,"line_start":300,"line_end":300,"column_start":35,"column_end":58},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2902},"to":{"krate":2,"index":2284}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":85077,"byte_end":85100,"line_start":306,"line_end":306,"column_start":31,"column_end":54},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2902},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":85499,"byte_end":85525,"line_start":321,"line_end":321,"column_start":22,"column_end":48},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2911},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":87428,"byte_end":87454,"line_start":380,"line_end":380,"column_start":31,"column_end":57},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2911},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":87816,"byte_end":87836,"line_start":394,"line_end":394,"column_start":27,"column_end":47},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2920},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":88319,"byte_end":88339,"line_start":409,"line_end":409,"column_start":18,"column_end":38},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2920},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":88923,"byte_end":88943,"line_start":426,"line_end":426,"column_start":18,"column_end":38},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2920},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":89657,"byte_end":89677,"line_start":447,"line_end":447,"column_start":37,"column_end":57},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2920},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":89877,"byte_end":89897,"line_start":454,"line_end":454,"column_start":40,"column_end":60},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2920},"to":{"krate":2,"index":2284}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":90042,"byte_end":90062,"line_start":460,"line_end":460,"column_start":29,"column_end":49},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2920},"to":{"krate":2,"index":1740}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":90261,"byte_end":90281,"line_start":471,"line_end":471,"column_start":48,"column_end":68},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2920},"to":{"krate":0,"index":547}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\render_pass.rs","byte_start":90417,"byte_end":90437,"line_start":479,"line_end":479,"column_start":50,"column_end":70},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2920},"to":{"krate":0,"index":334}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\transfer.rs","byte_start":92695,"byte_end":92708,"line_start":62,"line_end":62,"column_start":60,"column_end":73},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":34727,"byte_end":34734,"line_start":48,"line_end":48,"column_start":15,"column_end":22},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":3125},"to":{"krate":0,"index":541}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":34853,"byte_end":34862,"line_start":53,"line_end":53,"column_start":15,"column_end":24},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":3128},"to":{"krate":0,"index":541}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":35180,"byte_end":35187,"line_start":64,"line_end":64,"column_start":16,"column_end":23},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":3131},"to":{"krate":0,"index":544}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":35609,"byte_end":35618,"line_start":74,"line_end":74,"column_start":16,"column_end":25},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":3134},"to":{"krate":0,"index":544}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":35771,"byte_end":35777,"line_start":77,"line_end":77,"column_start":61,"column_end":67},"kind":"SuperTrait","from":{"krate":2,"index":1740},"to":{"krate":0,"index":547}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":36333,"byte_end":36346,"line_start":91,"line_end":91,"column_start":35,"column_end":48},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":3137},"to":{"krate":2,"index":1740}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":36595,"byte_end":36608,"line_start":102,"line_end":102,"column_start":9,"column_end":22},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":3137},"to":{"krate":0,"index":547}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":36683,"byte_end":36696,"line_start":106,"line_end":106,"column_start":58,"column_end":71},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":3137},"to":{"krate":0,"index":334}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":36801,"byte_end":36814,"line_start":112,"line_end":112,"column_start":21,"column_end":34},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":3137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":37108,"byte_end":37121,"line_start":121,"line_end":121,"column_start":21,"column_end":34},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":37557,"byte_end":37570,"line_start":134,"line_end":134,"column_start":21,"column_end":34},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":3137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":37873,"byte_end":37886,"line_start":142,"line_end":142,"column_start":21,"column_end":34},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":3137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":38381,"byte_end":38394,"line_start":158,"line_end":158,"column_start":40,"column_end":53},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\command\\mod.rs","byte_start":39875,"byte_end":39888,"line_start":205,"line_end":205,"column_start":30,"column_end":43},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":3137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":97321,"byte_end":97336,"line_start":69,"line_end":69,"column_start":28,"column_end":43},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3239},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":97460,"byte_end":97475,"line_start":75,"line_end":75,"column_start":27,"column_end":42},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3239},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":97981,"byte_end":97996,"line_start":93,"line_end":93,"column_start":28,"column_end":43},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3266},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":98661,"byte_end":98670,"line_start":113,"line_end":113,"column_start":28,"column_end":37},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3292},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":99802,"byte_end":99813,"line_start":149,"line_end":149,"column_start":28,"column_end":39},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":3381},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":100734,"byte_end":100739,"line_start":175,"line_end":175,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":6838},"to":{"krate":0,"index":653}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":100742,"byte_end":100745,"line_start":175,"line_end":175,"column_start":44,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":2603},"to":{"krate":0,"index":653}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":100748,"byte_end":100752,"line_start":175,"line_end":175,"column_start":50,"column_end":54},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":653}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\device.rs","byte_start":100755,"byte_end":100759,"line_start":175,"line_end":175,"column_start":57,"column_end":61},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":653}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":128435,"byte_end":128445,"line_start":52,"line_end":52,"column_start":6,"column_end":16},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3617},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":130332,"byte_end":130339,"line_start":116,"line_end":116,"column_start":6,"column_end":13},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":3781},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":130525,"byte_end":130532,"line_start":121,"line_end":121,"column_start":18,"column_end":25},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":3781},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\format.rs","byte_start":148881,"byte_end":148887,"line_start":581,"line_end":581,"column_start":6,"column_end":12},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":5086},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":151013,"byte_end":151019,"line_start":41,"line_end":41,"column_start":6,"column_end":12},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":13431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":152252,"byte_end":152258,"line_start":82,"line_end":82,"column_start":6,"column_end":12},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":13503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":154397,"byte_end":154410,"line_start":144,"line_end":144,"column_start":36,"column_end":49},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":13641},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":155677,"byte_end":155686,"line_start":182,"line_end":182,"column_start":36,"column_end":45},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":13682},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":158379,"byte_end":158383,"line_start":270,"line_end":270,"column_start":6,"column_end":10},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":13977},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":163168,"byte_end":163173,"line_start":414,"line_end":414,"column_start":6,"column_end":11},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":14348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":164464,"byte_end":164467,"line_start":449,"line_end":449,"column_start":6,"column_end":9},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":14592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":164607,"byte_end":164610,"line_start":456,"line_end":456,"column_start":20,"column_end":23},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":14592},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":164731,"byte_end":164734,"line_start":462,"line_end":462,"column_start":20,"column_end":23},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":14592},"to":{"krate":2,"index":1986}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":165059,"byte_end":165070,"line_start":473,"line_end":473,"column_start":25,"column_end":36},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":14641},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":165288,"byte_end":165299,"line_start":483,"line_end":483,"column_start":25,"column_end":36},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":14641},"to":{"krate":2,"index":1986}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\image.rs","byte_start":166989,"byte_end":167000,"line_start":527,"line_end":527,"column_start":6,"column_end":17},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":14690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":174533,"byte_end":174538,"line_start":26,"line_end":26,"column_start":36,"column_end":41},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":15425},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":174853,"byte_end":174859,"line_start":40,"line_end":40,"column_start":38,"column_end":44},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":15455},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":175018,"byte_end":175024,"line_start":46,"line_end":46,"column_start":44,"column_end":50},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":15455},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":175559,"byte_end":175565,"line_start":64,"line_end":64,"column_start":38,"column_end":44},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":15467},"to":{"krate":2,"index":2295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":175724,"byte_end":175730,"line_start":70,"line_end":70,"column_start":44,"column_end":50},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":15467},"to":{"krate":2,"index":2271}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\mapping.rs","byte_start":175870,"byte_end":175876,"line_start":77,"line_end":77,"column_start":47,"column_end":53},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":15467},"to":{"krate":2,"index":2284}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":176427,"byte_end":176431,"line_start":12,"line_end":12,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":915}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\memory.rs","byte_start":180269,"byte_end":180276,"line_start":110,"line_end":110,"column_start":22,"column_end":29},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":15877},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":182182,"byte_end":182195,"line_start":42,"line_end":42,"column_start":6,"column_end":19},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":16045},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":183986,"byte_end":183996,"line_start":91,"line_end":91,"column_start":6,"column_end":16},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":16112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":187092,"byte_end":187099,"line_start":167,"line_end":167,"column_start":32,"column_end":39},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":16319},"to":{"krate":2,"index":1762}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":187281,"byte_end":187288,"line_start":176,"line_end":176,"column_start":36,"column_end":43},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":16319},"to":{"krate":2,"index":1790}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":187473,"byte_end":187480,"line_start":182,"line_end":182,"column_start":31,"column_end":38},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":16319},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pass.rs","byte_start":187519,"byte_end":187526,"line_start":183,"line_end":183,"column_start":29,"column_end":36},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":16319},"to":{"krate":2,"index":1795}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":188374,"byte_end":188379,"line_start":31,"line_end":31,"column_start":44,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":6838},"to":{"krate":0,"index":976}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":188382,"byte_end":188385,"line_start":31,"line_end":31,"column_start":52,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":2603},"to":{"krate":0,"index":976}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":188388,"byte_end":188392,"line_start":31,"line_end":31,"column_start":58,"column_end":62},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":976}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":188395,"byte_end":188399,"line_start":31,"line_end":31,"column_start":65,"column_end":69},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":976}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":189677,"byte_end":189688,"line_start":65,"line_end":65,"column_start":21,"column_end":32},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":16466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pool.rs","byte_start":191423,"byte_end":191434,"line_start":115,"line_end":115,"column_start":41,"column_end":52},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":16466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\compute.rs","byte_start":205125,"byte_end":205144,"line_start":19,"line_end":19,"column_start":22,"column_end":41},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":16475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":211091,"byte_end":211095,"line_start":133,"line_end":133,"column_start":39,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":1034}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":211098,"byte_end":211102,"line_start":133,"line_end":133,"column_start":46,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":1034}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\descriptor.rs","byte_start":211110,"byte_end":211115,"line_start":133,"line_end":133,"column_start":58,"column_end":63},"kind":"SuperTrait","from":{"krate":2,"index":6838},"to":{"krate":0,"index":1034}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":220509,"byte_end":220529,"line_start":130,"line_end":130,"column_start":22,"column_end":42},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":17194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\graphics.rs","byte_start":223799,"byte_end":223809,"line_start":220,"line_end":220,"column_start":6,"column_end":16},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":17418},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":226514,"byte_end":226529,"line_start":28,"line_end":28,"column_start":6,"column_end":21},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":17699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\input_assembler.rs","byte_start":229778,"byte_end":229796,"line_start":111,"line_end":111,"column_start":6,"column_end":24},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":18111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":231286,"byte_end":231295,"line_start":51,"line_end":51,"column_start":18,"column_end":27},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":18286},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":232935,"byte_end":232942,"line_start":105,"line_end":105,"column_start":6,"column_end":13},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":18604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":234053,"byte_end":234063,"line_start":139,"line_end":139,"column_start":6,"column_end":16},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":18812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":235291,"byte_end":235305,"line_start":183,"line_end":183,"column_start":6,"column_end":20},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":18879},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":235895,"byte_end":235904,"line_start":202,"line_end":202,"column_start":6,"column_end":15},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":18948},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":238079,"byte_end":238090,"line_start":260,"line_end":260,"column_start":18,"column_end":29},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":19127},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":238675,"byte_end":238680,"line_start":281,"line_end":281,"column_start":15,"column_end":20},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":19220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":239926,"byte_end":239937,"line_start":315,"line_end":315,"column_start":18,"column_end":29},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":19303},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\output_merger.rs","byte_start":240623,"byte_end":240639,"line_start":338,"line_end":338,"column_start":6,"column_end":22},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":19376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":192734,"byte_end":192747,"line_start":34,"line_end":34,"column_start":36,"column_end":49},"kind":{"Impl":{"id":688}},"from":{"krate":0,"index":19591},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":195625,"byte_end":195641,"line_start":120,"line_end":120,"column_start":22,"column_end":38},"kind":{"Impl":{"id":695}},"from":{"krate":0,"index":19822},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":196079,"byte_end":196084,"line_start":133,"line_end":133,"column_start":23,"column_end":28},"kind":{"Impl":{"id":696}},"from":{"krate":0,"index":19990},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":196742,"byte_end":196752,"line_start":157,"line_end":157,"column_start":32,"column_end":42},"kind":{"Impl":{"id":697}},"from":{"krate":0,"index":20070},"to":{"krate":2,"index":1762}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":198979,"byte_end":198993,"line_start":225,"line_end":225,"column_start":6,"column_end":20},"kind":{"Impl":{"id":700}},"from":{"krate":0,"index":20240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":199184,"byte_end":199198,"line_start":233,"line_end":233,"column_start":18,"column_end":32},"kind":{"Impl":{"id":701}},"from":{"krate":0,"index":20240},"to":{"krate":2,"index":2059}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":199491,"byte_end":199496,"line_start":248,"line_end":248,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":1139}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":199578,"byte_end":199592,"line_start":252,"line_end":252,"column_start":21,"column_end":35},"kind":{"Impl":{"id":702}},"from":{"krate":0,"index":20240},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":200091,"byte_end":200107,"line_start":277,"line_end":277,"column_start":24,"column_end":40},"kind":{"Impl":{"id":703}},"from":{"krate":0,"index":20257},"to":{"krate":0,"index":1139}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":200201,"byte_end":200218,"line_start":281,"line_end":281,"column_start":30,"column_end":47},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":20261},"to":{"krate":0,"index":1139}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\pso\\mod.rs","byte_start":201192,"byte_end":201197,"line_start":311,"line_end":311,"column_start":9,"column_end":14},"kind":{"Impl":{"id":707}},"from":{"krate":0,"index":20270},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\query.rs","byte_start":242064,"byte_end":242077,"line_start":24,"line_end":24,"column_start":28,"column_end":41},"kind":{"Impl":{"id":710}},"from":{"krate":0,"index":20359},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":252256,"byte_end":252263,"line_start":29,"line_end":29,"column_start":21,"column_end":28},"kind":{"Impl":{"id":717}},"from":{"krate":0,"index":20882},"to":{"krate":0,"index":1168}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":252432,"byte_end":252440,"line_start":37,"line_end":37,"column_start":21,"column_end":29},"kind":{"Impl":{"id":718}},"from":{"krate":0,"index":20885},"to":{"krate":0,"index":1168}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":252631,"byte_end":252638,"line_start":45,"line_end":45,"column_start":21,"column_end":28},"kind":{"Impl":{"id":719}},"from":{"krate":0,"index":20888},"to":{"krate":0,"index":1168}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":252828,"byte_end":252836,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"kind":{"Impl":{"id":720}},"from":{"krate":0,"index":20891},"to":{"krate":0,"index":1168}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":253206,"byte_end":253207,"line_start":66,"line_end":66,"column_start":25,"column_end":26},"kind":{"Impl":{"id":721}},"from":{"krate":0,"index":1181},"to":{"krate":0,"index":1178}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":253239,"byte_end":253246,"line_start":67,"line_end":67,"column_start":29,"column_end":36},"kind":{"Impl":{"id":722}},"from":{"krate":0,"index":20882},"to":{"krate":0,"index":1178}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":253277,"byte_end":253284,"line_start":68,"line_end":68,"column_start":28,"column_end":35},"kind":{"Impl":{"id":723}},"from":{"krate":0,"index":20882},"to":{"krate":0,"index":1178}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":253316,"byte_end":253323,"line_start":69,"line_end":69,"column_start":29,"column_end":36},"kind":{"Impl":{"id":724}},"from":{"krate":0,"index":20882},"to":{"krate":0,"index":1178}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":253355,"byte_end":253363,"line_start":70,"line_end":70,"column_start":29,"column_end":37},"kind":{"Impl":{"id":725}},"from":{"krate":0,"index":20885},"to":{"krate":0,"index":1178}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":253395,"byte_end":253402,"line_start":71,"line_end":71,"column_start":29,"column_end":36},"kind":{"Impl":{"id":726}},"from":{"krate":0,"index":20888},"to":{"krate":0,"index":1178}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":253444,"byte_end":253451,"line_start":73,"line_end":73,"column_start":38,"column_end":45},"kind":{"Impl":{"id":727}},"from":{"krate":0,"index":20882},"to":{"krate":0,"index":1178}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":253492,"byte_end":253500,"line_start":74,"line_end":74,"column_start":38,"column_end":46},"kind":{"Impl":{"id":728}},"from":{"krate":0,"index":20885},"to":{"krate":0,"index":1178}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\capability.rs","byte_start":253541,"byte_end":253548,"line_start":75,"line_end":75,"column_start":38,"column_end":45},"kind":{"Impl":{"id":729}},"from":{"krate":0,"index":20888},"to":{"krate":0,"index":1178}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":255004,"byte_end":255009,"line_start":14,"line_end":14,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":6838},"to":{"krate":0,"index":1232}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":255012,"byte_end":255015,"line_start":14,"line_end":14,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2603},"to":{"krate":0,"index":1232}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":255018,"byte_end":255022,"line_start":14,"line_end":14,"column_start":38,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":1232}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":255025,"byte_end":255029,"line_start":14,"line_end":14,"column_start":45,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":1232}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":256228,"byte_end":256238,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"kind":{"Impl":{"id":732}},"from":{"krate":0,"index":20940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":256399,"byte_end":256409,"line_start":55,"line_end":55,"column_start":33,"column_end":43},"kind":{"Impl":{"id":733}},"from":{"krate":0,"index":20940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\family.rs","byte_start":257168,"byte_end":257174,"line_start":79,"line_end":79,"column_start":18,"column_end":24},"kind":{"Impl":{"id":734}},"from":{"krate":0,"index":20949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":246571,"byte_end":246576,"line_start":54,"line_end":54,"column_start":45,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":6838},"to":{"krate":0,"index":1284}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":246579,"byte_end":246582,"line_start":54,"line_end":54,"column_start":53,"column_end":56},"kind":"SuperTrait","from":{"krate":2,"index":2603},"to":{"krate":0,"index":1284}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":246585,"byte_end":246589,"line_start":54,"line_end":54,"column_start":59,"column_end":63},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":1284}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":246592,"byte_end":246596,"line_start":54,"line_end":54,"column_start":66,"column_end":70},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":1284}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\queue\\mod.rs","byte_start":248403,"byte_end":248415,"line_start":98,"line_end":98,"column_start":33,"column_end":45},"kind":{"Impl":{"id":737}},"from":{"krate":0,"index":21037},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\range.rs","byte_start":258413,"byte_end":258418,"line_start":16,"line_end":16,"column_start":25,"column_end":30},"kind":{"Impl":{"id":738}},"from":{"krate":2,"index":33109},"to":{"krate":0,"index":1333}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\range.rs","byte_start":258583,"byte_end":258590,"line_start":25,"line_end":25,"column_start":25,"column_end":32},"kind":{"Impl":{"id":739}},"from":{"krate":2,"index":33155},"to":{"krate":0,"index":1333}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\range.rs","byte_start":258742,"byte_end":258751,"line_start":34,"line_end":34,"column_start":25,"column_end":34},"kind":{"Impl":{"id":740}},"from":{"krate":2,"index":33134},"to":{"krate":0,"index":1333}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\range.rs","byte_start":258905,"byte_end":258914,"line_start":43,"line_end":43,"column_start":25,"column_end":34},"kind":{"Impl":{"id":741}},"from":{"krate":2,"index":33093},"to":{"krate":0,"index":1333}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":261833,"byte_end":261846,"line_start":83,"line_end":83,"column_start":36,"column_end":49},"kind":{"Impl":{"id":744}},"from":{"krate":0,"index":21047},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":261984,"byte_end":261997,"line_start":89,"line_end":89,"column_start":35,"column_end":48},"kind":{"Impl":{"id":745}},"from":{"krate":0,"index":21047},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":262134,"byte_end":262147,"line_start":95,"line_end":95,"column_start":36,"column_end":49},"kind":{"Impl":{"id":746}},"from":{"krate":0,"index":21047},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":262286,"byte_end":262299,"line_start":101,"line_end":101,"column_start":36,"column_end":49},"kind":{"Impl":{"id":747}},"from":{"krate":0,"index":21047},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":262824,"byte_end":262832,"line_start":119,"line_end":119,"column_start":30,"column_end":38},"kind":{"Impl":{"id":750}},"from":{"krate":0,"index":21080},"to":{"krate":2,"index":1989}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":262979,"byte_end":262987,"line_start":128,"line_end":128,"column_start":6,"column_end":14},"kind":{"Impl":{"id":751}},"from":{"krate":0,"index":21080},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":264518,"byte_end":264523,"line_start":175,"line_end":175,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":6838},"to":{"krate":0,"index":1385}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":264526,"byte_end":264529,"line_start":175,"line_end":175,"column_start":45,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":2603},"to":{"krate":0,"index":1385}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":264532,"byte_end":264536,"line_start":175,"line_end":175,"column_start":51,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":1385}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":264539,"byte_end":264543,"line_start":175,"line_end":175,"column_start":58,"column_end":62},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":1385}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":268804,"byte_end":268819,"line_start":287,"line_end":287,"column_start":6,"column_end":21},"kind":{"Impl":{"id":756}},"from":{"krate":0,"index":21394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":273448,"byte_end":273453,"line_start":418,"line_end":418,"column_start":39,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":6838},"to":{"krate":0,"index":1395}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":273456,"byte_end":273459,"line_start":418,"line_end":418,"column_start":47,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":2603},"to":{"krate":0,"index":1395}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":273462,"byte_end":273466,"line_start":418,"line_end":418,"column_start":53,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":1395}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\window.rs","byte_start":273469,"byte_end":273473,"line_start":418,"line_end":418,"column_start":60,"column_end":64},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":1395}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\backend.rs","byte_start":276212,"byte_end":276225,"line_start":20,"line_end":20,"column_start":18,"column_end":31},"kind":{"Impl":{"id":763}},"from":{"krate":0,"index":21500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src\\backend.rs","byte_start":276840,"byte_end":276846,"line_start":42,"line_end":42,"column_start":18,"column_end":24},"kind":{"Impl":{"id":764}},"from":{"krate":0,"index":20949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":18783,"byte_end":18786,"line_start":481,"line_end":481,"column_start":21,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2603},"to":{"krate":0,"index":1438}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":18789,"byte_end":18793,"line_start":481,"line_end":481,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":1438}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":18796,"byte_end":18800,"line_start":481,"line_end":481,"column_start":34,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":1438}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":19232,"byte_end":19237,"line_start":492,"line_end":492,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":1441}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":19240,"byte_end":19242,"line_start":492,"line_end":492,"column_start":38,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":1795},"to":{"krate":0,"index":1441}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":19245,"byte_end":19250,"line_start":492,"line_end":492,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":1762},"to":{"krate":0,"index":1441}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":19253,"byte_end":19257,"line_start":492,"line_end":492,"column_start":51,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":7026},"to":{"krate":0,"index":1441}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":19265,"byte_end":19270,"line_start":492,"line_end":492,"column_start":63,"column_end":68},"kind":"SuperTrait","from":{"krate":2,"index":6838},"to":{"krate":0,"index":1441}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":19273,"byte_end":19276,"line_start":492,"line_end":492,"column_start":71,"column_end":74},"kind":"SuperTrait","from":{"krate":2,"index":2603},"to":{"krate":0,"index":1441}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":19279,"byte_end":19283,"line_start":492,"line_end":492,"column_start":77,"column_end":81},"kind":"SuperTrait","from":{"krate":2,"index":2071},"to":{"krate":0,"index":1441}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":19286,"byte_end":19290,"line_start":492,"line_end":492,"column_start":84,"column_end":88},"kind":"SuperTrait","from":{"krate":2,"index":2083},"to":{"krate":0,"index":1441}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":20979,"byte_end":20994,"line_start":536,"line_end":536,"column_start":23,"column_end":38},"kind":{"Impl":{"id":775}},"from":{"krate":0,"index":22385},"to":{"krate":2,"index":6843}},{"span":{"file_name":"C:\\Users\\Punkm\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-hal-0.3.1\\src/lib.rs","byte_start":21124,"byte_end":21139,"line_start":542,"line_end":542,"column_start":16,"column_end":31},"kind":{"Impl":{"id":776}},"from":{"krate":0,"index":22385},"to":{"krate":1,"index":1724}}]}